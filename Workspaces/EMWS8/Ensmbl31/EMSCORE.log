MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.58 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.58 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2D0OMW1 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2D0OMW1 new;
MPRINT(EM_DIAGRAM):   run;
1582240    filename emflow
1582240  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582241    *------------------------------------------------------------*;
1582242    * Ensmbl31: Scoring REG5_TRAIN data;
1582243    *------------------------------------------------------------*;
1582244    data EMWS8.Ensmbl31_TRAIN
1582245    / view=EMWS8.Ensmbl31_TRAIN
1582246    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_TRAIN / view=EMWS8.Ensmbl31_TRAIN ;
1582247    set EMWS8.Reg5_TRAIN
1582248    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1582249    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMFLOWSCORE.sas.
1582250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582251   +* Ensmbl31: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Combine model for DepVar;
1582252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582253   +* Ensmbl31: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 1 of 7;
1582254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582256   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1582257   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1582258   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1582259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582261   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1582262   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1582263   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1582264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582266   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1582267   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1582268   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1582269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582271   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1582272   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1582273   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1582274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582275   +
1582276   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1582277   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1582277  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1582278   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1582279   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1582280   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1582281   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1582282   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1582283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582284   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1582285   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1582286   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1582287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582289   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1582290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582291   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1582292   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1582293   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1582294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582295   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1582296   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1582297   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1582298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582300   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1582301   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1582302   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1582303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582305   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1582306   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1582307   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1582308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582309   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582310   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1582311   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582312   +
1582313   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1582314   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1582315   +
1582316   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1582317   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1582318   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1582319   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1582320   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1582321   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1582322   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1582323   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1582324   +
1582325   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1582326   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1582327   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1582328   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1582329   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1582330   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1582331   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1582332   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1582333   +end;
MPRINT(EM_DIAGRAM):   end;
1582334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582335   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1582336   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1582337   +   end;
MPRINT(EM_DIAGRAM):   end;
1582338   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1582339   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1582340   +   end;
MPRINT(EM_DIAGRAM):   end;
1582341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1582342   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1582343   +   end;
MPRINT(EM_DIAGRAM):   end;
1582344   +end;
MPRINT(EM_DIAGRAM):   end;
1582345   +
1582346   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1582347   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1582348   +
1582349   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1582350   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1582351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582353   +end;
MPRINT(EM_DIAGRAM):   end;
1582354   +
1582355   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1582356   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1582357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582359   +end;
MPRINT(EM_DIAGRAM):   end;
1582360   +
1582361   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1582362   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1582363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582365   +end;
MPRINT(EM_DIAGRAM):   end;
1582366   +
1582367   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1582368   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1582369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582371   +end;
MPRINT(EM_DIAGRAM):   end;
1582372   +
1582373   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1582374   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1582375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582377   +end;
MPRINT(EM_DIAGRAM):   end;
1582378   +
1582379   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1582380   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1582381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582383   +end;
MPRINT(EM_DIAGRAM):   end;
1582384   +
1582385   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1582386   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1582387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582389   +end;
MPRINT(EM_DIAGRAM):   end;
1582390   +
1582391   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1582392   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1582393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582395   +end;
MPRINT(EM_DIAGRAM):   end;
1582396   +
1582397   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1582398   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1582399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582401   +end;
MPRINT(EM_DIAGRAM):   end;
1582402   +
1582403   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1582404   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1582405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582407   +end;
MPRINT(EM_DIAGRAM):   end;
1582408   +
1582409   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1582410   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1582411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582413   +end;
MPRINT(EM_DIAGRAM):   end;
1582414   +
1582415   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1582416   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1582417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582419   +end;
MPRINT(EM_DIAGRAM):   end;
1582420   +
1582421   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1582422   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1582423   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1582424   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1582425   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1582426   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1582427   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1582428   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1582429   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1582430   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1582431   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1582432   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1582433   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582434   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582435   +end;
MPRINT(EM_DIAGRAM):   end;
1582436   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582437   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1582438   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1582439   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1582440   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1582441   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1582442   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1582443   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1582444   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1582445   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582446   +         end;
MPRINT(EM_DIAGRAM):   end;
1582447   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1582448   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1582449   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1582450   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582451   +            end;
MPRINT(EM_DIAGRAM):   end;
1582452   +         end;
MPRINT(EM_DIAGRAM):   end;
1582453   +      end;
MPRINT(EM_DIAGRAM):   end;
1582454   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1582455   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1582456   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1582457   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582458   +         end;
MPRINT(EM_DIAGRAM):   end;
1582459   +      end;
MPRINT(EM_DIAGRAM):   end;
1582460   +   end;
MPRINT(EM_DIAGRAM):   end;
1582461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1582462   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1582463   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1582464   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582465   +      end;
MPRINT(EM_DIAGRAM):   end;
1582466   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1582467   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1582468   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1582469   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1582470   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1582471   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1582472   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582473   +         end;
MPRINT(EM_DIAGRAM):   end;
1582474   +      end;
MPRINT(EM_DIAGRAM):   end;
1582475   +   end;
MPRINT(EM_DIAGRAM):   end;
1582476   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1582477   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1582478   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1582479   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1582480   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1582481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1582482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582483   +   end;
MPRINT(EM_DIAGRAM):   end;
1582484   +end;
MPRINT(EM_DIAGRAM):   end;
1582485   +
1582486   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1582487   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1582488   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1582489   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1582490   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1582491   +end;
MPRINT(EM_DIAGRAM):   end;
1582492   +
1582493   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1582494   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1582495   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1582496   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1582497   +
1582498   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1582499   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1582500   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1582501   +
1582502   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1582503   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1582504   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1582505   +
1582506   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1582507   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1582508   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1582509   +
1582510   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1582511   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1582512   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1582513   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1582514   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1582515   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1582516   +
1582517   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1582518   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1582519   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1582520   +
1582521   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1582522   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1582523   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1582524   +
1582525   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1582526   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1582527   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1582528   +
1582529   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1582530   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1582531   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1582532   +
1582533   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1582534   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1582535   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1582536   +
1582537   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1582538   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1582539   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1582540   +
1582541   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1582542   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1582543   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1582544   +
1582545   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1582546   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1582547   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1582548   +
1582549   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1582550   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1582551   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1582552   +
1582553   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1582554   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1582555   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1582556   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1582557   +
1582558   +REG5DR1:
1582559   +
1582560   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1582561   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1582562   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1582563   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1582564   +end;
MPRINT(EM_DIAGRAM):   end;
1582565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582566   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1582567   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1582568   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1582569   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1582570   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1582571   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1582572   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1582573   +   end;
MPRINT(EM_DIAGRAM):   end;
1582574   +end;
MPRINT(EM_DIAGRAM):   end;
1582575   +
1582576   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1582577   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1582578   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1582579   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1582580   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1582581   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1582582   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1582583   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1582584   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1582585   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1582586   +end;
MPRINT(EM_DIAGRAM):   end;
1582587   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1582588   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1582589   +
1582590   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582591   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1582592   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582593   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1582594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582595   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1582596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582597   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1582598   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1582599   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1582600   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1582601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582602   +* Renaming Into variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg5;
1582603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582604   +length Reg5_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg5_I_DepVar $32;
1582605   +drop Reg5_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg5_I_DepVar;
1582606   +Reg5_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg5_I_DepVar = I_DepVar;
1582607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582608   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1582609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582610   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1582611   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1582612   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1582613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582614   +* Ensmbl31: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 2 of 7;
1582615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582617   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1582618   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1582619   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1582620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582621   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582622   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1582623   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582624   +
1582625   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1582626   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1582627   +
1582628   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1582629   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1582630   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1582631   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1582632   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1582633   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1582634   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1582635   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1582636   +
1582637   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1582638   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1582639   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1582640   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1582641   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1582642   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1582643   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1582644   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1582645   +end;
MPRINT(EM_DIAGRAM):   end;
1582646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582647   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1582648   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1582649   +   end;
MPRINT(EM_DIAGRAM):   end;
1582650   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1582651   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1582652   +   end;
MPRINT(EM_DIAGRAM):   end;
1582653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1582654   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1582655   +   end;
MPRINT(EM_DIAGRAM):   end;
1582656   +end;
MPRINT(EM_DIAGRAM):   end;
1582657   +
1582658   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1582659   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1582660   +
1582661   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1582662   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1582663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582665   +end;
MPRINT(EM_DIAGRAM):   end;
1582666   +
1582667   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1582668   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1582669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582671   +end;
MPRINT(EM_DIAGRAM):   end;
1582672   +
1582673   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1582674   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1582675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582677   +end;
MPRINT(EM_DIAGRAM):   end;
1582678   +
1582679   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1582680   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1582681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582683   +end;
MPRINT(EM_DIAGRAM):   end;
1582684   +
1582685   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1582686   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1582687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582689   +end;
MPRINT(EM_DIAGRAM):   end;
1582690   +
1582691   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1582692   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1582693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582695   +end;
MPRINT(EM_DIAGRAM):   end;
1582696   +
1582697   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1582698   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1582699   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582700   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582701   +end;
MPRINT(EM_DIAGRAM):   end;
1582702   +
1582703   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1582704   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1582705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582707   +end;
MPRINT(EM_DIAGRAM):   end;
1582708   +
1582709   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1582710   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1582711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582713   +end;
MPRINT(EM_DIAGRAM):   end;
1582714   +
1582715   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1582716   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1582717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582719   +end;
MPRINT(EM_DIAGRAM):   end;
1582720   +
1582721   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1582722   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1582723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582725   +end;
MPRINT(EM_DIAGRAM):   end;
1582726   +
1582727   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1582728   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1582729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582731   +end;
MPRINT(EM_DIAGRAM):   end;
1582732   +
1582733   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1582734   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1582735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582737   +end;
MPRINT(EM_DIAGRAM):   end;
1582738   +
1582739   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1582740   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1582741   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1582742   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1582743   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1582744   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1582745   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1582746   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1582747   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1582748   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1582749   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1582750   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1582751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582753   +end;
MPRINT(EM_DIAGRAM):   end;
1582754   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582755   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1582756   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1582757   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1582758   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1582759   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1582760   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1582761   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1582762   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1582763   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582764   +         end;
MPRINT(EM_DIAGRAM):   end;
1582765   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1582766   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1582767   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1582768   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582769   +            end;
MPRINT(EM_DIAGRAM):   end;
1582770   +         end;
MPRINT(EM_DIAGRAM):   end;
1582771   +      end;
MPRINT(EM_DIAGRAM):   end;
1582772   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1582773   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1582774   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1582775   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582776   +         end;
MPRINT(EM_DIAGRAM):   end;
1582777   +      end;
MPRINT(EM_DIAGRAM):   end;
1582778   +   end;
MPRINT(EM_DIAGRAM):   end;
1582779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1582780   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1582781   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1582782   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582783   +      end;
MPRINT(EM_DIAGRAM):   end;
1582784   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1582785   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1582786   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1582787   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1582788   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1582789   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1582790   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582791   +         end;
MPRINT(EM_DIAGRAM):   end;
1582792   +      end;
MPRINT(EM_DIAGRAM):   end;
1582793   +   end;
MPRINT(EM_DIAGRAM):   end;
1582794   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1582795   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1582796   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1582797   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1582798   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1582799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1582800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582801   +   end;
MPRINT(EM_DIAGRAM):   end;
1582802   +end;
MPRINT(EM_DIAGRAM):   end;
1582803   +
1582804   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1582805   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1582806   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1582807   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1582808   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1582809   +end;
MPRINT(EM_DIAGRAM):   end;
1582810   +
1582811   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1582812   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1582813   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1582814   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1582815   +
1582816   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1582817   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1582818   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1582819   +
1582820   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1582821   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1582822   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1582823   +
1582824   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1582825   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1582826   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1582827   +
1582828   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1582829   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1582830   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1582831   +
1582832   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1582833   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1582834   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1582835   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1582836   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1582837   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1582838   +
1582839   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1582840   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1582841   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1582842   +
1582843   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1582844   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1582845   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1582846   +
1582847   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1582848   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1582849   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1582850   +
1582851   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1582852   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1582853   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1582854   +
1582855   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1582856   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1582857   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1582858   +
1582859   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1582860   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1582861   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1582862   +
1582863   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1582864   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1582865   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1582866   +
1582867   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1582868   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1582869   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1582870   +
1582871   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1582872   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1582873   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1582874   +
1582875   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1582876   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1582877   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1582878   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1582879   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1582880   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1582881   +end;
MPRINT(EM_DIAGRAM):   end;
1582882   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1582883   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1582884   +
1582885   +REGDR1:
1582886   +
1582887   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1582888   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1582889   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1582890   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1582891   +end;
MPRINT(EM_DIAGRAM):   end;
1582892   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582893   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1582894   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1582895   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1582896   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1582897   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1582898   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1582899   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1582900   +   end;
MPRINT(EM_DIAGRAM):   end;
1582901   +end;
MPRINT(EM_DIAGRAM):   end;
1582902   +
1582903   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1582904   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1582905   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1582906   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1582907   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1582908   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1582909   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1582910   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1582911   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1582912   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1582913   +end;
MPRINT(EM_DIAGRAM):   end;
1582914   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1582915   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1582916   +
1582917   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582918   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1582919   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1582920   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1582921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582922   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1582923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582924   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1582925   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1582926   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1582927   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1582928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582929   +* Renaming Into variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg;
1582930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582931   +length Reg_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg_I_DepVar $32;
1582932   +drop Reg_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg_I_DepVar;
1582933   +Reg_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg_I_DepVar = I_DepVar;
1582934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582935   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1582936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582937   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1582938   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1582939   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1582940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582941   +* Ensmbl31: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 3 of 7;
1582942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582944   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1582945   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1582946   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1582947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582948   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1582949   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1582950   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1582951   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1582952   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1582953   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1582954   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1582955   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1582956   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1582957   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1582958   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1582959   +LENGTH _WARN_ $4
1582960   +      F_DepVar  $ 12
1582961   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1582962   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1582963   +
1582964   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1582965   +
1582966   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1582967   +
1582968   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1582969   +
1582970   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1582971   +
1582972   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1582973   +
1582974   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1582975   +
1582976   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1582977   +
1582978   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1582979   +
1582980   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1582981   +
1582982   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1582983   +
1582984   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1582985   +
1582986   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1582987   +
1582988   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1582989   +
1582990   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1582991   +
1582992   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1582993   +
1582994   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1582995   +
1582996   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1582997   +
1582998   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1582999   +
1583000   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1583001   +
1583002   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1583003   +
1583004   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1583005   +
1583006   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1583007   +
1583008   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1583009   +
1583010   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1583011   +
1583012   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1583013   +
1583014   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1583015   +
1583016   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1583017   +
1583018   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1583019   +
1583020   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1583021   +
1583022   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1583023   +
1583024   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1583025   +
1583026   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1583027   +
1583028   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1583029   +
1583030   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1583031   +
1583032   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1583033   +
1583034   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1583035   +
1583036   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1583037   +
1583038   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1583039   +
1583040   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1583041   +
1583042   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1583043   +
1583044   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1583045   +
1583046   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1583047   +
1583048   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1583049   +
1583050   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1583051   +
1583052   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1583053   +
1583054   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1583055   +
1583056   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1583057   +
1583058   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1583059   +
1583060   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1583061   +
1583062   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1583063   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1583064   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1583065   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1583066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583068   +end;
MPRINT(EM_DIAGRAM):   end;
1583069   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583070   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583071   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1583072   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583073   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583074   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1583075   +   end;
MPRINT(EM_DIAGRAM):   end;
1583076   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583077   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1583078   +   end;
MPRINT(EM_DIAGRAM):   end;
1583079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583080   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1583081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583083   +   end;
MPRINT(EM_DIAGRAM):   end;
1583084   +end;
MPRINT(EM_DIAGRAM):   end;
1583085   +
1583086   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1583087   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1583088   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1583089   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1583090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583092   +end;
MPRINT(EM_DIAGRAM):   end;
1583093   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583095   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1583096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583097   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583098   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1583099   +   end;
MPRINT(EM_DIAGRAM):   end;
1583100   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583101   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1583102   +   end;
MPRINT(EM_DIAGRAM):   end;
1583103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583104   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1583105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583107   +   end;
MPRINT(EM_DIAGRAM):   end;
1583108   +end;
MPRINT(EM_DIAGRAM):   end;
1583109   +
1583110   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1583111   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1583112   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1583113   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1583114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583116   +end;
MPRINT(EM_DIAGRAM):   end;
1583117   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583119   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1583120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583121   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583122   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1583123   +   end;
MPRINT(EM_DIAGRAM):   end;
1583124   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583125   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1583126   +   end;
MPRINT(EM_DIAGRAM):   end;
1583127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583128   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1583129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583131   +   end;
MPRINT(EM_DIAGRAM):   end;
1583132   +end;
MPRINT(EM_DIAGRAM):   end;
1583133   +
1583134   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1583135   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1583136   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1583137   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1583138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583140   +end;
MPRINT(EM_DIAGRAM):   end;
1583141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583143   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1583144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583145   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583146   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1583147   +   end;
MPRINT(EM_DIAGRAM):   end;
1583148   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583149   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1583150   +   end;
MPRINT(EM_DIAGRAM):   end;
1583151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583152   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1583153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583155   +   end;
MPRINT(EM_DIAGRAM):   end;
1583156   +end;
MPRINT(EM_DIAGRAM):   end;
1583157   +
1583158   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1583159   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1583160   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1583161   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1583162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583164   +end;
MPRINT(EM_DIAGRAM):   end;
1583165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583167   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1583168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583170   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1583171   +   end;
MPRINT(EM_DIAGRAM):   end;
1583172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583173   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1583174   +   end;
MPRINT(EM_DIAGRAM):   end;
1583175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583176   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1583177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583179   +   end;
MPRINT(EM_DIAGRAM):   end;
1583180   +end;
MPRINT(EM_DIAGRAM):   end;
1583181   +
1583182   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1583183   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1583184   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1583185   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1583186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583188   +end;
MPRINT(EM_DIAGRAM):   end;
1583189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583191   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1583192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583194   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1583195   +   end;
MPRINT(EM_DIAGRAM):   end;
1583196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583197   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1583198   +   end;
MPRINT(EM_DIAGRAM):   end;
1583199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583200   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1583201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583203   +   end;
MPRINT(EM_DIAGRAM):   end;
1583204   +end;
MPRINT(EM_DIAGRAM):   end;
1583205   +
1583206   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1583207   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1583208   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1583209   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1583210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583212   +end;
MPRINT(EM_DIAGRAM):   end;
1583213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583215   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1583216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583217   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1583218   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1583219   +   end;
MPRINT(EM_DIAGRAM):   end;
1583220   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1583221   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1583222   +   end;
MPRINT(EM_DIAGRAM):   end;
1583223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583224   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1583225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583227   +   end;
MPRINT(EM_DIAGRAM):   end;
1583228   +end;
MPRINT(EM_DIAGRAM):   end;
1583229   +
1583230   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1583231   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1583232   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1583233   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1583234   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1583235   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1583236   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1583237   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1583238   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1583239   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1583240   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1583241   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1583242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583244   +end;
MPRINT(EM_DIAGRAM):   end;
1583245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583246   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1583247   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1583248   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583249   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1583250   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1583251   +   end;
MPRINT(EM_DIAGRAM):   end;
1583252   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1583253   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1583254   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1583255   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1583256   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1583257   +   end;
MPRINT(EM_DIAGRAM):   end;
1583258   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1583259   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1583260   +   end;
MPRINT(EM_DIAGRAM):   end;
1583261   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1583262   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1583263   +   end;
MPRINT(EM_DIAGRAM):   end;
1583264   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1583265   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1583266   +   end;
MPRINT(EM_DIAGRAM):   end;
1583267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583268   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1583269   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1583270   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1583271   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1583272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583274   +   end;
MPRINT(EM_DIAGRAM):   end;
1583275   +end;
MPRINT(EM_DIAGRAM):   end;
1583276   +
1583277   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1583278   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1583279   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1583280   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1583281   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1583282   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1583283   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1583284   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1583285   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1583286   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1583287   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1583288   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1583289   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1583290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583292   +end;
MPRINT(EM_DIAGRAM):   end;
1583293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583294   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1583295   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1583296   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583297   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1583298   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1583299   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1583300   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1583301   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1583302   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1583303   +         end;
MPRINT(EM_DIAGRAM):   end;
1583304   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1583305   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1583306   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1583307   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1583308   +            end;
MPRINT(EM_DIAGRAM):   end;
1583309   +         end;
MPRINT(EM_DIAGRAM):   end;
1583310   +      end;
MPRINT(EM_DIAGRAM):   end;
1583311   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1583312   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1583313   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1583314   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1583315   +         end;
MPRINT(EM_DIAGRAM):   end;
1583316   +      end;
MPRINT(EM_DIAGRAM):   end;
1583317   +   end;
MPRINT(EM_DIAGRAM):   end;
1583318   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583319   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1583320   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1583321   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1583322   +      end;
MPRINT(EM_DIAGRAM):   end;
1583323   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1583324   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1583325   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1583326   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1583327   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1583328   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1583329   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1583330   +         end;
MPRINT(EM_DIAGRAM):   end;
1583331   +      end;
MPRINT(EM_DIAGRAM):   end;
1583332   +   end;
MPRINT(EM_DIAGRAM):   end;
1583333   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1583334   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1583335   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1583336   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1583337   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1583338   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583339   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583340   +   end;
MPRINT(EM_DIAGRAM):   end;
1583341   +end;
MPRINT(EM_DIAGRAM):   end;
1583342   +
1583343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583344   +*** Checking missing input Interval
1583345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1583346   +
1583347   +IF NMISS(
1583348   +   AcceptedCmpTotal ,
1583349   +   Age ,
1583350   +   Frq ,
1583351   +   Income ,
1583352   +   Kidhome ,
1583353   +   Mnt ,
1583354   +   MntFishProducts ,
1583355   +   MntFruits ,
1583356   +   MntGoldProds ,
1583357   +   MntMeatProducts ,
1583358   +   MntSweetProducts ,
1583359   +   MntWines ,
1583360   +   MonthsAsCustomer ,
1583361   +   NumCatalogPurchases ,
1583362   +   NumDealsPurchases ,
1583363   +   NumDistPurchases ,
1583364   +   NumStorePurchases ,
1583365   +   NumWebPurchases ,
1583366   +   NumWebVisitsMonth ,
1583367   +   RFMstat ,
1583368   +   RMntFrq ,
1583369   +   Recency ,
1583370   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1583371   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1583372   +
1583373   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583374   +END;
MPRINT(EM_DIAGRAM):   END;
1583375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583376   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1583377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583378   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1583379   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1583380   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1583381   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1583382   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1583383   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1583384   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1583385   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1583386   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1583387   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1583388   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1583389   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1583390   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1583391   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1583392   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1583393   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1583394   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1583395   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1583396   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1583397   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1583398   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1583399   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1583400   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1583401   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1583402   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1583403   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1583404   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1583405   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1583406   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1583407   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1583408   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1583409   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1583410   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1583411   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1583412   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1583413   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1583414   +END;
MPRINT(EM_DIAGRAM):   END;
1583415   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1583416   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1583417   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1583418   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1583419   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1583420   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1583421   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1583422   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1583423   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1583424   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1583425   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1583426   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1583427   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1583428   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1583429   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1583430   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1583431   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1583432   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1583433   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1583434   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1583435   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1583436   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1583437   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1583438   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1583439   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1583440   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1583441   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1583442   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1583443   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1583444   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1583445   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1583446   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1583447   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1583448   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1583449   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1583450   +   ELSE S_NumCatalogPurchases
1583451   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1583452   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1583453   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1583454   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1583455   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1583456   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1583457   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1583458   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1583459   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1583460   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1583461   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1583462   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1583463   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1583464   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1583465   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1583466   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1583467   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1583468   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1583469   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1583470   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1583471   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1583472   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1583473   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1583474   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1583475   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1583476   +END;
MPRINT(EM_DIAGRAM):   END;
1583477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583478   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1583479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583481   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1583482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583484   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1583485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583486   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1583487   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1583488   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1583489   +        S_Income  +    -0.23050240180524 * S_Kidhome
1583490   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1583491   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1583492   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1583493   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1583494   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1583495   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1583496   +          +    -1.32257303635072 * S_NumDealsPurchases
1583497   +          +    -0.54480870554989 * S_NumDistPurchases
1583498   +          +     1.24793709956495 * S_NumStorePurchases
1583499   +          +      1.7974198103915 * S_NumWebPurchases
1583500   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1583501   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1583502   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1583503   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1583504   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1583505   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1583506   +        S_Income  +    -0.78793784980656 * S_Kidhome
1583507   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1583508   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1583509   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1583510   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1583511   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1583512   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1583513   +          +     0.70535680060775 * S_NumDealsPurchases
1583514   +          +    -0.15561838359391 * S_NumDistPurchases
1583515   +          +    -0.86545647977011 * S_NumStorePurchases
1583516   +          +    -0.78435825863867 * S_NumWebPurchases
1583517   +          +     1.76113949975149 * S_NumWebVisitsMonth
1583518   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1583519   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1583520   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1583521   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1583522   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1583523   +        S_Income  +    -0.59349067735666 * S_Kidhome
1583524   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1583525   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1583526   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1583527   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1583528   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1583529   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1583530   +          +     0.21510592309387 * S_NumDealsPurchases
1583531   +          +    -0.05401897321491 * S_NumDistPurchases
1583532   +          +     0.14945584086188 * S_NumStorePurchases
1583533   +          +    -0.09993898051701 * S_NumWebPurchases
1583534   +          +     1.40189771606069 * S_NumWebVisitsMonth
1583535   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1583536   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1583537   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1583538   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1583539   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1583540   +        S_Income  +    -0.61129984920194 * S_Kidhome
1583541   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1583542   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1583543   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1583544   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1583545   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1583546   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1583547   +          +     0.81353732439473 * S_NumDealsPurchases
1583548   +          +     0.32933472931941 * S_NumDistPurchases
1583549   +          +    -1.28188012143595 * S_NumStorePurchases
1583550   +          +    -0.81914782214243 * S_NumWebPurchases
1583551   +          +     1.20332282902342 * S_NumWebVisitsMonth
1583552   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1583553   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1583554   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1583555   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1583556   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1583557   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1583558   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1583559   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1583560   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1583561   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1583562   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1583563   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1583564   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1583565   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1583566   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1583567   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1583568   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1583569   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1583570   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1583571   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1583572   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1583573   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1583574   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1583575   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1583576   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1583577   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1583578   +          +     0.38068062371853 * Marital_StatusDivorced
1583579   +          +    -0.09269938603625 * Marital_StatusMarried
1583580   +          +    -0.17904543311137 * Marital_StatusSingle
1583581   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1583582   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1583583   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1583584   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1583585   +          +     0.46191454760643 * Marital_StatusDivorced
1583586   +          +    -1.36520525874032 * Marital_StatusMarried
1583587   +          +     1.36669525533789 * Marital_StatusSingle
1583588   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1583589   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1583590   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1583591   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1583592   +          +     0.18693560360309 * Marital_StatusDivorced
1583593   +          +    -0.56475988428608 * Marital_StatusMarried
1583594   +          +     0.79263891340625 * Marital_StatusSingle
1583595   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1583596   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1583597   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1583598   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1583599   +          +     1.14025450669394 * Marital_StatusDivorced
1583600   +          +     0.78122963298728 * Marital_StatusMarried
1583601   +          +    -1.37860768059913 * Marital_StatusSingle
1583602   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1583603   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1583604   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1583605   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1583606   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1583607   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1583608   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1583609   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1583610   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1583611   +END;
MPRINT(EM_DIAGRAM):   END;
1583612   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1583613   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1583614   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1583615   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1583616   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1583617   +END;
MPRINT(EM_DIAGRAM):   END;
1583618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583619   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1583620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583621   +
1583622   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1583623   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1583624   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1583625   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1583626   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1583627   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583628   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1583629   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1583630   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1583631   +end;
MPRINT(EM_DIAGRAM):   end;
1583632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583633   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1583634   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1583635   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1583636   +   end;
MPRINT(EM_DIAGRAM):   end;
1583637   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1583638   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1583639   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1583640   +   end;
MPRINT(EM_DIAGRAM):   end;
1583641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583642   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1583643   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1583644   +   end;
MPRINT(EM_DIAGRAM):   end;
1583645   +end;
MPRINT(EM_DIAGRAM):   end;
1583646   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1583647   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1583648   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1583649   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1583650   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1583651   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1583652   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1583653   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1583654   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1583655   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1583656   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1583657   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1583658   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1583659   +END;
MPRINT(EM_DIAGRAM):   END;
1583660   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1583661   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1583662   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1583663   +END;
MPRINT(EM_DIAGRAM):   END;
1583664   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1583665   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1583666   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1583667   +END;
MPRINT(EM_DIAGRAM):   END;
1583668   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1583669   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1583670   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1583671   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1583672   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1583673   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1583674   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1583675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583676   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1583677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1583678   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1583679   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1583680   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1583681   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1583682   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1583683   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1583684   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1583685   +END;
MPRINT(EM_DIAGRAM):   END;
1583686   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1583687   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1583688   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1583689   +drop
1583690   +H11
1583691   +H12
1583692   +H13
1583693   +H14
1583694   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1583695   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1583696   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1583697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583698   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1583699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583700   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1583701   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1583702   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1583703   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1583704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583705   +* Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
1583706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583707   +length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
1583708   +drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
1583709   +Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
1583710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583711   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1583712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583713   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1583714   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1583715   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1583716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583717   +* Ensmbl31: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 4 of 7;
1583718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583720   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1583721   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1583722   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1583723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1583724   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1583725   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1583726   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1583727   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1583728   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1583729   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1583730   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1583731   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1583732   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1583733   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1583734   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1583735   +LENGTH _WARN_ $4
1583736   +      F_DepVar  $ 12
1583737   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1583738   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1583739   +
1583740   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1583741   +
1583742   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1583743   +
1583744   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1583745   +
1583746   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1583747   +
1583748   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1583749   +
1583750   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1583751   +
1583752   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1583753   +
1583754   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1583755   +
1583756   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1583757   +
1583758   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1583759   +
1583760   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1583761   +
1583762   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1583763   +
1583764   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1583765   +
1583766   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1583767   +
1583768   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1583769   +
1583770   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1583771   +
1583772   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1583773   +
1583774   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1583775   +
1583776   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1583777   +
1583778   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1583779   +
1583780   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1583781   +
1583782   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1583783   +
1583784   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1583785   +
1583786   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1583787   +
1583788   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1583789   +
1583790   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1583791   +
1583792   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1583793   +
1583794   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1583795   +
1583796   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1583797   +
1583798   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1583799   +
1583800   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1583801   +
1583802   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1583803   +
1583804   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1583805   +
1583806   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1583807   +
1583808   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1583809   +
1583810   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1583811   +
1583812   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1583813   +
1583814   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1583815   +
1583816   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1583817   +
1583818   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1583819   +
1583820   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1583821   +
1583822   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1583823   +
1583824   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1583825   +
1583826   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1583827   +
1583828   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1583829   +
1583830   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1583831   +
1583832   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1583833   +
1583834   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1583835   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1583836   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1583837   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1583838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583840   +end;
MPRINT(EM_DIAGRAM):   end;
1583841   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583843   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1583844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583846   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1583847   +   end;
MPRINT(EM_DIAGRAM):   end;
1583848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583849   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1583850   +   end;
MPRINT(EM_DIAGRAM):   end;
1583851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583852   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1583853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583855   +   end;
MPRINT(EM_DIAGRAM):   end;
1583856   +end;
MPRINT(EM_DIAGRAM):   end;
1583857   +
1583858   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1583859   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1583860   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1583861   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1583862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583864   +end;
MPRINT(EM_DIAGRAM):   end;
1583865   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583867   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1583868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583870   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1583871   +   end;
MPRINT(EM_DIAGRAM):   end;
1583872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583873   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1583874   +   end;
MPRINT(EM_DIAGRAM):   end;
1583875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583876   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1583877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583879   +   end;
MPRINT(EM_DIAGRAM):   end;
1583880   +end;
MPRINT(EM_DIAGRAM):   end;
1583881   +
1583882   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1583883   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1583884   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1583885   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1583886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583888   +end;
MPRINT(EM_DIAGRAM):   end;
1583889   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583891   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1583892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583893   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583894   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1583895   +   end;
MPRINT(EM_DIAGRAM):   end;
1583896   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583897   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1583898   +   end;
MPRINT(EM_DIAGRAM):   end;
1583899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583900   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1583901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583903   +   end;
MPRINT(EM_DIAGRAM):   end;
1583904   +end;
MPRINT(EM_DIAGRAM):   end;
1583905   +
1583906   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1583907   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1583908   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1583909   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1583910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583912   +end;
MPRINT(EM_DIAGRAM):   end;
1583913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583915   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1583916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583918   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1583919   +   end;
MPRINT(EM_DIAGRAM):   end;
1583920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583921   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1583922   +   end;
MPRINT(EM_DIAGRAM):   end;
1583923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583924   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1583925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583927   +   end;
MPRINT(EM_DIAGRAM):   end;
1583928   +end;
MPRINT(EM_DIAGRAM):   end;
1583929   +
1583930   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1583931   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1583932   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1583933   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1583934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583936   +end;
MPRINT(EM_DIAGRAM):   end;
1583937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583939   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1583940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583942   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1583943   +   end;
MPRINT(EM_DIAGRAM):   end;
1583944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583945   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1583946   +   end;
MPRINT(EM_DIAGRAM):   end;
1583947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583948   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1583949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583951   +   end;
MPRINT(EM_DIAGRAM):   end;
1583952   +end;
MPRINT(EM_DIAGRAM):   end;
1583953   +
1583954   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1583955   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1583956   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1583957   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1583958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583960   +end;
MPRINT(EM_DIAGRAM):   end;
1583961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583963   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1583964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1583966   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1583967   +   end;
MPRINT(EM_DIAGRAM):   end;
1583968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1583969   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1583970   +   end;
MPRINT(EM_DIAGRAM):   end;
1583971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583972   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1583973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583975   +   end;
MPRINT(EM_DIAGRAM):   end;
1583976   +end;
MPRINT(EM_DIAGRAM):   end;
1583977   +
1583978   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1583979   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1583980   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1583981   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1583982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1583983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583984   +end;
MPRINT(EM_DIAGRAM):   end;
1583985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1583986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1583987   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1583988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1583989   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1583990   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1583991   +   end;
MPRINT(EM_DIAGRAM):   end;
1583992   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1583993   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1583994   +   end;
MPRINT(EM_DIAGRAM):   end;
1583995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1583996   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1583997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1583998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1583999   +   end;
MPRINT(EM_DIAGRAM):   end;
1584000   +end;
MPRINT(EM_DIAGRAM):   end;
1584001   +
1584002   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1584003   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1584004   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1584005   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1584006   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1584007   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1584008   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1584009   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1584010   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1584011   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1584012   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1584013   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1584014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584016   +end;
MPRINT(EM_DIAGRAM):   end;
1584017   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584018   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1584019   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1584020   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584021   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1584022   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1584023   +   end;
MPRINT(EM_DIAGRAM):   end;
1584024   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1584025   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1584026   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1584027   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1584028   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1584029   +   end;
MPRINT(EM_DIAGRAM):   end;
1584030   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1584031   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1584032   +   end;
MPRINT(EM_DIAGRAM):   end;
1584033   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1584034   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1584035   +   end;
MPRINT(EM_DIAGRAM):   end;
1584036   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1584037   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1584038   +   end;
MPRINT(EM_DIAGRAM):   end;
1584039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584040   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1584041   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1584042   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1584043   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1584044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584046   +   end;
MPRINT(EM_DIAGRAM):   end;
1584047   +end;
MPRINT(EM_DIAGRAM):   end;
1584048   +
1584049   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1584050   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1584051   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1584052   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1584053   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1584054   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1584055   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1584056   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1584057   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1584058   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1584059   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1584060   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1584061   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1584062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584064   +end;
MPRINT(EM_DIAGRAM):   end;
1584065   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584066   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1584067   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1584068   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584069   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1584070   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1584071   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1584072   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1584073   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1584074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584075   +         end;
MPRINT(EM_DIAGRAM):   end;
1584076   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1584077   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1584078   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1584079   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584080   +            end;
MPRINT(EM_DIAGRAM):   end;
1584081   +         end;
MPRINT(EM_DIAGRAM):   end;
1584082   +      end;
MPRINT(EM_DIAGRAM):   end;
1584083   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1584084   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1584085   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1584086   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584087   +         end;
MPRINT(EM_DIAGRAM):   end;
1584088   +      end;
MPRINT(EM_DIAGRAM):   end;
1584089   +   end;
MPRINT(EM_DIAGRAM):   end;
1584090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584091   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1584092   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1584093   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584094   +      end;
MPRINT(EM_DIAGRAM):   end;
1584095   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1584096   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1584097   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1584098   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1584099   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1584100   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1584101   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584102   +         end;
MPRINT(EM_DIAGRAM):   end;
1584103   +      end;
MPRINT(EM_DIAGRAM):   end;
1584104   +   end;
MPRINT(EM_DIAGRAM):   end;
1584105   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1584106   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1584107   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1584108   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1584109   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1584110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584112   +   end;
MPRINT(EM_DIAGRAM):   end;
1584113   +end;
MPRINT(EM_DIAGRAM):   end;
1584114   +
1584115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584116   +*** Checking missing input Interval
1584117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1584118   +
1584119   +IF NMISS(
1584120   +   AcceptedCmpTotal ,
1584121   +   Age ,
1584122   +   Frq ,
1584123   +   Income ,
1584124   +   Kidhome ,
1584125   +   Mnt ,
1584126   +   MntFishProducts ,
1584127   +   MntFruits ,
1584128   +   MntGoldProds ,
1584129   +   MntMeatProducts ,
1584130   +   MntSweetProducts ,
1584131   +   MntWines ,
1584132   +   MonthsAsCustomer ,
1584133   +   NumCatalogPurchases ,
1584134   +   NumDealsPurchases ,
1584135   +   NumDistPurchases ,
1584136   +   NumStorePurchases ,
1584137   +   NumWebPurchases ,
1584138   +   NumWebVisitsMonth ,
1584139   +   RFMstat ,
1584140   +   RMntFrq ,
1584141   +   Recency ,
1584142   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1584143   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1584144   +
1584145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584146   +END;
MPRINT(EM_DIAGRAM):   END;
1584147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584148   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1584149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1584151   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1584152   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1584153   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1584154   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1584155   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1584156   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1584157   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1584158   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1584159   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1584160   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1584161   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1584162   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1584163   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1584164   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1584165   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1584166   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1584167   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1584168   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1584169   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1584170   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1584171   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1584172   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1584173   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1584174   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1584175   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1584176   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1584177   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1584178   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1584179   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1584180   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1584181   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1584182   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1584183   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1584184   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1584185   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1584186   +END;
MPRINT(EM_DIAGRAM):   END;
1584187   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1584188   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1584189   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1584190   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1584191   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1584192   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1584193   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1584194   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1584195   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1584196   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1584197   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1584198   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1584199   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1584200   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1584201   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1584202   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1584203   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1584204   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1584205   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1584206   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1584207   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1584208   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1584209   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1584210   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1584211   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1584212   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1584213   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1584214   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1584215   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1584216   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1584217   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1584218   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1584219   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1584220   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1584221   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1584222   +   ELSE S_NumCatalogPurchases
1584223   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1584224   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1584225   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1584226   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1584227   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1584228   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1584229   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1584230   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1584231   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1584232   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1584233   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1584234   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1584235   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1584236   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1584237   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1584238   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1584239   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1584240   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1584241   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1584242   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1584243   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1584244   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1584245   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1584246   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1584247   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1584248   +END;
MPRINT(EM_DIAGRAM):   END;
1584249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584250   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1584251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584253   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1584254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584256   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1584257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584258   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1584259   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1584260   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1584261   +        S_Income  +    -1.07652572934003 * S_Kidhome
1584262   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1584263   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1584264   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1584265   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1584266   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1584267   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1584268   +          +     0.34217069579861 * S_NumDealsPurchases
1584269   +          +      0.7126550962469 * S_NumDistPurchases
1584270   +          +     0.05810128676346 * S_NumStorePurchases
1584271   +          +     -0.1974592461824 * S_NumWebPurchases
1584272   +          +     1.33855646568468 * S_NumWebVisitsMonth
1584273   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1584274   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1584275   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1584276   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1584277   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1584278   +        S_Income  +    -0.00280376715329 * S_Kidhome
1584279   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1584280   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1584281   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1584282   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1584283   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1584284   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1584285   +          +     0.45694604326279 * S_NumDealsPurchases
1584286   +          +      0.1555582457419 * S_NumDistPurchases
1584287   +          +     -0.3340268446813 * S_NumStorePurchases
1584288   +          +    -0.39316217683753 * S_NumWebPurchases
1584289   +          +     0.52431656748667 * S_NumWebVisitsMonth
1584290   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1584291   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1584292   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1584293   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1584294   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1584295   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1584296   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1584297   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1584298   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1584299   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1584300   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1584301   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1584302   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1584303   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1584304   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1584305   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1584306   +          +     0.46676686502466 * Marital_StatusDivorced
1584307   +          +    -1.27760562209616 * Marital_StatusMarried
1584308   +          +     1.31419230639567 * Marital_StatusSingle
1584309   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1584310   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1584311   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1584312   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1584313   +          +     0.07434297903639 * Marital_StatusDivorced
1584314   +          +     0.00294493836325 * Marital_StatusMarried
1584315   +          +    -0.00745595849422 * Marital_StatusSingle
1584316   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1584317   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1584318   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1584319   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1584320   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1584321   +END;
MPRINT(EM_DIAGRAM):   END;
1584322   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1584323   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1584324   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1584325   +END;
MPRINT(EM_DIAGRAM):   END;
1584326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584327   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1584328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584329   +
1584330   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1584331   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1584332   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1584333   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1584334   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1584335   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584336   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1584337   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1584338   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1584339   +end;
MPRINT(EM_DIAGRAM):   end;
1584340   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584341   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1584342   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1584343   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1584344   +   end;
MPRINT(EM_DIAGRAM):   end;
1584345   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1584346   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1584347   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1584348   +   end;
MPRINT(EM_DIAGRAM):   end;
1584349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584350   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1584351   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1584352   +   end;
MPRINT(EM_DIAGRAM):   end;
1584353   +end;
MPRINT(EM_DIAGRAM):   end;
1584354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1584355   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1584356   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1584357   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1584358   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1584359   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1584360   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1584361   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1584362   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1584363   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1584364   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1584365   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1584366   +END;
MPRINT(EM_DIAGRAM):   END;
1584367   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1584368   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1584369   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1584370   +END;
MPRINT(EM_DIAGRAM):   END;
1584371   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1584372   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1584373   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1584374   +END;
MPRINT(EM_DIAGRAM):   END;
1584375   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1584376   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1584377   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1584378   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1584379   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1584380   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1584381   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1584382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584383   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1584384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584385   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1584386   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1584387   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1584388   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1584389   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1584390   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1584391   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1584392   +END;
MPRINT(EM_DIAGRAM):   END;
1584393   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1584394   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1584395   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1584396   +drop
1584397   +H11
1584398   +H12
1584399   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1584400   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1584401   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1584402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584403   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1584404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584405   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1584406   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1584407   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1584408   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1584409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584410   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1584411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584412   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1584413   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1584414   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1584415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584416   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1584417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584418   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1584419   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1584420   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1584421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584422   +* Ensmbl31: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 5 of 7;
1584423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584425   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1584426   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1584427   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1584428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1584429   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1584430   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1584431   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1584432   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1584433   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1584434   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1584435   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1584436   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1584437   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1584438   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1584439   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1584440   +LENGTH _WARN_ $4
1584441   +      F_DepVar  $ 12
1584442   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1584443   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1584444   +
1584445   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1584446   +
1584447   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1584448   +
1584449   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1584450   +
1584451   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1584452   +
1584453   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1584454   +
1584455   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1584456   +
1584457   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1584458   +
1584459   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1584460   +
1584461   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1584462   +
1584463   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1584464   +
1584465   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1584466   +
1584467   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1584468   +
1584469   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1584470   +
1584471   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1584472   +
1584473   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1584474   +
1584475   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1584476   +
1584477   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1584478   +
1584479   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1584480   +
1584481   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1584482   +
1584483   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1584484   +
1584485   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1584486   +
1584487   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1584488   +
1584489   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1584490   +
1584491   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1584492   +
1584493   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1584494   +
1584495   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1584496   +
1584497   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1584498   +
1584499   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1584500   +
1584501   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1584502   +
1584503   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1584504   +
1584505   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1584506   +
1584507   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1584508   +
1584509   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1584510   +
1584511   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1584512   +
1584513   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1584514   +
1584515   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1584516   +
1584517   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1584518   +
1584519   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1584520   +
1584521   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1584522   +
1584523   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1584524   +
1584525   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1584526   +
1584527   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1584528   +
1584529   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1584530   +
1584531   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1584532   +
1584533   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1584534   +
1584535   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1584536   +
1584537   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1584538   +
1584539   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1584540   +
1584541   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1584542   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1584543   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1584544   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1584545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584547   +end;
MPRINT(EM_DIAGRAM):   end;
1584548   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584549   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584550   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1584551   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584552   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1584553   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1584554   +   end;
MPRINT(EM_DIAGRAM):   end;
1584555   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1584556   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1584557   +   end;
MPRINT(EM_DIAGRAM):   end;
1584558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584559   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1584560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584562   +   end;
MPRINT(EM_DIAGRAM):   end;
1584563   +end;
MPRINT(EM_DIAGRAM):   end;
1584564   +
1584565   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1584566   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1584567   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1584568   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1584569   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584570   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584571   +end;
MPRINT(EM_DIAGRAM):   end;
1584572   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584573   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584574   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1584575   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584576   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1584577   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1584578   +   end;
MPRINT(EM_DIAGRAM):   end;
1584579   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1584580   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1584581   +   end;
MPRINT(EM_DIAGRAM):   end;
1584582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584583   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1584584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584586   +   end;
MPRINT(EM_DIAGRAM):   end;
1584587   +end;
MPRINT(EM_DIAGRAM):   end;
1584588   +
1584589   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1584590   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1584591   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1584592   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1584593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584595   +end;
MPRINT(EM_DIAGRAM):   end;
1584596   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584597   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584598   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1584599   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584600   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1584601   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1584602   +   end;
MPRINT(EM_DIAGRAM):   end;
1584603   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1584604   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1584605   +   end;
MPRINT(EM_DIAGRAM):   end;
1584606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584607   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1584608   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584609   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584610   +   end;
MPRINT(EM_DIAGRAM):   end;
1584611   +end;
MPRINT(EM_DIAGRAM):   end;
1584612   +
1584613   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1584614   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1584615   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1584616   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1584617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584619   +end;
MPRINT(EM_DIAGRAM):   end;
1584620   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584621   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584622   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1584623   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584624   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1584625   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1584626   +   end;
MPRINT(EM_DIAGRAM):   end;
1584627   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1584628   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1584629   +   end;
MPRINT(EM_DIAGRAM):   end;
1584630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584631   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1584632   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584633   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584634   +   end;
MPRINT(EM_DIAGRAM):   end;
1584635   +end;
MPRINT(EM_DIAGRAM):   end;
1584636   +
1584637   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1584638   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1584639   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1584640   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1584641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584643   +end;
MPRINT(EM_DIAGRAM):   end;
1584644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584646   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1584647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584648   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1584649   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1584650   +   end;
MPRINT(EM_DIAGRAM):   end;
1584651   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1584652   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1584653   +   end;
MPRINT(EM_DIAGRAM):   end;
1584654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584655   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1584656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584658   +   end;
MPRINT(EM_DIAGRAM):   end;
1584659   +end;
MPRINT(EM_DIAGRAM):   end;
1584660   +
1584661   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1584662   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1584663   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1584664   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1584665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584667   +end;
MPRINT(EM_DIAGRAM):   end;
1584668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584670   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1584671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584672   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1584673   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1584674   +   end;
MPRINT(EM_DIAGRAM):   end;
1584675   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1584676   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1584677   +   end;
MPRINT(EM_DIAGRAM):   end;
1584678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584679   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1584680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584682   +   end;
MPRINT(EM_DIAGRAM):   end;
1584683   +end;
MPRINT(EM_DIAGRAM):   end;
1584684   +
1584685   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1584686   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1584687   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1584688   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1584689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584691   +end;
MPRINT(EM_DIAGRAM):   end;
1584692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1584694   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1584695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584696   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1584697   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1584698   +   end;
MPRINT(EM_DIAGRAM):   end;
1584699   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1584700   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1584701   +   end;
MPRINT(EM_DIAGRAM):   end;
1584702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584703   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1584704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584706   +   end;
MPRINT(EM_DIAGRAM):   end;
1584707   +end;
MPRINT(EM_DIAGRAM):   end;
1584708   +
1584709   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1584710   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1584711   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1584712   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1584713   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1584714   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1584715   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1584716   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1584717   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1584718   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1584719   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1584720   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1584721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584723   +end;
MPRINT(EM_DIAGRAM):   end;
1584724   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584725   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1584726   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1584727   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584728   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1584729   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1584730   +   end;
MPRINT(EM_DIAGRAM):   end;
1584731   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1584732   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1584733   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1584734   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1584735   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1584736   +   end;
MPRINT(EM_DIAGRAM):   end;
1584737   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1584738   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1584739   +   end;
MPRINT(EM_DIAGRAM):   end;
1584740   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1584741   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1584742   +   end;
MPRINT(EM_DIAGRAM):   end;
1584743   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1584744   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1584745   +   end;
MPRINT(EM_DIAGRAM):   end;
1584746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584747   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1584748   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1584749   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1584750   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1584751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584753   +   end;
MPRINT(EM_DIAGRAM):   end;
1584754   +end;
MPRINT(EM_DIAGRAM):   end;
1584755   +
1584756   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1584757   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1584758   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1584759   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1584760   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1584761   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1584762   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1584763   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1584764   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1584765   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1584766   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1584767   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1584768   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1584769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1584770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584771   +end;
MPRINT(EM_DIAGRAM):   end;
1584772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1584773   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1584774   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1584775   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1584776   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1584777   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1584778   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1584779   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1584780   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1584781   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584782   +         end;
MPRINT(EM_DIAGRAM):   end;
1584783   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1584784   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1584785   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1584786   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584787   +            end;
MPRINT(EM_DIAGRAM):   end;
1584788   +         end;
MPRINT(EM_DIAGRAM):   end;
1584789   +      end;
MPRINT(EM_DIAGRAM):   end;
1584790   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1584791   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1584792   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1584793   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584794   +         end;
MPRINT(EM_DIAGRAM):   end;
1584795   +      end;
MPRINT(EM_DIAGRAM):   end;
1584796   +   end;
MPRINT(EM_DIAGRAM):   end;
1584797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1584798   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1584799   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1584800   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584801   +      end;
MPRINT(EM_DIAGRAM):   end;
1584802   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1584803   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1584804   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1584805   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1584806   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1584807   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1584808   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1584809   +         end;
MPRINT(EM_DIAGRAM):   end;
1584810   +      end;
MPRINT(EM_DIAGRAM):   end;
1584811   +   end;
MPRINT(EM_DIAGRAM):   end;
1584812   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1584813   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1584814   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1584815   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1584816   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1584817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1584818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584819   +   end;
MPRINT(EM_DIAGRAM):   end;
1584820   +end;
MPRINT(EM_DIAGRAM):   end;
1584821   +
1584822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584823   +*** Checking missing input Interval
1584824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1584825   +
1584826   +IF NMISS(
1584827   +   AcceptedCmpTotal ,
1584828   +   Age ,
1584829   +   Frq ,
1584830   +   Income ,
1584831   +   Kidhome ,
1584832   +   Mnt ,
1584833   +   MntFishProducts ,
1584834   +   MntFruits ,
1584835   +   MntGoldProds ,
1584836   +   MntMeatProducts ,
1584837   +   MntSweetProducts ,
1584838   +   MntWines ,
1584839   +   MonthsAsCustomer ,
1584840   +   NumCatalogPurchases ,
1584841   +   NumDealsPurchases ,
1584842   +   NumDistPurchases ,
1584843   +   NumStorePurchases ,
1584844   +   NumWebPurchases ,
1584845   +   NumWebVisitsMonth ,
1584846   +   RFMstat ,
1584847   +   RMntFrq ,
1584848   +   Recency ,
1584849   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1584850   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1584851   +
1584852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1584853   +END;
MPRINT(EM_DIAGRAM):   END;
1584854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584855   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1584856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584857   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1584858   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1584859   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1584860   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1584861   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1584862   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1584863   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1584864   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1584865   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1584866   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1584867   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1584868   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1584869   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1584870   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1584871   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1584872   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1584873   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1584874   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1584875   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1584876   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1584877   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1584878   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1584879   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1584880   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1584881   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1584882   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1584883   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1584884   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1584885   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1584886   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1584887   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1584888   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1584889   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1584890   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1584891   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1584892   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1584893   +END;
MPRINT(EM_DIAGRAM):   END;
1584894   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1584895   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1584896   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1584897   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1584898   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1584899   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1584900   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1584901   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1584902   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1584903   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1584904   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1584905   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1584906   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1584907   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1584908   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1584909   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1584910   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1584911   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1584912   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1584913   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1584914   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1584915   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1584916   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1584917   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1584918   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1584919   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1584920   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1584921   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1584922   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1584923   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1584924   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1584925   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1584926   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1584927   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1584928   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1584929   +   ELSE S_NumCatalogPurchases
1584930   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1584931   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1584932   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1584933   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1584934   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1584935   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1584936   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1584937   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1584938   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1584939   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1584940   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1584941   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1584942   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1584943   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1584944   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1584945   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1584946   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1584947   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1584948   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1584949   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1584950   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1584951   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1584952   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1584953   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1584954   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1584955   +END;
MPRINT(EM_DIAGRAM):   END;
1584956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584957   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1584958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584960   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1584961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584963   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1584964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1584965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1584966   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1584967   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1584968   +        S_Income  +     0.48614351216065 * S_Kidhome
1584969   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1584970   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1584971   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1584972   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1584973   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1584974   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1584975   +          +     1.38069708066212 * S_NumDealsPurchases
1584976   +          +     0.18758966496994 * S_NumDistPurchases
1584977   +          +    -0.65306017966122 * S_NumStorePurchases
1584978   +          +    -0.65780154318734 * S_NumWebPurchases
1584979   +          +     1.42347048260615 * S_NumWebVisitsMonth
1584980   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1584981   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1584982   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1584983   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1584984   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1584985   +        S_Income  +     0.50072567449363 * S_Kidhome
1584986   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1584987   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1584988   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1584989   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1584990   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1584991   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1584992   +          +    -0.75291043162386 * S_NumDealsPurchases
1584993   +          +    -0.06780631818187 * S_NumDistPurchases
1584994   +          +     1.03453599373919 * S_NumStorePurchases
1584995   +          +     1.02348906006707 * S_NumWebPurchases
1584996   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1584997   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1584998   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1584999   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1585000   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1585001   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1585002   +        S_Income  +     0.57496607656903 * S_Kidhome
1585003   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1585004   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1585005   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1585006   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1585007   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1585008   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1585009   +          +     0.13431497076806 * S_NumDealsPurchases
1585010   +          +     -0.4516722514278 * S_NumDistPurchases
1585011   +          +     0.08636745161008 * S_NumStorePurchases
1585012   +          +    -0.01091843489919 * S_NumWebPurchases
1585013   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1585014   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1585015   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1585016   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1585017   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1585018   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1585019   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1585020   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1585021   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1585022   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1585023   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1585024   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1585025   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1585026   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1585027   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1585028   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1585029   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1585030   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1585031   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1585032   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1585033   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1585034   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1585035   +          +     0.09616912826117 * Marital_StatusDivorced
1585036   +          +     0.15377557778014 * Marital_StatusMarried
1585037   +          +    -0.20686296055741 * Marital_StatusSingle
1585038   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1585039   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1585040   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1585041   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1585042   +          +    -0.18362421441913 * Marital_StatusDivorced
1585043   +          +     0.14861660317702 * Marital_StatusMarried
1585044   +          +    -0.51051982152027 * Marital_StatusSingle
1585045   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
The SAS System

-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1585046   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1585047   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1585048   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1585049   +          +    -0.65088528624708 * Marital_StatusDivorced
1585050   +          +     1.85383531288095 * Marital_StatusMarried
1585051   +          +    -1.45031245605509 * Marital_StatusSingle
1585052   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1585053   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1585054   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1585055   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1585056   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1585057   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1585058   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1585059   +END;
MPRINT(EM_DIAGRAM):   END;
1585060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1585061   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1585062   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1585063   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1585064   +END;
MPRINT(EM_DIAGRAM):   END;
1585065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585066   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1585067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585068   +
1585069   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1585070   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1585071   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1585072   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1585073   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1585074   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585075   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1585076   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1585077   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1585078   +end;
MPRINT(EM_DIAGRAM):   end;
1585079   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585080   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1585081   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1585082   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1585083   +   end;
MPRINT(EM_DIAGRAM):   end;
1585084   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1585085   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1585086   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1585087   +   end;
MPRINT(EM_DIAGRAM):   end;
1585088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585089   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1585090   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1585091   +   end;
MPRINT(EM_DIAGRAM):   end;
1585092   +end;
MPRINT(EM_DIAGRAM):   end;
1585093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1585094   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1585095   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1585096   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1585097   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1585098   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1585099   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1585100   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1585101   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1585102   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1585103   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1585104   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1585105   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1585106   +END;
MPRINT(EM_DIAGRAM):   END;
1585107   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1585108   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1585109   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1585110   +END;
MPRINT(EM_DIAGRAM):   END;
1585111   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1585112   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1585113   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1585114   +END;
MPRINT(EM_DIAGRAM):   END;
1585115   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1585116   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1585117   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1585118   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1585119   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1585120   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1585121   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1585122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585123   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1585124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585125   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1585126   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1585127   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1585128   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1585129   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1585130   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1585131   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1585132   +END;
MPRINT(EM_DIAGRAM):   END;
1585133   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1585134   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1585135   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1585136   +drop
1585137   +H11
1585138   +H12
1585139   +H13
1585140   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1585141   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1585142   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1585143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585144   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1585145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585146   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1585147   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1585148   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1585149   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1585150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585151   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1585152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585153   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1585154   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1585155   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1585156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585157   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1585158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585159   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1585160   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1585161   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1585162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585163   +* Ensmbl31: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 6 of 7;
1585164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585166   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1585167   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1585168   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1585169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585170   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1585171   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1585172   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1585173   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1585174   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1585175   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1585176   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1585177   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1585178   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1585179   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1585180   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1585181   +LENGTH _WARN_ $4
1585182   +      F_DepVar  $ 12
1585183   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1585184   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1585185   +
1585186   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1585187   +
1585188   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1585189   +
1585190   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1585191   +
1585192   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1585193   +
1585194   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1585195   +
1585196   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1585197   +
1585198   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1585199   +
1585200   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1585201   +
1585202   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1585203   +
1585204   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1585205   +
1585206   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1585207   +
1585208   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1585209   +
1585210   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1585211   +
1585212   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1585213   +
1585214   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1585215   +
1585216   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1585217   +
1585218   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1585219   +
1585220   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1585221   +
1585222   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1585223   +
1585224   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1585225   +
1585226   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1585227   +
1585228   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1585229   +
1585230   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1585231   +
1585232   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1585233   +
1585234   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1585235   +
1585236   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1585237   +
1585238   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1585239   +
1585240   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1585241   +
1585242   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1585243   +
1585244   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1585245   +
1585246   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1585247   +
1585248   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1585249   +
1585250   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1585251   +
1585252   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1585253   +
1585254   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1585255   +
1585256   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1585257   +
1585258   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1585259   +
1585260   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1585261   +
1585262   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1585263   +
1585264   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1585265   +
1585266   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1585267   +
1585268   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1585269   +
1585270   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1585271   +
1585272   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1585273   +
1585274   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1585275   +
1585276   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1585277   +
1585278   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1585279   +
1585280   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1585281   +
1585282   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1585283   +
1585284   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1585285   +
1585286   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1585287   +
1585288   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1585289   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1585290   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1585291   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1585292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585294   +end;
MPRINT(EM_DIAGRAM):   end;
1585295   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585297   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1585298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585299   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1585300   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1585301   +   end;
MPRINT(EM_DIAGRAM):   end;
1585302   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1585303   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1585304   +   end;
MPRINT(EM_DIAGRAM):   end;
1585305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585306   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1585307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585309   +   end;
MPRINT(EM_DIAGRAM):   end;
1585310   +end;
MPRINT(EM_DIAGRAM):   end;
1585311   +
1585312   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1585313   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1585314   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1585315   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1585316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585318   +end;
MPRINT(EM_DIAGRAM):   end;
1585319   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585320   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585321   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1585322   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585323   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1585324   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1585325   +   end;
MPRINT(EM_DIAGRAM):   end;
1585326   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1585327   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1585328   +   end;
MPRINT(EM_DIAGRAM):   end;
1585329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585330   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1585331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585333   +   end;
MPRINT(EM_DIAGRAM):   end;
1585334   +end;
MPRINT(EM_DIAGRAM):   end;
1585335   +
1585336   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1585337   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1585338   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1585339   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1585340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585342   +end;
MPRINT(EM_DIAGRAM):   end;
1585343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585345   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1585346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585347   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1585348   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1585349   +   end;
MPRINT(EM_DIAGRAM):   end;
1585350   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1585351   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1585352   +   end;
MPRINT(EM_DIAGRAM):   end;
1585353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585354   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1585355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585357   +   end;
MPRINT(EM_DIAGRAM):   end;
1585358   +end;
MPRINT(EM_DIAGRAM):   end;
1585359   +
1585360   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1585361   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1585362   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1585363   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1585364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585366   +end;
MPRINT(EM_DIAGRAM):   end;
1585367   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585369   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1585370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585371   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1585372   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1585373   +   end;
MPRINT(EM_DIAGRAM):   end;
1585374   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1585375   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1585376   +   end;
MPRINT(EM_DIAGRAM):   end;
1585377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585378   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1585379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585381   +   end;
MPRINT(EM_DIAGRAM):   end;
1585382   +end;
MPRINT(EM_DIAGRAM):   end;
1585383   +
1585384   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1585385   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1585386   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1585387   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1585388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585390   +end;
MPRINT(EM_DIAGRAM):   end;
1585391   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585393   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1585394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585395   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1585396   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1585397   +   end;
MPRINT(EM_DIAGRAM):   end;
1585398   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1585399   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1585400   +   end;
MPRINT(EM_DIAGRAM):   end;
1585401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585402   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1585403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585405   +   end;
MPRINT(EM_DIAGRAM):   end;
1585406   +end;
MPRINT(EM_DIAGRAM):   end;
1585407   +
1585408   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1585409   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1585410   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1585411   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1585412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585414   +end;
MPRINT(EM_DIAGRAM):   end;
1585415   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585416   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585417   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1585418   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585419   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1585420   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1585421   +   end;
MPRINT(EM_DIAGRAM):   end;
1585422   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1585423   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1585424   +   end;
MPRINT(EM_DIAGRAM):   end;
1585425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585426   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1585427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585429   +   end;
MPRINT(EM_DIAGRAM):   end;
1585430   +end;
MPRINT(EM_DIAGRAM):   end;
1585431   +
1585432   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1585433   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1585434   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1585435   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1585436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585438   +end;
MPRINT(EM_DIAGRAM):   end;
1585439   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585440   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1585441   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1585442   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585443   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1585444   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1585445   +   end;
MPRINT(EM_DIAGRAM):   end;
1585446   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1585447   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1585448   +   end;
MPRINT(EM_DIAGRAM):   end;
1585449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585450   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1585451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585453   +   end;
MPRINT(EM_DIAGRAM):   end;
1585454   +end;
MPRINT(EM_DIAGRAM):   end;
1585455   +
1585456   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1585457   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1585458   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1585459   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1585460   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1585461   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1585462   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1585463   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1585464   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1585465   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1585466   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1585467   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1585468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585470   +end;
MPRINT(EM_DIAGRAM):   end;
1585471   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585472   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1585473   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1585474   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585475   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1585476   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1585477   +   end;
MPRINT(EM_DIAGRAM):   end;
1585478   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1585479   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1585480   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1585481   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1585482   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1585483   +   end;
MPRINT(EM_DIAGRAM):   end;
1585484   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1585485   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1585486   +   end;
MPRINT(EM_DIAGRAM):   end;
1585487   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1585488   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1585489   +   end;
MPRINT(EM_DIAGRAM):   end;
1585490   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1585491   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1585492   +   end;
MPRINT(EM_DIAGRAM):   end;
1585493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585494   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1585495   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1585496   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1585497   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1585498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585500   +   end;
MPRINT(EM_DIAGRAM):   end;
1585501   +end;
MPRINT(EM_DIAGRAM):   end;
1585502   +
1585503   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1585504   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1585505   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1585506   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1585507   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1585508   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1585509   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1585510   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1585511   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1585512   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1585513   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1585514   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1585515   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1585516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1585517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585518   +end;
MPRINT(EM_DIAGRAM):   end;
1585519   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585520   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1585521   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1585522   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585523   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1585524   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1585525   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1585526   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1585527   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1585528   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1585529   +         end;
MPRINT(EM_DIAGRAM):   end;
1585530   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1585531   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1585532   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1585533   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1585534   +            end;
MPRINT(EM_DIAGRAM):   end;
1585535   +         end;
MPRINT(EM_DIAGRAM):   end;
1585536   +      end;
MPRINT(EM_DIAGRAM):   end;
1585537   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1585538   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1585539   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1585540   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1585541   +         end;
MPRINT(EM_DIAGRAM):   end;
1585542   +      end;
MPRINT(EM_DIAGRAM):   end;
1585543   +   end;
MPRINT(EM_DIAGRAM):   end;
1585544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585545   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1585546   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1585547   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1585548   +      end;
MPRINT(EM_DIAGRAM):   end;
1585549   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1585550   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1585551   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1585552   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1585553   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1585554   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1585555   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1585556   +         end;
MPRINT(EM_DIAGRAM):   end;
1585557   +      end;
MPRINT(EM_DIAGRAM):   end;
1585558   +   end;
MPRINT(EM_DIAGRAM):   end;
1585559   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1585560   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1585561   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1585562   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1585563   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1585564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1585565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585566   +   end;
MPRINT(EM_DIAGRAM):   end;
1585567   +end;
MPRINT(EM_DIAGRAM):   end;
1585568   +
1585569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585570   +*** Checking missing input Interval
1585571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1585572   +
1585573   +IF NMISS(
1585574   +   AcceptedCmpTotal ,
1585575   +   Age ,
1585576   +   Frq ,
1585577   +   Income ,
1585578   +   Kidhome ,
1585579   +   Mnt ,
1585580   +   MntFishProducts ,
1585581   +   MntFruits ,
1585582   +   MntGoldProds ,
1585583   +   MntMeatProducts ,
1585584   +   MntSweetProducts ,
1585585   +   MntWines ,
1585586   +   MonthsAsCustomer ,
1585587   +   NumCatalogPurchases ,
1585588   +   NumDealsPurchases ,
1585589   +   NumDistPurchases ,
1585590   +   NumStorePurchases ,
1585591   +   NumWebPurchases ,
1585592   +   NumWebVisitsMonth ,
1585593   +   RFMstat ,
1585594   +   RMntFrq ,
1585595   +   Recency ,
1585596   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1585597   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1585598   +
1585599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1585600   +END;
MPRINT(EM_DIAGRAM):   END;
1585601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585602   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1585603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585604   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1585605   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1585606   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1585607   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1585608   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1585609   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1585610   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1585611   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1585612   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1585613   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1585614   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1585615   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1585616   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1585617   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1585618   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1585619   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1585620   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1585621   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1585622   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1585623   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1585624   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1585625   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1585626   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1585627   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1585628   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1585629   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1585630   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1585631   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1585632   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1585633   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1585634   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1585635   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1585636   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1585637   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1585638   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1585639   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1585640   +END;
MPRINT(EM_DIAGRAM):   END;
1585641   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1585642   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1585643   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1585644   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1585645   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1585646   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1585647   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1585648   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1585649   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1585650   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1585651   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1585652   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1585653   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1585654   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1585655   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1585656   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1585657   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1585658   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1585659   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1585660   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1585661   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1585662   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1585663   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1585664   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1585665   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1585666   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1585667   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1585668   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1585669   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1585670   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1585671   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1585672   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1585673   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1585674   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1585675   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1585676   +   ELSE S_NumCatalogPurchases
1585677   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1585678   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1585679   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1585680   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1585681   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1585682   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1585683   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1585684   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1585685   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1585686   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1585687   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1585688   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1585689   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1585690   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1585691   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1585692   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1585693   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1585694   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1585695   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1585696   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1585697   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1585698   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1585699   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1585700   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1585701   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1585702   +END;
MPRINT(EM_DIAGRAM):   END;
1585703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585704   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1585705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585707   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1585708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585710   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1585711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1585713   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1585714   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1585715   +        S_Income  +     -0.0761121347886 * S_Kidhome
1585716   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1585717   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1585718   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1585719   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1585720   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1585721   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1585722   +          +     0.83893684194413 * S_NumDealsPurchases
1585723   +          +     0.23391006875291 * S_NumDistPurchases
1585724   +          +    -0.63370705462074 * S_NumStorePurchases
1585725   +          +     -0.9137408014067 * S_NumWebPurchases
1585726   +          +     0.89109351479441 * S_NumWebVisitsMonth
1585727   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1585728   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1585729   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1585730   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1585731   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1585732   +        S_Income  +    -0.43909782819329 * S_Kidhome
1585733   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1585734   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1585735   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1585736   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1585737   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1585738   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1585739   +          +      0.2218973353638 * S_NumDealsPurchases
1585740   +          +      0.0062360950528 * S_NumDistPurchases
1585741   +          +    -0.57621747951002 * S_NumStorePurchases
1585742   +          +    -0.33564890905657 * S_NumWebPurchases
1585743   +          +     0.82482365540301 * S_NumWebVisitsMonth
1585744   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1585745   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1585746   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1585747   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1585748   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1585749   +        S_Income  +    -0.03572236011846 * S_Kidhome
1585750   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1585751   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1585752   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1585753   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1585754   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1585755   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1585756   +          +      -0.174147250062 * S_NumDealsPurchases
1585757   +          +    -0.22921682388864 * S_NumDistPurchases
1585758   +          +     0.41526854684299 * S_NumStorePurchases
1585759   +          +    -0.27675565493519 * S_NumWebPurchases
1585760   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1585761   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1585762   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1585763   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1585764   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1585765   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1585766   +        S_Income  +    -0.04788369327547 * S_Kidhome
1585767   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1585768   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1585769   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1585770   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1585771   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1585772   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1585773   +          +    -0.46022430102423 * S_NumDealsPurchases
1585774   +          +     0.15831339342044 * S_NumDistPurchases
1585775   +          +     0.22480465173719 * S_NumStorePurchases
1585776   +          +     0.44798923484609 * S_NumWebPurchases
1585777   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1585778   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1585779   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1585780   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1585781   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1585782   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1585783   +        S_Income  +     0.53994304261534 * S_Kidhome
1585784   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1585785   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1585786   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1585787   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1585788   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1585789   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1585790   +          +     0.03650267472167 * S_NumDealsPurchases
1585791   +          +    -0.03322709524939 * S_NumDistPurchases
1585792   +          +     -0.0022226424472 * S_NumStorePurchases
1585793   +          +    -0.10131236740674 * S_NumWebPurchases
1585794   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1585795   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1585796   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1585797   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1585798   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1585799   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1585800   +        S_Income  +    -0.52576099429582 * S_Kidhome
1585801   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1585802   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1585803   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1585804   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1585805   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1585806   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1585807   +          +    -0.50209914729324 * S_NumDealsPurchases
1585808   +          +    -0.46217244513696 * S_NumDistPurchases
1585809   +          +      0.1832648560248 * S_NumStorePurchases
1585810   +          +     0.02866153257072 * S_NumWebPurchases
1585811   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1585812   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1585813   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1585814   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1585815   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1585816   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1585817   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1585818   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1585819   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1585820   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1585821   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1585822   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1585823   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1585824   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1585825   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1585826   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1585827   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1585828   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1585829   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1585830   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1585831   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1585832   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1585833   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1585834   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1585835   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1585836   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1585837   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1585838   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1585839   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1585840   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1585841   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1585842   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1585843   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1585844   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1585845   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1585846   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1585847   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1585848   +          +     0.13815069071511 * Marital_StatusDivorced
1585849   +          +      0.0732913060929 * Marital_StatusMarried
1585850   +          +    -0.22858418468746 * Marital_StatusSingle
1585851   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1585852   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1585853   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1585854   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1585855   +          +     0.32909808396509 * Marital_StatusDivorced
1585856   +          +    -0.50160173579004 * Marital_StatusMarried
1585857   +          +     0.57207102211224 * Marital_StatusSingle
1585858   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1585859   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1585860   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1585861   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1585862   +          +    -0.07154493730107 * Marital_StatusDivorced
1585863   +          +     0.29126100051603 * Marital_StatusMarried
1585864   +          +    -0.06936325857004 * Marital_StatusSingle
1585865   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1585866   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1585867   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1585868   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1585869   +          +    -0.05004640872388 * Marital_StatusDivorced
1585870   +          +     0.22197974032974 * Marital_StatusMarried
1585871   +          +    -0.33931504637453 * Marital_StatusSingle
1585872   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1585873   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1585874   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1585875   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1585876   +          +    -0.07748874669478 * Marital_StatusDivorced
1585877   +          +     1.05442281159109 * Marital_StatusMarried
1585878   +          +    -0.67190984038867 * Marital_StatusSingle
1585879   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1585880   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1585881   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1585882   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1585883   +          +    -0.20478208715114 * Marital_StatusDivorced
1585884   +          +    -0.40186383707642 * Marital_StatusMarried
1585885   +          +     0.43474841662774 * Marital_StatusSingle
1585886   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1585887   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1585888   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1585889   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1585890   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1585891   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1585892   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1585893   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1585894   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1585895   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1585896   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1585897   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1585898   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1585899   +END;
MPRINT(EM_DIAGRAM):   END;
1585900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1585901   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1585902   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1585903   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1585904   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1585905   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1585906   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1585907   +END;
MPRINT(EM_DIAGRAM):   END;
1585908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585909   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1585910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585911   +
1585912   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1585913   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1585914   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1585915   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1585916   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1585917   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1585918   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1585919   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1585920   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1585921   +end;
MPRINT(EM_DIAGRAM):   end;
1585922   +else do;
MPRINT(EM_DIAGRAM):   else do;
1585923   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1585924   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1585925   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1585926   +   end;
MPRINT(EM_DIAGRAM):   end;
1585927   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1585928   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1585929   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1585930   +   end;
MPRINT(EM_DIAGRAM):   end;
1585931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1585932   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1585933   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1585934   +   end;
MPRINT(EM_DIAGRAM):   end;
1585935   +end;
MPRINT(EM_DIAGRAM):   end;
1585936   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1585937   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1585938   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1585939   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1585940   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1585941   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1585942   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1585943   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1585944   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1585945   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1585946   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1585947   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1585948   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1585949   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1585950   +END;
MPRINT(EM_DIAGRAM):   END;
1585951   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1585952   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1585953   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1585954   +END;
MPRINT(EM_DIAGRAM):   END;
1585955   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1585956   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1585957   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1585958   +END;
MPRINT(EM_DIAGRAM):   END;
1585959   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1585960   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1585961   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1585962   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1585963   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1585964   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1585965   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1585966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585967   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1585968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1585969   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1585970   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1585971   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1585972   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1585973   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1585974   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1585975   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1585976   +END;
MPRINT(EM_DIAGRAM):   END;
1585977   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1585978   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1585979   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1585980   +drop
1585981   +H11
1585982   +H12
1585983   +H13
1585984   +H14
1585985   +H15
1585986   +H16
1585987   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1585988   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1585989   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1585990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585991   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1585992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585993   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1585994   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1585995   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1585996   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1585997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1585998   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1585999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586000   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1586001   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1586002   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1586003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586004   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1586005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586006   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1586007   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1586008   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1586009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586010   +* Ensmbl31: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 7 of 7;
1586011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586013   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1586014   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1586015   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1586016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586017   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1586018   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1586019   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1586020   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1586021   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1586022   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1586023   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1586024   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1586025   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1586026   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1586027   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1586028   +LENGTH _WARN_ $4
1586029   +      F_DepVar  $ 12
1586030   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1586031   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1586032   +
1586033   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1586034   +
1586035   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1586036   +
1586037   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1586038   +
1586039   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1586040   +
1586041   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1586042   +
1586043   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1586044   +
1586045   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1586046   +
1586047   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1586048   +
1586049   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1586050   +
1586051   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1586052   +
1586053   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1586054   +
1586055   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1586056   +
1586057   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1586058   +
1586059   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1586060   +
1586061   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1586062   +
1586063   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1586064   +
1586065   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1586066   +
1586067   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1586068   +
1586069   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1586070   +
1586071   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1586072   +
1586073   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1586074   +
1586075   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1586076   +
1586077   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1586078   +
1586079   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1586080   +
1586081   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1586082   +
1586083   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1586084   +
1586085   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1586086   +
1586087   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1586088   +
1586089   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1586090   +
1586091   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1586092   +
1586093   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1586094   +
1586095   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1586096   +
1586097   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1586098   +
1586099   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1586100   +
1586101   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1586102   +
1586103   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1586104   +
1586105   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1586106   +
1586107   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1586108   +
1586109   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1586110   +
1586111   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1586112   +
1586113   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1586114   +
1586115   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1586116   +
1586117   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1586118   +
1586119   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1586120   +
1586121   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1586122   +
1586123   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1586124   +
1586125   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1586126   +
1586127   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1586128   +
1586129   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1586130   +
1586131   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1586132   +
1586133   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1586134   +
1586135   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1586136   +
1586137   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1586138   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1586139   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1586140   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1586141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586143   +end;
MPRINT(EM_DIAGRAM):   end;
1586144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586146   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1586147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586148   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1586149   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1586150   +   end;
MPRINT(EM_DIAGRAM):   end;
1586151   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1586152   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1586153   +   end;
MPRINT(EM_DIAGRAM):   end;
1586154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586155   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1586156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586158   +   end;
MPRINT(EM_DIAGRAM):   end;
1586159   +end;
MPRINT(EM_DIAGRAM):   end;
1586160   +
1586161   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1586162   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1586163   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1586164   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1586165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586167   +end;
MPRINT(EM_DIAGRAM):   end;
1586168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586169   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586170   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1586171   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586172   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1586173   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1586174   +   end;
MPRINT(EM_DIAGRAM):   end;
1586175   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1586176   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1586177   +   end;
MPRINT(EM_DIAGRAM):   end;
1586178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586179   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1586180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586182   +   end;
MPRINT(EM_DIAGRAM):   end;
1586183   +end;
MPRINT(EM_DIAGRAM):   end;
1586184   +
1586185   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1586186   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1586187   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1586188   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1586189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586191   +end;
MPRINT(EM_DIAGRAM):   end;
1586192   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586193   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586194   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1586195   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586196   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1586197   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1586198   +   end;
MPRINT(EM_DIAGRAM):   end;
1586199   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1586200   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1586201   +   end;
MPRINT(EM_DIAGRAM):   end;
1586202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586203   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1586204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586206   +   end;
MPRINT(EM_DIAGRAM):   end;
1586207   +end;
MPRINT(EM_DIAGRAM):   end;
1586208   +
1586209   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1586210   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1586211   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1586212   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1586213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586215   +end;
MPRINT(EM_DIAGRAM):   end;
1586216   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586217   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586218   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1586219   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586220   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1586221   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1586222   +   end;
MPRINT(EM_DIAGRAM):   end;
1586223   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1586224   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1586225   +   end;
MPRINT(EM_DIAGRAM):   end;
1586226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586227   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1586228   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586229   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586230   +   end;
MPRINT(EM_DIAGRAM):   end;
1586231   +end;
MPRINT(EM_DIAGRAM):   end;
1586232   +
1586233   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1586234   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1586235   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1586236   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1586237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586239   +end;
MPRINT(EM_DIAGRAM):   end;
1586240   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586241   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586242   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1586243   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586244   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1586245   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1586246   +   end;
MPRINT(EM_DIAGRAM):   end;
1586247   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1586248   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1586249   +   end;
MPRINT(EM_DIAGRAM):   end;
1586250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586251   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1586252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586254   +   end;
MPRINT(EM_DIAGRAM):   end;
1586255   +end;
MPRINT(EM_DIAGRAM):   end;
1586256   +
1586257   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1586258   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1586259   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1586260   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1586261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586263   +end;
MPRINT(EM_DIAGRAM):   end;
1586264   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586265   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586266   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1586267   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586268   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1586269   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1586270   +   end;
MPRINT(EM_DIAGRAM):   end;
1586271   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1586272   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1586273   +   end;
MPRINT(EM_DIAGRAM):   end;
1586274   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586275   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1586276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586278   +   end;
MPRINT(EM_DIAGRAM):   end;
1586279   +end;
MPRINT(EM_DIAGRAM):   end;
1586280   +
1586281   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1586282   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1586283   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1586284   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1586285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586287   +end;
MPRINT(EM_DIAGRAM):   end;
1586288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1586290   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1586291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586292   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1586293   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1586294   +   end;
MPRINT(EM_DIAGRAM):   end;
1586295   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1586296   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1586297   +   end;
MPRINT(EM_DIAGRAM):   end;
1586298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586299   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1586300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586302   +   end;
MPRINT(EM_DIAGRAM):   end;
1586303   +end;
MPRINT(EM_DIAGRAM):   end;
1586304   +
1586305   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1586306   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1586307   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1586308   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1586309   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1586310   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1586311   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1586312   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1586313   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1586314   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1586315   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1586316   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1586317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586319   +end;
MPRINT(EM_DIAGRAM):   end;
1586320   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586321   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1586322   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1586323   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586324   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1586325   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1586326   +   end;
MPRINT(EM_DIAGRAM):   end;
1586327   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1586328   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1586329   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1586330   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1586331   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1586332   +   end;
MPRINT(EM_DIAGRAM):   end;
1586333   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1586334   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1586335   +   end;
MPRINT(EM_DIAGRAM):   end;
1586336   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1586337   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1586338   +   end;
MPRINT(EM_DIAGRAM):   end;
1586339   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1586340   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1586341   +   end;
MPRINT(EM_DIAGRAM):   end;
1586342   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586343   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1586344   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1586345   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1586346   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1586347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586349   +   end;
MPRINT(EM_DIAGRAM):   end;
1586350   +end;
MPRINT(EM_DIAGRAM):   end;
1586351   +
1586352   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1586353   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1586354   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1586355   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1586356   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1586357   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1586358   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1586359   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1586360   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1586361   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1586362   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1586363   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1586364   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1586365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1586366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586367   +end;
MPRINT(EM_DIAGRAM):   end;
1586368   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586369   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1586370   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1586371   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586372   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1586373   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1586374   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1586375   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1586376   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1586377   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1586378   +         end;
MPRINT(EM_DIAGRAM):   end;
1586379   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1586380   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1586381   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1586382   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1586383   +            end;
MPRINT(EM_DIAGRAM):   end;
1586384   +         end;
MPRINT(EM_DIAGRAM):   end;
1586385   +      end;
MPRINT(EM_DIAGRAM):   end;
1586386   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1586387   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1586388   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1586389   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1586390   +         end;
MPRINT(EM_DIAGRAM):   end;
1586391   +      end;
MPRINT(EM_DIAGRAM):   end;
1586392   +   end;
MPRINT(EM_DIAGRAM):   end;
1586393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586394   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1586395   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1586396   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1586397   +      end;
MPRINT(EM_DIAGRAM):   end;
1586398   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1586399   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1586400   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1586401   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1586402   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1586403   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1586404   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1586405   +         end;
MPRINT(EM_DIAGRAM):   end;
1586406   +      end;
MPRINT(EM_DIAGRAM):   end;
1586407   +   end;
MPRINT(EM_DIAGRAM):   end;
1586408   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1586409   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1586410   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1586411   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1586412   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1586413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1586414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586415   +   end;
MPRINT(EM_DIAGRAM):   end;
1586416   +end;
MPRINT(EM_DIAGRAM):   end;
1586417   +
1586418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586419   +*** Checking missing input Interval
1586420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1586421   +
1586422   +IF NMISS(
1586423   +   AcceptedCmpTotal ,
1586424   +   Age ,
1586425   +   Frq ,
1586426   +   Income ,
1586427   +   Kidhome ,
1586428   +   Mnt ,
1586429   +   MntFishProducts ,
1586430   +   MntFruits ,
1586431   +   MntGoldProds ,
1586432   +   MntMeatProducts ,
1586433   +   MntSweetProducts ,
1586434   +   MntWines ,
1586435   +   MonthsAsCustomer ,
1586436   +   NumCatalogPurchases ,
1586437   +   NumDealsPurchases ,
1586438   +   NumDistPurchases ,
1586439   +   NumStorePurchases ,
1586440   +   NumWebPurchases ,
1586441   +   NumWebVisitsMonth ,
1586442   +   RFMstat ,
1586443   +   RMntFrq ,
1586444   +   Recency ,
1586445   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1586446   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1586447   +
1586448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1586449   +END;
MPRINT(EM_DIAGRAM):   END;
1586450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586451   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1586452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586453   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1586454   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1586455   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1586456   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1586457   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1586458   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1586459   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1586460   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1586461   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1586462   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1586463   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1586464   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1586465   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1586466   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1586467   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1586468   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1586469   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1586470   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1586471   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1586472   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1586473   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1586474   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1586475   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1586476   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1586477   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1586478   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1586479   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1586480   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1586481   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1586482   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1586483   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1586484   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1586485   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1586486   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1586487   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1586488   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1586489   +END;
MPRINT(EM_DIAGRAM):   END;
1586490   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1586491   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1586492   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1586493   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1586494   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1586495   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1586496   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1586497   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1586498   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1586499   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1586500   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1586501   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1586502   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1586503   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1586504   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1586505   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1586506   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1586507   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1586508   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1586509   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1586510   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1586511   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1586512   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1586513   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1586514   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1586515   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1586516   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1586517   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1586518   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1586519   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1586520   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1586521   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1586522   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1586523   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1586524   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1586525   +   ELSE S_NumCatalogPurchases
1586526   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1586527   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1586528   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1586529   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1586530   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1586531   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1586532   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1586533   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1586534   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1586535   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1586536   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1586537   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1586538   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1586539   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1586540   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1586541   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1586542   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1586543   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1586544   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1586545   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1586546   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1586547   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1586548   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1586549   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1586550   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1586551   +END;
MPRINT(EM_DIAGRAM):   END;
1586552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586553   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1586554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586556   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1586557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586559   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1586560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586561   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1586562   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1586563   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1586564   +        S_Income  +    -0.45967008908227 * S_Kidhome
1586565   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1586566   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1586567   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1586568   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1586569   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1586570   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1586571   +          +    -0.23353175442713 * S_NumDealsPurchases
1586572   +          +     0.18635522192442 * S_NumDistPurchases
1586573   +          +     0.37209457890956 * S_NumStorePurchases
1586574   +          +     0.25018232304823 * S_NumWebPurchases
1586575   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1586576   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1586577   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1586578   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1586579   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1586580   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1586581   +        S_Income  +     0.23329613045589 * S_Kidhome
1586582   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1586583   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1586584   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1586585   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1586586   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1586587   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1586588   +          +    -0.09699498622435 * S_NumDealsPurchases
1586589   +          +     0.40364070798795 * S_NumDistPurchases
1586590   +          +      0.2162579072164 * S_NumStorePurchases
1586591   +          +     0.26248410135079 * S_NumWebPurchases
1586592   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1586593   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1586594   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1586595   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1586596   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1586597   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1586598   +        S_Income  +     0.20139862021528 * S_Kidhome
1586599   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1586600   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1586601   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1586602   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1586603   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1586604   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1586605   +          +     0.09066191700879 * S_NumDealsPurchases
1586606   +          +    -0.05769000978222 * S_NumDistPurchases
1586607   +          +    -0.10089591692167 * S_NumStorePurchases
1586608   +          +    -0.00088654116561 * S_NumWebPurchases
1586609   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1586610   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1586611   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1586612   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1586613   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1586614   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1586615   +        S_Income  +      0.2502648333687 * S_Kidhome
1586616   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1586617   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1586618   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1586619   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1586620   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1586621   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1586622   +          +     0.83424444661619 * S_NumDealsPurchases
1586623   +          +     0.31333214543205 * S_NumDistPurchases
1586624   +          +    -0.61732647242019 * S_NumStorePurchases
1586625   +          +    -1.01955156895052 * S_NumWebPurchases
1586626   +          +     0.13017609997428 * S_NumWebVisitsMonth
1586627   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1586628   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1586629   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1586630   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1586631   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1586632   +        S_Income  +    -0.70952256145726 * S_Kidhome
1586633   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1586634   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1586635   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1586636   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1586637   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1586638   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1586639   +          +     0.63522682456102 * S_NumDealsPurchases
1586640   +          +      0.0043057429215 * S_NumDistPurchases
1586641   +          +    -0.76667751707574 * S_NumStorePurchases
1586642   +          +    -0.73436881033241 * S_NumWebPurchases
1586643   +          +     1.59331554601341 * S_NumWebVisitsMonth
1586644   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1586645   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1586646   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1586647   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1586648   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1586649   +        S_Income  +    -0.23632967504194 * S_Kidhome
1586650   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1586651   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1586652   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1586653   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1586654   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1586655   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1586656   +          +     -0.3032858959477 * S_NumDealsPurchases
1586657   +          +     0.11343979556999 * S_NumDistPurchases
1586658   +          +     0.19545021266061 * S_NumStorePurchases
1586659   +          +      0.1566777684546 * S_NumWebPurchases
1586660   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1586661   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1586662   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1586663   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1586664   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1586665   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1586666   +        S_Income  +    -0.47847362741737 * S_Kidhome
1586667   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1586668   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1586669   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1586670   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1586671   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1586672   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1586673   +          +    -0.17510289915098 * S_NumDealsPurchases
1586674   +          +     0.16952490494417 * S_NumDistPurchases
1586675   +          +     0.11152117614204 * S_NumStorePurchases
1586676   +          +     0.22594341376741 * S_NumWebPurchases
1586677   +          +     0.64523546369354 * S_NumWebVisitsMonth
1586678   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1586679   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1586680   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1586681   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1586682   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1586683   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1586684   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1586685   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1586686   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1586687   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1586688   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1586689   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1586690   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1586691   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1586692   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1586693   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1586694   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1586695   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1586696   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1586697   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1586698   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1586699   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1586700   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1586701   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1586702   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1586703   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1586704   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1586705   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1586706   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1586707   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1586708   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1586709   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1586710   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1586711   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1586712   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1586713   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1586714   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1586715   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1586716   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1586717   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1586718   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1586719   +          +     0.42319965972117 * Marital_StatusDivorced
1586720   +          +    -0.45015157317991 * Marital_StatusMarried
1586721   +          +     0.43076106925345 * Marital_StatusSingle
1586722   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1586723   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1586724   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1586725   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1586726   +          +     0.11384347873072 * Marital_StatusDivorced
1586727   +          +     0.51442453272823 * Marital_StatusMarried
1586728   +          +    -0.38966058028661 * Marital_StatusSingle
1586729   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1586730   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1586731   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1586732   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1586733   +          +    -0.05213342781535 * Marital_StatusDivorced
1586734   +          +     0.07520352092928 * Marital_StatusMarried
1586735   +          +     0.20175107471623 * Marital_StatusSingle
1586736   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1586737   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1586738   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1586739   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1586740   +          +    -0.40635592200933 * Marital_StatusDivorced
1586741   +          +     0.64772941459031 * Marital_StatusMarried
1586742   +          +    -0.36402842056603 * Marital_StatusSingle
1586743   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1586744   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1586745   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1586746   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1586747   +          +     0.87932592764844 * Marital_StatusDivorced
1586748   +          +    -0.85946473083734 * Marital_StatusMarried
1586749   +          +     0.74505733668545 * Marital_StatusSingle
1586750   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1586751   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1586752   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1586753   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1586754   +          +    -0.11861748280641 * Marital_StatusDivorced
1586755   +          +    -0.15869097739395 * Marital_StatusMarried
1586756   +          +     0.34415019828259 * Marital_StatusSingle
1586757   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1586758   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1586759   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1586760   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1586761   +          +     0.14995740697816 * Marital_StatusDivorced
1586762   +          +    -1.01788822114068 * Marital_StatusMarried
1586763   +          +     0.70532758126153 * Marital_StatusSingle
1586764   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1586765   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1586766   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1586767   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1586768   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1586769   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1586770   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1586771   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1586772   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1586773   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1586774   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1586775   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1586776   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1586777   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1586778   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1586779   +END;
MPRINT(EM_DIAGRAM):   END;
1586780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1586781   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1586782   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1586783   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1586784   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1586785   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1586786   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1586787   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1586788   +END;
MPRINT(EM_DIAGRAM):   END;
1586789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586790   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1586791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586792   +
1586793   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1586794   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1586795   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1586796   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1586797   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1586798   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1586799   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1586800   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1586801   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1586802   +end;
MPRINT(EM_DIAGRAM):   end;
1586803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1586804   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1586805   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1586806   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1586807   +   end;
MPRINT(EM_DIAGRAM):   end;
1586808   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1586809   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1586810   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1586811   +   end;
MPRINT(EM_DIAGRAM):   end;
1586812   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1586813   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1586814   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1586815   +   end;
MPRINT(EM_DIAGRAM):   end;
1586816   +end;
MPRINT(EM_DIAGRAM):   end;
1586817   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1586818   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1586819   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1586820   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1586821   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1586822   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1586823   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1586824   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1586825   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1586826   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1586827   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1586828   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1586829   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1586830   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1586831   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1586832   +END;
MPRINT(EM_DIAGRAM):   END;
1586833   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1586834   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1586835   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1586836   +END;
MPRINT(EM_DIAGRAM):   END;
1586837   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1586838   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1586839   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1586840   +END;
MPRINT(EM_DIAGRAM):   END;
1586841   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1586842   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1586843   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1586844   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1586845   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1586846   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1586847   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1586848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586849   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1586850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1586851   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1586852   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1586853   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1586854   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1586855   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1586856   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1586857   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1586858   +END;
MPRINT(EM_DIAGRAM):   END;
1586859   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1586860   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1586861   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1586862   +drop
1586863   +H11
1586864   +H12
1586865   +H13
1586866   +H14
1586867   +H15
1586868   +H16
1586869   +H17
1586870   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1586871   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1586872   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1586873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586874   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1586875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586876   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1586877   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1586878   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1586879   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1586880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586881   +* Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
1586882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586883   +length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
1586884   +drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
1586885   +Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
1586886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586887   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1586888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586889   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1586890   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1586891   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1586892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586893   +* Ensmbl31: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Voting to produce predicted target;
1586894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586895   +array Ensmbl31_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl31_post{2} _temporary_;
1586896   +array Ensmbl31_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl31_count{2} _temporary_;
1586897   +array Ensmbl31_level{2} $32 _temporary_ (
1586898   +"1"
1586899   +"0"
1586900   +);
MPRINT(EM_DIAGRAM):   array Ensmbl31_level{2} $32 _temporary_ ( "1" "0" );
1586901   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1586902   +Ensmbl31_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{i} = 0;
1586903   +Ensmbl31_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{i} = 0;
1586904   +end;
MPRINT(EM_DIAGRAM):   end;
1586905   +if Reg5_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl31_level{1} then do;
1586906   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586907   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg5_P_DepVar1;
1586908   +end;
MPRINT(EM_DIAGRAM):   end;
1586909   +if Reg_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl31_level{1} then do;
1586910   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586911   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg_P_DepVar1;
1586912   +end;
MPRINT(EM_DIAGRAM):   end;
1586913   +if Neural4_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl31_level{1} then do;
1586914   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586915   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural4_P_DepVar1;
1586916   +end;
MPRINT(EM_DIAGRAM):   end;
1586917   +if Neural2_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl31_level{1} then do;
1586918   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586919   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural2_P_DepVar1;
1586920   +end;
MPRINT(EM_DIAGRAM):   end;
1586921   +if Neural3_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl31_level{1} then do;
1586922   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586923   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural3_P_DepVar1;
1586924   +end;
MPRINT(EM_DIAGRAM):   end;
1586925   +if Neural9_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl31_level{1} then do;
1586926   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586927   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural9_P_DepVar1;
1586928   +end;
MPRINT(EM_DIAGRAM):   end;
1586929   +if Neural10_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl31_level{1} then do;
1586930   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1586931   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural10_P_DepVar1;
1586932   +end;
MPRINT(EM_DIAGRAM):   end;
1586933   +if Reg5_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl31_level{2} then do;
1586934   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586935   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg5_P_DepVar0;
1586936   +end;
MPRINT(EM_DIAGRAM):   end;
1586937   +if Reg_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl31_level{2} then do;
1586938   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586939   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg_P_DepVar0;
1586940   +end;
MPRINT(EM_DIAGRAM):   end;
1586941   +if Neural4_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl31_level{2} then do;
1586942   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586943   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural4_P_DepVar0;
1586944   +end;
MPRINT(EM_DIAGRAM):   end;
1586945   +if Neural2_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl31_level{2} then do;
1586946   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586947   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural2_P_DepVar0;
1586948   +end;
MPRINT(EM_DIAGRAM):   end;
1586949   +if Neural3_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl31_level{2} then do;
1586950   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586951   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural3_P_DepVar0;
1586952   +end;
MPRINT(EM_DIAGRAM):   end;
1586953   +if Neural9_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl31_level{2} then do;
1586954   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586955   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural9_P_DepVar0;
1586956   +end;
MPRINT(EM_DIAGRAM):   end;
1586957   +if Neural10_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl31_level{2} then do;
1586958   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1586959   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural10_P_DepVar0;
1586960   +end;
MPRINT(EM_DIAGRAM):   end;
1586961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586962   +* Ensmbl31: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Determine Into Variable;
1586963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586964   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1586965   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1586966   +vote_count = max(
1586967   +Ensmbl31_count{1} ,
1586968   +Ensmbl31_count{2}
1586969   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl31_count{1} , Ensmbl31_count{2} );
1586970   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1586971   +if Ensmbl31_count{i}=vote_count and Ensmbl31_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl31_count{i}=vote_count and Ensmbl31_post{i}>vote_post then do;
1586972   +I_DepVar = Ensmbl31_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl31_level{i};
1586973   +vote_post = Ensmbl31_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl31_count{i};
1586974   +end;
MPRINT(EM_DIAGRAM):   end;
1586975   +end;
MPRINT(EM_DIAGRAM):   end;
1586976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586977   +* Ensmbl31: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Compute posterior vars using models predicting the chosen 
level;
1586978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1586979   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1586980   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1586981   +if I_DepVar = Reg5_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg5_I_DepVar then do;
1586982   +P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
1586983   +P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
1586984   +end;
MPRINT(EM_DIAGRAM):   end;
1586985   +if I_DepVar = Reg_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg_I_DepVar then do;
1586986   +P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
1586987   +P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
1586988   +end;
MPRINT(EM_DIAGRAM):   end;
1586989   +if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
1586990   +P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
1586991   +P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
1586992   +end;
MPRINT(EM_DIAGRAM):   end;
1586993   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1586994   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1586995   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1586996   +end;
MPRINT(EM_DIAGRAM):   end;
1586997   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1586998   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1586999   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1587000   +end;
MPRINT(EM_DIAGRAM):   end;
1587001   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1587002   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1587003   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1587004   +end;
MPRINT(EM_DIAGRAM):   end;
1587005   +if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
1587006   +P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
1587007   +P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
1587008   +end;
MPRINT(EM_DIAGRAM):   end;
1587009   +* Ensmbl31: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Averaging posterior;
1587010   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1587011   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1587012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587013   +* Ensmbl31: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Producing Unformatted variable;
1587014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587015   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1587016   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1587017   +else
1587018   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1587019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587020   +* Ensmbl31: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Computing _WARN_ Variable;
1587021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587022   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1587023   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1587024   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1587025   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1587026   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1587027   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1587028   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1587029   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1587030   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1587031   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1587032   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1587033   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1587034   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1587035   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1587036   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1587037   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1587038   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1587039   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1587040   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1587041   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1587042   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1587043   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1587044   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1587045   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1587046   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1587047   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1587048   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1587049   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1587049  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1587050   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1587050  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1587051   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1587051  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1587052   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1587052  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1587053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587054   +* Ensmbl31: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Computing Residual Vars;
1587055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587056   +if
1587057   +F_DepVar NE '1'
1587058   +AND F_DepVar NE '0'
1587059   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1587060   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1587061   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1587062   +end;
MPRINT(EM_DIAGRAM):   end;
1587063   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587064   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1587065   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1587066   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1587067   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1587068   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1587069   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1587070   +END;
MPRINT(EM_DIAGRAM):   END;
1587071   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1587072    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL31_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.29 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1587073    quit;
1587074    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1587075    filename emflow
1587075  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587076    *------------------------------------------------------------*;
1587077    * Ensmbl31: Scoring REG5_VALIDATE data;
1587078    *------------------------------------------------------------*;
1587079    data EMWS8.Ensmbl31_VALIDATE
1587080    / view=EMWS8.Ensmbl31_VALIDATE
1587081    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_VALIDATE / view=EMWS8.Ensmbl31_VALIDATE ;
1587082    set EMWS8.Reg5_VALIDATE
1587083    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1587084    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\EMFLOWSCORE.sas.
1587085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587086   +* Ensmbl31: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Combine model for DepVar;
1587087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587088   +* Ensmbl31: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 1 of 7;
1587089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587091   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1587092   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1587093   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1587094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587096   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1587097   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1587098   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1587099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587101   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1587102   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1587103   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1587104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587106   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1587107   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1587108   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1587109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587110   +
1587111   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1587112   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1587112  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1587113   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1587114   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1587115   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1587116   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1587117   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1587118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587119   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1587120   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1587121   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1587122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587124   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1587125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587126   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1587127   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1587128   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1587129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587130   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1587131   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1587132   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1587133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587135   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1587136   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1587137   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1587138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587140   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1587141   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1587142   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1587143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587144   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587145   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1587146   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587147   +
1587148   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1587149   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1587150   +
1587151   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1587152   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1587153   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1587154   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1587155   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1587156   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1587157   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1587158   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1587159   +
1587160   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1587161   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1587162   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1587163   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1587164   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1587165   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587166   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1587167   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1587168   +end;
MPRINT(EM_DIAGRAM):   end;
1587169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587170   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1587171   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1587172   +   end;
MPRINT(EM_DIAGRAM):   end;
1587173   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1587174   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1587175   +   end;
MPRINT(EM_DIAGRAM):   end;
1587176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587177   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1587178   +   end;
MPRINT(EM_DIAGRAM):   end;
1587179   +end;
MPRINT(EM_DIAGRAM):   end;
1587180   +
1587181   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1587182   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1587183   +
1587184   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1587185   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1587186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587188   +end;
MPRINT(EM_DIAGRAM):   end;
1587189   +
1587190   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1587191   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1587192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587194   +end;
MPRINT(EM_DIAGRAM):   end;
1587195   +
1587196   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1587197   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1587198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587200   +end;
MPRINT(EM_DIAGRAM):   end;
1587201   +
1587202   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1587203   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1587204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587206   +end;
MPRINT(EM_DIAGRAM):   end;
1587207   +
1587208   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1587209   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1587210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587212   +end;
MPRINT(EM_DIAGRAM):   end;
1587213   +
1587214   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1587215   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1587216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587218   +end;
MPRINT(EM_DIAGRAM):   end;
1587219   +
1587220   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1587221   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1587222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587224   +end;
MPRINT(EM_DIAGRAM):   end;
1587225   +
1587226   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1587227   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1587228   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587229   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587230   +end;
MPRINT(EM_DIAGRAM):   end;
1587231   +
1587232   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1587233   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1587234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587236   +end;
MPRINT(EM_DIAGRAM):   end;
1587237   +
1587238   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1587239   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1587240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587242   +end;
MPRINT(EM_DIAGRAM):   end;
1587243   +
1587244   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1587245   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1587246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587248   +end;
MPRINT(EM_DIAGRAM):   end;
1587249   +
1587250   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1587251   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1587252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587254   +end;
MPRINT(EM_DIAGRAM):   end;
1587255   +
1587256   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1587257   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1587258   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1587259   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1587260   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1587261   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1587262   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1587263   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1587264   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1587265   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1587266   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1587267   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1587268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587270   +end;
MPRINT(EM_DIAGRAM):   end;
1587271   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587272   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1587273   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1587274   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587275   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1587276   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1587277   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1587278   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1587279   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1587280   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587281   +         end;
MPRINT(EM_DIAGRAM):   end;
1587282   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1587283   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1587284   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1587285   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587286   +            end;
MPRINT(EM_DIAGRAM):   end;
1587287   +         end;
MPRINT(EM_DIAGRAM):   end;
1587288   +      end;
MPRINT(EM_DIAGRAM):   end;
1587289   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1587290   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1587291   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1587292   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587293   +         end;
MPRINT(EM_DIAGRAM):   end;
1587294   +      end;
MPRINT(EM_DIAGRAM):   end;
1587295   +   end;
MPRINT(EM_DIAGRAM):   end;
1587296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587297   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1587298   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1587299   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587300   +      end;
MPRINT(EM_DIAGRAM):   end;
1587301   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1587302   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1587303   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1587304   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1587305   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1587306   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1587307   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587308   +         end;
MPRINT(EM_DIAGRAM):   end;
1587309   +      end;
MPRINT(EM_DIAGRAM):   end;
1587310   +   end;
MPRINT(EM_DIAGRAM):   end;
1587311   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1587312   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1587313   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1587314   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1587315   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1587316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1587317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587318   +   end;
MPRINT(EM_DIAGRAM):   end;
1587319   +end;
MPRINT(EM_DIAGRAM):   end;
1587320   +
1587321   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1587322   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1587323   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1587324   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1587325   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1587326   +end;
MPRINT(EM_DIAGRAM):   end;
1587327   +
1587328   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1587329   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1587330   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1587331   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1587332   +
1587333   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1587334   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1587335   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1587336   +
1587337   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1587338   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1587339   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1587340   +
1587341   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1587342   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1587343   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1587344   +
1587345   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1587346   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1587347   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1587348   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1587349   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1587350   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1587351   +
1587352   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1587353   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1587354   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1587355   +
1587356   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1587357   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1587358   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1587359   +
1587360   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1587361   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1587362   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1587363   +
1587364   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1587365   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1587366   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1587367   +
1587368   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1587369   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1587370   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1587371   +
1587372   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1587373   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1587374   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1587375   +
1587376   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1587377   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1587378   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1587379   +
1587380   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1587381   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1587382   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1587383   +
1587384   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1587385   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1587386   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1587387   +
1587388   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1587389   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1587390   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1587391   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1587392   +
1587393   +REG5DR1:
1587394   +
1587395   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1587396   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1587397   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1587398   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1587399   +end;
MPRINT(EM_DIAGRAM):   end;
1587400   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587401   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1587402   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1587403   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1587404   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1587405   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1587406   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1587407   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1587408   +   end;
MPRINT(EM_DIAGRAM):   end;
1587409   +end;
MPRINT(EM_DIAGRAM):   end;
1587410   +
1587411   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1587412   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1587413   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1587414   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1587415   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1587416   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1587417   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1587418   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1587419   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1587420   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1587421   +end;
MPRINT(EM_DIAGRAM):   end;
1587422   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1587423   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1587424   +
1587425   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587426   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1587427   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587428   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1587429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587430   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1587431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587432   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1587433   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1587434   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1587435   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1587436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587437   +* Renaming Into variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg5;
1587438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587439   +length Reg5_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg5_I_DepVar $32;
1587440   +drop Reg5_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg5_I_DepVar;
1587441   +Reg5_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg5_I_DepVar = I_DepVar;
1587442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587443   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1587444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587445   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1587446   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1587447   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1587448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587449   +* Ensmbl31: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 2 of 7;
1587450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587452   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1587453   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1587454   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1587455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587456   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587457   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1587458   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587459   +
1587460   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1587461   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1587462   +
1587463   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1587464   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1587465   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1587466   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1587467   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1587468   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1587469   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1587470   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1587471   +
1587472   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1587473   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1587474   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1587475   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1587476   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1587477   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587478   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1587479   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1587480   +end;
MPRINT(EM_DIAGRAM):   end;
1587481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587482   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1587483   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1587484   +   end;
MPRINT(EM_DIAGRAM):   end;
1587485   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1587486   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1587487   +   end;
MPRINT(EM_DIAGRAM):   end;
1587488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587489   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1587490   +   end;
MPRINT(EM_DIAGRAM):   end;
1587491   +end;
MPRINT(EM_DIAGRAM):   end;
1587492   +
1587493   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1587494   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1587495   +
1587496   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1587497   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1587498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587500   +end;
MPRINT(EM_DIAGRAM):   end;
1587501   +
1587502   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1587503   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1587504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587506   +end;
MPRINT(EM_DIAGRAM):   end;
1587507   +
1587508   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1587509   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1587510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587512   +end;
MPRINT(EM_DIAGRAM):   end;
1587513   +
1587514   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1587515   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1587516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587518   +end;
MPRINT(EM_DIAGRAM):   end;
1587519   +
1587520   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1587521   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1587522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587524   +end;
MPRINT(EM_DIAGRAM):   end;
1587525   +
1587526   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1587527   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1587528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587530   +end;
MPRINT(EM_DIAGRAM):   end;
1587531   +
1587532   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1587533   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1587534   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587535   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587536   +end;
MPRINT(EM_DIAGRAM):   end;
1587537   +
1587538   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1587539   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1587540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587542   +end;
MPRINT(EM_DIAGRAM):   end;
1587543   +
1587544   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1587545   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1587546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587548   +end;
MPRINT(EM_DIAGRAM):   end;
1587549   +
1587550   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1587551   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1587552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587554   +end;
MPRINT(EM_DIAGRAM):   end;
1587555   +
1587556   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1587557   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1587558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587560   +end;
MPRINT(EM_DIAGRAM):   end;
1587561   +
1587562   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1587563   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1587564   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587565   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587566   +end;
MPRINT(EM_DIAGRAM):   end;
1587567   +
1587568   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1587569   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1587570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587572   +end;
MPRINT(EM_DIAGRAM):   end;
1587573   +
1587574   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1587575   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1587576   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1587577   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1587578   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1587579   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1587580   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1587581   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1587582   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1587583   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1587584   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1587585   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1587586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587588   +end;
MPRINT(EM_DIAGRAM):   end;
1587589   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587590   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1587591   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1587592   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587593   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1587594   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1587595   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1587596   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1587597   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1587598   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587599   +         end;
MPRINT(EM_DIAGRAM):   end;
1587600   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1587601   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1587602   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1587603   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587604   +            end;
MPRINT(EM_DIAGRAM):   end;
1587605   +         end;
MPRINT(EM_DIAGRAM):   end;
1587606   +      end;
MPRINT(EM_DIAGRAM):   end;
1587607   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1587608   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1587609   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1587610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587611   +         end;
MPRINT(EM_DIAGRAM):   end;
1587612   +      end;
MPRINT(EM_DIAGRAM):   end;
1587613   +   end;
MPRINT(EM_DIAGRAM):   end;
1587614   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587615   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1587616   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1587617   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587618   +      end;
MPRINT(EM_DIAGRAM):   end;
1587619   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1587620   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1587621   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1587622   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1587623   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1587624   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1587625   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1587626   +         end;
MPRINT(EM_DIAGRAM):   end;
1587627   +      end;
MPRINT(EM_DIAGRAM):   end;
1587628   +   end;
MPRINT(EM_DIAGRAM):   end;
1587629   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1587630   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1587631   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1587632   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1587633   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1587634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1587635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587636   +   end;
MPRINT(EM_DIAGRAM):   end;
1587637   +end;
MPRINT(EM_DIAGRAM):   end;
1587638   +
1587639   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1587640   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1587641   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1587642   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1587643   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1587644   +end;
MPRINT(EM_DIAGRAM):   end;
1587645   +
1587646   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1587647   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1587648   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1587649   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1587650   +
1587651   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1587652   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1587653   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1587654   +
1587655   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1587656   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1587657   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1587658   +
1587659   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1587660   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1587661   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1587662   +
1587663   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1587664   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1587665   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1587666   +
1587667   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1587668   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1587669   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1587670   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1587671   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1587672   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1587673   +
1587674   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1587675   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1587676   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1587677   +
1587678   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1587679   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1587680   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1587681   +
1587682   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1587683   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1587684   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1587685   +
1587686   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1587687   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1587688   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1587689   +
1587690   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1587691   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1587692   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1587693   +
1587694   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1587695   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1587696   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1587697   +
1587698   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1587699   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1587700   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1587701   +
1587702   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1587703   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1587704   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1587705   +
1587706   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1587707   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1587708   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1587709   +
1587710   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1587711   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1587712   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1587713   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1587714   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1587715   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1587716   +end;
MPRINT(EM_DIAGRAM):   end;
1587717   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1587718   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1587719   +
1587720   +REGDR1:
1587721   +
1587722   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1587723   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1587724   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1587725   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1587726   +end;
MPRINT(EM_DIAGRAM):   end;
1587727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587728   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1587729   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1587730   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1587731   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1587732   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1587733   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1587734   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1587735   +   end;
MPRINT(EM_DIAGRAM):   end;
1587736   +end;
MPRINT(EM_DIAGRAM):   end;
1587737   +
1587738   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1587739   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1587740   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1587741   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1587742   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1587743   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1587744   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1587745   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1587746   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1587747   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1587748   +end;
MPRINT(EM_DIAGRAM):   end;
1587749   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1587750   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1587751   +
1587752   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587753   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1587754   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1587755   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1587756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587757   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1587758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587759   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1587760   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1587761   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1587762   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1587763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587764   +* Renaming Into variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg;
1587765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587766   +length Reg_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg_I_DepVar $32;
1587767   +drop Reg_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg_I_DepVar;
1587768   +Reg_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg_I_DepVar = I_DepVar;
1587769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587770   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1587771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587772   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1587773   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1587774   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1587775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587776   +* Ensmbl31: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 3 of 7;
1587777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587778   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587779   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1587780   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1587781   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1587782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1587783   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1587784   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1587785   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1587786   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1587787   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1587788   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1587789   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1587790   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1587791   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1587792   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1587793   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1587794   +LENGTH _WARN_ $4
1587795   +      F_DepVar  $ 12
1587796   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1587797   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1587798   +
1587799   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1587800   +
1587801   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1587802   +
1587803   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1587804   +
1587805   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1587806   +
1587807   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1587808   +
1587809   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1587810   +
1587811   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1587812   +
1587813   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1587814   +
1587815   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1587816   +
1587817   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1587818   +
1587819   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1587820   +
1587821   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1587822   +
1587823   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1587824   +
1587825   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1587826   +
1587827   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1587828   +
1587829   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1587830   +
1587831   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1587832   +
1587833   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1587834   +
1587835   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1587836   +
1587837   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1587838   +
1587839   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1587840   +
1587841   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1587842   +
1587843   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1587844   +
1587845   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1587846   +
1587847   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1587848   +
1587849   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1587850   +
1587851   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1587852   +
1587853   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1587854   +
1587855   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1587856   +
1587857   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1587858   +
1587859   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1587860   +
1587861   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1587862   +
1587863   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1587864   +
1587865   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1587866   +
1587867   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1587868   +
1587869   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1587870   +
1587871   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1587872   +
1587873   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1587874   +
1587875   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1587876   +
1587877   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1587878   +
1587879   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1587880   +
1587881   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1587882   +
1587883   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1587884   +
1587885   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1587886   +
1587887   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1587888   +
1587889   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1587890   +
1587891   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1587892   +
1587893   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1587894   +
1587895   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1587896   +
1587897   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1587898   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1587899   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1587900   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1587901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587903   +end;
MPRINT(EM_DIAGRAM):   end;
1587904   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1587906   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1587907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587908   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1587909   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1587910   +   end;
MPRINT(EM_DIAGRAM):   end;
1587911   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1587912   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1587913   +   end;
MPRINT(EM_DIAGRAM):   end;
1587914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587915   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1587916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1587917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587918   +   end;
MPRINT(EM_DIAGRAM):   end;
1587919   +end;
MPRINT(EM_DIAGRAM):   end;
1587920   +
1587921   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1587922   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1587923   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1587924   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1587925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587927   +end;
MPRINT(EM_DIAGRAM):   end;
1587928   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1587930   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1587931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587932   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1587933   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1587934   +   end;
MPRINT(EM_DIAGRAM):   end;
1587935   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1587936   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1587937   +   end;
MPRINT(EM_DIAGRAM):   end;
1587938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587939   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1587940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1587941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587942   +   end;
MPRINT(EM_DIAGRAM):   end;
1587943   +end;
MPRINT(EM_DIAGRAM):   end;
1587944   +
1587945   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1587946   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1587947   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1587948   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1587949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587951   +end;
MPRINT(EM_DIAGRAM):   end;
1587952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1587954   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1587955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1587957   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1587958   +   end;
MPRINT(EM_DIAGRAM):   end;
1587959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1587960   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1587961   +   end;
MPRINT(EM_DIAGRAM):   end;
1587962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587963   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1587964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1587965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587966   +   end;
MPRINT(EM_DIAGRAM):   end;
1587967   +end;
MPRINT(EM_DIAGRAM):   end;
1587968   +
1587969   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1587970   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1587971   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1587972   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1587973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587975   +end;
MPRINT(EM_DIAGRAM):   end;
1587976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1587977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1587978   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1587979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1587980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1587981   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1587982   +   end;
MPRINT(EM_DIAGRAM):   end;
1587983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1587984   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1587985   +   end;
MPRINT(EM_DIAGRAM):   end;
1587986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1587987   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1587988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1587989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587990   +   end;
MPRINT(EM_DIAGRAM):   end;
1587991   +end;
MPRINT(EM_DIAGRAM):   end;
1587992   +
1587993   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1587994   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1587995   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1587996   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1587997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1587998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1587999   +end;
MPRINT(EM_DIAGRAM):   end;
1588000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588002   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1588003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588005   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1588006   +   end;
MPRINT(EM_DIAGRAM):   end;
1588007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588008   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1588009   +   end;
MPRINT(EM_DIAGRAM):   end;
1588010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588011   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1588012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588014   +   end;
MPRINT(EM_DIAGRAM):   end;
1588015   +end;
MPRINT(EM_DIAGRAM):   end;
1588016   +
1588017   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1588018   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1588019   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1588020   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1588021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588023   +end;
MPRINT(EM_DIAGRAM):   end;
1588024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588026   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1588027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588029   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1588030   +   end;
MPRINT(EM_DIAGRAM):   end;
1588031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588032   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1588033   +   end;
MPRINT(EM_DIAGRAM):   end;
1588034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588035   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1588036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588038   +   end;
MPRINT(EM_DIAGRAM):   end;
1588039   +end;
MPRINT(EM_DIAGRAM):   end;
1588040   +
1588041   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1588042   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1588043   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1588044   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1588045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588047   +end;
MPRINT(EM_DIAGRAM):   end;
1588048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588050   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1588051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588052   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1588053   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1588054   +   end;
MPRINT(EM_DIAGRAM):   end;
1588055   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1588056   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1588057   +   end;
MPRINT(EM_DIAGRAM):   end;
1588058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588059   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1588060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588062   +   end;
MPRINT(EM_DIAGRAM):   end;
1588063   +end;
MPRINT(EM_DIAGRAM):   end;
1588064   +
1588065   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1588066   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1588067   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1588068   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1588069   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1588070   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1588071   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1588072   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1588073   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1588074   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1588075   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1588076   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1588077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588079   +end;
MPRINT(EM_DIAGRAM):   end;
1588080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588081   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1588082   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1588083   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588084   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1588085   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1588086   +   end;
MPRINT(EM_DIAGRAM):   end;
1588087   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1588088   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1588089   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1588090   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1588091   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1588092   +   end;
MPRINT(EM_DIAGRAM):   end;
1588093   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1588094   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1588095   +   end;
MPRINT(EM_DIAGRAM):   end;
1588096   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1588097   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1588098   +   end;
MPRINT(EM_DIAGRAM):   end;
1588099   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1588100   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1588101   +   end;
MPRINT(EM_DIAGRAM):   end;
1588102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588103   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1588104   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1588105   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1588106   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1588107   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588108   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588109   +   end;
MPRINT(EM_DIAGRAM):   end;
1588110   +end;
MPRINT(EM_DIAGRAM):   end;
1588111   +
1588112   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1588113   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1588114   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1588115   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1588116   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1588117   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1588118   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1588119   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1588120   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1588121   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1588122   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1588123   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1588124   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1588125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588127   +end;
MPRINT(EM_DIAGRAM):   end;
1588128   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588129   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1588130   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1588131   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588132   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1588133   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1588134   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1588135   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1588136   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1588137   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588138   +         end;
MPRINT(EM_DIAGRAM):   end;
1588139   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1588140   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1588141   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1588142   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588143   +            end;
MPRINT(EM_DIAGRAM):   end;
1588144   +         end;
MPRINT(EM_DIAGRAM):   end;
1588145   +      end;
MPRINT(EM_DIAGRAM):   end;
1588146   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1588147   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1588148   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1588149   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588150   +         end;
MPRINT(EM_DIAGRAM):   end;
1588151   +      end;
MPRINT(EM_DIAGRAM):   end;
1588152   +   end;
MPRINT(EM_DIAGRAM):   end;
1588153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588154   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1588155   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1588156   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588157   +      end;
MPRINT(EM_DIAGRAM):   end;
1588158   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1588159   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1588160   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1588161   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1588162   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1588163   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1588164   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588165   +         end;
MPRINT(EM_DIAGRAM):   end;
1588166   +      end;
MPRINT(EM_DIAGRAM):   end;
1588167   +   end;
MPRINT(EM_DIAGRAM):   end;
1588168   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1588169   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1588170   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1588171   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1588172   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1588173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588175   +   end;
MPRINT(EM_DIAGRAM):   end;
1588176   +end;
MPRINT(EM_DIAGRAM):   end;
1588177   +
1588178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588179   +*** Checking missing input Interval
1588180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1588181   +
1588182   +IF NMISS(
1588183   +   AcceptedCmpTotal ,
1588184   +   Age ,
1588185   +   Frq ,
1588186   +   Income ,
1588187   +   Kidhome ,
1588188   +   Mnt ,
1588189   +   MntFishProducts ,
1588190   +   MntFruits ,
1588191   +   MntGoldProds ,
1588192   +   MntMeatProducts ,
1588193   +   MntSweetProducts ,
1588194   +   MntWines ,
1588195   +   MonthsAsCustomer ,
1588196   +   NumCatalogPurchases ,
1588197   +   NumDealsPurchases ,
1588198   +   NumDistPurchases ,
1588199   +   NumStorePurchases ,
1588200   +   NumWebPurchases ,
1588201   +   NumWebVisitsMonth ,
1588202   +   RFMstat ,
1588203   +   RMntFrq ,
1588204   +   Recency ,
1588205   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1588206   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1588207   +
1588208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588209   +END;
MPRINT(EM_DIAGRAM):   END;
1588210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588211   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1588212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588213   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1588214   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1588215   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1588216   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1588217   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1588218   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1588219   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1588220   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1588221   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1588222   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1588223   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1588224   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1588225   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1588226   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1588227   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1588228   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1588229   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1588230   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1588231   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1588232   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1588233   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1588234   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1588235   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1588236   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1588237   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1588238   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1588239   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1588240   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1588241   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1588242   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1588243   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1588244   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1588245   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1588246   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1588247   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1588248   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1588249   +END;
MPRINT(EM_DIAGRAM):   END;
1588250   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1588251   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1588252   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1588253   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1588254   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1588255   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1588256   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1588257   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1588258   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1588259   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1588260   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1588261   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1588262   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1588263   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1588264   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1588265   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1588266   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1588267   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1588268   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1588269   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1588270   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1588271   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1588272   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1588273   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1588274   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1588275   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1588276   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1588277   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1588278   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1588279   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1588280   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1588281   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1588282   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1588283   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1588284   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1588285   +   ELSE S_NumCatalogPurchases
1588286   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1588287   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1588288   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1588289   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1588290   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1588291   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1588292   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1588293   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1588294   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1588295   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1588296   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1588297   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1588298   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1588299   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1588300   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1588301   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1588302   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1588303   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1588304   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1588305   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1588306   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1588307   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1588308   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1588309   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1588310   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1588311   +END;
MPRINT(EM_DIAGRAM):   END;
1588312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588313   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1588314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588316   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1588317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588319   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1588320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588321   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1588322   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1588323   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1588324   +        S_Income  +    -0.23050240180524 * S_Kidhome
1588325   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1588326   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1588327   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1588328   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1588329   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1588330   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1588331   +          +    -1.32257303635072 * S_NumDealsPurchases
1588332   +          +    -0.54480870554989 * S_NumDistPurchases
1588333   +          +     1.24793709956495 * S_NumStorePurchases
1588334   +          +      1.7974198103915 * S_NumWebPurchases
1588335   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1588336   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1588337   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1588338   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1588339   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1588340   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1588341   +        S_Income  +    -0.78793784980656 * S_Kidhome
1588342   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1588343   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1588344   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1588345   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1588346   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1588347   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1588348   +          +     0.70535680060775 * S_NumDealsPurchases
1588349   +          +    -0.15561838359391 * S_NumDistPurchases
1588350   +          +    -0.86545647977011 * S_NumStorePurchases
1588351   +          +    -0.78435825863867 * S_NumWebPurchases
1588352   +          +     1.76113949975149 * S_NumWebVisitsMonth
1588353   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1588354   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1588355   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1588356   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1588357   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1588358   +        S_Income  +    -0.59349067735666 * S_Kidhome
1588359   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1588360   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1588361   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1588362   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1588363   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1588364   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1588365   +          +     0.21510592309387 * S_NumDealsPurchases
1588366   +          +    -0.05401897321491 * S_NumDistPurchases
1588367   +          +     0.14945584086188 * S_NumStorePurchases
1588368   +          +    -0.09993898051701 * S_NumWebPurchases
1588369   +          +     1.40189771606069 * S_NumWebVisitsMonth
1588370   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1588371   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1588372   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1588373   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1588374   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1588375   +        S_Income  +    -0.61129984920194 * S_Kidhome
1588376   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1588377   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1588378   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1588379   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1588380   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1588381   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1588382   +          +     0.81353732439473 * S_NumDealsPurchases
1588383   +          +     0.32933472931941 * S_NumDistPurchases
1588384   +          +    -1.28188012143595 * S_NumStorePurchases
1588385   +          +    -0.81914782214243 * S_NumWebPurchases
1588386   +          +     1.20332282902342 * S_NumWebVisitsMonth
1588387   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1588388   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1588389   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1588390   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1588391   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1588392   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1588393   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1588394   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1588395   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1588396   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1588397   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1588398   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1588399   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1588400   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1588401   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1588402   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1588403   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1588404   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1588405   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1588406   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1588407   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1588408   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1588409   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1588410   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1588411   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1588412   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1588413   +          +     0.38068062371853 * Marital_StatusDivorced
1588414   +          +    -0.09269938603625 * Marital_StatusMarried
1588415   +          +    -0.17904543311137 * Marital_StatusSingle
1588416   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1588417   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1588418   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1588419   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1588420   +          +     0.46191454760643 * Marital_StatusDivorced
1588421   +          +    -1.36520525874032 * Marital_StatusMarried
1588422   +          +     1.36669525533789 * Marital_StatusSingle
1588423   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1588424   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1588425   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1588426   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1588427   +          +     0.18693560360309 * Marital_StatusDivorced
1588428   +          +    -0.56475988428608 * Marital_StatusMarried
1588429   +          +     0.79263891340625 * Marital_StatusSingle
1588430   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1588431   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1588432   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1588433   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1588434   +          +     1.14025450669394 * Marital_StatusDivorced
1588435   +          +     0.78122963298728 * Marital_StatusMarried
1588436   +          +    -1.37860768059913 * Marital_StatusSingle
1588437   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1588438   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1588439   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1588440   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1588441   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1588442   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1588443   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1588444   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1588445   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1588446   +END;
MPRINT(EM_DIAGRAM):   END;
1588447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1588448   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1588449   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1588450   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1588451   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1588452   +END;
MPRINT(EM_DIAGRAM):   END;
1588453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588454   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1588455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588456   +
1588457   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1588458   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1588459   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1588460   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1588461   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1588462   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588463   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1588464   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1588465   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1588466   +end;
MPRINT(EM_DIAGRAM):   end;
1588467   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588468   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1588469   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1588470   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1588471   +   end;
MPRINT(EM_DIAGRAM):   end;
1588472   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1588473   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1588474   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1588475   +   end;
MPRINT(EM_DIAGRAM):   end;
1588476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588477   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1588478   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1588479   +   end;
MPRINT(EM_DIAGRAM):   end;
1588480   +end;
MPRINT(EM_DIAGRAM):   end;
1588481   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1588482   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1588483   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1588484   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1588485   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1588486   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1588487   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1588488   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1588489   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1588490   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1588491   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1588492   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1588493   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1588494   +END;
MPRINT(EM_DIAGRAM):   END;
1588495   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1588496   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1588497   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1588498   +END;
MPRINT(EM_DIAGRAM):   END;
1588499   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1588500   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1588501   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1588502   +END;
MPRINT(EM_DIAGRAM):   END;
1588503   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1588504   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1588505   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1588506   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1588507   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1588508   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1588509   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1588510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588511   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1588512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588513   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1588514   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1588515   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1588516   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1588517   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1588518   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1588519   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1588520   +END;
MPRINT(EM_DIAGRAM):   END;
1588521   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1588522   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1588523   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1588524   +drop
1588525   +H11
1588526   +H12
1588527   +H13
1588528   +H14
1588529   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1588530   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1588531   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1588532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588533   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1588534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588535   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1588536   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1588537   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1588538   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1588539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588540   +* Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
1588541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588542   +length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
1588543   +drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
1588544   +Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
1588545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588546   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1588547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588548   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1588549   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1588550   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1588551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588552   +* Ensmbl31: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 4 of 7;
1588553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588555   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1588556   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1588557   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1588558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1588559   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1588560   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1588561   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1588562   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1588563   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1588564   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1588565   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1588566   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1588567   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1588568   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1588569   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1588570   +LENGTH _WARN_ $4
1588571   +      F_DepVar  $ 12
1588572   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1588573   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1588574   +
1588575   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1588576   +
1588577   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1588578   +
1588579   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1588580   +
1588581   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1588582   +
1588583   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1588584   +
1588585   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1588586   +
1588587   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1588588   +
1588589   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1588590   +
1588591   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1588592   +
1588593   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1588594   +
1588595   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1588596   +
1588597   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1588598   +
1588599   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1588600   +
1588601   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1588602   +
1588603   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1588604   +
1588605   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1588606   +
1588607   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1588608   +
1588609   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1588610   +
1588611   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1588612   +
1588613   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1588614   +
1588615   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1588616   +
1588617   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1588618   +
1588619   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1588620   +
1588621   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1588622   +
1588623   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1588624   +
1588625   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1588626   +
1588627   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1588628   +
1588629   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1588630   +
1588631   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1588632   +
1588633   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1588634   +
1588635   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1588636   +
1588637   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1588638   +
1588639   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1588640   +
1588641   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1588642   +
1588643   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1588644   +
1588645   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1588646   +
1588647   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1588648   +
1588649   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1588650   +
1588651   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1588652   +
1588653   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1588654   +
1588655   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1588656   +
1588657   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1588658   +
1588659   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1588660   +
1588661   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1588662   +
1588663   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1588664   +
1588665   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1588666   +
1588667   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1588668   +
1588669   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1588670   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1588671   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1588672   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1588673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588675   +end;
MPRINT(EM_DIAGRAM):   end;
1588676   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588677   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588678   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1588679   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588680   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588681   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1588682   +   end;
MPRINT(EM_DIAGRAM):   end;
1588683   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588684   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1588685   +   end;
MPRINT(EM_DIAGRAM):   end;
1588686   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588687   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1588688   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588689   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588690   +   end;
MPRINT(EM_DIAGRAM):   end;
1588691   +end;
MPRINT(EM_DIAGRAM):   end;
1588692   +
1588693   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1588694   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1588695   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1588696   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1588697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588699   +end;
MPRINT(EM_DIAGRAM):   end;
1588700   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588701   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588702   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1588703   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588704   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588705   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1588706   +   end;
MPRINT(EM_DIAGRAM):   end;
1588707   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588708   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1588709   +   end;
MPRINT(EM_DIAGRAM):   end;
1588710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588711   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1588712   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588713   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588714   +   end;
MPRINT(EM_DIAGRAM):   end;
1588715   +end;
MPRINT(EM_DIAGRAM):   end;
1588716   +
1588717   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1588718   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1588719   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1588720   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1588721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588723   +end;
MPRINT(EM_DIAGRAM):   end;
1588724   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588725   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588726   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1588727   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588728   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588729   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1588730   +   end;
MPRINT(EM_DIAGRAM):   end;
1588731   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588732   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1588733   +   end;
MPRINT(EM_DIAGRAM):   end;
1588734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588735   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1588736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588738   +   end;
MPRINT(EM_DIAGRAM):   end;
1588739   +end;
MPRINT(EM_DIAGRAM):   end;
1588740   +
1588741   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1588742   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1588743   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1588744   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1588745   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588746   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588747   +end;
MPRINT(EM_DIAGRAM):   end;
1588748   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588749   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588750   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1588751   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588752   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588753   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1588754   +   end;
MPRINT(EM_DIAGRAM):   end;
1588755   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588756   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1588757   +   end;
MPRINT(EM_DIAGRAM):   end;
1588758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588759   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1588760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588762   +   end;
MPRINT(EM_DIAGRAM):   end;
1588763   +end;
MPRINT(EM_DIAGRAM):   end;
1588764   +
1588765   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1588766   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1588767   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1588768   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1588769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588771   +end;
MPRINT(EM_DIAGRAM):   end;
1588772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588773   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588774   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1588775   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588776   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588777   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1588778   +   end;
MPRINT(EM_DIAGRAM):   end;
1588779   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588780   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1588781   +   end;
MPRINT(EM_DIAGRAM):   end;
1588782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588783   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1588784   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588785   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588786   +   end;
MPRINT(EM_DIAGRAM):   end;
1588787   +end;
MPRINT(EM_DIAGRAM):   end;
1588788   +
1588789   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1588790   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1588791   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1588792   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1588793   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588795   +end;
MPRINT(EM_DIAGRAM):   end;
1588796   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588797   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588798   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1588799   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588800   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1588801   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1588802   +   end;
MPRINT(EM_DIAGRAM):   end;
1588803   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1588804   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1588805   +   end;
MPRINT(EM_DIAGRAM):   end;
1588806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588807   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1588808   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588809   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588810   +   end;
MPRINT(EM_DIAGRAM):   end;
1588811   +end;
MPRINT(EM_DIAGRAM):   end;
1588812   +
1588813   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1588814   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1588815   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1588816   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1588817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588819   +end;
MPRINT(EM_DIAGRAM):   end;
1588820   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588821   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1588822   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1588823   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588824   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1588825   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1588826   +   end;
MPRINT(EM_DIAGRAM):   end;
1588827   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1588828   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1588829   +   end;
MPRINT(EM_DIAGRAM):   end;
1588830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588831   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1588832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588834   +   end;
MPRINT(EM_DIAGRAM):   end;
1588835   +end;
MPRINT(EM_DIAGRAM):   end;
1588836   +
1588837   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1588838   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1588839   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1588840   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1588841   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1588842   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1588843   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1588844   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1588845   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1588846   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1588847   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1588848   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1588849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588851   +end;
MPRINT(EM_DIAGRAM):   end;
1588852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588853   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1588854   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1588855   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588856   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1588857   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1588858   +   end;
MPRINT(EM_DIAGRAM):   end;
1588859   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1588860   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1588861   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1588862   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1588863   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1588864   +   end;
MPRINT(EM_DIAGRAM):   end;
1588865   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1588866   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1588867   +   end;
MPRINT(EM_DIAGRAM):   end;
1588868   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1588869   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1588870   +   end;
MPRINT(EM_DIAGRAM):   end;
1588871   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1588872   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1588873   +   end;
MPRINT(EM_DIAGRAM):   end;
1588874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588875   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1588876   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1588877   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1588878   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1588879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588881   +   end;
MPRINT(EM_DIAGRAM):   end;
1588882   +end;
MPRINT(EM_DIAGRAM):   end;
1588883   +
1588884   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1588885   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1588886   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1588887   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1588888   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1588889   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1588890   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1588891   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1588892   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1588893   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1588894   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1588895   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1588896   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1588897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1588898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588899   +end;
MPRINT(EM_DIAGRAM):   end;
1588900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1588901   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1588902   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1588903   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1588904   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1588905   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1588906   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1588907   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1588908   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1588909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588910   +         end;
MPRINT(EM_DIAGRAM):   end;
1588911   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1588912   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1588913   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1588914   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588915   +            end;
MPRINT(EM_DIAGRAM):   end;
1588916   +         end;
MPRINT(EM_DIAGRAM):   end;
1588917   +      end;
MPRINT(EM_DIAGRAM):   end;
1588918   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1588919   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1588920   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1588921   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588922   +         end;
MPRINT(EM_DIAGRAM):   end;
1588923   +      end;
MPRINT(EM_DIAGRAM):   end;
1588924   +   end;
MPRINT(EM_DIAGRAM):   end;
1588925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1588926   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1588927   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1588928   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588929   +      end;
MPRINT(EM_DIAGRAM):   end;
1588930   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1588931   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1588932   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1588933   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1588934   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1588935   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1588936   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1588937   +         end;
MPRINT(EM_DIAGRAM):   end;
1588938   +      end;
MPRINT(EM_DIAGRAM):   end;
1588939   +   end;
MPRINT(EM_DIAGRAM):   end;
1588940   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1588941   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1588942   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1588943   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1588944   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1588945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1588946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588947   +   end;
MPRINT(EM_DIAGRAM):   end;
1588948   +end;
MPRINT(EM_DIAGRAM):   end;
1588949   +
1588950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588951   +*** Checking missing input Interval
1588952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1588953   +
1588954   +IF NMISS(
1588955   +   AcceptedCmpTotal ,
1588956   +   Age ,
1588957   +   Frq ,
1588958   +   Income ,
1588959   +   Kidhome ,
1588960   +   Mnt ,
1588961   +   MntFishProducts ,
1588962   +   MntFruits ,
1588963   +   MntGoldProds ,
1588964   +   MntMeatProducts ,
1588965   +   MntSweetProducts ,
1588966   +   MntWines ,
1588967   +   MonthsAsCustomer ,
1588968   +   NumCatalogPurchases ,
1588969   +   NumDealsPurchases ,
1588970   +   NumDistPurchases ,
1588971   +   NumStorePurchases ,
1588972   +   NumWebPurchases ,
1588973   +   NumWebVisitsMonth ,
1588974   +   RFMstat ,
1588975   +   RMntFrq ,
1588976   +   Recency ,
1588977   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1588978   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1588979   +
1588980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1588981   +END;
MPRINT(EM_DIAGRAM):   END;
1588982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588983   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1588984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1588985   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1588986   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1588987   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1588988   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1588989   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1588990   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1588991   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1588992   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1588993   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1588994   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1588995   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1588996   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1588997   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1588998   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1588999   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1589000   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1589001   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1589002   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1589003   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1589004   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1589005   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1589006   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1589007   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1589008   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1589009   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1589010   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1589011   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1589012   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1589013   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1589014   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1589015   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1589016   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1589017   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1589018   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1589019   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1589020   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1589021   +END;
MPRINT(EM_DIAGRAM):   END;
1589022   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1589023   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1589024   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1589025   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1589026   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1589027   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1589028   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1589029   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1589030   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1589031   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1589032   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1589033   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1589034   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1589035   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1589036   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1589037   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1589038   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1589039   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1589040   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1589041   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1589042   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1589043   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1589044   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1589045   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1589046   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1589047   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1589048   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1589049   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1589050   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1589051   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1589052   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1589053   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1589054   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1589055   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1589056   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1589057   +   ELSE S_NumCatalogPurchases
1589058   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1589059   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1589060   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1589061   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1589062   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1589063   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1589064   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1589065   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1589066   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1589067   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1589068   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1589069   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1589070   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1589071   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1589072   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1589073   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1589074   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1589075   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1589076   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1589077   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1589078   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1589079   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1589080   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1589081   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1589082   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1589083   +END;
MPRINT(EM_DIAGRAM):   END;
1589084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589085   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1589086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589088   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1589089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589091   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1589092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1589094   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1589095   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1589096   +        S_Income  +    -1.07652572934003 * S_Kidhome
1589097   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1589098   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1589099   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1589100   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1589101   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1589102   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1589103   +          +     0.34217069579861 * S_NumDealsPurchases
1589104   +          +      0.7126550962469 * S_NumDistPurchases
1589105   +          +     0.05810128676346 * S_NumStorePurchases
1589106   +          +     -0.1974592461824 * S_NumWebPurchases
1589107   +          +     1.33855646568468 * S_NumWebVisitsMonth
1589108   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1589109   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1589110   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1589111   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1589112   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1589113   +        S_Income  +    -0.00280376715329 * S_Kidhome
1589114   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1589115   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1589116   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1589117   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1589118   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1589119   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1589120   +          +     0.45694604326279 * S_NumDealsPurchases
1589121   +          +      0.1555582457419 * S_NumDistPurchases
1589122   +          +     -0.3340268446813 * S_NumStorePurchases
1589123   +          +    -0.39316217683753 * S_NumWebPurchases
1589124   +          +     0.52431656748667 * S_NumWebVisitsMonth
1589125   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1589126   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1589127   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1589128   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1589129   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1589130   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1589131   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1589132   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1589133   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1589134   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1589135   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1589136   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1589137   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1589138   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1589139   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1589140   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1589141   +          +     0.46676686502466 * Marital_StatusDivorced
1589142   +          +    -1.27760562209616 * Marital_StatusMarried
1589143   +          +     1.31419230639567 * Marital_StatusSingle
1589144   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1589145   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1589146   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1589147   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1589148   +          +     0.07434297903639 * Marital_StatusDivorced
1589149   +          +     0.00294493836325 * Marital_StatusMarried
1589150   +          +    -0.00745595849422 * Marital_StatusSingle
1589151   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1589152   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1589153   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1589154   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1589155   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1589156   +END;
MPRINT(EM_DIAGRAM):   END;
1589157   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1589158   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1589159   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1589160   +END;
MPRINT(EM_DIAGRAM):   END;
1589161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589162   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1589163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589164   +
1589165   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1589166   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1589167   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1589168   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1589169   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1589170   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589171   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1589172   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1589173   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1589174   +end;
MPRINT(EM_DIAGRAM):   end;
1589175   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589176   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1589177   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1589178   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1589179   +   end;
MPRINT(EM_DIAGRAM):   end;
1589180   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1589181   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1589182   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1589183   +   end;
MPRINT(EM_DIAGRAM):   end;
1589184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589185   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1589186   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1589187   +   end;
MPRINT(EM_DIAGRAM):   end;
1589188   +end;
MPRINT(EM_DIAGRAM):   end;
1589189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1589190   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1589191   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1589192   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1589193   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1589194   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1589195   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1589196   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1589197   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1589198   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1589199   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1589200   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1589201   +END;
MPRINT(EM_DIAGRAM):   END;
1589202   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1589203   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1589204   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1589205   +END;
MPRINT(EM_DIAGRAM):   END;
1589206   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1589207   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1589208   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1589209   +END;
MPRINT(EM_DIAGRAM):   END;
1589210   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1589211   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1589212   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1589213   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1589214   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1589215   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1589216   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1589217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589218   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1589219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589220   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1589221   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1589222   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1589223   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1589224   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1589225   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1589226   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1589227   +END;
MPRINT(EM_DIAGRAM):   END;
1589228   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1589229   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1589230   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1589231   +drop
1589232   +H11
1589233   +H12
1589234   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1589235   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1589236   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1589237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589238   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1589239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589240   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1589241   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1589242   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1589243   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1589244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589245   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1589246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589247   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1589248   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1589249   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1589250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589251   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1589252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589253   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1589254   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1589255   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1589256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589257   +* Ensmbl31: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 5 of 7;
1589258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589260   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1589261   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1589262   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1589263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589264   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1589265   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1589266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1589267   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1589268   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1589269   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1589270   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1589271   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1589272   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1589273   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1589274   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1589275   +LENGTH _WARN_ $4
1589276   +      F_DepVar  $ 12
1589277   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1589278   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1589279   +
1589280   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1589281   +
1589282   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1589283   +
1589284   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1589285   +
1589286   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1589287   +
1589288   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1589289   +
1589290   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1589291   +
1589292   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1589293   +
1589294   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1589295   +
1589296   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1589297   +
1589298   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1589299   +
1589300   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1589301   +
1589302   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1589303   +
1589304   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1589305   +
1589306   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1589307   +
1589308   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1589309   +
1589310   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1589311   +
1589312   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1589313   +
1589314   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1589315   +
1589316   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1589317   +
1589318   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1589319   +
1589320   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1589321   +
1589322   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1589323   +
1589324   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1589325   +
1589326   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1589327   +
1589328   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1589329   +
1589330   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1589331   +
1589332   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1589333   +
1589334   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1589335   +
1589336   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1589337   +
1589338   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1589339   +
1589340   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1589341   +
1589342   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1589343   +
1589344   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1589345   +
1589346   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1589347   +
1589348   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1589349   +
1589350   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1589351   +
1589352   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1589353   +
1589354   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1589355   +
1589356   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1589357   +
1589358   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1589359   +
1589360   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1589361   +
1589362   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1589363   +
1589364   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1589365   +
1589366   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1589367   +
1589368   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1589369   +
1589370   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1589371   +
1589372   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1589373   +
1589374   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1589375   +
1589376   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1589377   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1589378   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1589379   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1589380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589382   +end;
MPRINT(EM_DIAGRAM):   end;
1589383   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589385   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1589386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1589388   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1589389   +   end;
MPRINT(EM_DIAGRAM):   end;
1589390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589391   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1589392   +   end;
MPRINT(EM_DIAGRAM):   end;
1589393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589394   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1589395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589397   +   end;
MPRINT(EM_DIAGRAM):   end;
1589398   +end;
MPRINT(EM_DIAGRAM):   end;
1589399   +
1589400   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1589401   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1589402   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1589403   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1589404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589406   +end;
MPRINT(EM_DIAGRAM):   end;
1589407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589409   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1589410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589411   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1589412   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1589413   +   end;
MPRINT(EM_DIAGRAM):   end;
1589414   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589415   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1589416   +   end;
MPRINT(EM_DIAGRAM):   end;
1589417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589418   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1589419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589421   +   end;
MPRINT(EM_DIAGRAM):   end;
1589422   +end;
MPRINT(EM_DIAGRAM):   end;
1589423   +
1589424   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1589425   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1589426   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1589427   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1589428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589430   +end;
MPRINT(EM_DIAGRAM):   end;
1589431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589433   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1589434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1589436   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1589437   +   end;
MPRINT(EM_DIAGRAM):   end;
1589438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589439   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1589440   +   end;
MPRINT(EM_DIAGRAM):   end;
1589441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589442   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1589443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589445   +   end;
MPRINT(EM_DIAGRAM):   end;
1589446   +end;
MPRINT(EM_DIAGRAM):   end;
1589447   +
1589448   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1589449   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1589450   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1589451   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1589452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589454   +end;
MPRINT(EM_DIAGRAM):   end;
1589455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589457   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1589458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1589460   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1589461   +   end;
MPRINT(EM_DIAGRAM):   end;
1589462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589463   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1589464   +   end;
MPRINT(EM_DIAGRAM):   end;
1589465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589466   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1589467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589469   +   end;
MPRINT(EM_DIAGRAM):   end;
1589470   +end;
MPRINT(EM_DIAGRAM):   end;
1589471   +
1589472   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1589473   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1589474   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1589475   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1589476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589478   +end;
MPRINT(EM_DIAGRAM):   end;
1589479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589481   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1589482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1589484   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1589485   +   end;
MPRINT(EM_DIAGRAM):   end;
1589486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589487   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1589488   +   end;
MPRINT(EM_DIAGRAM):   end;
1589489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589490   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1589491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589493   +   end;
MPRINT(EM_DIAGRAM):   end;
1589494   +end;
MPRINT(EM_DIAGRAM):   end;
1589495   +
1589496   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1589497   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1589498   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1589499   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1589500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589502   +end;
MPRINT(EM_DIAGRAM):   end;
1589503   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589505   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1589506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589507   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1589508   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1589509   +   end;
MPRINT(EM_DIAGRAM):   end;
1589510   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1589511   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1589512   +   end;
MPRINT(EM_DIAGRAM):   end;
1589513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589514   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1589515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589517   +   end;
MPRINT(EM_DIAGRAM):   end;
1589518   +end;
MPRINT(EM_DIAGRAM):   end;
1589519   +
1589520   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1589521   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1589522   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1589523   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1589524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589526   +end;
MPRINT(EM_DIAGRAM):   end;
1589527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1589529   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1589530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589531   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1589532   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1589533   +   end;
MPRINT(EM_DIAGRAM):   end;
1589534   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1589535   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1589536   +   end;
MPRINT(EM_DIAGRAM):   end;
1589537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589538   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1589539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589541   +   end;
MPRINT(EM_DIAGRAM):   end;
1589542   +end;
MPRINT(EM_DIAGRAM):   end;
1589543   +
1589544   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1589545   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1589546   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1589547   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1589548   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1589549   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1589550   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1589551   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1589552   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1589553   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1589554   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1589555   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1589556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589558   +end;
MPRINT(EM_DIAGRAM):   end;
1589559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589560   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1589561   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1589562   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589563   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1589564   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1589565   +   end;
MPRINT(EM_DIAGRAM):   end;
1589566   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1589567   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1589568   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1589569   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1589570   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1589571   +   end;
MPRINT(EM_DIAGRAM):   end;
1589572   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1589573   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1589574   +   end;
MPRINT(EM_DIAGRAM):   end;
1589575   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1589576   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1589577   +   end;
MPRINT(EM_DIAGRAM):   end;
1589578   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1589579   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1589580   +   end;
MPRINT(EM_DIAGRAM):   end;
1589581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589582   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1589583   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1589584   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1589585   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1589586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589588   +   end;
MPRINT(EM_DIAGRAM):   end;
1589589   +end;
MPRINT(EM_DIAGRAM):   end;
1589590   +
1589591   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1589592   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1589593   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1589594   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1589595   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1589596   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1589597   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1589598   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1589599   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1589600   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1589601   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1589602   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1589603   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1589604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1589605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589606   +end;
MPRINT(EM_DIAGRAM):   end;
1589607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589608   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1589609   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1589610   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589611   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1589612   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1589613   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1589614   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1589615   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1589616   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1589617   +         end;
MPRINT(EM_DIAGRAM):   end;
1589618   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1589619   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1589620   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1589621   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1589622   +            end;
MPRINT(EM_DIAGRAM):   end;
1589623   +         end;
MPRINT(EM_DIAGRAM):   end;
1589624   +      end;
MPRINT(EM_DIAGRAM):   end;
1589625   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1589626   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1589627   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1589628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1589629   +         end;
MPRINT(EM_DIAGRAM):   end;
1589630   +      end;
MPRINT(EM_DIAGRAM):   end;
1589631   +   end;
MPRINT(EM_DIAGRAM):   end;
1589632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589633   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1589634   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1589635   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1589636   +      end;
MPRINT(EM_DIAGRAM):   end;
1589637   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1589638   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1589639   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1589640   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1589641   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1589642   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1589643   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1589644   +         end;
MPRINT(EM_DIAGRAM):   end;
1589645   +      end;
MPRINT(EM_DIAGRAM):   end;
1589646   +   end;
MPRINT(EM_DIAGRAM):   end;
1589647   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1589648   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1589649   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1589650   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1589651   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1589652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1589653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589654   +   end;
MPRINT(EM_DIAGRAM):   end;
1589655   +end;
MPRINT(EM_DIAGRAM):   end;
1589656   +
1589657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589658   +*** Checking missing input Interval
1589659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1589660   +
1589661   +IF NMISS(
1589662   +   AcceptedCmpTotal ,
1589663   +   Age ,
1589664   +   Frq ,
1589665   +   Income ,
1589666   +   Kidhome ,
1589667   +   Mnt ,
1589668   +   MntFishProducts ,
1589669   +   MntFruits ,
1589670   +   MntGoldProds ,
1589671   +   MntMeatProducts ,
1589672   +   MntSweetProducts ,
1589673   +   MntWines ,
1589674   +   MonthsAsCustomer ,
1589675   +   NumCatalogPurchases ,
1589676   +   NumDealsPurchases ,
1589677   +   NumDistPurchases ,
1589678   +   NumStorePurchases ,
1589679   +   NumWebPurchases ,
1589680   +   NumWebVisitsMonth ,
1589681   +   RFMstat ,
1589682   +   RMntFrq ,
1589683   +   Recency ,
1589684   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1589685   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1589686   +
1589687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1589688   +END;
MPRINT(EM_DIAGRAM):   END;
1589689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589690   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1589691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589692   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1589693   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1589694   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1589695   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1589696   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1589697   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1589698   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1589699   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1589700   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1589701   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1589702   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1589703   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1589704   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1589705   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1589706   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1589707   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1589708   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1589709   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1589710   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1589711   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1589712   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1589713   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1589714   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1589715   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1589716   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1589717   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1589718   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1589719   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1589720   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1589721   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1589722   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1589723   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1589724   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1589725   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1589726   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1589727   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1589728   +END;
MPRINT(EM_DIAGRAM):   END;
1589729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1589730   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1589731   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1589732   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1589733   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1589734   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1589735   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1589736   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1589737   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1589738   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1589739   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1589740   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1589741   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1589742   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1589743   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1589744   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1589745   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1589746   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1589747   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1589748   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1589749   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1589750   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1589751   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1589752   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1589753   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1589754   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1589755   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1589756   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1589757   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1589758   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1589759   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1589760   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1589761   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1589762   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1589763   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1589764   +   ELSE S_NumCatalogPurchases
1589765   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1589766   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1589767   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1589768   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1589769   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1589770   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1589771   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1589772   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1589773   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1589774   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1589775   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1589776   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1589777   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1589778   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1589779   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1589780   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1589781   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1589782   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1589783   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1589784   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1589785   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1589786   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1589787   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1589788   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1589789   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1589790   +END;
MPRINT(EM_DIAGRAM):   END;
1589791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589792   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1589793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589795   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1589796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589798   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1589799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589800   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1589801   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1589802   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1589803   +        S_Income  +     0.48614351216065 * S_Kidhome
1589804   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1589805   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1589806   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1589807   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1589808   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1589809   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1589810   +          +     1.38069708066212 * S_NumDealsPurchases
1589811   +          +     0.18758966496994 * S_NumDistPurchases
1589812   +          +    -0.65306017966122 * S_NumStorePurchases
1589813   +          +    -0.65780154318734 * S_NumWebPurchases
1589814   +          +     1.42347048260615 * S_NumWebVisitsMonth
1589815   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1589816   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1589817   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1589818   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1589819   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1589820   +        S_Income  +     0.50072567449363 * S_Kidhome
1589821   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1589822   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1589823   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1589824   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1589825   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1589826   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1589827   +          +    -0.75291043162386 * S_NumDealsPurchases
1589828   +          +    -0.06780631818187 * S_NumDistPurchases
1589829   +          +     1.03453599373919 * S_NumStorePurchases
1589830   +          +     1.02348906006707 * S_NumWebPurchases
1589831   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1589832   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1589833   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1589834   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1589835   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1589836   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1589837   +        S_Income  +     0.57496607656903 * S_Kidhome
1589838   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1589839   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1589840   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1589841   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1589842   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1589843   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1589844   +          +     0.13431497076806 * S_NumDealsPurchases
1589845   +          +     -0.4516722514278 * S_NumDistPurchases
1589846   +          +     0.08636745161008 * S_NumStorePurchases
1589847   +          +    -0.01091843489919 * S_NumWebPurchases
1589848   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1589849   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1589850   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1589851   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1589852   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1589853   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1589854   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1589855   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1589856   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1589857   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1589858   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1589859   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1589860   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1589861   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1589862   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1589863   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1589864   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1589865   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1589866   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1589867   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1589868   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1589869   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1589870   +          +     0.09616912826117 * Marital_StatusDivorced
1589871   +          +     0.15377557778014 * Marital_StatusMarried
1589872   +          +    -0.20686296055741 * Marital_StatusSingle
1589873   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1589874   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1589875   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1589876   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1589877   +          +    -0.18362421441913 * Marital_StatusDivorced
1589878   +          +     0.14861660317702 * Marital_StatusMarried
1589879   +          +    -0.51051982152027 * Marital_StatusSingle
1589880   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1589881   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1589882   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1589883   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1589884   +          +    -0.65088528624708 * Marital_StatusDivorced
1589885   +          +     1.85383531288095 * Marital_StatusMarried
1589886   +          +    -1.45031245605509 * Marital_StatusSingle
1589887   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1589888   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1589889   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1589890   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1589891   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1589892   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1589893   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1589894   +END;
MPRINT(EM_DIAGRAM):   END;
1589895   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1589896   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1589897   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1589898   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1589899   +END;
MPRINT(EM_DIAGRAM):   END;
1589900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589901   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1589902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589903   +
1589904   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1589905   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1589906   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1589907   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1589908   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1589909   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1589910   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1589911   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1589912   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1589913   +end;
MPRINT(EM_DIAGRAM):   end;
1589914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1589915   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1589916   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1589917   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1589918   +   end;
MPRINT(EM_DIAGRAM):   end;
1589919   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1589920   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1589921   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1589922   +   end;
MPRINT(EM_DIAGRAM):   end;
1589923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1589924   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1589925   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1589926   +   end;
MPRINT(EM_DIAGRAM):   end;
1589927   +end;
MPRINT(EM_DIAGRAM):   end;
1589928   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1589929   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1589930   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1589931   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1589932   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1589933   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1589934   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1589935   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1589936   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1589937   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1589938   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1589939   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1589940   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1589941   +END;
MPRINT(EM_DIAGRAM):   END;
1589942   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1589943   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1589944   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1589945   +END;
MPRINT(EM_DIAGRAM):   END;
1589946   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1589947   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1589948   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1589949   +END;
MPRINT(EM_DIAGRAM):   END;
1589950   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1589951   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1589952   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1589953   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1589954   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1589955   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1589956   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1589957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589958   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1589959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1589960   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1589961   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1589962   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1589963   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1589964   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1589965   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1589966   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1589967   +END;
MPRINT(EM_DIAGRAM):   END;
1589968   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1589969   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1589970   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1589971   +drop
1589972   +H11
1589973   +H12
1589974   +H13
1589975   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1589976   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1589977   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1589978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589979   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1589980   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589981   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1589982   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1589983   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1589984   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1589985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589986   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1589987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589988   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1589989   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1589990   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1589991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589992   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1589993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589994   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1589995   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1589996   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1589997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1589998   +* Ensmbl31: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 6 of 7;
1589999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590001   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1590002   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1590003   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1590004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590005   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590006   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1590007   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590008   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1590009   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1590010   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1590011   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1590012   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1590013   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1590014   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1590015   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1590016   +LENGTH _WARN_ $4
1590017   +      F_DepVar  $ 12
1590018   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1590019   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1590020   +
1590021   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1590022   +
1590023   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1590024   +
1590025   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1590026   +
1590027   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1590028   +
1590029   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1590030   +
1590031   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1590032   +
1590033   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1590034   +
1590035   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1590036   +
1590037   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1590038   +
1590039   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1590040   +
1590041   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1590042   +
1590043   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1590044   +
1590045   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1590046   +
1590047   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1590048   +
1590049   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1590050   +
1590051   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1590052   +
1590053   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1590054   +
1590055   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1590056   +
1590057   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1590058   +
1590059   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1590060   +
1590061   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1590062   +
1590063   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1590064   +
1590065   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1590066   +
1590067   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1590068   +
1590069   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1590070   +
1590071   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1590072   +
1590073   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1590074   +
1590075   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1590076   +
1590077   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1590078   +
1590079   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1590080   +
1590081   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1590082   +
1590083   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1590084   +
1590085   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1590086   +
1590087   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1590088   +
1590089   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1590090   +
1590091   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1590092   +
1590093   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1590094   +
1590095   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1590096   +
1590097   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1590098   +
1590099   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1590100   +
1590101   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1590102   +
1590103   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1590104   +
1590105   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1590106   +
1590107   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1590108   +
1590109   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590110   +
1590111   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1590112   +
1590113   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1590114   +
1590115   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1590116   +
1590117   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1590118   +
1590119   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1590120   +
1590121   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1590122   +
1590123   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1590124   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1590125   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1590126   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1590127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590129   +end;
MPRINT(EM_DIAGRAM):   end;
1590130   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590132   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1590133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590135   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1590136   +   end;
MPRINT(EM_DIAGRAM):   end;
1590137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590138   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1590139   +   end;
MPRINT(EM_DIAGRAM):   end;
1590140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590141   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1590142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590144   +   end;
MPRINT(EM_DIAGRAM):   end;
1590145   +end;
MPRINT(EM_DIAGRAM):   end;
1590146   +
1590147   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1590148   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1590149   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1590150   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1590151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590153   +end;
MPRINT(EM_DIAGRAM):   end;
1590154   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590156   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1590157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590159   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1590160   +   end;
MPRINT(EM_DIAGRAM):   end;
1590161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590162   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1590163   +   end;
MPRINT(EM_DIAGRAM):   end;
1590164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590165   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1590166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590168   +   end;
MPRINT(EM_DIAGRAM):   end;
1590169   +end;
MPRINT(EM_DIAGRAM):   end;
1590170   +
1590171   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1590172   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1590173   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1590174   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1590175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590177   +end;
MPRINT(EM_DIAGRAM):   end;
1590178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590180   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1590181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590183   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1590184   +   end;
MPRINT(EM_DIAGRAM):   end;
1590185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590186   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1590187   +   end;
MPRINT(EM_DIAGRAM):   end;
1590188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590189   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1590190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590192   +   end;
MPRINT(EM_DIAGRAM):   end;
1590193   +end;
MPRINT(EM_DIAGRAM):   end;
1590194   +
1590195   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1590196   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1590197   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1590198   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1590199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590201   +end;
MPRINT(EM_DIAGRAM):   end;
1590202   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590204   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1590205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590207   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1590208   +   end;
MPRINT(EM_DIAGRAM):   end;
1590209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590210   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1590211   +   end;
MPRINT(EM_DIAGRAM):   end;
1590212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590213   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1590214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590216   +   end;
MPRINT(EM_DIAGRAM):   end;
1590217   +end;
MPRINT(EM_DIAGRAM):   end;
1590218   +
1590219   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1590220   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1590221   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1590222   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1590223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590225   +end;
MPRINT(EM_DIAGRAM):   end;
1590226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590228   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1590229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590231   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1590232   +   end;
MPRINT(EM_DIAGRAM):   end;
1590233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590234   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1590235   +   end;
MPRINT(EM_DIAGRAM):   end;
1590236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590237   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1590238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590240   +   end;
MPRINT(EM_DIAGRAM):   end;
1590241   +end;
MPRINT(EM_DIAGRAM):   end;
1590242   +
1590243   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1590244   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1590245   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1590246   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1590247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590249   +end;
MPRINT(EM_DIAGRAM):   end;
1590250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590252   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1590253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590254   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590255   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1590256   +   end;
MPRINT(EM_DIAGRAM):   end;
1590257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590258   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1590259   +   end;
MPRINT(EM_DIAGRAM):   end;
1590260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590261   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1590262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590264   +   end;
MPRINT(EM_DIAGRAM):   end;
1590265   +end;
MPRINT(EM_DIAGRAM):   end;
1590266   +
1590267   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1590268   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1590269   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1590270   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1590271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590273   +end;
MPRINT(EM_DIAGRAM):   end;
1590274   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590275   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590276   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1590277   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590278   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1590279   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1590280   +   end;
MPRINT(EM_DIAGRAM):   end;
1590281   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1590282   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1590283   +   end;
MPRINT(EM_DIAGRAM):   end;
1590284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590285   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1590286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590288   +   end;
MPRINT(EM_DIAGRAM):   end;
1590289   +end;
MPRINT(EM_DIAGRAM):   end;
1590290   +
1590291   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1590292   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1590293   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1590294   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1590295   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1590296   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1590297   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1590298   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1590299   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1590300   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1590301   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1590302   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1590303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590305   +end;
MPRINT(EM_DIAGRAM):   end;
1590306   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590307   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1590308   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1590309   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590310   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1590311   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1590312   +   end;
MPRINT(EM_DIAGRAM):   end;
1590313   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1590314   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1590315   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1590316   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1590317   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1590318   +   end;
MPRINT(EM_DIAGRAM):   end;
1590319   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1590320   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1590321   +   end;
MPRINT(EM_DIAGRAM):   end;
1590322   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1590323   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1590324   +   end;
MPRINT(EM_DIAGRAM):   end;
1590325   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1590326   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1590327   +   end;
MPRINT(EM_DIAGRAM):   end;
1590328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590329   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1590330   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1590331   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1590332   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1590333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590335   +   end;
MPRINT(EM_DIAGRAM):   end;
1590336   +end;
MPRINT(EM_DIAGRAM):   end;
1590337   +
1590338   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1590339   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1590340   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1590341   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1590342   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1590343   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1590344   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1590345   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1590346   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1590347   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1590348   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1590349   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1590350   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1590351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590353   +end;
MPRINT(EM_DIAGRAM):   end;
The SAS System

1590354   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590355   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1590356   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1590357   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590358   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1590359   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1590360   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1590361   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1590362   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1590363   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1590364   +         end;
MPRINT(EM_DIAGRAM):   end;
1590365   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1590366   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1590367   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1590368   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1590369   +            end;
MPRINT(EM_DIAGRAM):   end;
1590370   +         end;
MPRINT(EM_DIAGRAM):   end;
1590371   +      end;
MPRINT(EM_DIAGRAM):   end;
1590372   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1590373   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1590374   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1590375   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1590376   +         end;
MPRINT(EM_DIAGRAM):   end;
1590377   +      end;
MPRINT(EM_DIAGRAM):   end;
1590378   +   end;
MPRINT(EM_DIAGRAM):   end;
1590379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590380   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1590381   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1590382   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1590383   +      end;
MPRINT(EM_DIAGRAM):   end;
1590384   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1590385   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1590386   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1590387   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1590388   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1590389   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1590390   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1590391   +         end;
MPRINT(EM_DIAGRAM):   end;
1590392   +      end;
MPRINT(EM_DIAGRAM):   end;
1590393   +   end;
MPRINT(EM_DIAGRAM):   end;
1590394   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1590395   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1590396   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1590397   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1590398   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1590399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590401   +   end;
MPRINT(EM_DIAGRAM):   end;
1590402   +end;
MPRINT(EM_DIAGRAM):   end;
1590403   +
1590404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590405   +*** Checking missing input Interval
1590406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1590407   +
1590408   +IF NMISS(
1590409   +   AcceptedCmpTotal ,
1590410   +   Age ,
1590411   +   Frq ,
1590412   +   Income ,
1590413   +   Kidhome ,
1590414   +   Mnt ,
1590415   +   MntFishProducts ,
1590416   +   MntFruits ,
1590417   +   MntGoldProds ,
1590418   +   MntMeatProducts ,
1590419   +   MntSweetProducts ,
1590420   +   MntWines ,
1590421   +   MonthsAsCustomer ,
1590422   +   NumCatalogPurchases ,
1590423   +   NumDealsPurchases ,
1590424   +   NumDistPurchases ,
1590425   +   NumStorePurchases ,
1590426   +   NumWebPurchases ,
1590427   +   NumWebVisitsMonth ,
1590428   +   RFMstat ,
1590429   +   RMntFrq ,
1590430   +   Recency ,
1590431   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1590432   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1590433   +
1590434   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590435   +END;
MPRINT(EM_DIAGRAM):   END;
1590436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590437   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1590438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590440   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590441   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590442   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1590443   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590444   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590445   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1590446   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590447   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1590448   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1590449   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590450   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590451   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1590452   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590453   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590454   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590455   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590456   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1590457   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1590458   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1590459   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1590460   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590461   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1590462   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1590463   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1590464   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1590465   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1590466   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1590467   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590468   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590469   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1590470   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1590471   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590472   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590473   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590474   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1590475   +END;
MPRINT(EM_DIAGRAM):   END;
1590476   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590477   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1590478   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1590479   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1590480   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1590481   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1590482   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1590483   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1590484   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1590485   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1590486   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1590487   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1590488   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1590489   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1590490   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1590491   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1590492   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1590493   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1590494   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1590495   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1590496   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1590497   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1590498   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1590499   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1590500   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1590501   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1590502   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1590503   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1590504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1590505   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1590506   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1590507   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1590508   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1590509   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1590510   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1590511   +   ELSE S_NumCatalogPurchases
1590512   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1590513   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1590514   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1590515   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1590516   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1590517   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1590518   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1590519   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1590520   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1590521   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1590522   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1590523   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1590524   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1590525   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1590526   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1590527   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1590528   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1590529   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1590530   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1590531   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1590532   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1590533   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1590534   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1590535   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1590536   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1590537   +END;
MPRINT(EM_DIAGRAM):   END;
1590538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590539   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1590540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590542   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1590543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590545   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1590546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590547   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590548   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1590549   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1590550   +        S_Income  +     -0.0761121347886 * S_Kidhome
1590551   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1590552   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1590553   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1590554   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1590555   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1590556   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1590557   +          +     0.83893684194413 * S_NumDealsPurchases
1590558   +          +     0.23391006875291 * S_NumDistPurchases
1590559   +          +    -0.63370705462074 * S_NumStorePurchases
1590560   +          +     -0.9137408014067 * S_NumWebPurchases
1590561   +          +     0.89109351479441 * S_NumWebVisitsMonth
1590562   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1590563   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1590564   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1590565   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1590566   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1590567   +        S_Income  +    -0.43909782819329 * S_Kidhome
1590568   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1590569   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1590570   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1590571   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1590572   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1590573   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1590574   +          +      0.2218973353638 * S_NumDealsPurchases
1590575   +          +      0.0062360950528 * S_NumDistPurchases
1590576   +          +    -0.57621747951002 * S_NumStorePurchases
1590577   +          +    -0.33564890905657 * S_NumWebPurchases
1590578   +          +     0.82482365540301 * S_NumWebVisitsMonth
1590579   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1590580   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1590581   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1590582   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1590583   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1590584   +        S_Income  +    -0.03572236011846 * S_Kidhome
1590585   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1590586   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1590587   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1590588   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1590589   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1590590   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1590591   +          +      -0.174147250062 * S_NumDealsPurchases
1590592   +          +    -0.22921682388864 * S_NumDistPurchases
1590593   +          +     0.41526854684299 * S_NumStorePurchases
1590594   +          +    -0.27675565493519 * S_NumWebPurchases
1590595   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1590596   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1590597   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1590598   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1590599   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1590600   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1590601   +        S_Income  +    -0.04788369327547 * S_Kidhome
1590602   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1590603   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1590604   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1590605   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1590606   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1590607   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1590608   +          +    -0.46022430102423 * S_NumDealsPurchases
1590609   +          +     0.15831339342044 * S_NumDistPurchases
1590610   +          +     0.22480465173719 * S_NumStorePurchases
1590611   +          +     0.44798923484609 * S_NumWebPurchases
1590612   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1590613   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1590614   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1590615   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1590616   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1590617   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1590618   +        S_Income  +     0.53994304261534 * S_Kidhome
1590619   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1590620   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1590621   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1590622   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1590623   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1590624   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1590625   +          +     0.03650267472167 * S_NumDealsPurchases
1590626   +          +    -0.03322709524939 * S_NumDistPurchases
1590627   +          +     -0.0022226424472 * S_NumStorePurchases
1590628   +          +    -0.10131236740674 * S_NumWebPurchases
1590629   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1590630   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1590631   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1590632   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1590633   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1590634   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1590635   +        S_Income  +    -0.52576099429582 * S_Kidhome
1590636   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1590637   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1590638   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1590639   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1590640   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1590641   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1590642   +          +    -0.50209914729324 * S_NumDealsPurchases
1590643   +          +    -0.46217244513696 * S_NumDistPurchases
1590644   +          +      0.1832648560248 * S_NumStorePurchases
1590645   +          +     0.02866153257072 * S_NumWebPurchases
1590646   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1590647   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1590648   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1590649   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1590650   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1590651   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1590652   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1590653   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1590654   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1590655   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1590656   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1590657   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1590658   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1590659   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1590660   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1590661   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1590662   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1590663   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1590664   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1590665   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1590666   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1590667   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1590668   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1590669   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1590670   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1590671   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1590672   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1590673   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1590674   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1590675   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1590676   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1590677   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1590678   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1590679   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1590680   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1590681   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1590682   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1590683   +          +     0.13815069071511 * Marital_StatusDivorced
1590684   +          +      0.0732913060929 * Marital_StatusMarried
1590685   +          +    -0.22858418468746 * Marital_StatusSingle
1590686   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1590687   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1590688   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1590689   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1590690   +          +     0.32909808396509 * Marital_StatusDivorced
1590691   +          +    -0.50160173579004 * Marital_StatusMarried
1590692   +          +     0.57207102211224 * Marital_StatusSingle
1590693   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1590694   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1590695   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1590696   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1590697   +          +    -0.07154493730107 * Marital_StatusDivorced
1590698   +          +     0.29126100051603 * Marital_StatusMarried
1590699   +          +    -0.06936325857004 * Marital_StatusSingle
1590700   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1590701   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1590702   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1590703   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1590704   +          +    -0.05004640872388 * Marital_StatusDivorced
1590705   +          +     0.22197974032974 * Marital_StatusMarried
1590706   +          +    -0.33931504637453 * Marital_StatusSingle
1590707   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1590708   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1590709   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1590710   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1590711   +          +    -0.07748874669478 * Marital_StatusDivorced
1590712   +          +     1.05442281159109 * Marital_StatusMarried
1590713   +          +    -0.67190984038867 * Marital_StatusSingle
1590714   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1590715   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1590716   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1590717   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1590718   +          +    -0.20478208715114 * Marital_StatusDivorced
1590719   +          +    -0.40186383707642 * Marital_StatusMarried
1590720   +          +     0.43474841662774 * Marital_StatusSingle
1590721   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1590722   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1590723   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1590724   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1590725   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1590726   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1590727   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1590728   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1590729   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1590730   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1590731   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1590732   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1590733   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1590734   +END;
MPRINT(EM_DIAGRAM):   END;
1590735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590736   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1590737   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1590738   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1590739   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1590740   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1590741   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1590742   +END;
MPRINT(EM_DIAGRAM):   END;
1590743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590744   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1590745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590746   +
1590747   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1590748   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1590749   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590750   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1590751   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1590752   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590753   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1590754   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590755   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590756   +end;
MPRINT(EM_DIAGRAM):   end;
1590757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590758   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1590759   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1590760   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1590761   +   end;
MPRINT(EM_DIAGRAM):   end;
1590762   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1590763   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1590764   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1590765   +   end;
MPRINT(EM_DIAGRAM):   end;
1590766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590767   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1590768   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1590769   +   end;
MPRINT(EM_DIAGRAM):   end;
1590770   +end;
MPRINT(EM_DIAGRAM):   end;
1590771   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1590772   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1590773   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1590774   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1590775   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1590776   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1590777   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1590778   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1590779   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1590780   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1590781   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1590782   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1590783   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1590784   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1590785   +END;
MPRINT(EM_DIAGRAM):   END;
1590786   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1590787   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1590788   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1590789   +END;
MPRINT(EM_DIAGRAM):   END;
1590790   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1590791   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1590792   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1590793   +END;
MPRINT(EM_DIAGRAM):   END;
1590794   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1590795   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1590796   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1590797   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1590798   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1590799   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1590800   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1590801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590802   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1590803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1590804   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1590805   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1590806   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1590807   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1590808   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1590809   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1590810   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1590811   +END;
MPRINT(EM_DIAGRAM):   END;
1590812   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590813   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1590814   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1590815   +drop
1590816   +H11
1590817   +H12
1590818   +H13
1590819   +H14
1590820   +H15
1590821   +H16
1590822   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1590823   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1590824   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1590825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590826   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1590827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590828   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1590829   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1590830   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1590831   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1590832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590833   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1590834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590835   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1590836   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1590837   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1590838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590839   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1590840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590841   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1590842   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1590843   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1590844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590845   +* Ensmbl31: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Scoring Code of model 7 of 7;
1590846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590848   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1590849   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1590850   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1590851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1590852   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590853   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1590854   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1590855   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1590856   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1590857   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1590858   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1590859   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1590860   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1590861   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1590862   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1590863   +LENGTH _WARN_ $4
1590864   +      F_DepVar  $ 12
1590865   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1590866   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1590867   +
1590868   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1590869   +
1590870   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1590871   +
1590872   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1590873   +
1590874   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1590875   +
1590876   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1590877   +
1590878   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1590879   +
1590880   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1590881   +
1590882   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1590883   +
1590884   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1590885   +
1590886   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1590887   +
1590888   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1590889   +
1590890   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1590891   +
1590892   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1590893   +
1590894   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1590895   +
1590896   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1590897   +
1590898   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1590899   +
1590900   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1590901   +
1590902   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1590903   +
1590904   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1590905   +
1590906   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1590907   +
1590908   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1590909   +
1590910   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1590911   +
1590912   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1590913   +
1590914   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1590915   +
1590916   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1590917   +
1590918   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1590919   +
1590920   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1590921   +
1590922   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1590923   +
1590924   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1590925   +
1590926   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1590927   +
1590928   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1590929   +
1590930   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1590931   +
1590932   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1590933   +
1590934   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1590935   +
1590936   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1590937   +
1590938   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1590939   +
1590940   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1590941   +
1590942   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1590943   +
1590944   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1590945   +
1590946   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1590947   +
1590948   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1590949   +
1590950   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1590951   +
1590952   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1590953   +
1590954   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1590955   +
1590956   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1590957   +
1590958   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1590959   +
1590960   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1590961   +
1590962   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1590963   +
1590964   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1590965   +
1590966   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1590967   +
1590968   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1590969   +
1590970   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1590971   +
1590972   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1590973   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1590974   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1590975   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1590976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1590977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590978   +end;
MPRINT(EM_DIAGRAM):   end;
1590979   +else do;
MPRINT(EM_DIAGRAM):   else do;
1590980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1590981   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1590982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1590983   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1590984   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1590985   +   end;
MPRINT(EM_DIAGRAM):   end;
1590986   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1590987   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1590988   +   end;
MPRINT(EM_DIAGRAM):   end;
1590989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1590990   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1590991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1590992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1590993   +   end;
MPRINT(EM_DIAGRAM):   end;
1590994   +end;
MPRINT(EM_DIAGRAM):   end;
1590995   +
1590996   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1590997   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1590998   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1590999   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1591000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591002   +end;
MPRINT(EM_DIAGRAM):   end;
1591003   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591004   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591005   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1591006   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591007   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1591008   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1591009   +   end;
MPRINT(EM_DIAGRAM):   end;
1591010   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591011   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1591012   +   end;
MPRINT(EM_DIAGRAM):   end;
1591013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591014   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1591015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591017   +   end;
MPRINT(EM_DIAGRAM):   end;
1591018   +end;
MPRINT(EM_DIAGRAM):   end;
1591019   +
1591020   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1591021   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1591022   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1591023   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1591024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591026   +end;
MPRINT(EM_DIAGRAM):   end;
1591027   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591028   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591029   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1591030   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591031   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1591032   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1591033   +   end;
MPRINT(EM_DIAGRAM):   end;
1591034   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591035   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1591036   +   end;
MPRINT(EM_DIAGRAM):   end;
1591037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591038   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1591039   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591040   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591041   +   end;
MPRINT(EM_DIAGRAM):   end;
1591042   +end;
MPRINT(EM_DIAGRAM):   end;
1591043   +
1591044   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1591045   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1591046   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1591047   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1591048   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591049   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591050   +end;
MPRINT(EM_DIAGRAM):   end;
1591051   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591052   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591053   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1591054   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591055   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1591056   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1591057   +   end;
MPRINT(EM_DIAGRAM):   end;
1591058   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591059   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1591060   +   end;
MPRINT(EM_DIAGRAM):   end;
1591061   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591062   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1591063   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591064   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591065   +   end;
MPRINT(EM_DIAGRAM):   end;
1591066   +end;
MPRINT(EM_DIAGRAM):   end;
1591067   +
1591068   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1591069   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1591070   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1591071   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1591072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591074   +end;
MPRINT(EM_DIAGRAM):   end;
1591075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591076   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591077   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1591078   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591079   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1591080   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1591081   +   end;
MPRINT(EM_DIAGRAM):   end;
1591082   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591083   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1591084   +   end;
MPRINT(EM_DIAGRAM):   end;
1591085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591086   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1591087   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591088   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591089   +   end;
MPRINT(EM_DIAGRAM):   end;
1591090   +end;
MPRINT(EM_DIAGRAM):   end;
1591091   +
1591092   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1591093   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1591094   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1591095   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1591096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591098   +end;
MPRINT(EM_DIAGRAM):   end;
1591099   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591100   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591101   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1591102   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591103   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1591104   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1591105   +   end;
MPRINT(EM_DIAGRAM):   end;
1591106   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1591107   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1591108   +   end;
MPRINT(EM_DIAGRAM):   end;
1591109   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591110   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1591111   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591112   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591113   +   end;
MPRINT(EM_DIAGRAM):   end;
1591114   +end;
MPRINT(EM_DIAGRAM):   end;
1591115   +
1591116   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1591117   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1591118   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1591119   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1591120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591122   +end;
MPRINT(EM_DIAGRAM):   end;
1591123   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591124   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1591125   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1591126   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591127   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1591128   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1591129   +   end;
MPRINT(EM_DIAGRAM):   end;
1591130   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1591131   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1591132   +   end;
MPRINT(EM_DIAGRAM):   end;
1591133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591134   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1591135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591137   +   end;
MPRINT(EM_DIAGRAM):   end;
1591138   +end;
MPRINT(EM_DIAGRAM):   end;
1591139   +
1591140   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1591141   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1591142   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1591143   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1591144   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1591145   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1591146   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1591147   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1591148   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1591149   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1591150   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1591151   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1591152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591154   +end;
MPRINT(EM_DIAGRAM):   end;
1591155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591156   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1591157   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1591158   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591159   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1591160   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1591161   +   end;
MPRINT(EM_DIAGRAM):   end;
1591162   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1591163   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1591164   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1591165   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1591166   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1591167   +   end;
MPRINT(EM_DIAGRAM):   end;
1591168   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1591169   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1591170   +   end;
MPRINT(EM_DIAGRAM):   end;
1591171   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1591172   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1591173   +   end;
MPRINT(EM_DIAGRAM):   end;
1591174   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1591175   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1591176   +   end;
MPRINT(EM_DIAGRAM):   end;
1591177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591178   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1591179   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1591180   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1591181   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1591182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591184   +   end;
MPRINT(EM_DIAGRAM):   end;
1591185   +end;
MPRINT(EM_DIAGRAM):   end;
1591186   +
1591187   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1591188   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1591189   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1591190   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1591191   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1591192   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1591193   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1591194   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1591195   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1591196   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1591197   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1591198   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1591199   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1591200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591202   +end;
MPRINT(EM_DIAGRAM):   end;
1591203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591204   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1591205   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1591206   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591207   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1591208   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1591209   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1591210   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1591211   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1591212   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1591213   +         end;
MPRINT(EM_DIAGRAM):   end;
1591214   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1591215   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1591216   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1591217   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1591218   +            end;
MPRINT(EM_DIAGRAM):   end;
1591219   +         end;
MPRINT(EM_DIAGRAM):   end;
1591220   +      end;
MPRINT(EM_DIAGRAM):   end;
1591221   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1591222   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1591223   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1591224   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1591225   +         end;
MPRINT(EM_DIAGRAM):   end;
1591226   +      end;
MPRINT(EM_DIAGRAM):   end;
1591227   +   end;
MPRINT(EM_DIAGRAM):   end;
1591228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591229   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1591230   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1591231   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1591232   +      end;
MPRINT(EM_DIAGRAM):   end;
1591233   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1591234   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1591235   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1591236   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1591237   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1591238   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1591239   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1591240   +         end;
MPRINT(EM_DIAGRAM):   end;
1591241   +      end;
MPRINT(EM_DIAGRAM):   end;
1591242   +   end;
MPRINT(EM_DIAGRAM):   end;
1591243   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1591244   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1591245   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1591246   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1591247   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1591248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1591249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591250   +   end;
MPRINT(EM_DIAGRAM):   end;
1591251   +end;
MPRINT(EM_DIAGRAM):   end;
1591252   +
1591253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591254   +*** Checking missing input Interval
1591255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1591256   +
1591257   +IF NMISS(
1591258   +   AcceptedCmpTotal ,
1591259   +   Age ,
1591260   +   Frq ,
1591261   +   Income ,
1591262   +   Kidhome ,
1591263   +   Mnt ,
1591264   +   MntFishProducts ,
1591265   +   MntFruits ,
1591266   +   MntGoldProds ,
1591267   +   MntMeatProducts ,
1591268   +   MntSweetProducts ,
1591269   +   MntWines ,
1591270   +   MonthsAsCustomer ,
1591271   +   NumCatalogPurchases ,
1591272   +   NumDealsPurchases ,
1591273   +   NumDistPurchases ,
1591274   +   NumStorePurchases ,
1591275   +   NumWebPurchases ,
1591276   +   NumWebVisitsMonth ,
1591277   +   RFMstat ,
1591278   +   RMntFrq ,
1591279   +   Recency ,
1591280   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1591281   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1591282   +
1591283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591284   +END;
MPRINT(EM_DIAGRAM):   END;
1591285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591286   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1591287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591288   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591289   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1591290   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1591291   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1591292   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1591293   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1591294   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1591295   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1591296   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1591297   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1591298   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1591299   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1591300   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1591301   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1591302   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1591303   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1591304   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1591305   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1591306   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1591307   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1591308   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1591309   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1591310   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1591311   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1591312   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1591313   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1591314   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1591315   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1591316   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1591317   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1591318   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1591319   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1591320   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1591321   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1591322   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1591323   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1591324   +END;
MPRINT(EM_DIAGRAM):   END;
1591325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591326   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1591327   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1591328   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1591329   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1591330   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1591331   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1591332   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1591333   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1591334   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1591335   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1591336   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1591337   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1591338   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1591339   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1591340   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1591341   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1591342   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1591343   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1591344   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1591345   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1591346   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1591347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1591348   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1591349   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1591350   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1591351   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1591352   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1591353   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1591354   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1591355   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1591356   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1591357   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1591358   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1591359   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1591360   +   ELSE S_NumCatalogPurchases
1591361   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1591362   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1591363   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1591364   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1591365   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1591366   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1591367   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1591368   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1591369   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1591370   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1591371   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1591372   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1591373   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1591374   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1591375   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1591376   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1591377   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1591378   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1591379   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1591380   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1591381   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1591382   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1591383   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1591384   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1591385   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1591386   +END;
MPRINT(EM_DIAGRAM):   END;
1591387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591388   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1591389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591391   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1591392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591394   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1591395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591396   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591397   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1591398   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1591399   +        S_Income  +    -0.45967008908227 * S_Kidhome
1591400   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1591401   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1591402   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1591403   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1591404   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1591405   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1591406   +          +    -0.23353175442713 * S_NumDealsPurchases
1591407   +          +     0.18635522192442 * S_NumDistPurchases
1591408   +          +     0.37209457890956 * S_NumStorePurchases
1591409   +          +     0.25018232304823 * S_NumWebPurchases
1591410   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1591411   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1591412   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1591413   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1591414   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1591415   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1591416   +        S_Income  +     0.23329613045589 * S_Kidhome
1591417   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1591418   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1591419   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1591420   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1591421   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1591422   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1591423   +          +    -0.09699498622435 * S_NumDealsPurchases
1591424   +          +     0.40364070798795 * S_NumDistPurchases
1591425   +          +      0.2162579072164 * S_NumStorePurchases
1591426   +          +     0.26248410135079 * S_NumWebPurchases
1591427   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1591428   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1591429   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1591430   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1591431   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1591432   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1591433   +        S_Income  +     0.20139862021528 * S_Kidhome
1591434   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1591435   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1591436   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1591437   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1591438   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1591439   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1591440   +          +     0.09066191700879 * S_NumDealsPurchases
1591441   +          +    -0.05769000978222 * S_NumDistPurchases
1591442   +          +    -0.10089591692167 * S_NumStorePurchases
1591443   +          +    -0.00088654116561 * S_NumWebPurchases
1591444   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1591445   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1591446   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1591447   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1591448   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1591449   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1591450   +        S_Income  +      0.2502648333687 * S_Kidhome
1591451   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1591452   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1591453   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1591454   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1591455   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1591456   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1591457   +          +     0.83424444661619 * S_NumDealsPurchases
1591458   +          +     0.31333214543205 * S_NumDistPurchases
1591459   +          +    -0.61732647242019 * S_NumStorePurchases
1591460   +          +    -1.01955156895052 * S_NumWebPurchases
1591461   +          +     0.13017609997428 * S_NumWebVisitsMonth
1591462   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1591463   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1591464   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1591465   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1591466   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1591467   +        S_Income  +    -0.70952256145726 * S_Kidhome
1591468   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1591469   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1591470   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1591471   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1591472   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1591473   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1591474   +          +     0.63522682456102 * S_NumDealsPurchases
1591475   +          +      0.0043057429215 * S_NumDistPurchases
1591476   +          +    -0.76667751707574 * S_NumStorePurchases
1591477   +          +    -0.73436881033241 * S_NumWebPurchases
1591478   +          +     1.59331554601341 * S_NumWebVisitsMonth
1591479   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1591480   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1591481   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1591482   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1591483   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1591484   +        S_Income  +    -0.23632967504194 * S_Kidhome
1591485   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1591486   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1591487   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1591488   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1591489   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1591490   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1591491   +          +     -0.3032858959477 * S_NumDealsPurchases
1591492   +          +     0.11343979556999 * S_NumDistPurchases
1591493   +          +     0.19545021266061 * S_NumStorePurchases
1591494   +          +      0.1566777684546 * S_NumWebPurchases
1591495   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1591496   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1591497   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1591498   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1591499   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1591500   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1591501   +        S_Income  +    -0.47847362741737 * S_Kidhome
1591502   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1591503   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1591504   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1591505   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1591506   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1591507   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1591508   +          +    -0.17510289915098 * S_NumDealsPurchases
1591509   +          +     0.16952490494417 * S_NumDistPurchases
1591510   +          +     0.11152117614204 * S_NumStorePurchases
1591511   +          +     0.22594341376741 * S_NumWebPurchases
1591512   +          +     0.64523546369354 * S_NumWebVisitsMonth
1591513   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1591514   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1591515   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1591516   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1591517   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1591518   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1591519   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1591520   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1591521   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1591522   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1591523   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1591524   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1591525   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1591526   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1591527   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1591528   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1591529   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1591530   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1591531   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1591532   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1591533   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1591534   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1591535   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1591536   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1591537   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1591538   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1591539   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1591540   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1591541   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1591542   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1591543   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1591544   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1591545   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1591546   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1591547   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1591548   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1591549   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1591550   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1591551   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1591552   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1591553   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1591554   +          +     0.42319965972117 * Marital_StatusDivorced
1591555   +          +    -0.45015157317991 * Marital_StatusMarried
1591556   +          +     0.43076106925345 * Marital_StatusSingle
1591557   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1591558   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1591559   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1591560   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1591561   +          +     0.11384347873072 * Marital_StatusDivorced
1591562   +          +     0.51442453272823 * Marital_StatusMarried
1591563   +          +    -0.38966058028661 * Marital_StatusSingle
1591564   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1591565   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1591566   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1591567   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1591568   +          +    -0.05213342781535 * Marital_StatusDivorced
1591569   +          +     0.07520352092928 * Marital_StatusMarried
1591570   +          +     0.20175107471623 * Marital_StatusSingle
1591571   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1591572   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1591573   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1591574   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1591575   +          +    -0.40635592200933 * Marital_StatusDivorced
1591576   +          +     0.64772941459031 * Marital_StatusMarried
1591577   +          +    -0.36402842056603 * Marital_StatusSingle
1591578   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1591579   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1591580   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1591581   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1591582   +          +     0.87932592764844 * Marital_StatusDivorced
1591583   +          +    -0.85946473083734 * Marital_StatusMarried
1591584   +          +     0.74505733668545 * Marital_StatusSingle
1591585   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1591586   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1591587   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1591588   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1591589   +          +    -0.11861748280641 * Marital_StatusDivorced
1591590   +          +    -0.15869097739395 * Marital_StatusMarried
1591591   +          +     0.34415019828259 * Marital_StatusSingle
1591592   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1591593   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1591594   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1591595   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1591596   +          +     0.14995740697816 * Marital_StatusDivorced
1591597   +          +    -1.01788822114068 * Marital_StatusMarried
1591598   +          +     0.70532758126153 * Marital_StatusSingle
1591599   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1591600   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1591601   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1591602   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1591603   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1591604   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1591605   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1591606   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1591607   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1591608   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1591609   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1591610   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1591611   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1591612   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1591613   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1591614   +END;
MPRINT(EM_DIAGRAM):   END;
1591615   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591616   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1591617   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1591618   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1591619   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1591620   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1591621   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1591622   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1591623   +END;
MPRINT(EM_DIAGRAM):   END;
1591624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591625   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1591626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591627   +
1591628   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1591629   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1591630   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1591631   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1591632   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1591633   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1591634   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1591635   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1591636   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1591637   +end;
MPRINT(EM_DIAGRAM):   end;
1591638   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591639   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1591640   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1591641   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1591642   +   end;
MPRINT(EM_DIAGRAM):   end;
1591643   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1591644   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1591645   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1591646   +   end;
MPRINT(EM_DIAGRAM):   end;
1591647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1591648   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1591649   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1591650   +   end;
MPRINT(EM_DIAGRAM):   end;
1591651   +end;
MPRINT(EM_DIAGRAM):   end;
1591652   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1591653   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1591654   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1591655   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1591656   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1591657   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1591658   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1591659   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1591660   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1591661   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1591662   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1591663   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1591664   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1591665   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1591666   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1591667   +END;
MPRINT(EM_DIAGRAM):   END;
1591668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1591669   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1591670   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1591671   +END;
MPRINT(EM_DIAGRAM):   END;
1591672   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1591673   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1591674   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1591675   +END;
MPRINT(EM_DIAGRAM):   END;
1591676   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1591677   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1591678   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1591679   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1591680   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1591681   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1591682   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1591683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591684   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1591685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1591686   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1591687   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1591688   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1591689   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1591690   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1591691   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1591692   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1591693   +END;
MPRINT(EM_DIAGRAM):   END;
1591694   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1591695   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1591696   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1591697   +drop
1591698   +H11
1591699   +H12
1591700   +H13
1591701   +H14
1591702   +H15
1591703   +H16
1591704   +H17
1591705   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1591706   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1591707   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1591708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591709   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1591710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591711   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1591712   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1591713   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1591714   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1591715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591716   +* Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
1591717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591718   +length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
1591719   +drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
1591720   +Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
1591721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591722   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1591723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591724   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1591725   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1591726   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1591727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591728   +* Ensmbl31: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Voting to produce predicted target;
1591729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591730   +array Ensmbl31_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl31_post{2} _temporary_;
1591731   +array Ensmbl31_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl31_count{2} _temporary_;
1591732   +array Ensmbl31_level{2} $32 _temporary_ (
1591733   +"1"
1591734   +"0"
1591735   +);
MPRINT(EM_DIAGRAM):   array Ensmbl31_level{2} $32 _temporary_ ( "1" "0" );
1591736   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1591737   +Ensmbl31_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{i} = 0;
1591738   +Ensmbl31_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{i} = 0;
1591739   +end;
MPRINT(EM_DIAGRAM):   end;
1591740   +if Reg5_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl31_level{1} then do;
1591741   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591742   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg5_P_DepVar1;
1591743   +end;
MPRINT(EM_DIAGRAM):   end;
1591744   +if Reg_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl31_level{1} then do;
1591745   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591746   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Reg_P_DepVar1;
1591747   +end;
MPRINT(EM_DIAGRAM):   end;
1591748   +if Neural4_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl31_level{1} then do;
1591749   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591750   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural4_P_DepVar1;
1591751   +end;
MPRINT(EM_DIAGRAM):   end;
1591752   +if Neural2_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl31_level{1} then do;
1591753   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591754   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural2_P_DepVar1;
1591755   +end;
MPRINT(EM_DIAGRAM):   end;
1591756   +if Neural3_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl31_level{1} then do;
1591757   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591758   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural3_P_DepVar1;
1591759   +end;
MPRINT(EM_DIAGRAM):   end;
1591760   +if Neural9_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl31_level{1} then do;
1591761   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591762   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural9_P_DepVar1;
1591763   +end;
MPRINT(EM_DIAGRAM):   end;
1591764   +if Neural10_I_DepVar = Ensmbl31_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl31_level{1} then do;
1591765   +Ensmbl31_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{1} + 1;
1591766   +Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{1}=Ensmbl31_post{1}+ Neural10_P_DepVar1;
1591767   +end;
MPRINT(EM_DIAGRAM):   end;
1591768   +if Reg5_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl31_level{2} then do;
1591769   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591770   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg5_P_DepVar0;
1591771   +end;
MPRINT(EM_DIAGRAM):   end;
1591772   +if Reg_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl31_level{2} then do;
1591773   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591774   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Reg_P_DepVar0;
1591775   +end;
MPRINT(EM_DIAGRAM):   end;
1591776   +if Neural4_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl31_level{2} then do;
1591777   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591778   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural4_P_DepVar0;
1591779   +end;
MPRINT(EM_DIAGRAM):   end;
1591780   +if Neural2_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl31_level{2} then do;
1591781   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591782   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural2_P_DepVar0;
1591783   +end;
MPRINT(EM_DIAGRAM):   end;
1591784   +if Neural3_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl31_level{2} then do;
1591785   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591786   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural3_P_DepVar0;
1591787   +end;
MPRINT(EM_DIAGRAM):   end;
1591788   +if Neural9_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl31_level{2} then do;
1591789   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591790   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural9_P_DepVar0;
1591791   +end;
MPRINT(EM_DIAGRAM):   end;
1591792   +if Neural10_I_DepVar = Ensmbl31_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl31_level{2} then do;
1591793   +Ensmbl31_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl31_count{2} + 1;
1591794   +Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl31_post{2}=Ensmbl31_post{2}+ Neural10_P_DepVar0;
1591795   +end;
MPRINT(EM_DIAGRAM):   end;
1591796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591797   +* Ensmbl31: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Determine Into Variable;
1591798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591799   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1591800   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1591801   +vote_count = max(
1591802   +Ensmbl31_count{1} ,
1591803   +Ensmbl31_count{2}
1591804   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl31_count{1} , Ensmbl31_count{2} );
1591805   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1591806   +if Ensmbl31_count{i}=vote_count and Ensmbl31_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl31_count{i}=vote_count and Ensmbl31_post{i}>vote_post then do;
1591807   +I_DepVar = Ensmbl31_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl31_level{i};
1591808   +vote_post = Ensmbl31_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl31_count{i};
1591809   +end;
MPRINT(EM_DIAGRAM):   end;
1591810   +end;
MPRINT(EM_DIAGRAM):   end;
1591811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591812   +* Ensmbl31: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Compute posterior vars using models predicting the chosen 
level;
1591813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591814   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1591815   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1591816   +if I_DepVar = Reg5_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg5_I_DepVar then do;
1591817   +P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
1591818   +P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
1591819   +end;
MPRINT(EM_DIAGRAM):   end;
1591820   +if I_DepVar = Reg_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg_I_DepVar then do;
1591821   +P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
1591822   +P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
1591823   +end;
MPRINT(EM_DIAGRAM):   end;
1591824   +if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
1591825   +P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
1591826   +P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
1591827   +end;
MPRINT(EM_DIAGRAM):   end;
1591828   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1591829   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1591830   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1591831   +end;
MPRINT(EM_DIAGRAM):   end;
1591832   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1591833   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1591834   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1591835   +end;
MPRINT(EM_DIAGRAM):   end;
1591836   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1591837   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1591838   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1591839   +end;
MPRINT(EM_DIAGRAM):   end;
1591840   +if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
1591841   +P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
1591842   +P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
1591843   +end;
MPRINT(EM_DIAGRAM):   end;
1591844   +* Ensmbl31: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Averaging posterior;
1591845   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1591846   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1591847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591848   +* Ensmbl31: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Producing Unformatted variable;
1591849   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591850   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1591851   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1591852   +else
1591853   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1591854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591855   +* Ensmbl31: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Computing _WARN_ Variable;
1591856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591857   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1591858   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1591859   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1591860   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1591861   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1591862   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1591863   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1591864   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1591865   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1591866   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1591867   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1591868   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1591869   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1591870   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1591871   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1591872   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1591873   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1591874   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1591875   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1591876   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1591877   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1591878   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1591879   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1591880   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1591881   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1591882   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1591883   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1591884   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1591884  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1591885   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1591885  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1591886   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1591886  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1591887   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1591887  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1591888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591889   +* Ensmbl31: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Computing Residual Vars;
1591890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1591891   +if
1591892   +F_DepVar NE '1'
1591893   +AND F_DepVar NE '0'
1591894   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1591895   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1591896   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1591897   +end;
MPRINT(EM_DIAGRAM):   end;
1591898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1591899   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1591900   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1591901   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1591902   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1591903   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1591904   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1591905   +END;
MPRINT(EM_DIAGRAM):   END;
1591906   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1591907    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL31_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1591908    quit;
1591909    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl31_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl31_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl31_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1591969    filename _pref
1591969  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1591970    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1591971    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1591972   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1591973   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1591974   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1591975   +
1591976   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1591977   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1591978   +
1591979   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1591980   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1591981   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1591982   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1591983   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1591984   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1591985   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1591986   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1591987   +
1591988   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1591989   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1591990   +
1591991   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1591992   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1591993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1591994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1591995   +end;
MPRINT(EM_DIAGRAM):   end;
1591996   +
1591997   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1591998   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1591999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592001   +end;
MPRINT(EM_DIAGRAM):   end;
1592002   +
1592003   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1592004   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1592005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592007   +end;
MPRINT(EM_DIAGRAM):   end;
1592008   +
1592009   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1592010   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1592011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592013   +end;
MPRINT(EM_DIAGRAM):   end;
1592014   +
1592015   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1592016   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1592017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592019   +end;
MPRINT(EM_DIAGRAM):   end;
1592020   +
1592021   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1592022   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1592023   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592025   +end;
MPRINT(EM_DIAGRAM):   end;
1592026   +
1592027   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1592028   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1592029   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592030   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592031   +end;
MPRINT(EM_DIAGRAM):   end;
1592032   +
1592033   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1592034   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1592035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592037   +end;
MPRINT(EM_DIAGRAM):   end;
1592038   +
1592039   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1592040   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1592041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592043   +end;
MPRINT(EM_DIAGRAM):   end;
1592044   +
1592045   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1592046   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1592047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592049   +end;
MPRINT(EM_DIAGRAM):   end;
1592050   +
1592051   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1592052   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1592053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592055   +end;
MPRINT(EM_DIAGRAM):   end;
1592056   +
1592057   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1592058   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1592059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592061   +end;
MPRINT(EM_DIAGRAM):   end;
1592062   +
1592063   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1592064   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1592065   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1592066   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1592067   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1592068   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1592069   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1592070   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1592071   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1592072   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1592073   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1592074   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1592075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592077   +end;
MPRINT(EM_DIAGRAM):   end;
1592078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1592079   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1592080   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1592081   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1592082   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1592083   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1592084   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1592085   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1592086   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1592087   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592088   +         end;
MPRINT(EM_DIAGRAM):   end;
1592089   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1592090   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1592091   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1592092   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592093   +            end;
MPRINT(EM_DIAGRAM):   end;
1592094   +         end;
MPRINT(EM_DIAGRAM):   end;
1592095   +      end;
MPRINT(EM_DIAGRAM):   end;
1592096   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1592097   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1592098   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1592099   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592100   +         end;
MPRINT(EM_DIAGRAM):   end;
1592101   +      end;
MPRINT(EM_DIAGRAM):   end;
1592102   +   end;
MPRINT(EM_DIAGRAM):   end;
1592103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1592104   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1592105   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1592106   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592107   +      end;
MPRINT(EM_DIAGRAM):   end;
1592108   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1592109   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1592110   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1592111   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1592112   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1592113   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1592114   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592115   +         end;
MPRINT(EM_DIAGRAM):   end;
1592116   +      end;
MPRINT(EM_DIAGRAM):   end;
1592117   +   end;
MPRINT(EM_DIAGRAM):   end;
1592118   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1592119   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1592120   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1592121   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1592122   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1592123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1592124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592125   +   end;
MPRINT(EM_DIAGRAM):   end;
1592126   +end;
MPRINT(EM_DIAGRAM):   end;
1592127   +
1592128   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1592129   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1592130   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1592131   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1592132   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1592133   +end;
MPRINT(EM_DIAGRAM):   end;
1592134   +
1592135   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1592136   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1592137   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1592138   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1592139   +
1592140   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1592141   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1592142   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1592143   +
1592144   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1592145   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1592146   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1592147   +
1592148   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1592149   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1592150   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1592151   +
1592152   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1592153   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1592154   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1592155   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1592156   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1592157   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1592158   +
1592159   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1592160   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1592161   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1592162   +
1592163   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1592164   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1592165   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1592166   +
1592167   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1592168   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1592169   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1592170   +
1592171   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1592172   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1592173   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1592174   +
1592175   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1592176   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1592177   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1592178   +
1592179   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1592180   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1592181   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1592182   +
1592183   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1592184   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1592185   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1592186   +
1592187   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1592188   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1592189   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1592190   +
1592191   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1592192   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1592193   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1592194   +
1592195   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1592196   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1592197   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1592198   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1592199   +
1592200   +REG5DR1:
1592201   +
1592202   +
1592203   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1592204   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1592205   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1592206   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1592207   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1592208   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1592209   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1592210   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1592211   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1592212   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1592213   +end;
MPRINT(EM_DIAGRAM):   end;
1592214   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1592215   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1592216   +
1592217   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1592218   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1592219   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592220    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592221    quit;
1592222    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592223    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592224    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592225    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1592226    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592228    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592229    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592231    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1592232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592234    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592235    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592236    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592238    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1592239    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1592240    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592242    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592244    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592246    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592247    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592248    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592248  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

1592249    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592250    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592252    filename _pref
1592252  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1592253    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592254    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1592255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592256   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1592257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592258   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1592259   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1592260   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592261    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592262    quit;
1592263    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592264    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592265    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592266    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1592267    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592269    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592272    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1592273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592275    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592276    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592277    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592278    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592279    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1592280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1592281    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592282    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592284    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592285    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592286    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592287    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592288    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592289    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592289  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1592290    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592291    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592292    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592293    filename _pref
1592293  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1592294    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592295    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1592296   +
1592297   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1592298   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1592298  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1592299   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1592300   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1592301   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1592302   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1592303   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592304    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592305    quit;
1592306    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592307    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592308    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592309    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1592310    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592312    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592315    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1592316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592318    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592319    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592320    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592322    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1592323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592324    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592327    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592328    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592330    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592331    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592332    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592332  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1592333    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592334    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592336    filename _pref
1592336  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1592337    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592338    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1592339   +
1592340   +
1592341   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1592342   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1592343   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1592344   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1592345   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1592346   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592347   +
1592348   +
1592349   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1592350   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1592351   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1592352   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1592353   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1592354   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592355   +
1592356   +
1592357   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1592358   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1592359   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1592360   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1592361   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1592362   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592363   +
1592364   +
1592365   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1592366   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1592367   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1592368   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1592369   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1592370   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592371   +
1592372   +
1592373   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1592374   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1592375   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1592376   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1592377   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1592378   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592379   +
1592380   +
1592381   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1592382   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1592383   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1592384   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1592385   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1592386   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592387   +
1592388   +
1592389   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1592390   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1592391   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1592392   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1592393   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1592394   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592395   +
1592396   +
1592397   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1592398   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1592399   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1592400   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1592401   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1592402   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592403   +if
1592404   +_FILTERNORM1 not in ( '.')
1592405   + and
1592406   +_FILTERNORM2 not in ( '.')
1592407   + and
1592408   +_FILTERNORM3 not in ( '.')
1592409   + and
1592410   +_FILTERNORM4 not in ( '.')
1592411   + and
1592412   +_FILTERNORM5 not in ( '.')
1592413   + and
1592414   +_FILTERNORM6 not in ( '.')
1592415   + and
1592416   +_FILTERNORM7 not in ( ' ')
1592417   + and
1592418   +_FILTERNORM8 not in ( ' ')
1592419   +and
1592420   +( Dt_Customer ne .)
1592421   +and ( Income ne . and (Income<=107000))
1592422   +and ( Kidhome ne .)
1592423   +and ( MntFishProducts ne .)
1592424   +and ( MntFruits ne .)
1592425   +and ( MntGoldProds ne .)
1592426   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1592427   +and ( MntSweetProducts ne .)
1592428   +and ( MntWines ne .)
1592429   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1592430   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1592431   +and ( NumStorePurchases ne .)
1592432   +and ( NumWebPurchases ne .)
1592433   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1592434   +and ( Recency ne .)
1592435   +and ( Teenhome ne .)
1592436   +and ( Year_Birth ne .)
1592437   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1592438   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1592439   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1592440   +end;
MPRINT(EM_DIAGRAM):   end;
1592441   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1592442   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592443    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592444    quit;
1592445    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592446    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592447    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592448    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1592449    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592451    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592452    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592454    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1592455    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592456    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592457    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592458    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592459    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592460    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592461    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1592462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1592463    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592464    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592465    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592466    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592467    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592468    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592469    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592470    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592471    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592471  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1592472    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592473    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592474    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592475    %macro varDept(fcmpdata=,id=);
1592476    %global nobs&id scoreFlag&id;
1592477    %let scoreFlag&id = 0;
1592478    %if &id=1 or ^&fcmpStart %then %do;
1592479    proc sort data=&fcmpdata out=_temp&id nodupkey;
1592480    by NAME;
1592481    where id=&id and LHS in( %let j=1;
1592482    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1592483    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1592484    "&var" %let j = %eval(&j+1);
1592485    %end;
1592486    );
1592487    run;
1592488    %let dsid = %sysfunc(open(_temp&id));
1592489    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1592490    %let dsid = %sysfunc(close(&dsid));
1592491    %if &&nobs&id %then %do;
1592492    %let scoreFlag&id = 1;
1592493    %let fcmpStart = 1;
1592494    %end;
1592495    %else %let fcmpStart = 0;
1592496    %end;
1592497    %else %do;
1592498    proc sort data=&fcmpdata out=_tempid;
1592499    where id=&id;
1592500    by LHS;
1592501    run;
1592502    %let dsid = %sysfunc(open(_tempid));
1592503    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1592504    %let dsid = %sysfunc(close(&dsid));
1592505    %if ^&&nobs&id %then %do;
1592506    proc datasets lib=work nolist;
1592507    delete _tempid;
1592508    run;
1592509    quit;
1592510    %end;
1592511    %else %do;
1592512    data _tempAll;
1592513    set %let j=%eval(&id-1);
1592514    %do x=1 %to &j;
1592515    %if &&nobs&x %then %do;
1592516    _temp&x %end;
1592517    %end;
1592518    ;
1592519    run;
1592520    proc sql;
1592521    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1592521  ! work._tempid p2 where p.name=p2.lhs;
1592522    quit;
1592523    data _temp&id;
1592524    set _temp&id;
1592525    where LHS ne '' and NAME ne '' and Node ne '';
1592526    run;
1592527    proc datasets lib=work nolist;
1592528    delete _tempAll;
1592529    run;
1592530    %let dsid = %sysfunc(open(_temp&id));
1592531    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1592532    %let dsid = %sysfunc(close(&dsid));
1592533    %if ^&&nobs&id %then %do;
1592534    proc datasets lib=work nolist;
1592535    delete _temp&id;
1592536    run;
1592537    quit;
1592538    %end;
1592539    %else %do;
1592540    %let scoreFlag&id = 1;
1592541    data _temp&id;
1592542    set _temp&id;
1592543    where LHS ne NAME and node ne '';
1592544    run;
1592545    %let dsid = %sysfunc(open(_temp&id));
1592546    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1592547    %let dsid = %sysfunc(close(&dsid));
1592548    %if ^&&nobs&id %then %do;
1592549    proc datasets lib=work nolist;
1592550    delete _temp&id;
1592551    run;
1592552    quit;
1592553    %end;
1592554    %else %do;
1592555    proc sort data=_temp&id nodupkey;
1592556    by LHS NAME;
1592557    run;
1592558    %end;
1592559    %end;
1592560    %end;
1592561    %end;
1592562    %mend varDept;
1592563    %macro optCode(outdata=fcmpdata);
1592564    %global fcmpStart;
1592565    %let fcmpStart = 0;
1592566    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1592567    %let NumNodes=9;
1592568    %do k=1 %to &NumNodes;
1592569    %vardept(fcmpdata=&outdata, id=&k);
1592570    %end;
1592571    %mend optCode;
1592572    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1592573    filename _pref
1592573  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1592574    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592575    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1592576   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1592577   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1592578   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1592579   +
1592580   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1592581   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1592582   +
1592583   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1592584   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1592585   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1592586   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1592587   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1592588   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1592589   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1592590   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1592591   +
1592592   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1592593   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1592594   +
1592595   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1592596   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1592597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592599   +end;
MPRINT(EM_DIAGRAM):   end;
1592600   +
1592601   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1592602   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1592603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592605   +end;
MPRINT(EM_DIAGRAM):   end;
1592606   +
1592607   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1592608   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1592609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592611   +end;
MPRINT(EM_DIAGRAM):   end;
1592612   +
1592613   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1592614   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1592615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592617   +end;
MPRINT(EM_DIAGRAM):   end;
1592618   +
1592619   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1592620   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1592621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592623   +end;
MPRINT(EM_DIAGRAM):   end;
1592624   +
1592625   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1592626   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1592627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592629   +end;
MPRINT(EM_DIAGRAM):   end;
1592630   +
1592631   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1592632   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1592633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592635   +end;
MPRINT(EM_DIAGRAM):   end;
1592636   +
1592637   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1592638   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1592639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592641   +end;
MPRINT(EM_DIAGRAM):   end;
1592642   +
1592643   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1592644   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1592645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592647   +end;
MPRINT(EM_DIAGRAM):   end;
1592648   +
1592649   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1592650   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1592651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592653   +end;
MPRINT(EM_DIAGRAM):   end;
1592654   +
1592655   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1592656   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1592657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592659   +end;
MPRINT(EM_DIAGRAM):   end;
1592660   +
1592661   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1592662   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1592663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592665   +end;
MPRINT(EM_DIAGRAM):   end;
1592666   +
1592667   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1592668   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1592669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592671   +end;
MPRINT(EM_DIAGRAM):   end;
1592672   +
1592673   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1592674   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1592675   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1592676   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1592677   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1592678   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1592679   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1592680   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1592681   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1592682   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1592683   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1592684   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1592685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1592686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592687   +end;
MPRINT(EM_DIAGRAM):   end;
1592688   +else do;
MPRINT(EM_DIAGRAM):   else do;
1592689   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1592690   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1592691   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1592692   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1592693   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1592694   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1592695   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1592696   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1592697   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592698   +         end;
MPRINT(EM_DIAGRAM):   end;
1592699   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1592700   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1592701   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1592702   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592703   +            end;
MPRINT(EM_DIAGRAM):   end;
1592704   +         end;
MPRINT(EM_DIAGRAM):   end;
1592705   +      end;
MPRINT(EM_DIAGRAM):   end;
1592706   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1592707   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1592708   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1592709   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592710   +         end;
MPRINT(EM_DIAGRAM):   end;
1592711   +      end;
MPRINT(EM_DIAGRAM):   end;
1592712   +   end;
MPRINT(EM_DIAGRAM):   end;
1592713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1592714   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1592715   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1592716   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592717   +      end;
MPRINT(EM_DIAGRAM):   end;
1592718   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1592719   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1592720   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1592721   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1592722   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1592723   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1592724   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1592725   +         end;
MPRINT(EM_DIAGRAM):   end;
1592726   +      end;
MPRINT(EM_DIAGRAM):   end;
1592727   +   end;
MPRINT(EM_DIAGRAM):   end;
1592728   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1592729   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1592730   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1592731   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1592732   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1592733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1592734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1592735   +   end;
MPRINT(EM_DIAGRAM):   end;
1592736   +end;
MPRINT(EM_DIAGRAM):   end;
1592737   +
1592738   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1592739   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1592740   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1592741   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1592742   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1592743   +end;
MPRINT(EM_DIAGRAM):   end;
1592744   +
1592745   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1592746   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1592747   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1592748   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1592749   +
1592750   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1592751   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1592752   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1592753   +
1592754   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1592755   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1592756   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1592757   +
1592758   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1592759   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1592760   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1592761   +
1592762   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1592763   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1592764   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1592765   +
1592766   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1592767   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1592768   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1592769   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1592770   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1592771   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1592772   +
1592773   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1592774   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1592775   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1592776   +
1592777   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1592778   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1592779   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1592780   +
1592781   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1592782   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1592783   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1592784   +
1592785   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1592786   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1592787   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1592788   +
1592789   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1592790   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1592791   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1592792   +
1592793   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1592794   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1592795   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1592796   +
1592797   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1592798   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1592799   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1592800   +
1592801   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1592802   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1592803   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1592804   +
1592805   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1592806   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1592807   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1592808   +
1592809   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1592810   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1592811   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1592812   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1592813   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1592814   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1592815   +end;
MPRINT(EM_DIAGRAM):   end;
1592816   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1592817   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1592818   +
1592819   +REGDR1:
1592820   +
1592821   +
1592822   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1592823   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1592824   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1592825   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1592826   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1592827   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1592828   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1592829   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1592830   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1592831   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1592832   +end;
MPRINT(EM_DIAGRAM):   end;
1592833   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1592834   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1592835   +
1592836   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1592837   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1592838   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592839    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592840    quit;
1592841    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592842    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592843    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592844    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1592845    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592847    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592848    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592850    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1592851    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592852    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592853    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592854    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592855    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592856    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592857    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1592858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1592859    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592862    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592863    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592864    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592865    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592866    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592867    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592867  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

1592868    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592869    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592871    filename _pref
1592871  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1592872    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592873    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1592874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592875   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1592876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1592877   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1592878   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1592879   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592880    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592881    quit;
1592882    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592883    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592884    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592885    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1592886    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592887    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592888    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592889    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592891    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1592892    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592894    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592895    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592896    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592897    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592898    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1592899    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1592900    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592901    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592903    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592904    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592905    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592906    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592907    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592908    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592908  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1592909    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592910    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592912    filename _pref
1592912  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1592913    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592914    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1592915   +
1592916   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1592917   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1592917  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1592918   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1592919   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1592920   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1592921   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1592922   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1592923    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1592924    quit;
1592925    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1592926    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1592927    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1592928    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1592929    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1592930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592931    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1592932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592934    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1592935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592937    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592938    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1592939    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1592940    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592941    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1592942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592943    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1592944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592946    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1592947    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1592948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1592949    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592950    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1592951    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1592951  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1592952    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1592953    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1592954    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1592955    filename _pref
1592955  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1592956    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1592957    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1592958   +
1592959   +
1592960   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1592961   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1592962   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1592963   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1592964   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1592965   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592966   +
1592967   +
1592968   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1592969   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1592970   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1592971   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1592972   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1592973   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592974   +
1592975   +
1592976   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1592977   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1592978   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1592979   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1592980   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1592981   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592982   +
1592983   +
1592984   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1592985   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1592986   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1592987   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1592988   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1592989   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592990   +
1592991   +
1592992   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1592993   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1592994   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1592995   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1592996   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1592997   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1592998   +
1592999   +
1593000   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1593001   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1593002   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1593003   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1593004   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1593005   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593006   +
1593007   +
1593008   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1593009   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1593010   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1593011   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1593012   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1593013   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593014   +
1593015   +
1593016   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1593017   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1593018   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1593019   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1593020   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1593021   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1593022   +if
1593023   +_FILTERNORM1 not in ( '.')
1593024   + and
1593025   +_FILTERNORM2 not in ( '.')
1593026   + and
1593027   +_FILTERNORM3 not in ( '.')
1593028   + and
1593029   +_FILTERNORM4 not in ( '.')
1593030   + and
1593031   +_FILTERNORM5 not in ( '.')
1593032   + and
1593033   +_FILTERNORM6 not in ( '.')
1593034   + and
1593035   +_FILTERNORM7 not in ( ' ')
1593036   + and
1593037   +_FILTERNORM8 not in ( ' ')
1593038   +and
1593039   +( Dt_Customer ne .)
1593040   +and ( Income ne . and (Income<=107000))
1593041   +and ( Kidhome ne .)
1593042   +and ( MntFishProducts ne .)
1593043   +and ( MntFruits ne .)
1593044   +and ( MntGoldProds ne .)
1593045   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1593046   +and ( MntSweetProducts ne .)
1593047   +and ( MntWines ne .)
1593048   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1593049   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1593050   +and ( NumStorePurchases ne .)
1593051   +and ( NumWebPurchases ne .)
1593052   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1593053   +and ( Recency ne .)
1593054   +and ( Teenhome ne .)
1593055   +and ( Year_Birth ne .)
1593056   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1593057   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1593058   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1593059   +end;
MPRINT(EM_DIAGRAM):   end;
1593060   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1593061   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593062    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593063    quit;
1593064    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593065    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593066    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593067    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1593068    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593070    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593071    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593072    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593073    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1593074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593076    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593077    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593078    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593080    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1593081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1593082    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593083    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593084    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593085    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593086    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593088    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593089    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593090    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593090  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1593091    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593092    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1593093    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593094    %macro varDept(fcmpdata=,id=);
1593095    %global nobs&id scoreFlag&id;
1593096    %let scoreFlag&id = 0;
1593097    %if &id=1 or ^&fcmpStart %then %do;
1593098    proc sort data=&fcmpdata out=_temp&id nodupkey;
1593099    by NAME;
1593100    where id=&id and LHS in( %let j=1;
1593101    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1593102    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1593103    "&var" %let j = %eval(&j+1);
1593104    %end;
1593105    );
1593106    run;
1593107    %let dsid = %sysfunc(open(_temp&id));
1593108    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593109    %let dsid = %sysfunc(close(&dsid));
1593110    %if &&nobs&id %then %do;
1593111    %let scoreFlag&id = 1;
1593112    %let fcmpStart = 1;
1593113    %end;
1593114    %else %let fcmpStart = 0;
1593115    %end;
1593116    %else %do;
1593117    proc sort data=&fcmpdata out=_tempid;
1593118    where id=&id;
1593119    by LHS;
1593120    run;
1593121    %let dsid = %sysfunc(open(_tempid));
1593122    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593123    %let dsid = %sysfunc(close(&dsid));
1593124    %if ^&&nobs&id %then %do;
1593125    proc datasets lib=work nolist;
1593126    delete _tempid;
1593127    run;
1593128    quit;
1593129    %end;
1593130    %else %do;
1593131    data _tempAll;
1593132    set %let j=%eval(&id-1);
1593133    %do x=1 %to &j;
1593134    %if &&nobs&x %then %do;
1593135    _temp&x %end;
1593136    %end;
1593137    ;
1593138    run;
1593139    proc sql;
1593140    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1593140  ! work._tempid p2 where p.name=p2.lhs;
1593141    quit;
1593142    data _temp&id;
1593143    set _temp&id;
1593144    where LHS ne '' and NAME ne '' and Node ne '';
1593145    run;
1593146    proc datasets lib=work nolist;
1593147    delete _tempAll;
1593148    run;
1593149    %let dsid = %sysfunc(open(_temp&id));
1593150    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593151    %let dsid = %sysfunc(close(&dsid));
1593152    %if ^&&nobs&id %then %do;
1593153    proc datasets lib=work nolist;
1593154    delete _temp&id;
1593155    run;
1593156    quit;
1593157    %end;
1593158    %else %do;
1593159    %let scoreFlag&id = 1;
1593160    data _temp&id;
1593161    set _temp&id;
1593162    where LHS ne NAME and node ne '';
1593163    run;
1593164    %let dsid = %sysfunc(open(_temp&id));
1593165    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1593166    %let dsid = %sysfunc(close(&dsid));
1593167    %if ^&&nobs&id %then %do;
1593168    proc datasets lib=work nolist;
1593169    delete _temp&id;
1593170    run;
1593171    quit;
1593172    %end;
1593173    %else %do;
1593174    proc sort data=_temp&id nodupkey;
1593175    by LHS NAME;
1593176    run;
1593177    %end;
1593178    %end;
1593179    %end;
1593180    %end;
1593181    %mend varDept;
1593182    %macro optCode(outdata=fcmpdata);
1593183    %global fcmpStart;
1593184    %let fcmpStart = 0;
1593185    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1593186    %let NumNodes=9;
1593187    %do k=1 %to &NumNodes;
1593188    %vardept(fcmpdata=&outdata, id=&k);
1593189    %end;
1593190    %mend optCode;
1593191    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1593192    filename _pref
1593192  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1593193    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593194    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1593195   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1593196   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1593197   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1593198   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1593199   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1593200   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1593201   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1593202   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1593203   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1593204   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1593205   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1593206   +LENGTH _WARN_ $4
1593207   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1593208   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1593209   +
1593210   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1593211   +
1593212   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1593213   +
1593214   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1593215   +
1593216   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1593217   +
1593218   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1593219   +
1593220   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1593221   +
1593222   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1593223   +
1593224   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1593225   +
1593226   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1593227   +
1593228   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1593229   +
1593230   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1593231   +
1593232   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1593233   +
1593234   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1593235   +
1593236   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1593237   +
1593238   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1593239   +
1593240   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1593241   +
1593242   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1593243   +
1593244   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1593245   +
1593246   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1593247   +
1593248   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1593249   +
1593250   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1593251   +
1593252   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1593253   +
1593254   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1593255   +
1593256   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1593257   +
1593258   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1593259   +
1593260   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1593261   +
1593262   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1593263   +
1593264   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1593265   +
1593266   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1593267   +
1593268   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1593269   +
1593270   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1593271   +
1593272   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1593273   +
1593274   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1593275   +
1593276   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1593277   +
1593278   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1593279   +
1593280   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1593281   +
1593282   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1593283   +
1593284   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1593285   +
1593286   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1593287   +
1593288   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1593289   +
1593290   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1593291   +
1593292   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1593293   +
1593294   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1593295   +
1593296   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1593297   +
1593298   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1593299   +
1593300   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1593301   +
1593302   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1593303   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1593304   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1593305   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1593306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593308   +end;
MPRINT(EM_DIAGRAM):   end;
1593309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593311   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1593312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1593314   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1593315   +   end;
MPRINT(EM_DIAGRAM):   end;
1593316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593317   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1593318   +   end;
MPRINT(EM_DIAGRAM):   end;
1593319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593320   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1593321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593323   +   end;
MPRINT(EM_DIAGRAM):   end;
1593324   +end;
MPRINT(EM_DIAGRAM):   end;
1593325   +
1593326   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1593327   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1593328   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1593329   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1593330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593332   +end;
MPRINT(EM_DIAGRAM):   end;
1593333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593335   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1593336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1593338   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1593339   +   end;
MPRINT(EM_DIAGRAM):   end;
1593340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593341   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1593342   +   end;
MPRINT(EM_DIAGRAM):   end;
1593343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593344   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1593345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593347   +   end;
MPRINT(EM_DIAGRAM):   end;
1593348   +end;
MPRINT(EM_DIAGRAM):   end;
1593349   +
1593350   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1593351   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1593352   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1593353   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1593354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593356   +end;
MPRINT(EM_DIAGRAM):   end;
1593357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593359   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1593360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1593362   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1593363   +   end;
MPRINT(EM_DIAGRAM):   end;
1593364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593365   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1593366   +   end;
MPRINT(EM_DIAGRAM):   end;
1593367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593368   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1593369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593371   +   end;
MPRINT(EM_DIAGRAM):   end;
1593372   +end;
MPRINT(EM_DIAGRAM):   end;
1593373   +
1593374   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1593375   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1593376   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1593377   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1593378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593380   +end;
MPRINT(EM_DIAGRAM):   end;
1593381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593383   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1593384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1593386   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1593387   +   end;
MPRINT(EM_DIAGRAM):   end;
1593388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593389   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1593390   +   end;
MPRINT(EM_DIAGRAM):   end;
1593391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593392   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1593393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593395   +   end;
MPRINT(EM_DIAGRAM):   end;
1593396   +end;
MPRINT(EM_DIAGRAM):   end;
1593397   +
1593398   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1593399   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1593400   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1593401   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1593402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593404   +end;
MPRINT(EM_DIAGRAM):   end;
1593405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593407   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1593408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1593410   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1593411   +   end;
MPRINT(EM_DIAGRAM):   end;
1593412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593413   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1593414   +   end;
MPRINT(EM_DIAGRAM):   end;
1593415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593416   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1593417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593419   +   end;
MPRINT(EM_DIAGRAM):   end;
1593420   +end;
MPRINT(EM_DIAGRAM):   end;
1593421   +
1593422   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1593423   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1593424   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1593425   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1593426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593428   +end;
MPRINT(EM_DIAGRAM):   end;
1593429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593431   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1593432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1593434   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1593435   +   end;
MPRINT(EM_DIAGRAM):   end;
1593436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1593437   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1593438   +   end;
MPRINT(EM_DIAGRAM):   end;
1593439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593440   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1593441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593443   +   end;
MPRINT(EM_DIAGRAM):   end;
1593444   +end;
MPRINT(EM_DIAGRAM):   end;
1593445   +
1593446   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1593447   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1593448   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1593449   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1593450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593452   +end;
MPRINT(EM_DIAGRAM):   end;
1593453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1593455   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1593456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593457   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1593458   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1593459   +   end;
MPRINT(EM_DIAGRAM):   end;
1593460   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1593461   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1593462   +   end;
MPRINT(EM_DIAGRAM):   end;
1593463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593464   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1593465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593467   +   end;
MPRINT(EM_DIAGRAM):   end;
1593468   +end;
MPRINT(EM_DIAGRAM):   end;
1593469   +
1593470   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1593471   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1593472   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1593473   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1593474   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1593475   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1593476   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1593477   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1593478   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1593479   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1593480   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1593481   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1593482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593484   +end;
MPRINT(EM_DIAGRAM):   end;
1593485   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593486   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1593487   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1593488   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593489   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1593490   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1593491   +   end;
MPRINT(EM_DIAGRAM):   end;
1593492   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1593493   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1593494   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1593495   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1593496   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1593497   +   end;
MPRINT(EM_DIAGRAM):   end;
1593498   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1593499   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1593500   +   end;
MPRINT(EM_DIAGRAM):   end;
1593501   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1593502   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1593503   +   end;
MPRINT(EM_DIAGRAM):   end;
1593504   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1593505   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1593506   +   end;
MPRINT(EM_DIAGRAM):   end;
1593507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593508   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1593509   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1593510   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1593511   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1593512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593514   +   end;
MPRINT(EM_DIAGRAM):   end;
1593515   +end;
MPRINT(EM_DIAGRAM):   end;
1593516   +
1593517   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1593518   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1593519   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1593520   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1593521   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1593522   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1593523   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1593524   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1593525   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1593526   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1593527   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1593528   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1593529   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1593530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1593531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593532   +end;
MPRINT(EM_DIAGRAM):   end;
1593533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1593534   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1593535   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1593536   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1593537   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1593538   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1593539   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1593540   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1593541   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1593542   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1593543   +         end;
MPRINT(EM_DIAGRAM):   end;
1593544   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1593545   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1593546   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1593547   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1593548   +            end;
MPRINT(EM_DIAGRAM):   end;
1593549   +         end;
MPRINT(EM_DIAGRAM):   end;
1593550   +      end;
MPRINT(EM_DIAGRAM):   end;
1593551   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1593552   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1593553   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1593554   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1593555   +         end;
MPRINT(EM_DIAGRAM):   end;
1593556   +      end;
MPRINT(EM_DIAGRAM):   end;
1593557   +   end;
MPRINT(EM_DIAGRAM):   end;
1593558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1593559   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1593560   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1593561   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1593562   +      end;
MPRINT(EM_DIAGRAM):   end;
1593563   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1593564   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1593565   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1593566   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1593567   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1593568   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1593569   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1593570   +         end;
MPRINT(EM_DIAGRAM):   end;
1593571   +      end;
MPRINT(EM_DIAGRAM):   end;
1593572   +   end;
MPRINT(EM_DIAGRAM):   end;
1593573   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1593574   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1593575   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1593576   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1593577   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1593578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1593579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593580   +   end;
MPRINT(EM_DIAGRAM):   end;
1593581   +end;
MPRINT(EM_DIAGRAM):   end;
1593582   +
1593583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593584   +*** Checking missing input Interval
1593585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1593586   +
1593587   +IF NMISS(
1593588   +   AcceptedCmpTotal ,
1593589   +   Age ,
1593590   +   Frq ,
1593591   +   Income ,
1593592   +   Kidhome ,
1593593   +   Mnt ,
1593594   +   MntFishProducts ,
1593595   +   MntFruits ,
1593596   +   MntGoldProds ,
1593597   +   MntMeatProducts ,
1593598   +   MntSweetProducts ,
1593599   +   MntWines ,
1593600   +   MonthsAsCustomer ,
1593601   +   NumCatalogPurchases ,
1593602   +   NumDealsPurchases ,
1593603   +   NumDistPurchases ,
1593604   +   NumStorePurchases ,
1593605   +   NumWebPurchases ,
1593606   +   NumWebVisitsMonth ,
1593607   +   RFMstat ,
1593608   +   RMntFrq ,
1593609   +   Recency ,
1593610   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1593611   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1593612   +
1593613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1593614   +END;
MPRINT(EM_DIAGRAM):   END;
1593615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593616   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1593617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593618   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1593619   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1593620   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1593621   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1593622   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1593623   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1593624   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1593625   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1593626   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1593627   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1593628   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1593629   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1593630   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1593631   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1593632   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1593633   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1593634   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1593635   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1593636   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1593637   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1593638   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1593639   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1593640   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1593641   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1593642   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1593643   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1593644   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1593645   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1593646   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1593647   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1593648   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1593649   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1593650   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1593651   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1593652   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1593653   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1593654   +END;
MPRINT(EM_DIAGRAM):   END;
1593655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1593656   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1593657   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1593658   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1593659   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1593660   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1593661   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1593662   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1593663   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1593664   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1593665   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1593666   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1593667   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1593668   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1593669   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1593670   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1593671   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1593672   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1593673   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1593674   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1593675   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1593676   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1593677   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1593678   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1593679   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1593680   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1593681   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1593682   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1593683   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1593684   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1593685   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1593686   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1593687   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1593688   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1593689   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1593690   +   ELSE S_NumCatalogPurchases
1593691   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1593692   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1593693   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1593694   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1593695   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1593696   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1593697   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1593698   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1593699   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1593700   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1593701   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1593702   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1593703   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1593704   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1593705   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1593706   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1593707   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1593708   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1593709   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1593710   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1593711   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1593712   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1593713   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1593714   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1593715   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1593716   +END;
MPRINT(EM_DIAGRAM):   END;
1593717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593718   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1593719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593721   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1593722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593724   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1593725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593726   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1593727   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1593728   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1593729   +        S_Income  +    -0.23050240180524 * S_Kidhome
1593730   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1593731   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1593732   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1593733   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1593734   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1593735   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1593736   +          +    -1.32257303635072 * S_NumDealsPurchases
1593737   +          +    -0.54480870554989 * S_NumDistPurchases
1593738   +          +     1.24793709956495 * S_NumStorePurchases
1593739   +          +      1.7974198103915 * S_NumWebPurchases
1593740   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1593741   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1593742   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1593743   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1593744   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1593745   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1593746   +        S_Income  +    -0.78793784980656 * S_Kidhome
1593747   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1593748   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1593749   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1593750   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1593751   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1593752   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1593753   +          +     0.70535680060775 * S_NumDealsPurchases
1593754   +          +    -0.15561838359391 * S_NumDistPurchases
1593755   +          +    -0.86545647977011 * S_NumStorePurchases
1593756   +          +    -0.78435825863867 * S_NumWebPurchases
1593757   +          +     1.76113949975149 * S_NumWebVisitsMonth
1593758   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1593759   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1593760   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1593761   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1593762   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1593763   +        S_Income  +    -0.59349067735666 * S_Kidhome
1593764   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1593765   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1593766   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1593767   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1593768   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1593769   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1593770   +          +     0.21510592309387 * S_NumDealsPurchases
1593771   +          +    -0.05401897321491 * S_NumDistPurchases
1593772   +          +     0.14945584086188 * S_NumStorePurchases
1593773   +          +    -0.09993898051701 * S_NumWebPurchases
1593774   +          +     1.40189771606069 * S_NumWebVisitsMonth
1593775   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1593776   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1593777   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1593778   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1593779   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1593780   +        S_Income  +    -0.61129984920194 * S_Kidhome
1593781   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1593782   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1593783   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1593784   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1593785   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1593786   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1593787   +          +     0.81353732439473 * S_NumDealsPurchases
1593788   +          +     0.32933472931941 * S_NumDistPurchases
1593789   +          +    -1.28188012143595 * S_NumStorePurchases
1593790   +          +    -0.81914782214243 * S_NumWebPurchases
1593791   +          +     1.20332282902342 * S_NumWebVisitsMonth
1593792   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1593793   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1593794   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1593795   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1593796   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1593797   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1593798   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1593799   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1593800   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1593801   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1593802   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1593803   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1593804   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1593805   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1593806   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1593807   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1593808   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1593809   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1593810   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1593811   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1593812   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1593813   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1593814   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1593815   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1593816   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1593817   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1593818   +          +     0.38068062371853 * Marital_StatusDivorced
1593819   +          +    -0.09269938603625 * Marital_StatusMarried
1593820   +          +    -0.17904543311137 * Marital_StatusSingle
1593821   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1593822   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1593823   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1593824   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1593825   +          +     0.46191454760643 * Marital_StatusDivorced
1593826   +          +    -1.36520525874032 * Marital_StatusMarried
1593827   +          +     1.36669525533789 * Marital_StatusSingle
1593828   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1593829   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1593830   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1593831   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1593832   +          +     0.18693560360309 * Marital_StatusDivorced
1593833   +          +    -0.56475988428608 * Marital_StatusMarried
1593834   +          +     0.79263891340625 * Marital_StatusSingle
1593835   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1593836   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1593837   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1593838   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1593839   +          +     1.14025450669394 * Marital_StatusDivorced
1593840   +          +     0.78122963298728 * Marital_StatusMarried
1593841   +          +    -1.37860768059913 * Marital_StatusSingle
1593842   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1593843   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1593844   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1593845   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1593846   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1593847   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1593848   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1593849   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1593850   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1593851   +END;
MPRINT(EM_DIAGRAM):   END;
1593852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1593853   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1593854   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1593855   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1593856   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1593857   +END;
MPRINT(EM_DIAGRAM):   END;
1593858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593859   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1593860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1593862   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1593863   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1593864   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1593865   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1593866   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1593867   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1593868   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1593869   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1593870   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1593871   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1593872   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1593873   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1593874   +END;
MPRINT(EM_DIAGRAM):   END;
1593875   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1593876   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1593877   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1593878   +END;
MPRINT(EM_DIAGRAM):   END;
1593879   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1593880   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1593881   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1593882   +END;
MPRINT(EM_DIAGRAM):   END;
1593883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593884   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1593885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1593886   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1593887   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1593888   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1593889   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1593890   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1593891   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1593892   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1593893   +END;
MPRINT(EM_DIAGRAM):   END;
1593894   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1593895   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1593896   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1593897   +drop
1593898   +H11
1593899   +H12
1593900   +H13
1593901   +H14
1593902   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1593903   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593904    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593905    quit;
1593906    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593907    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593908    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593909    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1593910    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593912    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593913    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593915    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1593916    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593918    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593919    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593920    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593921    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593922    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1593923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1593924    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593927    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593928    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593930    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593931    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593932    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593932  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

1593933    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593934    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1593935    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593936    filename _pref
1593936  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1593937    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593938    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1593939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1593940   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1593941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1593942   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1593943   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1593944   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593945    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593946    quit;
1593947    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593948    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593949    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593950    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1593951    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593952    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593953    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593954    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593955    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593956    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1593957    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593958    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593959    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593960    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1593961    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1593962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593963    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1593964    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1593965    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1593966    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593968    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1593969    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1593970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593971    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593972    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1593973    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1593973  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1593974    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1593975    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1593976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593977    filename _pref
1593977  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1593978    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1593979    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1593980   +
1593981   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1593982   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1593982  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1593983   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1593984   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1593985   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1593986   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1593987   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1593988    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1593989    quit;
1593990    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1593991    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1593992    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1593993    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1593994    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1593995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593996    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1593997    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1593998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1593999    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1594000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594002    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594003    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594004    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594006    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1594007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594008    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594011    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594012    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594014    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594015    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594016    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594016  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1594017    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594018    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1594019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594020    filename _pref
1594020  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1594021    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594022    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1594023   +
1594024   +
1594025   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1594026   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1594027   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1594028   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1594029   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1594030   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594031   +
1594032   +
1594033   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1594034   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1594035   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1594036   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1594037   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1594038   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594039   +
1594040   +
1594041   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1594042   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1594043   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1594044   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1594045   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1594046   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594047   +
1594048   +
1594049   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1594050   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1594051   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1594052   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1594053   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1594054   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594055   +
1594056   +
1594057   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1594058   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1594059   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1594060   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1594061   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1594062   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594063   +
1594064   +
1594065   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1594066   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1594067   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1594068   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1594069   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1594070   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594071   +
1594072   +
1594073   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1594074   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1594075   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1594076   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1594077   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1594078   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594079   +
1594080   +
1594081   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1594082   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1594083   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1594084   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1594085   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1594086   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1594087   +if
1594088   +_FILTERNORM1 not in ( '.')
1594089   + and
1594090   +_FILTERNORM2 not in ( '.')
1594091   + and
1594092   +_FILTERNORM3 not in ( '.')
1594093   + and
1594094   +_FILTERNORM4 not in ( '.')
1594095   + and
1594096   +_FILTERNORM5 not in ( '.')
1594097   + and
1594098   +_FILTERNORM6 not in ( '.')
1594099   + and
1594100   +_FILTERNORM7 not in ( ' ')
1594101   + and
1594102   +_FILTERNORM8 not in ( ' ')
1594103   +and
1594104   +( Dt_Customer ne .)
1594105   +and ( Income ne . and (Income<=107000))
1594106   +and ( Kidhome ne .)
1594107   +and ( MntFishProducts ne .)
1594108   +and ( MntFruits ne .)
1594109   +and ( MntGoldProds ne .)
1594110   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1594111   +and ( MntSweetProducts ne .)
1594112   +and ( MntWines ne .)
1594113   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1594114   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1594115   +and ( NumStorePurchases ne .)
1594116   +and ( NumWebPurchases ne .)
1594117   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1594118   +and ( Recency ne .)
1594119   +and ( Teenhome ne .)
1594120   +and ( Year_Birth ne .)
1594121   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1594122   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1594123   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1594124   +end;
MPRINT(EM_DIAGRAM):   end;
1594125   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1594126   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594127    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594128    quit;
1594129    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594130    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594131    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594132    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1594133    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594135    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594136    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594138    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1594139    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594141    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594142    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594143    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594145    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1594146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1594147    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594148    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594150    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594151    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594153    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594154    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594155    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594155  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1594156    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594157    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1594158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594159    %macro varDept(fcmpdata=,id=);
1594160    %global nobs&id scoreFlag&id;
1594161    %let scoreFlag&id = 0;
1594162    %if &id=1 or ^&fcmpStart %then %do;
1594163    proc sort data=&fcmpdata out=_temp&id nodupkey;
1594164    by NAME;
1594165    where id=&id and LHS in( %let j=1;
1594166    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1594167    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1594168    "&var" %let j = %eval(&j+1);
1594169    %end;
1594170    );
1594171    run;
1594172    %let dsid = %sysfunc(open(_temp&id));
1594173    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594174    %let dsid = %sysfunc(close(&dsid));
1594175    %if &&nobs&id %then %do;
1594176    %let scoreFlag&id = 1;
1594177    %let fcmpStart = 1;
1594178    %end;
1594179    %else %let fcmpStart = 0;
1594180    %end;
1594181    %else %do;
1594182    proc sort data=&fcmpdata out=_tempid;
1594183    where id=&id;
1594184    by LHS;
1594185    run;
1594186    %let dsid = %sysfunc(open(_tempid));
1594187    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594188    %let dsid = %sysfunc(close(&dsid));
1594189    %if ^&&nobs&id %then %do;
1594190    proc datasets lib=work nolist;
1594191    delete _tempid;
1594192    run;
1594193    quit;
1594194    %end;
1594195    %else %do;
1594196    data _tempAll;
1594197    set %let j=%eval(&id-1);
1594198    %do x=1 %to &j;
1594199    %if &&nobs&x %then %do;
1594200    _temp&x %end;
1594201    %end;
1594202    ;
1594203    run;
1594204    proc sql;
1594205    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1594205  ! work._tempid p2 where p.name=p2.lhs;
1594206    quit;
1594207    data _temp&id;
1594208    set _temp&id;
1594209    where LHS ne '' and NAME ne '' and Node ne '';
1594210    run;
1594211    proc datasets lib=work nolist;
1594212    delete _tempAll;
1594213    run;
1594214    %let dsid = %sysfunc(open(_temp&id));
1594215    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594216    %let dsid = %sysfunc(close(&dsid));
1594217    %if ^&&nobs&id %then %do;
1594218    proc datasets lib=work nolist;
1594219    delete _temp&id;
1594220    run;
1594221    quit;
1594222    %end;
1594223    %else %do;
1594224    %let scoreFlag&id = 1;
1594225    data _temp&id;
1594226    set _temp&id;
1594227    where LHS ne NAME and node ne '';
1594228    run;
1594229    %let dsid = %sysfunc(open(_temp&id));
1594230    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1594231    %let dsid = %sysfunc(close(&dsid));
1594232    %if ^&&nobs&id %then %do;
1594233    proc datasets lib=work nolist;
1594234    delete _temp&id;
1594235    run;
1594236    quit;
1594237    %end;
1594238    %else %do;
1594239    proc sort data=_temp&id nodupkey;
1594240    by LHS NAME;
1594241    run;
1594242    %end;
1594243    %end;
1594244    %end;
1594245    %end;
1594246    %mend varDept;
1594247    %macro optCode(outdata=fcmpdata);
1594248    %global fcmpStart;
1594249    %let fcmpStart = 0;
1594250    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1594251    %let NumNodes=9;
1594252    %do k=1 %to &NumNodes;
1594253    %vardept(fcmpdata=&outdata, id=&k);
1594254    %end;
1594255    %mend optCode;
1594256    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1594257    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1594258    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1594259    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1594260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594261    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1594262    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1594263    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1594264    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594265    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594266    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1594266  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1594267    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594268    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1594269    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1594270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594271    filename _pref
1594271  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1594272    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594273    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1594274   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1594275   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1594276   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1594277   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1594278   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1594279   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1594280   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1594281   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1594282   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1594283   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1594284   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1594285   +LENGTH _WARN_ $4
1594286   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1594287   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1594288   +
1594289   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1594290   +
1594291   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1594292   +
1594293   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1594294   +
1594295   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1594296   +
1594297   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1594298   +
1594299   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1594300   +
1594301   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1594302   +
1594303   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1594304   +
1594305   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1594306   +
1594307   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1594308   +
1594309   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1594310   +
1594311   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1594312   +
1594313   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1594314   +
1594315   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1594316   +
1594317   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1594318   +
1594319   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1594320   +
1594321   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1594322   +
1594323   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1594324   +
1594325   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1594326   +
1594327   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1594328   +
1594329   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1594330   +
1594331   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1594332   +
1594333   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1594334   +
1594335   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1594336   +
1594337   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1594338   +
1594339   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1594340   +
1594341   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1594342   +
1594343   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1594344   +
1594345   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1594346   +
1594347   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1594348   +
1594349   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1594350   +
1594351   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1594352   +
1594353   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1594354   +
1594355   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1594356   +
1594357   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1594358   +
1594359   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1594360   +
1594361   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1594362   +
1594363   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1594364   +
1594365   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1594366   +
1594367   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1594368   +
1594369   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1594370   +
1594371   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1594372   +
1594373   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1594374   +
1594375   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1594376   +
1594377   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1594378   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1594379   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1594380   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1594381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594383   +end;
MPRINT(EM_DIAGRAM):   end;
1594384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594386   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1594387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1594389   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1594390   +   end;
MPRINT(EM_DIAGRAM):   end;
1594391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594392   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1594393   +   end;
MPRINT(EM_DIAGRAM):   end;
1594394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594395   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1594396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594398   +   end;
MPRINT(EM_DIAGRAM):   end;
1594399   +end;
MPRINT(EM_DIAGRAM):   end;
1594400   +
1594401   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1594402   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1594403   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1594404   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1594405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594407   +end;
MPRINT(EM_DIAGRAM):   end;
1594408   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594410   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1594411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1594413   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1594414   +   end;
MPRINT(EM_DIAGRAM):   end;
1594415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594416   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1594417   +   end;
MPRINT(EM_DIAGRAM):   end;
1594418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594419   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1594420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594422   +   end;
MPRINT(EM_DIAGRAM):   end;
1594423   +end;
MPRINT(EM_DIAGRAM):   end;
1594424   +
1594425   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1594426   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1594427   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1594428   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1594429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594431   +end;
MPRINT(EM_DIAGRAM):   end;
1594432   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594434   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1594435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1594437   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1594438   +   end;
MPRINT(EM_DIAGRAM):   end;
1594439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594440   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1594441   +   end;
MPRINT(EM_DIAGRAM):   end;
1594442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594443   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1594444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594446   +   end;
MPRINT(EM_DIAGRAM):   end;
1594447   +end;
MPRINT(EM_DIAGRAM):   end;
1594448   +
1594449   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1594450   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1594451   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1594452   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1594453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594455   +end;
MPRINT(EM_DIAGRAM):   end;
1594456   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594458   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1594459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1594461   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1594462   +   end;
MPRINT(EM_DIAGRAM):   end;
1594463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594464   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1594465   +   end;
MPRINT(EM_DIAGRAM):   end;
1594466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594467   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1594468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594470   +   end;
MPRINT(EM_DIAGRAM):   end;
1594471   +end;
MPRINT(EM_DIAGRAM):   end;
1594472   +
1594473   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1594474   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1594475   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1594476   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1594477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594479   +end;
MPRINT(EM_DIAGRAM):   end;
1594480   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594482   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1594483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1594485   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1594486   +   end;
MPRINT(EM_DIAGRAM):   end;
1594487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594488   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1594489   +   end;
MPRINT(EM_DIAGRAM):   end;
1594490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594491   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1594492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594494   +   end;
MPRINT(EM_DIAGRAM):   end;
1594495   +end;
MPRINT(EM_DIAGRAM):   end;
1594496   +
1594497   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1594498   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1594499   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1594500   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1594501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594503   +end;
MPRINT(EM_DIAGRAM):   end;
1594504   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594506   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1594507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594508   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1594509   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1594510   +   end;
MPRINT(EM_DIAGRAM):   end;
1594511   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1594512   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1594513   +   end;
MPRINT(EM_DIAGRAM):   end;
1594514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594515   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1594516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594518   +   end;
MPRINT(EM_DIAGRAM):   end;
1594519   +end;
MPRINT(EM_DIAGRAM):   end;
1594520   +
1594521   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1594522   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1594523   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1594524   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1594525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594527   +end;
MPRINT(EM_DIAGRAM):   end;
1594528   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594529   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1594530   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1594531   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594532   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1594533   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1594534   +   end;
MPRINT(EM_DIAGRAM):   end;
1594535   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1594536   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1594537   +   end;
MPRINT(EM_DIAGRAM):   end;
1594538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594539   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1594540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594542   +   end;
MPRINT(EM_DIAGRAM):   end;
1594543   +end;
MPRINT(EM_DIAGRAM):   end;
1594544   +
1594545   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1594546   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1594547   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1594548   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1594549   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1594550   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1594551   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1594552   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1594553   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1594554   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1594555   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1594556   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1594557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594559   +end;
MPRINT(EM_DIAGRAM):   end;
1594560   +else do;
MPRINT(EM_DIAGRAM):   else do;
1594561   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1594562   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1594563   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594564   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1594565   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1594566   +   end;
MPRINT(EM_DIAGRAM):   end;
1594567   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1594568   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1594569   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1594570   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1594571   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1594572   +   end;
MPRINT(EM_DIAGRAM):   end;
1594573   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1594574   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1594575   +   end;
MPRINT(EM_DIAGRAM):   end;
1594576   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1594577   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1594578   +   end;
MPRINT(EM_DIAGRAM):   end;
1594579   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1594580   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1594581   +   end;
MPRINT(EM_DIAGRAM):   end;
1594582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594583   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1594584   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1594585   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1594586   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1594587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594589   +   end;
MPRINT(EM_DIAGRAM):   end;
1594590   +end;
MPRINT(EM_DIAGRAM):   end;
1594591   +
1594592   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1594593   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1594594   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1594595   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1594596   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1594597   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1594598   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1594599   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1594600   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1594601   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1594602   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1594603   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1594604   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1594605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1594606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594607   +end;
MPRINT(EM_DIAGRAM):   end;
1594608   +else do;
The SAS System

MPRINT(EM_DIAGRAM):   else do;
1594609   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1594610   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1594611   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1594612   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1594613   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1594614   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1594615   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1594616   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1594617   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1594618   +         end;
MPRINT(EM_DIAGRAM):   end;
1594619   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1594620   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1594621   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1594622   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1594623   +            end;
MPRINT(EM_DIAGRAM):   end;
1594624   +         end;
MPRINT(EM_DIAGRAM):   end;
1594625   +      end;
MPRINT(EM_DIAGRAM):   end;
1594626   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1594627   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1594628   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1594629   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1594630   +         end;
MPRINT(EM_DIAGRAM):   end;
1594631   +      end;
MPRINT(EM_DIAGRAM):   end;
1594632   +   end;
MPRINT(EM_DIAGRAM):   end;
1594633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1594634   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1594635   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1594636   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1594637   +      end;
MPRINT(EM_DIAGRAM):   end;
1594638   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1594639   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1594640   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1594641   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1594642   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1594643   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1594644   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1594645   +         end;
MPRINT(EM_DIAGRAM):   end;
1594646   +      end;
MPRINT(EM_DIAGRAM):   end;
1594647   +   end;
MPRINT(EM_DIAGRAM):   end;
1594648   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1594649   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1594650   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1594651   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1594652   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1594653   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1594654   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594655   +   end;
MPRINT(EM_DIAGRAM):   end;
1594656   +end;
MPRINT(EM_DIAGRAM):   end;
1594657   +
1594658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594659   +*** Checking missing input Interval
1594660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1594661   +
1594662   +IF NMISS(
1594663   +   AcceptedCmpTotal ,
1594664   +   Age ,
1594665   +   Frq ,
1594666   +   Income ,
1594667   +   Kidhome ,
1594668   +   Mnt ,
1594669   +   MntFishProducts ,
1594670   +   MntFruits ,
1594671   +   MntGoldProds ,
1594672   +   MntMeatProducts ,
1594673   +   MntSweetProducts ,
1594674   +   MntWines ,
1594675   +   MonthsAsCustomer ,
1594676   +   NumCatalogPurchases ,
1594677   +   NumDealsPurchases ,
1594678   +   NumDistPurchases ,
1594679   +   NumStorePurchases ,
1594680   +   NumWebPurchases ,
1594681   +   NumWebVisitsMonth ,
1594682   +   RFMstat ,
1594683   +   RMntFrq ,
1594684   +   Recency ,
1594685   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1594686   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1594687   +
1594688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1594689   +END;
MPRINT(EM_DIAGRAM):   END;
1594690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594691   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1594692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594693   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1594694   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1594695   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1594696   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1594697   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1594698   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1594699   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1594700   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1594701   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1594702   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1594703   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1594704   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1594705   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1594706   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1594707   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1594708   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1594709   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1594710   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1594711   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1594712   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1594713   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1594714   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1594715   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1594716   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1594717   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1594718   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1594719   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1594720   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1594721   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1594722   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1594723   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1594724   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1594725   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1594726   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1594727   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1594728   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1594729   +END;
MPRINT(EM_DIAGRAM):   END;
1594730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1594731   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1594732   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1594733   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1594734   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1594735   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1594736   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1594737   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1594738   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1594739   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1594740   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1594741   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1594742   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1594743   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1594744   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1594745   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1594746   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1594747   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1594748   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1594749   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1594750   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1594751   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1594752   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1594753   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1594754   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1594755   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1594756   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1594757   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1594758   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1594759   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1594760   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1594761   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1594762   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1594763   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1594764   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1594765   +   ELSE S_NumCatalogPurchases
1594766   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1594767   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1594768   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1594769   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1594770   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1594771   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1594772   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1594773   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1594774   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1594775   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1594776   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1594777   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1594778   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1594779   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1594780   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1594781   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1594782   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1594783   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1594784   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1594785   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1594786   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1594787   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1594788   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1594789   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1594790   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1594791   +END;
MPRINT(EM_DIAGRAM):   END;
1594792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594793   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1594794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594796   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1594797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594799   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1594800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594801   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1594802   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1594803   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1594804   +        S_Income  +    -1.07652572934003 * S_Kidhome
1594805   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1594806   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1594807   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1594808   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1594809   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1594810   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1594811   +          +     0.34217069579861 * S_NumDealsPurchases
1594812   +          +      0.7126550962469 * S_NumDistPurchases
1594813   +          +     0.05810128676346 * S_NumStorePurchases
1594814   +          +     -0.1974592461824 * S_NumWebPurchases
1594815   +          +     1.33855646568468 * S_NumWebVisitsMonth
1594816   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1594817   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1594818   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1594819   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1594820   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1594821   +        S_Income  +    -0.00280376715329 * S_Kidhome
1594822   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1594823   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1594824   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1594825   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1594826   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1594827   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1594828   +          +     0.45694604326279 * S_NumDealsPurchases
1594829   +          +      0.1555582457419 * S_NumDistPurchases
1594830   +          +     -0.3340268446813 * S_NumStorePurchases
1594831   +          +    -0.39316217683753 * S_NumWebPurchases
1594832   +          +     0.52431656748667 * S_NumWebVisitsMonth
1594833   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1594834   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1594835   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1594836   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1594837   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1594838   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1594839   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1594840   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1594841   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1594842   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1594843   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1594844   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1594845   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1594846   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1594847   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1594848   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1594849   +          +     0.46676686502466 * Marital_StatusDivorced
1594850   +          +    -1.27760562209616 * Marital_StatusMarried
1594851   +          +     1.31419230639567 * Marital_StatusSingle
1594852   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1594853   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1594854   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1594855   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1594856   +          +     0.07434297903639 * Marital_StatusDivorced
1594857   +          +     0.00294493836325 * Marital_StatusMarried
1594858   +          +    -0.00745595849422 * Marital_StatusSingle
1594859   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1594860   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1594861   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1594862   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1594863   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1594864   +END;
MPRINT(EM_DIAGRAM):   END;
1594865   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1594866   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1594867   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1594868   +END;
MPRINT(EM_DIAGRAM):   END;
1594869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594870   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1594871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594872   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1594873   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1594874   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1594875   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1594876   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1594877   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1594878   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1594879   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1594880   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1594881   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1594882   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1594883   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1594884   +END;
MPRINT(EM_DIAGRAM):   END;
1594885   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1594886   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1594887   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1594888   +END;
MPRINT(EM_DIAGRAM):   END;
1594889   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1594890   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1594891   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1594892   +END;
MPRINT(EM_DIAGRAM):   END;
1594893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594894   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1594895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1594896   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1594897   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1594898   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1594899   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1594900   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1594901   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1594902   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1594903   +END;
MPRINT(EM_DIAGRAM):   END;
1594904   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1594905   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1594906   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1594907   +drop
1594908   +H11
1594909   +H12
1594910   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1594911   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594912    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594913    quit;
1594914    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594915    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594916    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594917    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1594918    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594919    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594920    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594921    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594923    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1594924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594926    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594927    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594928    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594930    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1594931    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1594932    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594933    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594935    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594936    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594938    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594939    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594940    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594940  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1594941    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594942    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1594943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594944    filename _pref
1594944  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1594945    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594946    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1594947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1594948   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1594949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1594950   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1594951   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1594952   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594953    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594954    quit;
1594955    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594956    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1594957    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1594958    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1594959    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1594960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594961    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1594962    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594964    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1594965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594967    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594968    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1594969    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1594970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594971    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1594972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1594973    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1594974    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1594976    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1594977    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1594978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1594979    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594980    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1594981    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1594981  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1594982    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594983    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1594984    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1594985    filename _pref
1594985  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1594986    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1594987    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1594988   +
1594989   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1594990   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1594990  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1594991   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1594992   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1594993   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1594994   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1594995   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1594996    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1594997    quit;
1594998    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1594999    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1595000    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1595001    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1595002    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1595003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595004    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1595005    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595007    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1595008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595010    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1595011    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1595012    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1595013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595014    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1595015    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595016    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1595017    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595019    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1595020    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1595021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595022    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595023    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1595024    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1595024  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1595025    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595026    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1595027    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595028    filename _pref
1595028  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1595029    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1595030    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1595031   +
1595032   +
1595033   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1595034   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1595035   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1595036   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1595037   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1595038   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595039   +
1595040   +
1595041   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1595042   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1595043   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1595044   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1595045   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1595046   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595047   +
1595048   +
1595049   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1595050   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1595051   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1595052   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1595053   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1595054   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595055   +
1595056   +
1595057   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1595058   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1595059   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1595060   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1595061   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1595062   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595063   +
1595064   +
1595065   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1595066   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1595067   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1595068   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1595069   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1595070   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595071   +
1595072   +
1595073   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1595074   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1595075   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1595076   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1595077   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1595078   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595079   +
1595080   +
1595081   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1595082   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1595083   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1595084   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1595085   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1595086   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595087   +
1595088   +
1595089   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1595090   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1595091   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1595092   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1595093   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1595094   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1595095   +if
1595096   +_FILTERNORM1 not in ( '.')
1595097   + and
1595098   +_FILTERNORM2 not in ( '.')
1595099   + and
1595100   +_FILTERNORM3 not in ( '.')
1595101   + and
1595102   +_FILTERNORM4 not in ( '.')
1595103   + and
1595104   +_FILTERNORM5 not in ( '.')
1595105   + and
1595106   +_FILTERNORM6 not in ( '.')
1595107   + and
1595108   +_FILTERNORM7 not in ( ' ')
1595109   + and
1595110   +_FILTERNORM8 not in ( ' ')
1595111   +and
1595112   +( Dt_Customer ne .)
1595113   +and ( Income ne . and (Income<=107000))
1595114   +and ( Kidhome ne .)
1595115   +and ( MntFishProducts ne .)
1595116   +and ( MntFruits ne .)
1595117   +and ( MntGoldProds ne .)
1595118   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1595119   +and ( MntSweetProducts ne .)
1595120   +and ( MntWines ne .)
1595121   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1595122   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1595123   +and ( NumStorePurchases ne .)
1595124   +and ( NumWebPurchases ne .)
1595125   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1595126   +and ( Recency ne .)
1595127   +and ( Teenhome ne .)
1595128   +and ( Year_Birth ne .)
1595129   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1595130   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1595131   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1595132   +end;
MPRINT(EM_DIAGRAM):   end;
1595133   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1595134   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1595135    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1595136    quit;
1595137    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1595138    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1595139    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1595140    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1595141    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1595142    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595143    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1595144    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595146    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1595147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595149    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1595150    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1595151    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1595152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595153    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1595154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1595155    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1595156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595158    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1595159    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1595160    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595161    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595162    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1595163    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1595163  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1595164    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595165    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1595166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595167    %macro varDept(fcmpdata=,id=);
1595168    %global nobs&id scoreFlag&id;
1595169    %let scoreFlag&id = 0;
1595170    %if &id=1 or ^&fcmpStart %then %do;
1595171    proc sort data=&fcmpdata out=_temp&id nodupkey;
1595172    by NAME;
1595173    where id=&id and LHS in( %let j=1;
1595174    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1595175    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1595176    "&var" %let j = %eval(&j+1);
1595177    %end;
1595178    );
1595179    run;
1595180    %let dsid = %sysfunc(open(_temp&id));
1595181    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1595182    %let dsid = %sysfunc(close(&dsid));
1595183    %if &&nobs&id %then %do;
1595184    %let scoreFlag&id = 1;
1595185    %let fcmpStart = 1;
1595186    %end;
1595187    %else %let fcmpStart = 0;
1595188    %end;
1595189    %else %do;
1595190    proc sort data=&fcmpdata out=_tempid;
1595191    where id=&id;
1595192    by LHS;
1595193    run;
1595194    %let dsid = %sysfunc(open(_tempid));
1595195    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1595196    %let dsid = %sysfunc(close(&dsid));
1595197    %if ^&&nobs&id %then %do;
1595198    proc datasets lib=work nolist;
1595199    delete _tempid;
1595200    run;
1595201    quit;
1595202    %end;
1595203    %else %do;
1595204    data _tempAll;
1595205    set %let j=%eval(&id-1);
1595206    %do x=1 %to &j;
1595207    %if &&nobs&x %then %do;
1595208    _temp&x %end;
1595209    %end;
1595210    ;
1595211    run;
1595212    proc sql;
1595213    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1595213  ! work._tempid p2 where p.name=p2.lhs;
1595214    quit;
1595215    data _temp&id;
1595216    set _temp&id;
1595217    where LHS ne '' and NAME ne '' and Node ne '';
1595218    run;
1595219    proc datasets lib=work nolist;
1595220    delete _tempAll;
1595221    run;
1595222    %let dsid = %sysfunc(open(_temp&id));
1595223    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1595224    %let dsid = %sysfunc(close(&dsid));
1595225    %if ^&&nobs&id %then %do;
1595226    proc datasets lib=work nolist;
1595227    delete _temp&id;
1595228    run;
1595229    quit;
1595230    %end;
1595231    %else %do;
1595232    %let scoreFlag&id = 1;
1595233    data _temp&id;
1595234    set _temp&id;
1595235    where LHS ne NAME and node ne '';
1595236    run;
1595237    %let dsid = %sysfunc(open(_temp&id));
1595238    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1595239    %let dsid = %sysfunc(close(&dsid));
1595240    %if ^&&nobs&id %then %do;
1595241    proc datasets lib=work nolist;
1595242    delete _temp&id;
1595243    run;
1595244    quit;
1595245    %end;
1595246    %else %do;
1595247    proc sort data=_temp&id nodupkey;
1595248    by LHS NAME;
1595249    run;
1595250    %end;
1595251    %end;
1595252    %end;
1595253    %end;
1595254    %mend varDept;
1595255    %macro optCode(outdata=fcmpdata);
1595256    %global fcmpStart;
1595257    %let fcmpStart = 0;
1595258    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1595259    %let NumNodes=9;
1595260    %do k=1 %to &NumNodes;
1595261    %vardept(fcmpdata=&outdata, id=&k);
1595262    %end;
1595263    %mend optCode;
1595264    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1595265    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1595266    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1595267    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1595268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595269    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1595270    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1595271    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1595272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595273    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1595274    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1595274  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1595275    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595276    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1595277    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1595278    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595279    filename _pref
1595279  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1595280    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1595281    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1595282   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1595283   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1595284   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1595285   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1595286   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1595287   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1595288   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1595289   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1595290   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1595291   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1595292   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1595293   +LENGTH _WARN_ $4
1595294   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1595295   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1595296   +
1595297   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1595298   +
1595299   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1595300   +
1595301   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1595302   +
1595303   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1595304   +
1595305   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1595306   +
1595307   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1595308   +
1595309   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1595310   +
1595311   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1595312   +
1595313   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1595314   +
1595315   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1595316   +
1595317   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1595318   +
1595319   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1595320   +
1595321   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1595322   +
1595323   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1595324   +
1595325   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1595326   +
1595327   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1595328   +
1595329   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1595330   +
1595331   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1595332   +
1595333   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1595334   +
1595335   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1595336   +
1595337   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1595338   +
1595339   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1595340   +
1595341   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1595342   +
1595343   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1595344   +
1595345   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1595346   +
1595347   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1595348   +
1595349   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1595350   +
1595351   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1595352   +
1595353   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1595354   +
1595355   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1595356   +
1595357   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1595358   +
1595359   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1595360   +
1595361   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1595362   +
1595363   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1595364   +
1595365   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1595366   +
1595367   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1595368   +
1595369   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1595370   +
1595371   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1595372   +
1595373   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1595374   +
1595375   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1595376   +
1595377   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1595378   +
1595379   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1595380   +
1595381   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1595382   +
1595383   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1595384   +
1595385   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1595386   +
1595387   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1595388   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1595389   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1595390   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1595391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595393   +end;
MPRINT(EM_DIAGRAM):   end;
1595394   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595396   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1595397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1595399   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1595400   +   end;
MPRINT(EM_DIAGRAM):   end;
1595401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1595402   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1595403   +   end;
MPRINT(EM_DIAGRAM):   end;
1595404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595405   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1595406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595408   +   end;
MPRINT(EM_DIAGRAM):   end;
1595409   +end;
MPRINT(EM_DIAGRAM):   end;
1595410   +
1595411   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1595412   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1595413   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1595414   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1595415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595417   +end;
MPRINT(EM_DIAGRAM):   end;
1595418   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595420   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1595421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1595423   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1595424   +   end;
MPRINT(EM_DIAGRAM):   end;
1595425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1595426   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1595427   +   end;
MPRINT(EM_DIAGRAM):   end;
1595428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595429   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1595430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595432   +   end;
MPRINT(EM_DIAGRAM):   end;
1595433   +end;
MPRINT(EM_DIAGRAM):   end;
1595434   +
1595435   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1595436   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1595437   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1595438   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1595439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595441   +end;
MPRINT(EM_DIAGRAM):   end;
1595442   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595444   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1595445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1595447   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1595448   +   end;
MPRINT(EM_DIAGRAM):   end;
1595449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1595450   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1595451   +   end;
MPRINT(EM_DIAGRAM):   end;
1595452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595453   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1595454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595456   +   end;
MPRINT(EM_DIAGRAM):   end;
1595457   +end;
MPRINT(EM_DIAGRAM):   end;
1595458   +
1595459   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1595460   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1595461   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1595462   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1595463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595465   +end;
MPRINT(EM_DIAGRAM):   end;
1595466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595468   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1595469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595470   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1595471   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1595472   +   end;
MPRINT(EM_DIAGRAM):   end;
1595473   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1595474   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1595475   +   end;
MPRINT(EM_DIAGRAM):   end;
1595476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595477   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1595478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595480   +   end;
MPRINT(EM_DIAGRAM):   end;
1595481   +end;
MPRINT(EM_DIAGRAM):   end;
1595482   +
1595483   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1595484   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1595485   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1595486   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1595487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595489   +end;
MPRINT(EM_DIAGRAM):   end;
1595490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595492   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1595493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595494   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1595495   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1595496   +   end;
MPRINT(EM_DIAGRAM):   end;
1595497   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1595498   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1595499   +   end;
MPRINT(EM_DIAGRAM):   end;
1595500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595501   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1595502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595504   +   end;
MPRINT(EM_DIAGRAM):   end;
1595505   +end;
MPRINT(EM_DIAGRAM):   end;
1595506   +
1595507   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1595508   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1595509   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1595510   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1595511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595513   +end;
MPRINT(EM_DIAGRAM):   end;
1595514   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595515   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595516   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1595517   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595518   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1595519   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1595520   +   end;
MPRINT(EM_DIAGRAM):   end;
1595521   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1595522   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1595523   +   end;
MPRINT(EM_DIAGRAM):   end;
1595524   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595525   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1595526   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595527   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595528   +   end;
MPRINT(EM_DIAGRAM):   end;
1595529   +end;
MPRINT(EM_DIAGRAM):   end;
1595530   +
1595531   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1595532   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1595533   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1595534   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1595535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595537   +end;
MPRINT(EM_DIAGRAM):   end;
1595538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595539   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1595540   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1595541   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595542   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1595543   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1595544   +   end;
MPRINT(EM_DIAGRAM):   end;
1595545   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1595546   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1595547   +   end;
MPRINT(EM_DIAGRAM):   end;
1595548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595549   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1595550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595552   +   end;
MPRINT(EM_DIAGRAM):   end;
1595553   +end;
MPRINT(EM_DIAGRAM):   end;
1595554   +
1595555   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1595556   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1595557   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1595558   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1595559   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1595560   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1595561   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1595562   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1595563   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1595564   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1595565   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1595566   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1595567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595569   +end;
MPRINT(EM_DIAGRAM):   end;
1595570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595571   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1595572   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1595573   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595574   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1595575   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1595576   +   end;
MPRINT(EM_DIAGRAM):   end;
1595577   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1595578   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1595579   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1595580   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1595581   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1595582   +   end;
MPRINT(EM_DIAGRAM):   end;
1595583   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1595584   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1595585   +   end;
MPRINT(EM_DIAGRAM):   end;
1595586   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1595587   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1595588   +   end;
MPRINT(EM_DIAGRAM):   end;
1595589   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1595590   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1595591   +   end;
MPRINT(EM_DIAGRAM):   end;
1595592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595593   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1595594   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1595595   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1595596   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1595597   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595598   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595599   +   end;
MPRINT(EM_DIAGRAM):   end;
1595600   +end;
MPRINT(EM_DIAGRAM):   end;
1595601   +
1595602   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1595603   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1595604   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1595605   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1595606   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1595607   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1595608   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1595609   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1595610   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1595611   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1595612   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1595613   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1595614   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1595615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1595616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595617   +end;
MPRINT(EM_DIAGRAM):   end;
1595618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1595619   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1595620   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1595621   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1595622   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1595623   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1595624   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1595625   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1595626   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1595627   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1595628   +         end;
MPRINT(EM_DIAGRAM):   end;
1595629   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1595630   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1595631   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1595632   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1595633   +            end;
MPRINT(EM_DIAGRAM):   end;
1595634   +         end;
MPRINT(EM_DIAGRAM):   end;
1595635   +      end;
MPRINT(EM_DIAGRAM):   end;
1595636   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1595637   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1595638   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1595639   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1595640   +         end;
MPRINT(EM_DIAGRAM):   end;
1595641   +      end;
MPRINT(EM_DIAGRAM):   end;
1595642   +   end;
MPRINT(EM_DIAGRAM):   end;
1595643   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1595644   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1595645   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1595646   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1595647   +      end;
MPRINT(EM_DIAGRAM):   end;
1595648   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1595649   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1595650   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1595651   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1595652   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1595653   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1595654   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1595655   +         end;
MPRINT(EM_DIAGRAM):   end;
1595656   +      end;
MPRINT(EM_DIAGRAM):   end;
1595657   +   end;
MPRINT(EM_DIAGRAM):   end;
1595658   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1595659   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1595660   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1595661   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1595662   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1595663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1595664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595665   +   end;
MPRINT(EM_DIAGRAM):   end;
1595666   +end;
MPRINT(EM_DIAGRAM):   end;
1595667   +
1595668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595669   +*** Checking missing input Interval
1595670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1595671   +
1595672   +IF NMISS(
1595673   +   AcceptedCmpTotal ,
1595674   +   Age ,
1595675   +   Frq ,
1595676   +   Income ,
1595677   +   Kidhome ,
1595678   +   Mnt ,
1595679   +   MntFishProducts ,
1595680   +   MntFruits ,
1595681   +   MntGoldProds ,
1595682   +   MntMeatProducts ,
1595683   +   MntSweetProducts ,
1595684   +   MntWines ,
1595685   +   MonthsAsCustomer ,
1595686   +   NumCatalogPurchases ,
1595687   +   NumDealsPurchases ,
1595688   +   NumDistPurchases ,
1595689   +   NumStorePurchases ,
1595690   +   NumWebPurchases ,
1595691   +   NumWebVisitsMonth ,
1595692   +   RFMstat ,
1595693   +   RMntFrq ,
1595694   +   Recency ,
1595695   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1595696   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1595697   +
1595698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1595699   +END;
MPRINT(EM_DIAGRAM):   END;
1595700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595701   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1595702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595703   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1595704   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1595705   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1595706   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1595707   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1595708   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1595709   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1595710   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1595711   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1595712   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1595713   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1595714   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1595715   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1595716   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1595717   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1595718   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1595719   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1595720   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1595721   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1595722   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1595723   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1595724   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1595725   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1595726   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1595727   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1595728   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1595729   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1595730   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1595731   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1595732   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1595733   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1595734   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1595735   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1595736   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1595737   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1595738   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1595739   +END;
MPRINT(EM_DIAGRAM):   END;
1595740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1595741   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1595742   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1595743   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1595744   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1595745   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1595746   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1595747   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1595748   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1595749   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1595750   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1595751   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1595752   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1595753   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1595754   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1595755   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1595756   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1595757   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1595758   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1595759   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1595760   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1595761   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1595762   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1595763   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1595764   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1595765   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1595766   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1595767   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1595768   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1595769   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1595770   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1595771   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1595772   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1595773   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1595774   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1595775   +   ELSE S_NumCatalogPurchases
1595776   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1595777   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1595778   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1595779   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1595780   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1595781   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1595782   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1595783   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1595784   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1595785   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1595786   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1595787   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1595788   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1595789   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1595790   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1595791   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1595792   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1595793   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1595794   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1595795   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1595796   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1595797   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1595798   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1595799   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1595800   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1595801   +END;
MPRINT(EM_DIAGRAM):   END;
1595802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595803   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1595804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595806   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1595807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595809   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1595810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595811   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1595812   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1595813   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1595814   +        S_Income  +     0.48614351216065 * S_Kidhome
1595815   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1595816   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1595817   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1595818   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1595819   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1595820   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1595821   +          +     1.38069708066212 * S_NumDealsPurchases
1595822   +          +     0.18758966496994 * S_NumDistPurchases
1595823   +          +    -0.65306017966122 * S_NumStorePurchases
1595824   +          +    -0.65780154318734 * S_NumWebPurchases
1595825   +          +     1.42347048260615 * S_NumWebVisitsMonth
1595826   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1595827   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1595828   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1595829   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1595830   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1595831   +        S_Income  +     0.50072567449363 * S_Kidhome
1595832   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1595833   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1595834   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1595835   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1595836   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1595837   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1595838   +          +    -0.75291043162386 * S_NumDealsPurchases
1595839   +          +    -0.06780631818187 * S_NumDistPurchases
1595840   +          +     1.03453599373919 * S_NumStorePurchases
1595841   +          +     1.02348906006707 * S_NumWebPurchases
1595842   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1595843   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1595844   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1595845   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1595846   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1595847   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1595848   +        S_Income  +     0.57496607656903 * S_Kidhome
1595849   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1595850   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1595851   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1595852   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1595853   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1595854   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1595855   +          +     0.13431497076806 * S_NumDealsPurchases
1595856   +          +     -0.4516722514278 * S_NumDistPurchases
1595857   +          +     0.08636745161008 * S_NumStorePurchases
1595858   +          +    -0.01091843489919 * S_NumWebPurchases
1595859   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1595860   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1595861   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1595862   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1595863   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1595864   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1595865   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1595866   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1595867   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1595868   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1595869   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1595870   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1595871   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1595872   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1595873   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1595874   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1595875   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1595876   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1595877   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1595878   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1595879   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1595880   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1595881   +          +     0.09616912826117 * Marital_StatusDivorced
1595882   +          +     0.15377557778014 * Marital_StatusMarried
1595883   +          +    -0.20686296055741 * Marital_StatusSingle
1595884   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1595885   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1595886   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1595887   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1595888   +          +    -0.18362421441913 * Marital_StatusDivorced
1595889   +          +     0.14861660317702 * Marital_StatusMarried
1595890   +          +    -0.51051982152027 * Marital_StatusSingle
1595891   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1595892   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1595893   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1595894   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1595895   +          +    -0.65088528624708 * Marital_StatusDivorced
1595896   +          +     1.85383531288095 * Marital_StatusMarried
1595897   +          +    -1.45031245605509 * Marital_StatusSingle
1595898   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1595899   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1595900   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1595901   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1595902   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1595903   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1595904   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1595905   +END;
MPRINT(EM_DIAGRAM):   END;
1595906   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1595907   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1595908   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1595909   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1595910   +END;
MPRINT(EM_DIAGRAM):   END;
1595911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595912   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1595913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595914   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1595915   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1595916   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1595917   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1595918   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1595919   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1595920   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1595921   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1595922   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1595923   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1595924   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1595925   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1595926   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1595927   +END;
MPRINT(EM_DIAGRAM):   END;
1595928   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1595929   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1595930   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1595931   +END;
MPRINT(EM_DIAGRAM):   END;
1595932   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1595933   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1595934   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1595935   +END;
MPRINT(EM_DIAGRAM):   END;
1595936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595937   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1595938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1595939   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1595940   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1595941   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1595942   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1595943   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1595944   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1595945   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1595946   +END;
MPRINT(EM_DIAGRAM):   END;
1595947   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1595948   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1595949   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1595950   +drop
1595951   +H11
1595952   +H12
1595953   +H13
1595954   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1595955   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1595956    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1595957    quit;
1595958    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1595959    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1595960    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1595961    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1595962    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1595963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595964    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1595965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595967    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1595968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595970    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1595971    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1595972    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1595973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595974    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1595975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1595976    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1595977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595979    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1595980    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1595981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1595982    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595983    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1595984    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1595984  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1595985    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1595986    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1595987    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1595988    filename _pref
1595988  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1595989    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1595990    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1595991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1595992   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1595993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1595994   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1595995   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1595996   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1595997    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1595998    quit;
1595999    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1596000    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1596001    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1596002    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1596003    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1596004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596005    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1596006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596008    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1596009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1596011    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1596012    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1596013    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1596014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596015    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1596016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1596017    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1596018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596020    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1596021    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1596022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596023    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596024    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1596025    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1596025  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1596026    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1596027    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1596028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596029    filename _pref
1596029  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1596030    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1596031    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1596032   +
1596033   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1596034   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1596034  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1596035   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1596036   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1596037   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1596038   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1596039   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1596040    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1596041    quit;
1596042    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1596043    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1596044    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1596045    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1596046    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1596047    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596048    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1596049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596051    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1596052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596054    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1596055    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1596056    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1596057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596058    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1596059    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596060    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1596061    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596063    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1596064    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1596065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596066    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596067    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1596068    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1596068  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1596069    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1596070    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1596071    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596072    filename _pref
1596072  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1596073    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1596074    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1596075   +
1596076   +
1596077   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1596078   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1596079   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1596080   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1596081   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1596082   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596083   +
1596084   +
1596085   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1596086   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1596087   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1596088   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1596089   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1596090   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596091   +
1596092   +
1596093   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1596094   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1596095   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1596096   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1596097   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1596098   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596099   +
1596100   +
1596101   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1596102   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1596103   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1596104   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1596105   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1596106   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596107   +
1596108   +
1596109   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1596110   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1596111   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1596112   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1596113   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1596114   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596115   +
1596116   +
1596117   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1596118   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1596119   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1596120   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1596121   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1596122   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596123   +
1596124   +
1596125   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1596126   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1596127   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1596128   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1596129   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1596130   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596131   +
1596132   +
1596133   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1596134   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1596135   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1596136   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1596137   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1596138   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1596139   +if
1596140   +_FILTERNORM1 not in ( '.')
1596141   + and
1596142   +_FILTERNORM2 not in ( '.')
1596143   + and
1596144   +_FILTERNORM3 not in ( '.')
1596145   + and
1596146   +_FILTERNORM4 not in ( '.')
1596147   + and
1596148   +_FILTERNORM5 not in ( '.')
1596149   + and
1596150   +_FILTERNORM6 not in ( '.')
1596151   + and
1596152   +_FILTERNORM7 not in ( ' ')
1596153   + and
1596154   +_FILTERNORM8 not in ( ' ')
1596155   +and
1596156   +( Dt_Customer ne .)
1596157   +and ( Income ne . and (Income<=107000))
1596158   +and ( Kidhome ne .)
1596159   +and ( MntFishProducts ne .)
1596160   +and ( MntFruits ne .)
1596161   +and ( MntGoldProds ne .)
1596162   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1596163   +and ( MntSweetProducts ne .)
1596164   +and ( MntWines ne .)
1596165   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1596166   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1596167   +and ( NumStorePurchases ne .)
1596168   +and ( NumWebPurchases ne .)
1596169   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1596170   +and ( Recency ne .)
1596171   +and ( Teenhome ne .)
1596172   +and ( Year_Birth ne .)
1596173   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1596174   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1596175   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1596176   +end;
MPRINT(EM_DIAGRAM):   end;
1596177   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1596178   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1596179    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1596180    quit;
1596181    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1596182    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1596183    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1596184    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1596185    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1596186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596187    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1596188    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596189    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1596190    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1596191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596193    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1596194    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1596195    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1596196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596197    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1596198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1596199    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1596200    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596202    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1596203    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1596204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1596205    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596206    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1596207    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1596207  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1596208    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596209    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1596210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596211    %macro varDept(fcmpdata=,id=);
1596212    %global nobs&id scoreFlag&id;
1596213    %let scoreFlag&id = 0;
1596214    %if &id=1 or ^&fcmpStart %then %do;
1596215    proc sort data=&fcmpdata out=_temp&id nodupkey;
1596216    by NAME;
1596217    where id=&id and LHS in( %let j=1;
1596218    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1596219    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1596220    "&var" %let j = %eval(&j+1);
1596221    %end;
1596222    );
1596223    run;
1596224    %let dsid = %sysfunc(open(_temp&id));
1596225    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1596226    %let dsid = %sysfunc(close(&dsid));
1596227    %if &&nobs&id %then %do;
1596228    %let scoreFlag&id = 1;
1596229    %let fcmpStart = 1;
1596230    %end;
1596231    %else %let fcmpStart = 0;
1596232    %end;
1596233    %else %do;
1596234    proc sort data=&fcmpdata out=_tempid;
1596235    where id=&id;
1596236    by LHS;
1596237    run;
1596238    %let dsid = %sysfunc(open(_tempid));
1596239    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1596240    %let dsid = %sysfunc(close(&dsid));
1596241    %if ^&&nobs&id %then %do;
1596242    proc datasets lib=work nolist;
1596243    delete _tempid;
1596244    run;
1596245    quit;
1596246    %end;
1596247    %else %do;
1596248    data _tempAll;
1596249    set %let j=%eval(&id-1);
1596250    %do x=1 %to &j;
1596251    %if &&nobs&x %then %do;
1596252    _temp&x %end;
1596253    %end;
1596254    ;
1596255    run;
1596256    proc sql;
1596257    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1596257  ! work._tempid p2 where p.name=p2.lhs;
1596258    quit;
1596259    data _temp&id;
1596260    set _temp&id;
1596261    where LHS ne '' and NAME ne '' and Node ne '';
1596262    run;
1596263    proc datasets lib=work nolist;
1596264    delete _tempAll;
1596265    run;
1596266    %let dsid = %sysfunc(open(_temp&id));
1596267    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1596268    %let dsid = %sysfunc(close(&dsid));
1596269    %if ^&&nobs&id %then %do;
1596270    proc datasets lib=work nolist;
1596271    delete _temp&id;
1596272    run;
1596273    quit;
1596274    %end;
1596275    %else %do;
1596276    %let scoreFlag&id = 1;
1596277    data _temp&id;
1596278    set _temp&id;
1596279    where LHS ne NAME and node ne '';
1596280    run;
1596281    %let dsid = %sysfunc(open(_temp&id));
1596282    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1596283    %let dsid = %sysfunc(close(&dsid));
1596284    %if ^&&nobs&id %then %do;
1596285    proc datasets lib=work nolist;
1596286    delete _temp&id;
1596287    run;
1596288    quit;
1596289    %end;
1596290    %else %do;
1596291    proc sort data=_temp&id nodupkey;
1596292    by LHS NAME;
1596293    run;
1596294    %end;
1596295    %end;
1596296    %end;
1596297    %end;
1596298    %mend varDept;
1596299    %macro optCode(outdata=fcmpdata);
1596300    %global fcmpStart;
1596301    %let fcmpStart = 0;
1596302    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1596303    %let NumNodes=9;
1596304    %do k=1 %to &NumNodes;
1596305    %vardept(fcmpdata=&outdata, id=&k);
1596306    %end;
1596307    %mend optCode;
1596308    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.22 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1596309    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1596310    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1596311    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1596312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596313    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1596314    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1596315    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1596316    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596317    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1596318    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1596318  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1596319    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1596320    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1596321    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1596322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1596323    filename _pref
1596323  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1596324    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1596325    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1596326   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1596327   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1596328   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1596329   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1596330   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1596331   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1596332   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1596333   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1596334   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1596335   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1596336   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1596337   +LENGTH _WARN_ $4
1596338   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1596339   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1596340   +
1596341   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1596342   +
1596343   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1596344   +
1596345   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1596346   +
1596347   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1596348   +
1596349   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1596350   +
1596351   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1596352   +
1596353   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1596354   +
1596355   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1596356   +
1596357   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1596358   +
1596359   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1596360   +
1596361   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1596362   +
1596363   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1596364   +
1596365   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1596366   +
1596367   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1596368   +
1596369   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1596370   +
1596371   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1596372   +
1596373   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1596374   +
1596375   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1596376   +
1596377   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1596378   +
1596379   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1596380   +
1596381   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1596382   +
1596383   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1596384   +
1596385   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1596386   +
1596387   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1596388   +
1596389   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1596390   +
1596391   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1596392   +
1596393   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1596394   +
1596395   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1596396   +
1596397   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1596398   +
1596399   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1596400   +
1596401   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1596402   +
1596403   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1596404   +
1596405   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1596406   +
1596407   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1596408   +
1596409   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1596410   +
1596411   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1596412   +
1596413   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1596414   +
1596415   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1596416   +
1596417   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1596418   +
1596419   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1596420   +
1596421   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1596422   +
1596423   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1596424   +
1596425   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1596426   +
1596427   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1596428   +
1596429   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1596430   +
1596431   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1596432   +
1596433   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1596434   +
1596435   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1596436   +
1596437   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1596438   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1596439   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1596440   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1596441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596443   +end;
MPRINT(EM_DIAGRAM):   end;
1596444   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596446   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1596447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596448   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1596449   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1596450   +   end;
MPRINT(EM_DIAGRAM):   end;
1596451   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1596452   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1596453   +   end;
MPRINT(EM_DIAGRAM):   end;
1596454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596455   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1596456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596458   +   end;
MPRINT(EM_DIAGRAM):   end;
1596459   +end;
MPRINT(EM_DIAGRAM):   end;
1596460   +
1596461   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1596462   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1596463   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1596464   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1596465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596467   +end;
MPRINT(EM_DIAGRAM):   end;
1596468   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596470   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1596471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596472   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1596473   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1596474   +   end;
MPRINT(EM_DIAGRAM):   end;
1596475   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1596476   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1596477   +   end;
MPRINT(EM_DIAGRAM):   end;
1596478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596479   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1596480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596482   +   end;
MPRINT(EM_DIAGRAM):   end;
1596483   +end;
MPRINT(EM_DIAGRAM):   end;
1596484   +
1596485   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1596486   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1596487   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1596488   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1596489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596491   +end;
MPRINT(EM_DIAGRAM):   end;
1596492   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596494   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1596495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596496   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1596497   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1596498   +   end;
MPRINT(EM_DIAGRAM):   end;
1596499   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1596500   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1596501   +   end;
MPRINT(EM_DIAGRAM):   end;
1596502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596503   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1596504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596506   +   end;
MPRINT(EM_DIAGRAM):   end;
1596507   +end;
MPRINT(EM_DIAGRAM):   end;
1596508   +
1596509   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1596510   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1596511   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1596512   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1596513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596515   +end;
MPRINT(EM_DIAGRAM):   end;
1596516   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596518   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1596519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596520   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1596521   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1596522   +   end;
MPRINT(EM_DIAGRAM):   end;
1596523   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1596524   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1596525   +   end;
MPRINT(EM_DIAGRAM):   end;
1596526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596527   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1596528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596530   +   end;
MPRINT(EM_DIAGRAM):   end;
1596531   +end;
MPRINT(EM_DIAGRAM):   end;
1596532   +
1596533   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1596534   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1596535   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1596536   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1596537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596539   +end;
MPRINT(EM_DIAGRAM):   end;
1596540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596542   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1596543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596544   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1596545   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1596546   +   end;
MPRINT(EM_DIAGRAM):   end;
1596547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1596548   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1596549   +   end;
MPRINT(EM_DIAGRAM):   end;
1596550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596551   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1596552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596554   +   end;
MPRINT(EM_DIAGRAM):   end;
1596555   +end;
MPRINT(EM_DIAGRAM):   end;
1596556   +
1596557   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1596558   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1596559   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1596560   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1596561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596563   +end;
MPRINT(EM_DIAGRAM):   end;
1596564   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596566   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1596567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1596569   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1596570   +   end;
MPRINT(EM_DIAGRAM):   end;
1596571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1596572   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1596573   +   end;
MPRINT(EM_DIAGRAM):   end;
1596574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596575   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1596576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596578   +   end;
MPRINT(EM_DIAGRAM):   end;
1596579   +end;
MPRINT(EM_DIAGRAM):   end;
1596580   +
1596581   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1596582   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1596583   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1596584   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1596585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596587   +end;
MPRINT(EM_DIAGRAM):   end;
1596588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1596590   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1596591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596592   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1596593   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1596594   +   end;
MPRINT(EM_DIAGRAM):   end;
1596595   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1596596   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1596597   +   end;
MPRINT(EM_DIAGRAM):   end;
1596598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596599   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1596600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596602   +   end;
MPRINT(EM_DIAGRAM):   end;
1596603   +end;
MPRINT(EM_DIAGRAM):   end;
1596604   +
1596605   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1596606   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1596607   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1596608   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1596609   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1596610   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1596611   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1596612   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1596613   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1596614   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1596615   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1596616   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1596617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596619   +end;
MPRINT(EM_DIAGRAM):   end;
1596620   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596621   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1596622   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1596623   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596624   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1596625   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1596626   +   end;
MPRINT(EM_DIAGRAM):   end;
1596627   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1596628   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1596629   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1596630   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1596631   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1596632   +   end;
MPRINT(EM_DIAGRAM):   end;
1596633   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1596634   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1596635   +   end;
MPRINT(EM_DIAGRAM):   end;
1596636   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1596637   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1596638   +   end;
MPRINT(EM_DIAGRAM):   end;
1596639   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1596640   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1596641   +   end;
MPRINT(EM_DIAGRAM):   end;
1596642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596643   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1596644   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1596645   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1596646   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1596647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596649   +   end;
MPRINT(EM_DIAGRAM):   end;
1596650   +end;
MPRINT(EM_DIAGRAM):   end;
1596651   +
1596652   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1596653   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1596654   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1596655   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1596656   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1596657   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1596658   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1596659   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1596660   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1596661   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1596662   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1596663   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1596664   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1596665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1596666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596667   +end;
MPRINT(EM_DIAGRAM):   end;
1596668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1596669   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1596670   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1596671   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1596672   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1596673   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1596674   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1596675   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1596676   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1596677   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1596678   +         end;
MPRINT(EM_DIAGRAM):   end;
1596679   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1596680   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1596681   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1596682   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1596683   +            end;
MPRINT(EM_DIAGRAM):   end;
1596684   +         end;
MPRINT(EM_DIAGRAM):   end;
1596685   +      end;
MPRINT(EM_DIAGRAM):   end;
1596686   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1596687   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1596688   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1596689   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1596690   +         end;
MPRINT(EM_DIAGRAM):   end;
1596691   +      end;
MPRINT(EM_DIAGRAM):   end;
1596692   +   end;
MPRINT(EM_DIAGRAM):   end;
1596693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1596694   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1596695   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1596696   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1596697   +      end;
MPRINT(EM_DIAGRAM):   end;
1596698   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1596699   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1596700   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1596701   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1596702   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1596703   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1596704   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1596705   +         end;
MPRINT(EM_DIAGRAM):   end;
1596706   +      end;
MPRINT(EM_DIAGRAM):   end;
1596707   +   end;
MPRINT(EM_DIAGRAM):   end;
1596708   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1596709   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1596710   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1596711   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1596712   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1596713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1596714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596715   +   end;
MPRINT(EM_DIAGRAM):   end;
1596716   +end;
MPRINT(EM_DIAGRAM):   end;
1596717   +
1596718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596719   +*** Checking missing input Interval
1596720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1596721   +
1596722   +IF NMISS(
1596723   +   AcceptedCmpTotal ,
1596724   +   Age ,
1596725   +   Frq ,
1596726   +   Income ,
1596727   +   Kidhome ,
1596728   +   Mnt ,
1596729   +   MntFishProducts ,
1596730   +   MntFruits ,
1596731   +   MntGoldProds ,
1596732   +   MntMeatProducts ,
1596733   +   MntSweetProducts ,
1596734   +   MntWines ,
1596735   +   MonthsAsCustomer ,
1596736   +   NumCatalogPurchases ,
1596737   +   NumDealsPurchases ,
1596738   +   NumDistPurchases ,
1596739   +   NumStorePurchases ,
1596740   +   NumWebPurchases ,
1596741   +   NumWebVisitsMonth ,
1596742   +   RFMstat ,
1596743   +   RMntFrq ,
1596744   +   Recency ,
1596745   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1596746   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1596747   +
1596748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1596749   +END;
MPRINT(EM_DIAGRAM):   END;
1596750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596751   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1596752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596753   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1596754   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1596755   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1596756   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1596757   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1596758   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1596759   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1596760   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1596761   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1596762   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1596763   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1596764   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1596765   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1596766   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1596767   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1596768   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1596769   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1596770   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1596771   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1596772   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1596773   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1596774   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1596775   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1596776   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1596777   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1596778   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1596779   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1596780   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1596781   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1596782   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1596783   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1596784   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1596785   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1596786   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1596787   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1596788   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1596789   +END;
MPRINT(EM_DIAGRAM):   END;
1596790   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1596791   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1596792   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1596793   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1596794   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1596795   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1596796   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1596797   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1596798   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1596799   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1596800   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1596801   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1596802   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1596803   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1596804   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1596805   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1596806   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1596807   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1596808   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1596809   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1596810   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1596811   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1596812   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1596813   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1596814   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1596815   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1596816   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1596817   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1596818   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1596819   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1596820   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1596821   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1596822   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1596823   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1596824   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1596825   +   ELSE S_NumCatalogPurchases
1596826   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1596827   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1596828   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1596829   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1596830   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1596831   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1596832   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1596833   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1596834   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1596835   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1596836   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1596837   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1596838   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1596839   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1596840   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1596841   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1596842   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1596843   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1596844   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1596845   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1596846   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1596847   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1596848   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1596849   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1596850   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1596851   +END;
MPRINT(EM_DIAGRAM):   END;
1596852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596853   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1596854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596856   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1596857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596859   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1596860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1596861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1596862   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1596863   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1596864   +        S_Income  +     -0.0761121347886 * S_Kidhome
1596865   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1596866   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1596867   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1596868   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1596869   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1596870   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1596871   +          +     0.83893684194413 * S_NumDealsPurchases
1596872   +          +     0.23391006875291 * S_NumDistPurchases
1596873   +          +    -0.63370705462074 * S_NumStorePurchases
1596874   +          +     -0.9137408014067 * S_NumWebPurchases
1596875   +          +     0.89109351479441 * S_NumWebVisitsMonth
1596876   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1596877   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1596878   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1596879   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1596880   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1596881   +        S_Income  +    -0.43909782819329 * S_Kidhome
1596882   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1596883   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1596884   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1596885   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1596886   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1596887   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1596888   +          +      0.2218973353638 * S_NumDealsPurchases
1596889   +          +      0.0062360950528 * S_NumDistPurchases
1596890   +          +    -0.57621747951002 * S_NumStorePurchases
1596891   +          +    -0.33564890905657 * S_NumWebPurchases
1596892   +          +     0.82482365540301 * S_NumWebVisitsMonth
1596893   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1596894   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1596895   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1596896   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1596897   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1596898   +        S_Income  +    -0.03572236011846 * S_Kidhome
1596899   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1596900   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1596901   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1596902   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1596903   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1596904   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1596905   +          +      -0.174147250062 * S_NumDealsPurchases
1596906   +          +    -0.22921682388864 * S_NumDistPurchases
1596907   +          +     0.41526854684299 * S_NumStorePurchases
1596908   +          +    -0.27675565493519 * S_NumWebPurchases
1596909   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1596910   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1596911   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1596912   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1596913   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1596914   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1596915   +        S_Income  +    -0.04788369327547 * S_Kidhome
1596916   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1596917   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1596918   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1596919   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1596920   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1596921   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1596922   +          +    -0.46022430102423 * S_NumDealsPurchases
1596923   +          +     0.15831339342044 * S_NumDistPurchases
1596924   +          +     0.22480465173719 * S_NumStorePurchases
1596925   +          +     0.44798923484609 * S_NumWebPurchases
1596926   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1596927   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1596928   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1596929   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1596930   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1596931   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1596932   +        S_Income  +     0.53994304261534 * S_Kidhome
1596933   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1596934   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1596935   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1596936   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1596937   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1596938   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1596939   +          +     0.03650267472167 * S_NumDealsPurchases
1596940   +          +    -0.03322709524939 * S_NumDistPurchases
1596941   +          +     -0.0022226424472 * S_NumStorePurchases
1596942   +          +    -0.10131236740674 * S_NumWebPurchases
1596943   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1596944   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1596945   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1596946   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1596947   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1596948   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1596949   +        S_Income  +    -0.52576099429582 * S_Kidhome
1596950   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1596951   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1596952   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1596953   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1596954   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1596955   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1596956   +          +    -0.50209914729324 * S_NumDealsPurchases
1596957   +          +    -0.46217244513696 * S_NumDistPurchases
1596958   +          +      0.1832648560248 * S_NumStorePurchases
1596959   +          +     0.02866153257072 * S_NumWebPurchases
1596960   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1596961   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1596962   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1596963   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1596964   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1596965   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1596966   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1596967   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1596968   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1596969   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1596970   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1596971   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1596972   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1596973   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1596974   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1596975   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1596976   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1596977   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1596978   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1596979   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1596980   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1596981   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1596982   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1596983   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1596984   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1596985   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1596986   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1596987   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1596988   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1596989   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1596990   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1596991   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1596992   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1596993   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1596994   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1596995   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1596996   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1596997   +          +     0.13815069071511 * Marital_StatusDivorced
1596998   +          +      0.0732913060929 * Marital_StatusMarried
1596999   +          +    -0.22858418468746 * Marital_StatusSingle
1597000   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1597001   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1597002   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1597003   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1597004   +          +     0.32909808396509 * Marital_StatusDivorced
1597005   +          +    -0.50160173579004 * Marital_StatusMarried
1597006   +          +     0.57207102211224 * Marital_StatusSingle
1597007   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1597008   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1597009   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1597010   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1597011   +          +    -0.07154493730107 * Marital_StatusDivorced
1597012   +          +     0.29126100051603 * Marital_StatusMarried
1597013   +          +    -0.06936325857004 * Marital_StatusSingle
1597014   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1597015   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1597016   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1597017   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1597018   +          +    -0.05004640872388 * Marital_StatusDivorced
1597019   +          +     0.22197974032974 * Marital_StatusMarried
1597020   +          +    -0.33931504637453 * Marital_StatusSingle
1597021   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1597022   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1597023   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1597024   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1597025   +          +    -0.07748874669478 * Marital_StatusDivorced
1597026   +          +     1.05442281159109 * Marital_StatusMarried
1597027   +          +    -0.67190984038867 * Marital_StatusSingle
1597028   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1597029   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1597030   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1597031   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1597032   +          +    -0.20478208715114 * Marital_StatusDivorced
1597033   +          +    -0.40186383707642 * Marital_StatusMarried
1597034   +          +     0.43474841662774 * Marital_StatusSingle
1597035   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1597036   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1597037   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1597038   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1597039   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1597040   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1597041   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1597042   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1597043   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1597044   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1597045   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1597046   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1597047   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1597048   +END;
MPRINT(EM_DIAGRAM):   END;
1597049   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1597050   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1597051   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1597052   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1597053   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1597054   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1597055   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1597056   +END;
MPRINT(EM_DIAGRAM):   END;
1597057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597058   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1597059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597060   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1597061   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1597062   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1597063   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1597064   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1597065   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1597066   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1597067   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1597068   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1597069   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1597070   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1597071   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1597072   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1597073   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1597074   +END;
MPRINT(EM_DIAGRAM):   END;
1597075   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1597076   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1597077   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1597078   +END;
MPRINT(EM_DIAGRAM):   END;
1597079   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1597080   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1597081   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1597082   +END;
MPRINT(EM_DIAGRAM):   END;
1597083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597084   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1597085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597086   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1597087   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1597088   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1597089   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1597090   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1597091   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1597092   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1597093   +END;
MPRINT(EM_DIAGRAM):   END;
1597094   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1597095   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1597096   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1597097   +drop
1597098   +H11
1597099   +H12
1597100   +H13
1597101   +H14
1597102   +H15
1597103   +H16
1597104   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1597105   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1597106    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1597107    quit;
1597108    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1597109    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1597110    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1597111    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1597112    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1597113    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597114    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1597115    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597117    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1597118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597120    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597121    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1597122    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1597123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597124    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1597125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1597126    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1597127    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597129    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597130    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1597131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597132    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597133    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1597134    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1597134  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1597135    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597136    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1597137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597138    filename _pref
1597138  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1597139    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1597140    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1597141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1597142   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1597143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1597144   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1597145   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1597146   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1597147    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1597148    quit;
1597149    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1597150    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1597151    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1597152    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1597153    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1597154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597155    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1597156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597158    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1597159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597161    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597162    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1597163    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1597164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597165    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1597166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1597167    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1597168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597171    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1597172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597173    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597174    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1597175    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1597175  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1597176    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597177    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1597178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597179    filename _pref
1597179  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1597180    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1597181    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1597182   +
1597183   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1597184   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1597184  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1597185   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1597186   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1597187   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1597188   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1597189   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1597190    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1597191    quit;
1597192    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1597193    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1597194    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1597195    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1597196    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1597197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597198    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1597199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597201    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1597202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597203    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597205    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1597206    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1597207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597208    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1597209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597210    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1597211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597214    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1597215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597216    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597217    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1597218    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1597218  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1597219    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597220    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1597221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597222    filename _pref
1597222  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1597223    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1597224    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1597225   +
1597226   +
1597227   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1597228   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1597229   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1597230   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1597231   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1597232   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597233   +
1597234   +
1597235   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1597236   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1597237   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1597238   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1597239   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1597240   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597241   +
1597242   +
1597243   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1597244   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1597245   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1597246   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1597247   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1597248   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597249   +
1597250   +
1597251   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1597252   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1597253   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1597254   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1597255   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1597256   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597257   +
1597258   +
1597259   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1597260   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1597261   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1597262   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1597263   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1597264   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597265   +
1597266   +
1597267   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1597268   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1597269   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1597270   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1597271   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1597272   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597273   +
1597274   +
1597275   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1597276   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1597277   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1597278   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1597279   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1597280   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597281   +
1597282   +
1597283   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1597284   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1597285   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1597286   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1597287   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1597288   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1597289   +if
1597290   +_FILTERNORM1 not in ( '.')
1597291   + and
1597292   +_FILTERNORM2 not in ( '.')
1597293   + and
1597294   +_FILTERNORM3 not in ( '.')
1597295   + and
1597296   +_FILTERNORM4 not in ( '.')
1597297   + and
1597298   +_FILTERNORM5 not in ( '.')
1597299   + and
1597300   +_FILTERNORM6 not in ( '.')
1597301   + and
1597302   +_FILTERNORM7 not in ( ' ')
1597303   + and
1597304   +_FILTERNORM8 not in ( ' ')
1597305   +and
1597306   +( Dt_Customer ne .)
1597307   +and ( Income ne . and (Income<=107000))
1597308   +and ( Kidhome ne .)
1597309   +and ( MntFishProducts ne .)
1597310   +and ( MntFruits ne .)
1597311   +and ( MntGoldProds ne .)
1597312   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1597313   +and ( MntSweetProducts ne .)
1597314   +and ( MntWines ne .)
1597315   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1597316   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1597317   +and ( NumStorePurchases ne .)
1597318   +and ( NumWebPurchases ne .)
1597319   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1597320   +and ( Recency ne .)
1597321   +and ( Teenhome ne .)
1597322   +and ( Year_Birth ne .)
1597323   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1597324   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1597325   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1597326   +end;
MPRINT(EM_DIAGRAM):   end;
1597327   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1597328   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1597329    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1597330    quit;
1597331    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1597332    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1597333    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1597334    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1597335    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1597336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597337    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1597338    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597340    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1597341    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597342    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597343    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597344    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1597345    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1597346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597347    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1597348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1597349    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1597350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597351    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597352    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1597353    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1597354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1597355    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597356    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1597357    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1597357  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1597358    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597359    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1597360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597361    %macro varDept(fcmpdata=,id=);
1597362    %global nobs&id scoreFlag&id;
1597363    %let scoreFlag&id = 0;
1597364    %if &id=1 or ^&fcmpStart %then %do;
1597365    proc sort data=&fcmpdata out=_temp&id nodupkey;
1597366    by NAME;
1597367    where id=&id and LHS in( %let j=1;
1597368    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1597369    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1597370    "&var" %let j = %eval(&j+1);
1597371    %end;
1597372    );
1597373    run;
1597374    %let dsid = %sysfunc(open(_temp&id));
1597375    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1597376    %let dsid = %sysfunc(close(&dsid));
1597377    %if &&nobs&id %then %do;
1597378    %let scoreFlag&id = 1;
1597379    %let fcmpStart = 1;
1597380    %end;
1597381    %else %let fcmpStart = 0;
1597382    %end;
1597383    %else %do;
1597384    proc sort data=&fcmpdata out=_tempid;
1597385    where id=&id;
1597386    by LHS;
1597387    run;
1597388    %let dsid = %sysfunc(open(_tempid));
1597389    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1597390    %let dsid = %sysfunc(close(&dsid));
1597391    %if ^&&nobs&id %then %do;
1597392    proc datasets lib=work nolist;
1597393    delete _tempid;
1597394    run;
1597395    quit;
1597396    %end;
1597397    %else %do;
1597398    data _tempAll;
1597399    set %let j=%eval(&id-1);
1597400    %do x=1 %to &j;
1597401    %if &&nobs&x %then %do;
1597402    _temp&x %end;
1597403    %end;
1597404    ;
1597405    run;
1597406    proc sql;
1597407    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1597407  ! work._tempid p2 where p.name=p2.lhs;
1597408    quit;
1597409    data _temp&id;
1597410    set _temp&id;
1597411    where LHS ne '' and NAME ne '' and Node ne '';
1597412    run;
1597413    proc datasets lib=work nolist;
1597414    delete _tempAll;
1597415    run;
1597416    %let dsid = %sysfunc(open(_temp&id));
1597417    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1597418    %let dsid = %sysfunc(close(&dsid));
1597419    %if ^&&nobs&id %then %do;
1597420    proc datasets lib=work nolist;
1597421    delete _temp&id;
1597422    run;
1597423    quit;
1597424    %end;
1597425    %else %do;
1597426    %let scoreFlag&id = 1;
1597427    data _temp&id;
1597428    set _temp&id;
1597429    where LHS ne NAME and node ne '';
1597430    run;
1597431    %let dsid = %sysfunc(open(_temp&id));
1597432    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1597433    %let dsid = %sysfunc(close(&dsid));
1597434    %if ^&&nobs&id %then %do;
1597435    proc datasets lib=work nolist;
1597436    delete _temp&id;
1597437    run;
1597438    quit;
1597439    %end;
1597440    %else %do;
1597441    proc sort data=_temp&id nodupkey;
1597442    by LHS NAME;
1597443    run;
1597444    %end;
1597445    %end;
1597446    %end;
1597447    %end;
1597448    %mend varDept;
1597449    %macro optCode(outdata=fcmpdata);
1597450    %global fcmpStart;
1597451    %let fcmpStart = 0;
1597452    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1597453    %let NumNodes=9;
1597454    %do k=1 %to &NumNodes;
1597455    %vardept(fcmpdata=&outdata, id=&k);
1597456    %end;
1597457    %mend optCode;
1597458    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1597459    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1597460    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1597461    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1597462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1597463    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1597464    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1597465    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1597466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597467    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1597468    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1597468  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1597469    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1597470    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1597471    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1597472    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1597473    filename _pref
1597473  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1597474    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1597475    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1597476   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1597477   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1597478   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1597479   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1597480   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1597481   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1597482   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1597483   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1597484   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1597485   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1597486   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1597487   +LENGTH _WARN_ $4
1597488   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1597489   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1597490   +
1597491   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1597492   +
1597493   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1597494   +
1597495   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1597496   +
1597497   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1597498   +
1597499   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1597500   +
1597501   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1597502   +
1597503   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1597504   +
1597505   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1597506   +
1597507   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1597508   +
1597509   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1597510   +
1597511   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1597512   +
1597513   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1597514   +
1597515   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1597516   +
1597517   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1597518   +
1597519   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1597520   +
1597521   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1597522   +
1597523   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1597524   +
1597525   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1597526   +
1597527   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1597528   +
1597529   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1597530   +
1597531   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1597532   +
1597533   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1597534   +
1597535   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1597536   +
1597537   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1597538   +
1597539   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1597540   +
1597541   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1597542   +
1597543   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1597544   +
1597545   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1597546   +
1597547   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1597548   +
1597549   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1597550   +
1597551   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1597552   +
1597553   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1597554   +
1597555   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1597556   +
1597557   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1597558   +
1597559   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1597560   +
1597561   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1597562   +
1597563   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1597564   +
1597565   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1597566   +
1597567   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1597568   +
1597569   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1597570   +
1597571   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1597572   +
1597573   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1597574   +
1597575   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1597576   +
1597577   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1597578   +
1597579   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1597580   +
1597581   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1597582   +
1597583   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1597584   +
1597585   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1597586   +
1597587   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1597588   +
1597589   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1597590   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1597591   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1597592   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1597593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597595   +end;
MPRINT(EM_DIAGRAM):   end;
1597596   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597597   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597598   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1597599   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597600   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1597601   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1597602   +   end;
MPRINT(EM_DIAGRAM):   end;
1597603   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1597604   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1597605   +   end;
MPRINT(EM_DIAGRAM):   end;
1597606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597607   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1597608   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597609   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597610   +   end;
MPRINT(EM_DIAGRAM):   end;
1597611   +end;
MPRINT(EM_DIAGRAM):   end;
1597612   +
1597613   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1597614   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1597615   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1597616   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1597617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597619   +end;
MPRINT(EM_DIAGRAM):   end;
1597620   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597621   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597622   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1597623   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597624   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1597625   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1597626   +   end;
MPRINT(EM_DIAGRAM):   end;
1597627   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1597628   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1597629   +   end;
MPRINT(EM_DIAGRAM):   end;
1597630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597631   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1597632   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597633   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597634   +   end;
MPRINT(EM_DIAGRAM):   end;
1597635   +end;
MPRINT(EM_DIAGRAM):   end;
1597636   +
1597637   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1597638   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1597639   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1597640   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1597641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597643   +end;
MPRINT(EM_DIAGRAM):   end;
1597644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597646   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1597647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597648   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1597649   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1597650   +   end;
MPRINT(EM_DIAGRAM):   end;
1597651   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1597652   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1597653   +   end;
MPRINT(EM_DIAGRAM):   end;
1597654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597655   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1597656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597658   +   end;
MPRINT(EM_DIAGRAM):   end;
1597659   +end;
MPRINT(EM_DIAGRAM):   end;
1597660   +
1597661   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1597662   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1597663   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1597664   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1597665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597667   +end;
MPRINT(EM_DIAGRAM):   end;
1597668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597670   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1597671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597672   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1597673   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1597674   +   end;
MPRINT(EM_DIAGRAM):   end;
1597675   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1597676   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1597677   +   end;
MPRINT(EM_DIAGRAM):   end;
1597678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597679   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1597680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597682   +   end;
MPRINT(EM_DIAGRAM):   end;
1597683   +end;
MPRINT(EM_DIAGRAM):   end;
1597684   +
1597685   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1597686   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1597687   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1597688   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1597689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597691   +end;
MPRINT(EM_DIAGRAM):   end;
1597692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597694   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1597695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597696   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1597697   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1597698   +   end;
MPRINT(EM_DIAGRAM):   end;
1597699   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1597700   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1597701   +   end;
MPRINT(EM_DIAGRAM):   end;
1597702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597703   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1597704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597706   +   end;
MPRINT(EM_DIAGRAM):   end;
1597707   +end;
MPRINT(EM_DIAGRAM):   end;
1597708   +
1597709   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1597710   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1597711   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1597712   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1597713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597715   +end;
MPRINT(EM_DIAGRAM):   end;
1597716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597718   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1597719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597720   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1597721   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1597722   +   end;
MPRINT(EM_DIAGRAM):   end;
1597723   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1597724   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1597725   +   end;
MPRINT(EM_DIAGRAM):   end;
1597726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597727   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1597728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597730   +   end;
MPRINT(EM_DIAGRAM):   end;
1597731   +end;
MPRINT(EM_DIAGRAM):   end;
1597732   +
1597733   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1597734   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1597735   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1597736   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1597737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597739   +end;
MPRINT(EM_DIAGRAM):   end;
1597740   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1597742   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1597743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597744   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1597745   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1597746   +   end;
MPRINT(EM_DIAGRAM):   end;
1597747   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1597748   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1597749   +   end;
MPRINT(EM_DIAGRAM):   end;
1597750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597751   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1597752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597754   +   end;
MPRINT(EM_DIAGRAM):   end;
1597755   +end;
MPRINT(EM_DIAGRAM):   end;
1597756   +
1597757   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1597758   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1597759   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1597760   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1597761   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1597762   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1597763   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1597764   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1597765   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1597766   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1597767   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1597768   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1597769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597771   +end;
MPRINT(EM_DIAGRAM):   end;
1597772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597773   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1597774   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1597775   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597776   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1597777   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1597778   +   end;
MPRINT(EM_DIAGRAM):   end;
1597779   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1597780   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1597781   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1597782   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1597783   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1597784   +   end;
MPRINT(EM_DIAGRAM):   end;
1597785   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1597786   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1597787   +   end;
MPRINT(EM_DIAGRAM):   end;
1597788   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1597789   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1597790   +   end;
MPRINT(EM_DIAGRAM):   end;
1597791   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1597792   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1597793   +   end;
MPRINT(EM_DIAGRAM):   end;
1597794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597795   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1597796   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1597797   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1597798   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1597799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597801   +   end;
MPRINT(EM_DIAGRAM):   end;
1597802   +end;
MPRINT(EM_DIAGRAM):   end;
1597803   +
1597804   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1597805   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1597806   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1597807   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1597808   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1597809   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1597810   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1597811   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1597812   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1597813   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1597814   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1597815   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1597816   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1597817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1597818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597819   +end;
MPRINT(EM_DIAGRAM):   end;
1597820   +else do;
MPRINT(EM_DIAGRAM):   else do;
1597821   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1597822   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1597823   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1597824   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1597825   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1597826   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1597827   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1597828   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1597829   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1597830   +         end;
MPRINT(EM_DIAGRAM):   end;
1597831   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1597832   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1597833   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1597834   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1597835   +            end;
MPRINT(EM_DIAGRAM):   end;
1597836   +         end;
MPRINT(EM_DIAGRAM):   end;
1597837   +      end;
MPRINT(EM_DIAGRAM):   end;
1597838   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1597839   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1597840   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1597841   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1597842   +         end;
MPRINT(EM_DIAGRAM):   end;
1597843   +      end;
MPRINT(EM_DIAGRAM):   end;
1597844   +   end;
MPRINT(EM_DIAGRAM):   end;
1597845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1597846   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1597847   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1597848   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1597849   +      end;
MPRINT(EM_DIAGRAM):   end;
1597850   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1597851   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1597852   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1597853   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1597854   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1597855   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1597856   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1597857   +         end;
MPRINT(EM_DIAGRAM):   end;
1597858   +      end;
MPRINT(EM_DIAGRAM):   end;
1597859   +   end;
MPRINT(EM_DIAGRAM):   end;
1597860   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1597861   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1597862   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1597863   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1597864   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1597865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1597866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597867   +   end;
MPRINT(EM_DIAGRAM):   end;
1597868   +end;
MPRINT(EM_DIAGRAM):   end;
1597869   +
1597870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597871   +*** Checking missing input Interval
1597872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1597873   +
1597874   +IF NMISS(
1597875   +   AcceptedCmpTotal ,
1597876   +   Age ,
1597877   +   Frq ,
1597878   +   Income ,
1597879   +   Kidhome ,
1597880   +   Mnt ,
1597881   +   MntFishProducts ,
1597882   +   MntFruits ,
1597883   +   MntGoldProds ,
1597884   +   MntMeatProducts ,
1597885   +   MntSweetProducts ,
1597886   +   MntWines ,
1597887   +   MonthsAsCustomer ,
1597888   +   NumCatalogPurchases ,
1597889   +   NumDealsPurchases ,
1597890   +   NumDistPurchases ,
1597891   +   NumStorePurchases ,
1597892   +   NumWebPurchases ,
1597893   +   NumWebVisitsMonth ,
1597894   +   RFMstat ,
1597895   +   RMntFrq ,
1597896   +   Recency ,
1597897   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1597898   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1597899   +
1597900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1597901   +END;
MPRINT(EM_DIAGRAM):   END;
1597902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597903   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1597904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1597905   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1597906   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1597907   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1597908   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1597909   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1597910   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1597911   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1597912   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1597913   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1597914   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1597915   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1597916   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1597917   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1597918   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1597919   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1597920   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1597921   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1597922   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1597923   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1597924   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1597925   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1597926   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1597927   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1597928   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1597929   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1597930   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1597931   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1597932   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1597933   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1597934   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1597935   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1597936   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1597937   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1597938   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1597939   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1597940   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1597941   +END;
MPRINT(EM_DIAGRAM):   END;
1597942   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1597943   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1597944   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1597945   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1597946   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1597947   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1597948   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1597949   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1597950   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1597951   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1597952   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1597953   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1597954   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1597955   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1597956   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1597957   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1597958   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1597959   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1597960   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1597961   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1597962   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1597963   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1597964   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1597965   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1597966   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1597967   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1597968   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1597969   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1597970   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1597971   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1597972   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1597973   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1597974   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1597975   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1597976   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1597977   +   ELSE S_NumCatalogPurchases
1597978   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1597979   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1597980   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1597981   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1597982   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1597983   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1597984   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1597985   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1597986   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1597987   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1597988   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1597989   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1597990   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1597991   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1597992   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1597993   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1597994   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1597995   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1597996   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1597997   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1597998   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1597999   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1598000   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1598001   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1598002   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1598003   +END;
MPRINT(EM_DIAGRAM):   END;
1598004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598005   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1598006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598008   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1598009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598011   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1598012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598013   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1598014   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1598015   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1598016   +        S_Income  +    -0.45967008908227 * S_Kidhome
1598017   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1598018   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1598019   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1598020   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1598021   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1598022   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1598023   +          +    -0.23353175442713 * S_NumDealsPurchases
1598024   +          +     0.18635522192442 * S_NumDistPurchases
1598025   +          +     0.37209457890956 * S_NumStorePurchases
1598026   +          +     0.25018232304823 * S_NumWebPurchases
1598027   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1598028   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1598029   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1598030   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1598031   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1598032   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1598033   +        S_Income  +     0.23329613045589 * S_Kidhome
1598034   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1598035   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1598036   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1598037   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1598038   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1598039   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1598040   +          +    -0.09699498622435 * S_NumDealsPurchases
1598041   +          +     0.40364070798795 * S_NumDistPurchases
1598042   +          +      0.2162579072164 * S_NumStorePurchases
1598043   +          +     0.26248410135079 * S_NumWebPurchases
1598044   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1598045   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1598046   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1598047   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1598048   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1598049   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1598050   +        S_Income  +     0.20139862021528 * S_Kidhome
1598051   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1598052   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1598053   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1598054   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1598055   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1598056   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1598057   +          +     0.09066191700879 * S_NumDealsPurchases
1598058   +          +    -0.05769000978222 * S_NumDistPurchases
1598059   +          +    -0.10089591692167 * S_NumStorePurchases
1598060   +          +    -0.00088654116561 * S_NumWebPurchases
1598061   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1598062   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1598063   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1598064   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1598065   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1598066   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1598067   +        S_Income  +      0.2502648333687 * S_Kidhome
1598068   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1598069   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1598070   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1598071   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1598072   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1598073   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1598074   +          +     0.83424444661619 * S_NumDealsPurchases
1598075   +          +     0.31333214543205 * S_NumDistPurchases
1598076   +          +    -0.61732647242019 * S_NumStorePurchases
1598077   +          +    -1.01955156895052 * S_NumWebPurchases
1598078   +          +     0.13017609997428 * S_NumWebVisitsMonth
1598079   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1598080   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1598081   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1598082   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1598083   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1598084   +        S_Income  +    -0.70952256145726 * S_Kidhome
1598085   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1598086   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1598087   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1598088   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1598089   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1598090   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1598091   +          +     0.63522682456102 * S_NumDealsPurchases
1598092   +          +      0.0043057429215 * S_NumDistPurchases
1598093   +          +    -0.76667751707574 * S_NumStorePurchases
1598094   +          +    -0.73436881033241 * S_NumWebPurchases
1598095   +          +     1.59331554601341 * S_NumWebVisitsMonth
1598096   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1598097   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1598098   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1598099   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1598100   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1598101   +        S_Income  +    -0.23632967504194 * S_Kidhome
1598102   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1598103   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1598104   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1598105   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1598106   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1598107   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1598108   +          +     -0.3032858959477 * S_NumDealsPurchases
1598109   +          +     0.11343979556999 * S_NumDistPurchases
1598110   +          +     0.19545021266061 * S_NumStorePurchases
1598111   +          +      0.1566777684546 * S_NumWebPurchases
1598112   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1598113   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1598114   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1598115   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1598116   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1598117   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1598118   +        S_Income  +    -0.47847362741737 * S_Kidhome
1598119   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1598120   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1598121   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1598122   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1598123   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1598124   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1598125   +          +    -0.17510289915098 * S_NumDealsPurchases
1598126   +          +     0.16952490494417 * S_NumDistPurchases
1598127   +          +     0.11152117614204 * S_NumStorePurchases
1598128   +          +     0.22594341376741 * S_NumWebPurchases
1598129   +          +     0.64523546369354 * S_NumWebVisitsMonth
1598130   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1598131   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1598132   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1598133   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1598134   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1598135   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1598136   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1598137   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1598138   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1598139   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1598140   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1598141   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1598142   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1598143   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1598144   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1598145   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1598146   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1598147   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1598148   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1598149   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1598150   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1598151   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1598152   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1598153   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1598154   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1598155   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1598156   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1598157   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1598158   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1598159   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1598160   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1598161   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1598162   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1598163   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1598164   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1598165   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1598166   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1598167   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1598168   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1598169   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1598170   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1598171   +          +     0.42319965972117 * Marital_StatusDivorced
1598172   +          +    -0.45015157317991 * Marital_StatusMarried
1598173   +          +     0.43076106925345 * Marital_StatusSingle
1598174   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1598175   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1598176   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1598177   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1598178   +          +     0.11384347873072 * Marital_StatusDivorced
1598179   +          +     0.51442453272823 * Marital_StatusMarried
1598180   +          +    -0.38966058028661 * Marital_StatusSingle
1598181   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1598182   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1598183   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1598184   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1598185   +          +    -0.05213342781535 * Marital_StatusDivorced
1598186   +          +     0.07520352092928 * Marital_StatusMarried
1598187   +          +     0.20175107471623 * Marital_StatusSingle
1598188   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1598189   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1598190   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1598191   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1598192   +          +    -0.40635592200933 * Marital_StatusDivorced
1598193   +          +     0.64772941459031 * Marital_StatusMarried
1598194   +          +    -0.36402842056603 * Marital_StatusSingle
1598195   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1598196   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1598197   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1598198   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1598199   +          +     0.87932592764844 * Marital_StatusDivorced
1598200   +          +    -0.85946473083734 * Marital_StatusMarried
1598201   +          +     0.74505733668545 * Marital_StatusSingle
1598202   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1598203   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1598204   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1598205   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1598206   +          +    -0.11861748280641 * Marital_StatusDivorced
1598207   +          +    -0.15869097739395 * Marital_StatusMarried
1598208   +          +     0.34415019828259 * Marital_StatusSingle
1598209   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1598210   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1598211   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1598212   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1598213   +          +     0.14995740697816 * Marital_StatusDivorced
1598214   +          +    -1.01788822114068 * Marital_StatusMarried
1598215   +          +     0.70532758126153 * Marital_StatusSingle
1598216   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1598217   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1598218   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1598219   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1598220   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1598221   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1598222   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1598223   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1598224   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1598225   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1598226   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1598227   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1598228   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1598229   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1598230   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1598231   +END;
MPRINT(EM_DIAGRAM):   END;
1598232   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1598233   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1598234   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1598235   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1598236   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1598237   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1598238   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1598239   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1598240   +END;
MPRINT(EM_DIAGRAM):   END;
1598241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598242   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1598243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598244   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1598245   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1598246   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1598247   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1598248   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1598249   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1598250   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1598251   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1598252   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1598253   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1598254   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1598255   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1598256   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1598257   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1598258   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1598259   +END;
MPRINT(EM_DIAGRAM):   END;
1598260   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1598261   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1598262   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1598263   +END;
MPRINT(EM_DIAGRAM):   END;
1598264   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1598265   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1598266   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1598267   +END;
MPRINT(EM_DIAGRAM):   END;
1598268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598269   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1598270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1598271   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1598272   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1598273   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1598274   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1598275   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1598276   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1598277   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1598278   +END;
MPRINT(EM_DIAGRAM):   END;
1598279   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1598280   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1598281   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1598282   +drop
1598283   +H11
1598284   +H12
1598285   +H13
1598286   +H14
1598287   +H15
1598288   +H16
1598289   +H17
1598290   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1598291   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1598292    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1598293    quit;
1598294    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1598295    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1598296    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1598297    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1598298    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1598299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598300    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1598301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598302    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598303    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1598304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598306    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598307    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1598308    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1598309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598310    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1598311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1598312    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1598313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598315    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598316    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1598317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598318    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598319    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1598320    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1598320  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

1598321    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598322    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1598323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598324    filename _pref
1598324  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1598325    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1598326    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1598327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1598328   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1598329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1598330   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1598331   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1598332   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1598333    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1598334    quit;
1598335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1598336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1598337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1598338    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1598339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1598340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1598342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598344    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1598345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1598349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1598350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598351    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1598352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1598353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1598354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1598358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598359    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1598361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1598361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1598362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598363    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1598364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598365    filename _pref
1598365  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1598366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1598367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1598368   +
1598369   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1598370   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1598370  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1598371   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1598372   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1598373   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1598374   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1598375   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1598376    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1598377    quit;
1598378    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1598379    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1598380    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1598381    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1598382    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1598383    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598384    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1598385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598386    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598387    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1598388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598390    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598391    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1598392    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1598393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598394    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1598395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598396    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1598397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598399    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598400    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1598401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598402    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598403    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1598404    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1598404  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1598405    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598406    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1598407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598408    filename _pref
1598408  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1598409    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1598410    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1598411   +
1598412   +
1598413   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1598414   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1598415   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1598416   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1598417   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1598418   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598419   +
1598420   +
1598421   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1598422   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1598423   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1598424   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1598425   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1598426   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598427   +
1598428   +
1598429   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1598430   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1598431   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1598432   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1598433   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1598434   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598435   +
1598436   +
1598437   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1598438   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1598439   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1598440   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1598441   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1598442   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598443   +
1598444   +
1598445   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1598446   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1598447   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1598448   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1598449   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1598450   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598451   +
1598452   +
1598453   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1598454   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1598455   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1598456   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1598457   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1598458   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598459   +
1598460   +
1598461   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1598462   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1598463   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1598464   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1598465   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1598466   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598467   +
1598468   +
1598469   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1598470   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1598471   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1598472   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1598473   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1598474   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1598475   +if
1598476   +_FILTERNORM1 not in ( '.')
1598477   + and
1598478   +_FILTERNORM2 not in ( '.')
1598479   + and
1598480   +_FILTERNORM3 not in ( '.')
1598481   + and
1598482   +_FILTERNORM4 not in ( '.')
1598483   + and
1598484   +_FILTERNORM5 not in ( '.')
1598485   + and
1598486   +_FILTERNORM6 not in ( '.')
1598487   + and
1598488   +_FILTERNORM7 not in ( ' ')
1598489   + and
1598490   +_FILTERNORM8 not in ( ' ')
1598491   +and
1598492   +( Dt_Customer ne .)
1598493   +and ( Income ne . and (Income<=107000))
1598494   +and ( Kidhome ne .)
1598495   +and ( MntFishProducts ne .)
1598496   +and ( MntFruits ne .)
1598497   +and ( MntGoldProds ne .)
1598498   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1598499   +and ( MntSweetProducts ne .)
1598500   +and ( MntWines ne .)
1598501   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1598502   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1598503   +and ( NumStorePurchases ne .)
1598504   +and ( NumWebPurchases ne .)
1598505   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1598506   +and ( Recency ne .)
1598507   +and ( Teenhome ne .)
1598508   +and ( Year_Birth ne .)
1598509   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1598510   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1598511   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1598512   +end;
MPRINT(EM_DIAGRAM):   end;
1598513   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1598514   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1598515    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1598516    quit;
1598517    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1598518    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1598519    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1598520    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1598521    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1598522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598523    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1598524    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598525    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598526    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1598527    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598529    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598530    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1598531    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1598532    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598533    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1598534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1598535    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1598536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598538    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1598539    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1598540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1598541    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598542    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1598543    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1598543  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1598544    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598545    proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl31_FCMP data=_tempx;
1598546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL31_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL31_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598547    %macro varDept(fcmpdata=,id=);
1598548    %global nobs&id scoreFlag&id;
1598549    %let scoreFlag&id = 0;
1598550    %if &id=1 or ^&fcmpStart %then %do;
1598551    proc sort data=&fcmpdata out=_temp&id nodupkey;
1598552    by NAME;
1598553    where id=&id and LHS in( %let j=1;
1598554    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1598555    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1598556    "&var" %let j = %eval(&j+1);
1598557    %end;
1598558    );
1598559    run;
1598560    %let dsid = %sysfunc(open(_temp&id));
1598561    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1598562    %let dsid = %sysfunc(close(&dsid));
1598563    %if &&nobs&id %then %do;
1598564    %let scoreFlag&id = 1;
1598565    %let fcmpStart = 1;
1598566    %end;
1598567    %else %let fcmpStart = 0;
1598568    %end;
1598569    %else %do;
1598570    proc sort data=&fcmpdata out=_tempid;
1598571    where id=&id;
1598572    by LHS;
1598573    run;
1598574    %let dsid = %sysfunc(open(_tempid));
1598575    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1598576    %let dsid = %sysfunc(close(&dsid));
1598577    %if ^&&nobs&id %then %do;
1598578    proc datasets lib=work nolist;
1598579    delete _tempid;
1598580    run;
1598581    quit;
1598582    %end;
1598583    %else %do;
1598584    data _tempAll;
1598585    set %let j=%eval(&id-1);
1598586    %do x=1 %to &j;
1598587    %if &&nobs&x %then %do;
1598588    _temp&x %end;
1598589    %end;
1598590    ;
1598591    run;
1598592    proc sql;
1598593    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1598593  ! work._tempid p2 where p.name=p2.lhs;
1598594    quit;
1598595    data _temp&id;
1598596    set _temp&id;
1598597    where LHS ne '' and NAME ne '' and Node ne '';
1598598    run;
1598599    proc datasets lib=work nolist;
1598600    delete _tempAll;
1598601    run;
1598602    %let dsid = %sysfunc(open(_temp&id));
1598603    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1598604    %let dsid = %sysfunc(close(&dsid));
1598605    %if ^&&nobs&id %then %do;
1598606    proc datasets lib=work nolist;
1598607    delete _temp&id;
1598608    run;
1598609    quit;
1598610    %end;
1598611    %else %do;
1598612    %let scoreFlag&id = 1;
1598613    data _temp&id;
1598614    set _temp&id;
1598615    where LHS ne NAME and node ne '';
1598616    run;
1598617    %let dsid = %sysfunc(open(_temp&id));
1598618    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1598619    %let dsid = %sysfunc(close(&dsid));
1598620    %if ^&&nobs&id %then %do;
1598621    proc datasets lib=work nolist;
1598622    delete _temp&id;
1598623    run;
1598624    quit;
1598625    %end;
1598626    %else %do;
1598627    proc sort data=_temp&id nodupkey;
1598628    by LHS NAME;
1598629    run;
1598630    %end;
1598631    %end;
1598632    %end;
1598633    %end;
1598634    %mend varDept;
1598635    %macro optCode(outdata=fcmpdata);
1598636    %global fcmpStart;
1598637    %let fcmpStart = 0;
1598638    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1598639    %let NumNodes=9;
1598640    %do k=1 %to &NumNodes;
1598641    %vardept(fcmpdata=&outdata, id=&k);
1598642    %end;
1598643    %mend optCode;
1598644    %optcode(outData=EMWS8.Ensmbl31_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
The SAS System

MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl31_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1598645    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1598646    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1598647    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1598648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598649    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1598650    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1598651    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1598652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598653    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1598654    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1598654  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1598655    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1598656    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1598657    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1598658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598659    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1598660    * Ensmbl31: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Computing metadata for TRAIN data;
1598661    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL31_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl31\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl31_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl31_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl31_TRAIN out=WORK.M27LKPNP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27LKPNP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M27LKPNP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27LKPNP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M27LKPNP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3LRMOC3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TY8RYS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   set WORK.M3LRMOC3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl31";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl31";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl31: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl31";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1598981    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1598982    set EMWS8.Ensmbl31_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl31_EMINFO;
1598983    where DATA='Ensmbl31' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl31' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1598984    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL31_EMINFO.
      WHERE (DATA='Ensmbl31') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598985    data EMWS8.Ensmbl31_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl31_EMINFO;
1598986    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1598987    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1598988    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL31_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1598992    run;
1598993    data EMWS8.Ensmbl31_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_EMINFO;
1598994    set EMWS8.Ensmbl31_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl31_EMINFO WORK.MODELTEMP_INFO;
1598995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL31_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL31_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598996    proc sort data = EMWS8.Ensmbl31_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl31_EMINFO NOTHREADS;
1598997    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1598998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL31_EMINFO.
NOTE: The data set EMWS8.ENSMBL31_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1598999    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1599000    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1599001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1599002    proc sort data = EMWS8.Ensmbl31_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl31_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1599003    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1599004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL31_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1599005    data EMWS8.Ensmbl31_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl31_EMINFO;
1599006    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1599007    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1599008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL31_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1599009    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1599010    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1599011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1599012    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL31_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL31_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
