MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O06Q32EP 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O06Q32EP new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
1802423    /* Generate assessment metadata, which will be used to generate assessment data step
1802423  !  */
1802424    /* code, such as retrieving names of temporary variables and summary variables,
1802424  !  */
1802425    /* labels, etc.  It is used in almost all the assessment computations such as lift,
1802425  !  */
1802426    /* roc, index, scoreDist and could be thought as a global variable in assessment
1802426  !  */
1802427    /* computation.
1802427  !  */
1802428    data work.ASSESS_3DD9JW6_assessMeta_WPxFFU;
MPRINT(EM_DIAGRAM):    data work.ASSESS_3DD9JW6_assessMeta_WPxFFU;
1802429    length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
1802429  ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
1802429  ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
1802429  ! RESULT_MAX $32 RESULT_MAX_LABEL
1802430       $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
1802430  !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
1802431    VARIABLE = "DepVar";
MPRINT(EM_DIAGRAM):   VARIABLE = "DepVar";
1802432    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
1802433    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1802434    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1802435    LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
1802436    PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
1802437    MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
1802438    LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
1802439    GEN_VAR_IN_TEMP_DATA = "DepVar";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "DepVar";
1802440    RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
1802441    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
1802442    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
1802443    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
1802444    MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
1802445    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
1802446    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
1802447    MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
1802448    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
1802449    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
1802450    TEMPORARY_VARIABLE = "DepVar_rjeiThWWBRURfsd";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "DepVar_rjeiThWWBRURfsd";
1802451    output;
MPRINT(EM_DIAGRAM):   output;
1802452    VARIABLE = "F_DepVar_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_1";
1802453    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1802454    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1802455    PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
1802456    LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
1802457    PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
1802458    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1802459    LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
1802460    GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_q5suTTQdeZ3Gv_z";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_q5suTTQdeZ3Gv_z";
1802461    RESULT_MEAN = "F_DepVar_1_mean_wCO0XomlglgPN82";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_1_mean_wCO0XomlglgPN82";
1802462    /* adjust for tied cases */
1802463    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
1802464    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
1802465    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
1802466    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
1802467    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
1802468    RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
1802469    RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
1802469  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
1802470    TEMPORARY_VARIABLE = "F_DepVar_1_mSnAmHywi6GFXcY";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_1_mSnAmHywi6GFXcY";
1802471    output;
MPRINT(EM_DIAGRAM):   output;
1802472    VARIABLE = "F_DepVar_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_0";
1802473    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1802474    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1802475    PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
1802476    LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
1802477    PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
1802478    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1802479    LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
1802480    GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_1gFEZbWXxnvYHMd";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_1gFEZbWXxnvYHMd";
1802481    RESULT_MEAN = "F_DepVar_0_mean_332ayxLz4gBGZjf";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_0_mean_332ayxLz4gBGZjf";
1802482    /* adjust for tied cases */
1802483    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
1802484    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
1802485    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
1802486    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
1802487    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
1802488    RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
1802489    RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
1802489  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
1802490    TEMPORARY_VARIABLE = "F_DepVar_0_0qzzYm9t6ZuvFbd";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_0_0qzzYm9t6ZuvFbd";
1802491    output;
MPRINT(EM_DIAGRAM):   output;
1802492    VARIABLE = "P_DepVar1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar1";
1802493    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1802494    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1802495    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
1802496    LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
1802497    PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
1802498    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1802499    LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
1802500    GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
1802501    RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
1802502    RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
1802502  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
1802503    RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
1802504    RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
1802505    MIN_ADJUSTED = "P_DepVar_minAdjusted_bFGDSQ3b_";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_bFGDSQ3b_";
1802506    RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
1802507    RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
1802508    MAX_ADJUSTED = "P_DepVar_maxAdjusted_zfWLPP1OO";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_zfWLPP1OO";
1802509    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
1802510    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
1802511    TEMPORARY_VARIABLE = "P_DepVar1_nKetwv4NHTQCzPq";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar1_nKetwv4NHTQCzPq";
1802512    output;
MPRINT(EM_DIAGRAM):   output;
1802513    VARIABLE = "P_DepVar0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar0";
1802514    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1802515    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1802516    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
1802517    LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
1802518    PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
1802519    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1802520    LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
1802521    GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
1802522    RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
1802523    RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
1802523  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
1802524    RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
1802525    RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
1802526    MIN_ADJUSTED = "P_DepVar_minAdjusted_naMMfm7N4";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_naMMfm7N4";
1802527    RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
1802528    RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
1802529    MAX_ADJUSTED = "P_DepVar_maxAdjusted_gGCKAeARN";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_gGCKAeARN";
1802530    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
1802531    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
1802532    TEMPORARY_VARIABLE = "P_DepVar0_iZ3ZK8JY0xFMcHa";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar0_iZ3ZK8JY0xFMcHa";
1802533    output;
MPRINT(EM_DIAGRAM):   output;
1802534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_3DD9JW6_ASSESSMETA_WPXFFU has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1802535    /* Generate temporary dataset and obtain summary statistics such as total number of
1802535  !   */
1802536    /* obserations, frequency of target.  However, summary statistics for class
1802536  ! reporting */
1802537    /* variabels are not computed here since if there exist class reporting variables,
1802537  !   */
1802538    /* then PROC DMDB will be called. And there is no need to compute interval reporting
1802538  !   */
1802539    /* summary statisitcs, if any.
1802539  !   */
1802540    data work.ASSESS_3DD9JW6_normSD_36Vuxl(drop=
1802541    _numberOfObservation_
1802542    _levelFrequency_1
1802543    _levelFrequency_2
1802544    )
1802545    work.ASSESS_3DD9JW6_meansAndTi_95UgtF (keep=
1802546    _numberOfObservation_
1802547    _levelFrequency_1
1802548    _levelFrequency_2
1802549    );
MPRINT(EM_DIAGRAM):    data work.ASSESS_3DD9JW6_normSD_36Vuxl(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 ) work.ASSESS_3DD9JW6_meansAndTi_95UgtF (keep= 
_numberOfObservation_ _levelFrequency_1 _levelFrequency_2 );
1802550    set EMWS8.Ensmbl5_TRAIN(
1802551    where=(
1802552    (DepVar ^= .)
1802553    )
1802554    ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_TRAIN( where=( (DepVar ^= .) ) ) end=_lastObservation_;
1802555    keep frequency_8LVF6_;
MPRINT(EM_DIAGRAM):   keep frequency_8LVF6_;
1802556    frequency_8LVF6_ = 1;
MPRINT(EM_DIAGRAM):   frequency_8LVF6_ = 1;
1802557    keep I_DepVar F_DepVar;
MPRINT(EM_DIAGRAM):   keep I_DepVar F_DepVar;
1802558    keep F_DepVar_1_q5suTTQdeZ3Gv_z;
MPRINT(EM_DIAGRAM):   keep F_DepVar_1_q5suTTQdeZ3Gv_z;
1802559    if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
1802560    F_DepVar_1_q5suTTQdeZ3Gv_z = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_1_q5suTTQdeZ3Gv_z = 1;
1802561    end;
MPRINT(EM_DIAGRAM):   end;
1802562    else do;
MPRINT(EM_DIAGRAM):   else do;
1802563    F_DepVar_1_q5suTTQdeZ3Gv_z = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_1_q5suTTQdeZ3Gv_z = 0;
1802564    end;
MPRINT(EM_DIAGRAM):   end;
1802565    keep F_DepVar_0_1gFEZbWXxnvYHMd;
MPRINT(EM_DIAGRAM):   keep F_DepVar_0_1gFEZbWXxnvYHMd;
1802566    if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
1802567    F_DepVar_0_1gFEZbWXxnvYHMd = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_0_1gFEZbWXxnvYHMd = 1;
1802568    end;
MPRINT(EM_DIAGRAM):   end;
1802569    else do;
MPRINT(EM_DIAGRAM):   else do;
1802570    F_DepVar_0_1gFEZbWXxnvYHMd = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_0_1gFEZbWXxnvYHMd = 0;
1802571    end;
MPRINT(EM_DIAGRAM):   end;
1802572    keep P_DepVar1;
MPRINT(EM_DIAGRAM):   keep P_DepVar1;
1802573    keep P_DepVar0;
MPRINT(EM_DIAGRAM):   keep P_DepVar0;
1802574    output work.ASSESS_3DD9JW6_normSD_36Vuxl;
MPRINT(EM_DIAGRAM):   output work.ASSESS_3DD9JW6_normSD_36Vuxl;
1802575    keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
1802576    retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
1802577    _numberOfObservation_ + frequency_8LVF6_;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_8LVF6_;
1802578    keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
1802579    retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
1802580    if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
1802581    _levelFrequency_1 + frequency_8LVF6_;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_8LVF6_;
1802582    end;
MPRINT(EM_DIAGRAM):   end;
1802583    keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
1802584    retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
1802585    if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
1802586    _levelFrequency_2 + frequency_8LVF6_;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_8LVF6_;
1802587    end;
MPRINT(EM_DIAGRAM):   end;
1802588    if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
1802589    output work.ASSESS_3DD9JW6_meansAndTi_95UgtF;
MPRINT(EM_DIAGRAM):   output work.ASSESS_3DD9JW6_meansAndTi_95UgtF;
1802590    end;
MPRINT(EM_DIAGRAM):   end;
1802591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL5_TRAIN.
      WHERE DepVar not = .;
NOTE: The data set WORK.ASSESS_3DD9JW6_NORMSD_36VUXL has 2374 observations and 7 variables.
NOTE: The data set WORK.ASSESS_3DD9JW6_MEANSANDTI_95UGTF has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

1802592    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
1802593    set EMWS8.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS8.MdlComp_EMRANK;
1802594    where MODEL = "Ensmbl5" and TARGET = "DepVar" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Ensmbl5" and TARGET = "DepVar" and dataRole="TRAIN";
1802595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS8.MDLCOMP_EMRANK.
      WHERE (MODEL='Ensmbl5') and (TARGET='DepVar') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1802596    data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
1802597    do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
1802598    DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
1802599    output;
MPRINT(EM_DIAGRAM):   output;
1802600    end;
MPRINT(EM_DIAGRAM):   end;
1802601    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1802602    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
1802603    merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
1802604    by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
1802605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1802606    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
1802607    set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
1802608    retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
1802609    retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
1802610    keep event;
MPRINT(EM_DIAGRAM):   keep event;
1802611    keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
1802612    if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
1802613    bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
1802614    _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
1802615    if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
1802616    /* tied */
1802617    _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
1802618    ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
1802619    end;
MPRINT(EM_DIAGRAM):   end;
1802620    else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
1802621    /* next tied */
1802622    _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
1802623    ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
1802624    end;
MPRINT(EM_DIAGRAM):   end;
1802625    output;
MPRINT(EM_DIAGRAM):   output;
1802626    *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
1802627    * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
1802628    *end;
MPRINT(EM_DIAGRAM):   *end;
1802629    if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
1802630    _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
1802631    end;
MPRINT(EM_DIAGRAM):   end;
1802632    else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
1802633    if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
1802634    _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
1802635    end;
MPRINT(EM_DIAGRAM):   end;
1802636    end;
MPRINT(EM_DIAGRAM):   end;
1802637    bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
1802638    /* correct the previous change */
1802639    end;
MPRINT(EM_DIAGRAM):   end;
1802640    if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
1802641    _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
1802642    output;
MPRINT(EM_DIAGRAM):   output;
1802643    end;
MPRINT(EM_DIAGRAM):   end;
1802644    _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
1802645    _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
1802646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1802647    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
1802648    set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
1802649    by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
1802650    retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
1802651    if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
1802652    _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
1802653    end;
MPRINT(EM_DIAGRAM):   end;
1802654    if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
1802655    _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
1802656    output;
MPRINT(EM_DIAGRAM):   output;
1802657    end;
MPRINT(EM_DIAGRAM):   end;
1802658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1802659    filename emflow
1802659  ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring ENSMBL5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1802660    *------------------------------------------------------------*;
1802661    * MdlComp: Scoring ENSMBL5_TRAIN data;
1802662    *------------------------------------------------------------*;
1802663    data EMWS8.MdlComp_TRAIN
1802664    / view=EMWS8.MdlComp_TRAIN
1802665    ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_TRAIN / view=EMWS8.MdlComp_TRAIN ;
1802666    set EMWS8.Ensmbl5_TRAIN
1802667    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_TRAIN ;
1802668    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
1802669   +if (P_DepVar1 ge 0.97596035223601) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.97596035223601) then do;
1802670   +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
1802671   +end;
MPRINT(EM_DIAGRAM):   end;
1802672   +else
1802673   +if (P_DepVar1 ge 0.82461545517682) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.82461545517682) then do;
1802674   +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
1802675   +end;
MPRINT(EM_DIAGRAM):   end;
1802676   +else
1802677   +if (P_DepVar1 ge 0.43851560202145) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43851560202145) then do;
1802678   +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
1802679   +end;
MPRINT(EM_DIAGRAM):   end;
1802680   +else
1802681   +if (P_DepVar1 ge 0.15875702188516) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.15875702188516) then do;
1802682   +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
1802683   +end;
MPRINT(EM_DIAGRAM):   end;
1802684   +else
1802685   +if (P_DepVar1 ge 0.05580974220059) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.05580974220059) then do;
1802686   +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
1802687   +end;
MPRINT(EM_DIAGRAM):   end;
1802688   +else
1802689   +if (P_DepVar1 ge 0.02475639187003) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.02475639187003) then do;
1802690   +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
1802691   +end;
MPRINT(EM_DIAGRAM):   end;
1802692   +else
1802693   +if (P_DepVar1 ge 0.01303706875541) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01303706875541) then do;
1802694   +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
1802695   +end;
MPRINT(EM_DIAGRAM):   end;
1802696   +else
1802697   +if (P_DepVar1 ge 0.00677929077893) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00677929077893) then do;
1802698   +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
1802699   +end;
MPRINT(EM_DIAGRAM):   end;
1802700   +else
1802701   +if (P_DepVar1 ge 0.0035748271898) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0035748271898) then do;
1802702   +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
1802703   +end;
MPRINT(EM_DIAGRAM):   end;
1802704   +else
1802705   +if (P_DepVar1 ge 0.00207501314718) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00207501314718) then do;
1802706   +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
1802707   +end;
MPRINT(EM_DIAGRAM):   end;
1802708   +else
1802709   +if (P_DepVar1 ge 0.00118469478068) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00118469478068) then do;
1802710   +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
1802711   +end;
MPRINT(EM_DIAGRAM):   end;
1802712   +else
1802713   +if (P_DepVar1 ge 0.00067685903439) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00067685903439) then do;
1802714   +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
1802715   +end;
MPRINT(EM_DIAGRAM):   end;
1802716   +else
1802717   +if (P_DepVar1 ge 0.0004127740982) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0004127740982) then do;
1802718   +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
1802719   +end;
MPRINT(EM_DIAGRAM):   end;
1802720   +else
1802721   +if (P_DepVar1 ge 0.00028653518082) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00028653518082) then do;
1802722   +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
1802723   +end;
MPRINT(EM_DIAGRAM):   end;
1802724   +else
1802725   +if (P_DepVar1 ge 0.00019854581739) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00019854581739) then do;
1802726   +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
1802727   +end;
MPRINT(EM_DIAGRAM):   end;
1802728   +else
1802729   +if (P_DepVar1 ge 0.00015165953031) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00015165953031) then do;
1802730   +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
1802731   +end;
MPRINT(EM_DIAGRAM):   end;
1802732   +else
1802733   +if (P_DepVar1 ge 0.00012430543393) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00012430543393) then do;
1802734   +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
1802735   +end;
MPRINT(EM_DIAGRAM):   end;
1802736   +else
1802737   +if (P_DepVar1 ge 0.00009474647395) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00009474647395) then do;
1802738   +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
1802739   +end;
MPRINT(EM_DIAGRAM):   end;
1802740   +else
1802741   +if (P_DepVar1 ge 0.00007581491619) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00007581491619) then do;
1802742   +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
1802743   +end;
MPRINT(EM_DIAGRAM):   end;
1802744   +else
1802745   +do;
MPRINT(EM_DIAGRAM):   else do;
1802746   +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
1802747   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1802748    run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1802749    quit;
1802750    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1802751    filename emflow
1802751  ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring ENSMBL5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1802752    *------------------------------------------------------------*;
1802753    * MdlComp: Scoring ENSMBL5_VALIDATE data;
1802754    *------------------------------------------------------------*;
1802755    data EMWS8.MdlComp_VALIDATE
1802756    / view=EMWS8.MdlComp_VALIDATE
1802757    ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_VALIDATE / view=EMWS8.MdlComp_VALIDATE ;
1802758    set EMWS8.Ensmbl5_VALIDATE
1802759    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_VALIDATE ;
1802760    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
1802761   +if (P_DepVar1 ge 0.97596035223601) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.97596035223601) then do;
1802762   +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
1802763   +end;
MPRINT(EM_DIAGRAM):   end;
1802764   +else
1802765   +if (P_DepVar1 ge 0.82461545517682) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.82461545517682) then do;
1802766   +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
1802767   +end;
MPRINT(EM_DIAGRAM):   end;
1802768   +else
1802769   +if (P_DepVar1 ge 0.43851560202145) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43851560202145) then do;
1802770   +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
1802771   +end;
MPRINT(EM_DIAGRAM):   end;
1802772   +else
1802773   +if (P_DepVar1 ge 0.15875702188516) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.15875702188516) then do;
1802774   +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
1802775   +end;
MPRINT(EM_DIAGRAM):   end;
1802776   +else
1802777   +if (P_DepVar1 ge 0.05580974220059) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.05580974220059) then do;
1802778   +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
1802779   +end;
MPRINT(EM_DIAGRAM):   end;
1802780   +else
1802781   +if (P_DepVar1 ge 0.02475639187003) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.02475639187003) then do;
1802782   +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
1802783   +end;
MPRINT(EM_DIAGRAM):   end;
1802784   +else
1802785   +if (P_DepVar1 ge 0.01303706875541) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01303706875541) then do;
1802786   +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
1802787   +end;
MPRINT(EM_DIAGRAM):   end;
1802788   +else
1802789   +if (P_DepVar1 ge 0.00677929077893) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00677929077893) then do;
1802790   +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
1802791   +end;
MPRINT(EM_DIAGRAM):   end;
1802792   +else
1802793   +if (P_DepVar1 ge 0.0035748271898) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0035748271898) then do;
1802794   +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
1802795   +end;
MPRINT(EM_DIAGRAM):   end;
1802796   +else
1802797   +if (P_DepVar1 ge 0.00207501314718) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00207501314718) then do;
1802798   +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
1802799   +end;
MPRINT(EM_DIAGRAM):   end;
1802800   +else
1802801   +if (P_DepVar1 ge 0.00118469478068) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00118469478068) then do;
1802802   +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
1802803   +end;
MPRINT(EM_DIAGRAM):   end;
1802804   +else
1802805   +if (P_DepVar1 ge 0.00067685903439) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00067685903439) then do;
1802806   +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
1802807   +end;
MPRINT(EM_DIAGRAM):   end;
1802808   +else
1802809   +if (P_DepVar1 ge 0.0004127740982) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0004127740982) then do;
1802810   +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
1802811   +end;
MPRINT(EM_DIAGRAM):   end;
1802812   +else
1802813   +if (P_DepVar1 ge 0.00028653518082) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00028653518082) then do;
1802814   +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
1802815   +end;
MPRINT(EM_DIAGRAM):   end;
1802816   +else
1802817   +if (P_DepVar1 ge 0.00019854581739) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00019854581739) then do;
1802818   +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
1802819   +end;
MPRINT(EM_DIAGRAM):   end;
1802820   +else
1802821   +if (P_DepVar1 ge 0.00015165953031) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00015165953031) then do;
1802822   +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
1802823   +end;
MPRINT(EM_DIAGRAM):   end;
1802824   +else
1802825   +if (P_DepVar1 ge 0.00012430543393) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00012430543393) then do;
1802826   +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
1802827   +end;
MPRINT(EM_DIAGRAM):   end;
1802828   +else
1802829   +if (P_DepVar1 ge 0.00009474647395) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00009474647395) then do;
1802830   +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
1802831   +end;
MPRINT(EM_DIAGRAM):   end;
1802832   +else
1802833   +if (P_DepVar1 ge 0.00007581491619) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00007581491619) then do;
1802834   +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
1802835   +end;
MPRINT(EM_DIAGRAM):   end;
1802836   +else
1802837   +do;
MPRINT(EM_DIAGRAM):   else do;
1802838   +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
1802839   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1802840    run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL5_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1802841    quit;
1802842    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1802843    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1802844    * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
1802845    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.MdlComp_TRAIN out=WORK.M30ISZBQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30ISZBQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M30ISZBQ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30ISZBQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M30ISZBQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1M3S8S3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C6V3PS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   set WORK.M1M3S8S3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Ensmbl5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
