MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 
2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H13m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                06H13m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2AGQGDR 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2AGQGDR new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      
240958     /* Generate assessment metadata, which will be used to generate assessment data step
240958   !  */
240959     /* code, such as retrieving names of temporary variables and summary variables,
240959   !  */
240960     /* labels, etc.  It is used in almost all the assessment computations such as lift,
240960   !  */
240961     /* roc, index, scoreDist and could be thought as a global variable in assessment
240961   !  */
240962     /* computation.
240962   !  */
240963     data work.ASSESS_2ACNLG9_assessMeta_L6SlGb;
MPRINT(EM_DIAGRAM):    data work.ASSESS_2ACNLG9_assessMeta_L6SlGb;
240964     length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
240964   ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
240964   ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
240964   ! RESULT_MAX $32 RESULT_MAX_LABEL
240965        $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
240965   !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
240966     VARIABLE = "DepVar";
MPRINT(EM_DIAGRAM):   VARIABLE = "DepVar";
240967     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
240968     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
240969     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
240970     LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
240971     PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
240972     MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
240973     LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
240974     GEN_VAR_IN_TEMP_DATA = "DepVar";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "DepVar";
240975     RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
240976     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
240977     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
240978     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
240979     MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
240980     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
240981     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
240982     MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
240983     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
240984     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
240985     TEMPORARY_VARIABLE = "DepVar_J3yeqIRGfaha0rm";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "DepVar_J3yeqIRGfaha0rm";
240986     output;
MPRINT(EM_DIAGRAM):   output;
240987     VARIABLE = "F_DepVar_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_1";
240988     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
240989     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
240990     PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
240991     LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
240992     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
240993     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
240994     LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
240995     GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_DNdHhoAUZxjgFl2";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_DNdHhoAUZxjgFl2";
240996     RESULT_MEAN = "F_DepVar_1_mean_0B3RTWLTtK0sN4i";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_1_mean_0B3RTWLTtK0sN4i";
240997     /* adjust for tied cases */
240998     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
240999     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
241000     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
241001     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
241002     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
241003     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
241004     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
241004   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
241005     TEMPORARY_VARIABLE = "F_DepVar_1_5H2vD2ZeZhXb3jm";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_1_5H2vD2ZeZhXb3jm";
241006     output;
MPRINT(EM_DIAGRAM):   output;
241007     VARIABLE = "F_DepVar_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_0";
241008     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
241009     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
241010     PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
241011     LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
241012     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
241013     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
241014     LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
241015     GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_mBYTj8owqgJAygs";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_mBYTj8owqgJAygs";
241016     RESULT_MEAN = "F_DepVar_0_mean_bbL1H74nEvEX4f8";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_0_mean_bbL1H74nEvEX4f8";
241017     /* adjust for tied cases */
241018     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
241019     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
241020     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
241021     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
241022     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
241023     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
241024     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
241024   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
241025     TEMPORARY_VARIABLE = "F_DepVar_0_2d5rytcrScxyXWs";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_0_2d5rytcrScxyXWs";
241026     output;
MPRINT(EM_DIAGRAM):   output;
241027     VARIABLE = "P_DepVar1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar1";
241028     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
241029     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
241030     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
241031     LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
241032     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
241033     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
241034     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
241035     GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
241036     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
241037     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
241037   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
241038     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
241039     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
241040     MIN_ADJUSTED = "P_DepVar_minAdjusted_MnT0fWMV1";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_MnT0fWMV1";
241041     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
241042     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
241043     MAX_ADJUSTED = "P_DepVar_maxAdjusted_i6IhehEy3";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_i6IhehEy3";
241044     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
241045     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
241046     TEMPORARY_VARIABLE = "P_DepVar1_hCFdur9KzavbaIF";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar1_hCFdur9KzavbaIF";
241047     output;
MPRINT(EM_DIAGRAM):   output;
241048     VARIABLE = "P_DepVar0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar0";
241049     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
241050     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
241051     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
241052     LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
241053     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
241054     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
241055     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
241056     GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
241057     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
241058     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
241058   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
241059     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
241060     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
241061     MIN_ADJUSTED = "P_DepVar_minAdjusted_uDcvoL0Tt";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_uDcvoL0Tt";
241062     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
241063     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
241064     MAX_ADJUSTED = "P_DepVar_maxAdjusted_y9SsprTM9";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_y9SsprTM9";
241065     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
241066     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
241067     TEMPORARY_VARIABLE = "P_DepVar0_tRwmVBt4uvxfb_x";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar0_tRwmVBt4uvxfb_x";
241068     output;
MPRINT(EM_DIAGRAM):   output;
241069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_2ACNLG9_ASSESSMETA_L6SLGB has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241070     /* Generate temporary dataset and obtain summary statistics such as total number of
241070   !   */
241071     /* obserations, frequency of target.  However, summary statistics for class
241071   ! reporting */
241072     /* variabels are not computed here since if there exist class reporting variables,
241072   !   */
241073     /* then PROC DMDB will be called. And there is no need to compute interval reporting
241073   !   */
241074     /* summary statisitcs, if any.
241074   !   */
241075     data work.ASSESS_2ACNLG9_normSD_g4_jrY(drop=
241076     _numberOfObservation_
241077     _levelFrequency_1
241078     _levelFrequency_2
241079     )
241080     work.ASSESS_2ACNLG9_meansAndTi_Y4beji (keep=
241081     _numberOfObservation_
241082     _levelFrequency_1
241083     _levelFrequency_2
241084     );
MPRINT(EM_DIAGRAM):    data work.ASSESS_2ACNLG9_normSD_g4_jrY(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 ) work.ASSESS_2ACNLG9_meansAndTi_Y4beji (keep= 
_numberOfObservation_ _levelFrequency_1 _levelFrequency_2 );
241085     set EMWS8.Neural6_TRAIN(
241086     where=(
241087     (DepVar ^= .)
241088     )
241089     ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_TRAIN( where=( (DepVar ^= .) ) ) end=_lastObservation_;
241090     keep frequency_e3yOy6;
MPRINT(EM_DIAGRAM):   keep frequency_e3yOy6;
241091     frequency_e3yOy6 = 1;
MPRINT(EM_DIAGRAM):   frequency_e3yOy6 = 1;
241092     keep I_DepVar F_DepVar;
MPRINT(EM_DIAGRAM):   keep I_DepVar F_DepVar;
241093     keep F_DepVar_1_DNdHhoAUZxjgFl2;
MPRINT(EM_DIAGRAM):   keep F_DepVar_1_DNdHhoAUZxjgFl2;
241094     if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
241095     F_DepVar_1_DNdHhoAUZxjgFl2 = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_1_DNdHhoAUZxjgFl2 = 1;
241096     end;
MPRINT(EM_DIAGRAM):   end;
241097     else do;
MPRINT(EM_DIAGRAM):   else do;
241098     F_DepVar_1_DNdHhoAUZxjgFl2 = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_1_DNdHhoAUZxjgFl2 = 0;
241099     end;
MPRINT(EM_DIAGRAM):   end;
241100     keep F_DepVar_0_mBYTj8owqgJAygs;
MPRINT(EM_DIAGRAM):   keep F_DepVar_0_mBYTj8owqgJAygs;
241101     if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
241102     F_DepVar_0_mBYTj8owqgJAygs = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_0_mBYTj8owqgJAygs = 1;
241103     end;
MPRINT(EM_DIAGRAM):   end;
241104     else do;
MPRINT(EM_DIAGRAM):   else do;
241105     F_DepVar_0_mBYTj8owqgJAygs = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_0_mBYTj8owqgJAygs = 0;
241106     end;
MPRINT(EM_DIAGRAM):   end;
241107     keep P_DepVar1;
MPRINT(EM_DIAGRAM):   keep P_DepVar1;
241108     keep P_DepVar0;
MPRINT(EM_DIAGRAM):   keep P_DepVar0;
241109     output work.ASSESS_2ACNLG9_normSD_g4_jrY;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2ACNLG9_normSD_g4_jrY;
241110     keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
241111     retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
241112     _numberOfObservation_ + frequency_e3yOy6;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_e3yOy6;
241113     keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
241114     retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
241115     if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
241116     _levelFrequency_1 + frequency_e3yOy6;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_e3yOy6;
241117     end;
MPRINT(EM_DIAGRAM):   end;
241118     keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
241119     retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
241120     if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
241121     _levelFrequency_2 + frequency_e3yOy6;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_e3yOy6;
241122     end;
MPRINT(EM_DIAGRAM):   end;
241123     if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
241124     output work.ASSESS_2ACNLG9_meansAndTi_Y4beji;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2ACNLG9_meansAndTi_Y4beji;
241125     end;
MPRINT(EM_DIAGRAM):   end;
241126     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1631 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: There were 1631 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 1631 observations read from the data set EMWS8.NEURAL6_TRAIN.
      WHERE DepVar not = .;
NOTE: The data set WORK.ASSESS_2ACNLG9_NORMSD_G4_JRY has 1631 observations and 7 variables.
NOTE: The data set WORK.ASSESS_2ACNLG9_MEANSANDTI_Y4BEJI has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

241127     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
241128     set EMWS8.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS8.MdlComp_EMRANK;
241129     where MODEL = "Neural6" and TARGET = "DepVar" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Neural6" and TARGET = "DepVar" and dataRole="TRAIN";
241130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS8.MDLCOMP_EMRANK.
      WHERE (MODEL='Neural6') and (TARGET='DepVar') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

241131     data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
241132     do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
241133     DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
241134     output;
MPRINT(EM_DIAGRAM):   output;
241135     end;
MPRINT(EM_DIAGRAM):   end;
241136     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241137     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
241138     merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
241139     by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
241140     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241141     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
241142     set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
241143     retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
241144     retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
241145     keep event;
MPRINT(EM_DIAGRAM):   keep event;
241146     keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
241147     if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
241148     bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
241149     _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
241150     if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
241151     /* tied */
241152     _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
241153     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
241154     end;
MPRINT(EM_DIAGRAM):   end;
241155     else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
241156     /* next tied */
241157     _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
241158     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
241159     end;
MPRINT(EM_DIAGRAM):   end;
241160     output;
MPRINT(EM_DIAGRAM):   output;
241161     *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
241162     * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
241163     *end;
MPRINT(EM_DIAGRAM):   *end;
241164     if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
241165     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
241166     end;
MPRINT(EM_DIAGRAM):   end;
241167     else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
241168     if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
241169     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
241170     end;
MPRINT(EM_DIAGRAM):   end;
241171     end;
MPRINT(EM_DIAGRAM):   end;
241172     bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
241173     /* correct the previous change */
241174     end;
MPRINT(EM_DIAGRAM):   end;
241175     if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
241176     _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
241177     output;
MPRINT(EM_DIAGRAM):   output;
241178     end;
MPRINT(EM_DIAGRAM):   end;
241179     _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
241180     _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
241181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

241182     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
241183     set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
241184     by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
241185     retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
241186     if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
241187     _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
241188     end;
MPRINT(EM_DIAGRAM):   end;
241189     if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
241190     _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
241191     output;
MPRINT(EM_DIAGRAM):   output;
241192     end;
MPRINT(EM_DIAGRAM):   end;
241193     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

241194     filename emflow
241194   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring NEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241195     *------------------------------------------------------------*;
241196     * MdlComp: Scoring NEURAL6_TRAIN data;
241197     *------------------------------------------------------------*;
241198     data EMWS8.MdlComp_TRAIN
241199     / view=EMWS8.MdlComp_TRAIN
241200     ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_TRAIN / view=EMWS8.MdlComp_TRAIN ;
241201     set EMWS8.Neural6_TRAIN
241202     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_TRAIN ;
241203     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
241204    +if (P_DepVar1 ge 0.40658849628626) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.40658849628626) then do;
241205    +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
241206    +end;
MPRINT(EM_DIAGRAM):   end;
241207    +else
241208    +if (P_DepVar1 ge 0.25643044215336) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.25643044215336) then do;
241209    +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
241210    +end;
MPRINT(EM_DIAGRAM):   end;
241211    +else
241212    +if (P_DepVar1 ge 0.15896866471132) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.15896866471132) then do;
241213    +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
241214    +end;
MPRINT(EM_DIAGRAM):   end;
241215    +else
241216    +if (P_DepVar1 ge 0.10336470471911) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.10336470471911) then do;
241217    +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
241218    +end;
MPRINT(EM_DIAGRAM):   end;
241219    +else
241220    +if (P_DepVar1 ge 0.06428332109434) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.06428332109434) then do;
241221    +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
241222    +end;
MPRINT(EM_DIAGRAM):   end;
241223    +else
241224    +if (P_DepVar1 ge 0.03458727073093) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.03458727073093) then do;
241225    +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
241226    +end;
MPRINT(EM_DIAGRAM):   end;
241227    +else
241228    +if (P_DepVar1 ge 0.01879143124471) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01879143124471) then do;
241229    +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
241230    +end;
MPRINT(EM_DIAGRAM):   end;
241231    +else
241232    +if (P_DepVar1 ge 0.0097482446293) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0097482446293) then do;
241233    +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
241234    +end;
MPRINT(EM_DIAGRAM):   end;
241235    +else
241236    +if (P_DepVar1 ge 0.00245959571966) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00245959571966) then do;
241237    +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
241238    +end;
MPRINT(EM_DIAGRAM):   end;
241239    +else
241240    +if (P_DepVar1 ge 0.00017976304645) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00017976304645) then do;
241241    +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
241242    +end;
MPRINT(EM_DIAGRAM):   end;
241243    +else
241244    +if (P_DepVar1 ge 0.00013472531927) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00013472531927) then do;
241245    +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
241246    +end;
MPRINT(EM_DIAGRAM):   end;
241247    +else
241248    +if (P_DepVar1 ge 0.00011413819575) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00011413819575) then do;
241249    +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
241250    +end;
MPRINT(EM_DIAGRAM):   end;
241251    +else
241252    +if (P_DepVar1 ge 0.00010043942556) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00010043942556) then do;
241253    +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
241254    +end;
MPRINT(EM_DIAGRAM):   end;
241255    +else
241256    +if (P_DepVar1 ge 0.00009090647572) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00009090647572) then do;
241257    +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
241258    +end;
MPRINT(EM_DIAGRAM):   end;
241259    +else
241260    +if (P_DepVar1 ge 0.00008281457696) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00008281457696) then do;
241261    +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
241262    +end;
MPRINT(EM_DIAGRAM):   end;
241263    +else
241264    +if (P_DepVar1 ge 0.00007432503009) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00007432503009) then do;
241265    +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
241266    +end;
MPRINT(EM_DIAGRAM):   end;
241267    +else
241268    +if (P_DepVar1 ge 0.00006492727161) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00006492727161) then do;
241269    +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
241270    +end;
MPRINT(EM_DIAGRAM):   end;
241271    +else
241272    +if (P_DepVar1 ge 0.00003108403278) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00003108403278) then do;
241273    +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
241274    +end;
MPRINT(EM_DIAGRAM):   end;
241275    +else
241276    +if (P_DepVar1 ge 4.9499827274393E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 4.9499827274393E-6) then do;
241277    +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
241278    +end;
MPRINT(EM_DIAGRAM):   end;
241279    +else
241280    +do;
MPRINT(EM_DIAGRAM):   else do;
241281    +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
241282    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
241283     run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
241284     quit;
241285     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
241286     filename emflow
241286   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring NEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
241287     *------------------------------------------------------------*;
241288     * MdlComp: Scoring NEURAL6_VALIDATE data;
241289     *------------------------------------------------------------*;
241290     data EMWS8.MdlComp_VALIDATE
241291     / view=EMWS8.MdlComp_VALIDATE
241292     ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_VALIDATE / view=EMWS8.MdlComp_VALIDATE ;
241293     set EMWS8.Neural6_VALIDATE
241294     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_VALIDATE ;
241295     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
241296    +if (P_DepVar1 ge 0.40658849628626) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.40658849628626) then do;
241297    +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
241298    +end;
MPRINT(EM_DIAGRAM):   end;
241299    +else
241300    +if (P_DepVar1 ge 0.25643044215336) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.25643044215336) then do;
241301    +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
241302    +end;
MPRINT(EM_DIAGRAM):   end;
241303    +else
241304    +if (P_DepVar1 ge 0.15896866471132) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.15896866471132) then do;
241305    +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
241306    +end;
MPRINT(EM_DIAGRAM):   end;
241307    +else
241308    +if (P_DepVar1 ge 0.10336470471911) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.10336470471911) then do;
241309    +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
241310    +end;
MPRINT(EM_DIAGRAM):   end;
241311    +else
241312    +if (P_DepVar1 ge 0.06428332109434) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.06428332109434) then do;
241313    +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
241314    +end;
MPRINT(EM_DIAGRAM):   end;
241315    +else
241316    +if (P_DepVar1 ge 0.03458727073093) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.03458727073093) then do;
241317    +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
241318    +end;
MPRINT(EM_DIAGRAM):   end;
241319    +else
241320    +if (P_DepVar1 ge 0.01879143124471) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01879143124471) then do;
241321    +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
241322    +end;
MPRINT(EM_DIAGRAM):   end;
241323    +else
241324    +if (P_DepVar1 ge 0.0097482446293) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0097482446293) then do;
241325    +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
241326    +end;
MPRINT(EM_DIAGRAM):   end;
241327    +else
241328    +if (P_DepVar1 ge 0.00245959571966) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00245959571966) then do;
241329    +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
241330    +end;
MPRINT(EM_DIAGRAM):   end;
241331    +else
241332    +if (P_DepVar1 ge 0.00017976304645) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00017976304645) then do;
241333    +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
241334    +end;
MPRINT(EM_DIAGRAM):   end;
241335    +else
241336    +if (P_DepVar1 ge 0.00013472531927) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00013472531927) then do;
241337    +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
241338    +end;
MPRINT(EM_DIAGRAM):   end;
241339    +else
241340    +if (P_DepVar1 ge 0.00011413819575) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00011413819575) then do;
241341    +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
241342    +end;
MPRINT(EM_DIAGRAM):   end;
241343    +else
241344    +if (P_DepVar1 ge 0.00010043942556) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00010043942556) then do;
241345    +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
241346    +end;
MPRINT(EM_DIAGRAM):   end;
241347    +else
241348    +if (P_DepVar1 ge 0.00009090647572) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00009090647572) then do;
241349    +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
241350    +end;
MPRINT(EM_DIAGRAM):   end;
241351    +else
241352    +if (P_DepVar1 ge 0.00008281457696) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00008281457696) then do;
241353    +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
241354    +end;
MPRINT(EM_DIAGRAM):   end;
241355    +else
241356    +if (P_DepVar1 ge 0.00007432503009) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00007432503009) then do;
241357    +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
241358    +end;
MPRINT(EM_DIAGRAM):   end;
241359    +else
241360    +if (P_DepVar1 ge 0.00006492727161) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00006492727161) then do;
241361    +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
241362    +end;
MPRINT(EM_DIAGRAM):   end;
241363    +else
241364    +if (P_DepVar1 ge 0.00003108403278) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00003108403278) then do;
241365    +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
241366    +end;
MPRINT(EM_DIAGRAM):   end;
241367    +else
241368    +if (P_DepVar1 ge 4.9499827274393E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 4.9499827274393E-6) then do;
241369    +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
241370    +end;
MPRINT(EM_DIAGRAM):   end;
241371    +else
241372    +do;
MPRINT(EM_DIAGRAM):   else do;
241373    +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
241374    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
241375     run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
241376     quit;
241377     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
241378     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
241379     * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
241380     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.MdlComp_TRAIN out=WORK.M137P9XI noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M137P9XI;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M137P9XI(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M137P9XI;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M137P9XI;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3C72T0L NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GAGRVL(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C72T0L;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
