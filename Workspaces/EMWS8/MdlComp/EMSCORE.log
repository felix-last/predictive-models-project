MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.16 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.16 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3K2MOR1 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3K2MOR1 new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
813697     /* Generate assessment metadata, which will be used to generate assessment data step
813697   !  */
813698     /* code, such as retrieving names of temporary variables and summary variables,
813698   !  */
813699     /* labels, etc.  It is used in almost all the assessment computations such as lift,
813699   !  */
813700     /* roc, index, scoreDist and could be thought as a global variable in assessment
813700   !  */
813701     /* computation.
813701   !  */
813702     data work.ASSESS_0CTIL03_assessMeta_iQEljn;
MPRINT(EM_DIAGRAM):    data work.ASSESS_0CTIL03_assessMeta_iQEljn;
813703     length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
813703   ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
813703   ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
813703   ! RESULT_MAX $32 RESULT_MAX_LABEL
813704        $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
813704   !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
813705     VARIABLE = "DepVar";
MPRINT(EM_DIAGRAM):   VARIABLE = "DepVar";
813706     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
813707     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
813708     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
813709     LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
813710     PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
813711     MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
813712     LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
813713     GEN_VAR_IN_TEMP_DATA = "DepVar";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "DepVar";
813714     RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
813715     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
813716     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
813717     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
813718     MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
813719     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
813720     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
813721     MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
813722     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
813723     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
813724     TEMPORARY_VARIABLE = "DepVar_yZtey6oYM7NSpYH";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "DepVar_yZtey6oYM7NSpYH";
813725     output;
MPRINT(EM_DIAGRAM):   output;
813726     VARIABLE = "F_DepVar_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_1";
813727     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
813728     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
813729     PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
813730     LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
813731     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
813732     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
813733     LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
813734     GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_GjsQ99KWrV3Xhzg";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_GjsQ99KWrV3Xhzg";
813735     RESULT_MEAN = "F_DepVar_1_mean_ID0gKeh1JP2JuT9";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_1_mean_ID0gKeh1JP2JuT9";
813736     /* adjust for tied cases */
813737     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
813738     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
813739     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
813740     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
813741     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
813742     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
813743     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
813743   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
813744     TEMPORARY_VARIABLE = "F_DepVar_1_jwX3WlL2iexcud1";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_1_jwX3WlL2iexcud1";
813745     output;
MPRINT(EM_DIAGRAM):   output;
813746     VARIABLE = "F_DepVar_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_0";
813747     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
813748     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
813749     PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
813750     LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
813751     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
813752     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
813753     LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
813754     GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_zHCOjQARGYT0Ade";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_zHCOjQARGYT0Ade";
813755     RESULT_MEAN = "F_DepVar_0_mean_vhPmyoRwS9zSTDM";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_0_mean_vhPmyoRwS9zSTDM";
813756     /* adjust for tied cases */
813757     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
813758     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
813759     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
813760     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
813761     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
813762     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
813763     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
813763   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
813764     TEMPORARY_VARIABLE = "F_DepVar_0_FLeLIN5BsdCDWW2";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_0_FLeLIN5BsdCDWW2";
813765     output;
MPRINT(EM_DIAGRAM):   output;
813766     VARIABLE = "P_DepVar1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar1";
813767     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
813768     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
813769     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
813770     LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
813771     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
813772     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
813773     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
813774     GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
813775     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
813776     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
813776   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
813777     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
813778     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
813779     MIN_ADJUSTED = "P_DepVar_minAdjusted_79ZdhoqOI";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_79ZdhoqOI";
813780     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
813781     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
813782     MAX_ADJUSTED = "P_DepVar_maxAdjusted_PKruY7Dqb";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_PKruY7Dqb";
813783     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
813784     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
813785     TEMPORARY_VARIABLE = "P_DepVar1_6z6H8TNYFh_RyEa";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar1_6z6H8TNYFh_RyEa";
813786     output;
MPRINT(EM_DIAGRAM):   output;
813787     VARIABLE = "P_DepVar0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar0";
813788     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
813789     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
813790     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
813791     LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
813792     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
813793     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
813794     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
813795     GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
813796     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
813797     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
813797   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
813798     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
813799     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
813800     MIN_ADJUSTED = "P_DepVar_minAdjusted_yhuvZhOq1";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_yhuvZhOq1";
813801     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
813802     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
813803     MAX_ADJUSTED = "P_DepVar_maxAdjusted_Chp6aPwDA";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_Chp6aPwDA";
813804     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
813805     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
813806     TEMPORARY_VARIABLE = "P_DepVar0_dubmLsgOm4l2hBu";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar0_dubmLsgOm4l2hBu";
813807     output;
MPRINT(EM_DIAGRAM):   output;
813808     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_0CTIL03_ASSESSMETA_IQELJN has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

813809     /* Generate temporary dataset and obtain summary statistics such as total number of
813809   !   */
813810     /* obserations, frequency of target.  However, summary statistics for class
813810   ! reporting */
813811     /* variabels are not computed here since if there exist class reporting variables,
813811   !   */
813812     /* then PROC DMDB will be called. And there is no need to compute interval reporting
813812   !   */
813813     /* summary statisitcs, if any.
813813   !   */
813814     data work.ASSESS_0CTIL03_normSD_I2Y7hr(drop=
813815     _numberOfObservation_
813816     _levelFrequency_1
813817     _levelFrequency_2
813818     )
813819     work.ASSESS_0CTIL03_meansAndTi_FbVwyc (keep=
813820     _numberOfObservation_
813821     _levelFrequency_1
813822     _levelFrequency_2
813823     );
MPRINT(EM_DIAGRAM):    data work.ASSESS_0CTIL03_normSD_I2Y7hr(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 ) work.ASSESS_0CTIL03_meansAndTi_FbVwyc (keep= 
_numberOfObservation_ _levelFrequency_1 _levelFrequency_2 );
813824     set EMWS8.Neural2_TRAIN(
813825     where=(
813826     (DepVar ^= .)
813827     )
813828     ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_TRAIN( where=( (DepVar ^= .) ) ) end=_lastObservation_;
813829     keep frequency_LziJxz;
MPRINT(EM_DIAGRAM):   keep frequency_LziJxz;
813830     frequency_LziJxz = 1;
MPRINT(EM_DIAGRAM):   frequency_LziJxz = 1;
813831     keep I_DepVar F_DepVar;
MPRINT(EM_DIAGRAM):   keep I_DepVar F_DepVar;
813832     keep F_DepVar_1_GjsQ99KWrV3Xhzg;
MPRINT(EM_DIAGRAM):   keep F_DepVar_1_GjsQ99KWrV3Xhzg;
813833     if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
813834     F_DepVar_1_GjsQ99KWrV3Xhzg = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_1_GjsQ99KWrV3Xhzg = 1;
813835     end;
MPRINT(EM_DIAGRAM):   end;
813836     else do;
MPRINT(EM_DIAGRAM):   else do;
813837     F_DepVar_1_GjsQ99KWrV3Xhzg = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_1_GjsQ99KWrV3Xhzg = 0;
813838     end;
MPRINT(EM_DIAGRAM):   end;
813839     keep F_DepVar_0_zHCOjQARGYT0Ade;
MPRINT(EM_DIAGRAM):   keep F_DepVar_0_zHCOjQARGYT0Ade;
813840     if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
813841     F_DepVar_0_zHCOjQARGYT0Ade = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_0_zHCOjQARGYT0Ade = 1;
813842     end;
MPRINT(EM_DIAGRAM):   end;
813843     else do;
MPRINT(EM_DIAGRAM):   else do;
813844     F_DepVar_0_zHCOjQARGYT0Ade = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_0_zHCOjQARGYT0Ade = 0;
813845     end;
MPRINT(EM_DIAGRAM):   end;
813846     keep P_DepVar1;
MPRINT(EM_DIAGRAM):   keep P_DepVar1;
813847     keep P_DepVar0;
MPRINT(EM_DIAGRAM):   keep P_DepVar0;
813848     output work.ASSESS_0CTIL03_normSD_I2Y7hr;
MPRINT(EM_DIAGRAM):   output work.ASSESS_0CTIL03_normSD_I2Y7hr;
813849     keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
813850     retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
813851     _numberOfObservation_ + frequency_LziJxz;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_LziJxz;
813852     keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
813853     retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
813854     if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
813855     _levelFrequency_1 + frequency_LziJxz;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_LziJxz;
813856     end;
MPRINT(EM_DIAGRAM):   end;
813857     keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
813858     retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
813859     if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
813860     _levelFrequency_2 + frequency_LziJxz;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_LziJxz;
813861     end;
MPRINT(EM_DIAGRAM):   end;
813862     if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
813863     output work.ASSESS_0CTIL03_meansAndTi_FbVwyc;
MPRINT(EM_DIAGRAM):   output work.ASSESS_0CTIL03_meansAndTi_FbVwyc;
813864     end;
MPRINT(EM_DIAGRAM):   end;
813865     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL2_TRAIN.
      WHERE DepVar not = .;
NOTE: The data set WORK.ASSESS_0CTIL03_NORMSD_I2Y7HR has 2374 observations and 7 variables.
NOTE: The data set WORK.ASSESS_0CTIL03_MEANSANDTI_FBVWYC has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

813866     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
813867     set EMWS8.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS8.MdlComp_EMRANK;
813868     where MODEL = "Neural2" and TARGET = "DepVar" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Neural2" and TARGET = "DepVar" and dataRole="TRAIN";
813869     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS8.MDLCOMP_EMRANK.
      WHERE (MODEL='Neural2') and (TARGET='DepVar') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813870     data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
813871     do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
813872     DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
813873     output;
MPRINT(EM_DIAGRAM):   output;
813874     end;
MPRINT(EM_DIAGRAM):   end;
813875     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813876     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
813877     merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
813878     by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
813879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

813880     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
813881     set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
813882     retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
813883     retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
813884     keep event;
MPRINT(EM_DIAGRAM):   keep event;
813885     keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
813886     if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
813887     bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
813888     _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
813889     if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
813890     /* tied */
813891     _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
813892     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
813893     end;
MPRINT(EM_DIAGRAM):   end;
813894     else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
813895     /* next tied */
813896     _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
813897     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
813898     end;
MPRINT(EM_DIAGRAM):   end;
813899     output;
MPRINT(EM_DIAGRAM):   output;
813900     *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
813901     * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
813902     *end;
MPRINT(EM_DIAGRAM):   *end;
813903     if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
813904     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
813905     end;
MPRINT(EM_DIAGRAM):   end;
813906     else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
813907     if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
813908     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
813909     end;
MPRINT(EM_DIAGRAM):   end;
813910     end;
MPRINT(EM_DIAGRAM):   end;
813911     bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
813912     /* correct the previous change */
813913     end;
MPRINT(EM_DIAGRAM):   end;
813914     if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
813915     _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
813916     output;
MPRINT(EM_DIAGRAM):   output;
813917     end;
MPRINT(EM_DIAGRAM):   end;
813918     _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
813919     _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
813920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813921     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
813922     set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
813923     by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
813924     retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
813925     if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
813926     _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
813927     end;
MPRINT(EM_DIAGRAM):   end;
813928     if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
813929     _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
813930     output;
MPRINT(EM_DIAGRAM):   output;
813931     end;
MPRINT(EM_DIAGRAM):   end;
813932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 18 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

813933     filename emflow
813933   ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring NEURAL2_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
813934     *------------------------------------------------------------*;
813935     * MdlComp: Scoring NEURAL2_TRAIN data;
813936     *------------------------------------------------------------*;
813937     data EMWS8.MdlComp_TRAIN
813938     / view=EMWS8.MdlComp_TRAIN
813939     ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_TRAIN / view=EMWS8.MdlComp_TRAIN ;
813940     set EMWS8.Neural2_TRAIN
813941     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_TRAIN ;
813942     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
813943    +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
813944    +if (P_DepVar1 ge 0.980785875345) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.980785875345) then do;
813945    +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
813946    +end;
MPRINT(EM_DIAGRAM):   end;
813947    +else
813948    +if (P_DepVar1 ge 0.83203277475849) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.83203277475849) then do;
813949    +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
813950    +end;
MPRINT(EM_DIAGRAM):   end;
813951    +else
813952    +if (P_DepVar1 ge 0.43137123253418) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43137123253418) then do;
813953    +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
813954    +end;
MPRINT(EM_DIAGRAM):   end;
813955    +else
813956    +if (P_DepVar1 ge 0.16309067738074) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.16309067738074) then do;
813957    +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
813958    +end;
MPRINT(EM_DIAGRAM):   end;
813959    +else
813960    +if (P_DepVar1 ge 0.06726712135925) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.06726712135925) then do;
813961    +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
813962    +end;
MPRINT(EM_DIAGRAM):   end;
813963    +else
813964    +if (P_DepVar1 ge 0.03492810511934) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.03492810511934) then do;
813965    +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
813966    +end;
MPRINT(EM_DIAGRAM):   end;
813967    +else
813968    +if (P_DepVar1 ge 0.02319135232731) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.02319135232731) then do;
813969    +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
813970    +end;
MPRINT(EM_DIAGRAM):   end;
813971    +else
813972    +if (P_DepVar1 ge 0.01728572787016) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01728572787016) then do;
813973    +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
813974    +end;
MPRINT(EM_DIAGRAM):   end;
813975    +else
813976    +if (P_DepVar1 ge 0.00813439589975) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00813439589975) then do;
813977    +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
813978    +end;
MPRINT(EM_DIAGRAM):   end;
813979    +else
813980    +if (P_DepVar1 ge 0.00303945084466) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00303945084466) then do;
813981    +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
813982    +end;
MPRINT(EM_DIAGRAM):   end;
813983    +else
813984    +if (P_DepVar1 ge 0.00082639242193) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00082639242193) then do;
813985    +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
813986    +end;
MPRINT(EM_DIAGRAM):   end;
813987    +else
813988    +if (P_DepVar1 ge 0.00022056742045) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00022056742045) then do;
813989    +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
813990    +end;
MPRINT(EM_DIAGRAM):   end;
813991    +else
813992    +if (P_DepVar1 ge 0.000078449593) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.000078449593) then do;
813993    +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
813994    +end;
MPRINT(EM_DIAGRAM):   end;
813995    +else
813996    +if (P_DepVar1 ge 0.0000329292338) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0000329292338) then do;
813997    +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
813998    +end;
MPRINT(EM_DIAGRAM):   end;
813999    +else
814000    +if (P_DepVar1 ge 0.00001563071851) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00001563071851) then do;
814001    +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
814002    +end;
MPRINT(EM_DIAGRAM):   end;
814003    +else
814004    +if (P_DepVar1 ge 9.5509002667676E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 9.5509002667676E-6) then do;
814005    +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
814006    +end;
MPRINT(EM_DIAGRAM):   end;
814007    +else
814008    +if (P_DepVar1 ge 6.1627076498896E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 6.1627076498896E-6) then do;
814009    +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
814010    +end;
MPRINT(EM_DIAGRAM):   end;
814011    +else
814012    +do;
MPRINT(EM_DIAGRAM):   else do;
814013    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
814014    +b_DepVar = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   b_DepVar = floor(18 + 3*_temp_);
814015    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
814016     run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
814017     quit;
814018     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
814019     filename emflow
814019   ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring NEURAL2_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
814020     *------------------------------------------------------------*;
814021     * MdlComp: Scoring NEURAL2_VALIDATE data;
814022     *------------------------------------------------------------*;
814023     data EMWS8.MdlComp_VALIDATE
814024     / view=EMWS8.MdlComp_VALIDATE
814025     ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_VALIDATE / view=EMWS8.MdlComp_VALIDATE ;
814026     set EMWS8.Neural2_VALIDATE
814027     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_VALIDATE ;
814028     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
814029    +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
814030    +if (P_DepVar1 ge 0.980785875345) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.980785875345) then do;
814031    +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
814032    +end;
MPRINT(EM_DIAGRAM):   end;
814033    +else
814034    +if (P_DepVar1 ge 0.83203277475849) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.83203277475849) then do;
814035    +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
814036    +end;
MPRINT(EM_DIAGRAM):   end;
814037    +else
814038    +if (P_DepVar1 ge 0.43137123253418) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43137123253418) then do;
814039    +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
814040    +end;
MPRINT(EM_DIAGRAM):   end;
814041    +else
814042    +if (P_DepVar1 ge 0.16309067738074) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.16309067738074) then do;
814043    +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
814044    +end;
MPRINT(EM_DIAGRAM):   end;
814045    +else
814046    +if (P_DepVar1 ge 0.06726712135925) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.06726712135925) then do;
814047    +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
814048    +end;
MPRINT(EM_DIAGRAM):   end;
814049    +else
814050    +if (P_DepVar1 ge 0.03492810511934) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.03492810511934) then do;
814051    +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
814052    +end;
MPRINT(EM_DIAGRAM):   end;
814053    +else
814054    +if (P_DepVar1 ge 0.02319135232731) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.02319135232731) then do;
814055    +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
814056    +end;
MPRINT(EM_DIAGRAM):   end;
814057    +else
814058    +if (P_DepVar1 ge 0.01728572787016) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01728572787016) then do;
814059    +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
814060    +end;
MPRINT(EM_DIAGRAM):   end;
814061    +else
814062    +if (P_DepVar1 ge 0.00813439589975) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00813439589975) then do;
814063    +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
814064    +end;
MPRINT(EM_DIAGRAM):   end;
814065    +else
814066    +if (P_DepVar1 ge 0.00303945084466) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00303945084466) then do;
814067    +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
814068    +end;
MPRINT(EM_DIAGRAM):   end;
814069    +else
814070    +if (P_DepVar1 ge 0.00082639242193) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00082639242193) then do;
814071    +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
814072    +end;
MPRINT(EM_DIAGRAM):   end;
814073    +else
814074    +if (P_DepVar1 ge 0.00022056742045) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00022056742045) then do;
814075    +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
814076    +end;
MPRINT(EM_DIAGRAM):   end;
814077    +else
814078    +if (P_DepVar1 ge 0.000078449593) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.000078449593) then do;
814079    +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
814080    +end;
MPRINT(EM_DIAGRAM):   end;
814081    +else
814082    +if (P_DepVar1 ge 0.0000329292338) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0000329292338) then do;
814083    +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
814084    +end;
MPRINT(EM_DIAGRAM):   end;
814085    +else
814086    +if (P_DepVar1 ge 0.00001563071851) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00001563071851) then do;
814087    +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
814088    +end;
MPRINT(EM_DIAGRAM):   end;
814089    +else
814090    +if (P_DepVar1 ge 9.5509002667676E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 9.5509002667676E-6) then do;
814091    +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
814092    +end;
MPRINT(EM_DIAGRAM):   end;
814093    +else
814094    +if (P_DepVar1 ge 6.1627076498896E-6) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 6.1627076498896E-6) then do;
814095    +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
814096    +end;
MPRINT(EM_DIAGRAM):   end;
814097    +else
814098    +do;
MPRINT(EM_DIAGRAM):   else do;
814099    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
814100    +b_DepVar = floor(18 + 3*_temp_);
MPRINT(EM_DIAGRAM):   b_DepVar = floor(18 + 3*_temp_);
814101    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
814102     run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
814103     quit;
814104     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
814105     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
814106     * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
814107     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.MdlComp_TRAIN out=WORK.M365WRZF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M365WRZF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M365WRZF(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M365WRZF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M365WRZF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0N0KUCY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JWNLI6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   set WORK.M0N0KUCY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
