MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2PNONE_ 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2PNONE_ new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
1468543    /* Generate assessment metadata, which will be used to generate assessment data step
1468543  !  */
1468544    /* code, such as retrieving names of temporary variables and summary variables,
1468544  !  */
1468545    /* labels, etc.  It is used in almost all the assessment computations such as lift,
1468545  !  */
1468546    /* roc, index, scoreDist and could be thought as a global variable in assessment
1468546  !  */
1468547    /* computation.
1468547  !  */
1468548    data work.ASSESS_2HR73YZ_assessMeta_ln7LFB;
MPRINT(EM_DIAGRAM):    data work.ASSESS_2HR73YZ_assessMeta_ln7LFB;
1468549    length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
1468549  ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
1468549  ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
1468549  ! RESULT_MAX $32 RESULT_MAX_LABEL
1468550       $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
1468550  !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
1468551    VARIABLE = "DepVar";
MPRINT(EM_DIAGRAM):   VARIABLE = "DepVar";
1468552    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
1468553    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1468554    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1468555    LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
1468556    PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
1468557    MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
1468558    LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
1468559    GEN_VAR_IN_TEMP_DATA = "DepVar";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "DepVar";
1468560    RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
1468561    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
1468562    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
1468563    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
1468564    MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
1468565    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
1468566    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
1468567    MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
1468568    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
1468569    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
1468570    TEMPORARY_VARIABLE = "DepVar_r0RKAr8wTqEQaRz";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "DepVar_r0RKAr8wTqEQaRz";
1468571    output;
MPRINT(EM_DIAGRAM):   output;
1468572    VARIABLE = "F_DepVar_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_1";
1468573    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1468574    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1468575    PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
1468576    LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
1468577    PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
1468578    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1468579    LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
1468580    GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_hvYVQDopYT3bxZd";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_hvYVQDopYT3bxZd";
1468581    RESULT_MEAN = "F_DepVar_1_mean_whPL6DmY7HeU0zm";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_1_mean_whPL6DmY7HeU0zm";
1468582    /* adjust for tied cases */
1468583    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
1468584    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
1468585    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
1468586    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
1468587    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
1468588    RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
1468589    RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
1468589  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
1468590    TEMPORARY_VARIABLE = "F_DepVar_1_AW63IjI_Bwh_eh7";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_1_AW63IjI_Bwh_eh7";
1468591    output;
MPRINT(EM_DIAGRAM):   output;
1468592    VARIABLE = "F_DepVar_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_0";
1468593    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1468594    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1468595    PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
1468596    LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
1468597    PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
1468598    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1468599    LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
1468600    GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_Bev7qnKp_bNogqT";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_Bev7qnKp_bNogqT";
1468601    RESULT_MEAN = "F_DepVar_0_mean_2KigYtSDh3OhNh5";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_0_mean_2KigYtSDh3OhNh5";
1468602    /* adjust for tied cases */
1468603    RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
1468604    RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
1468605    RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
1468606    RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
1468607    RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
1468608    RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
1468609    RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
1468609  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
1468610    TEMPORARY_VARIABLE = "F_DepVar_0_EUKqqiaI_iD8XeN";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_0_EUKqqiaI_iD8XeN";
1468611    output;
MPRINT(EM_DIAGRAM):   output;
1468612    VARIABLE = "P_DepVar1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar1";
1468613    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1468614    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1468615    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
1468616    LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
1468617    PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
1468618    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1468619    LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
1468620    GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
1468621    RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
1468622    RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
1468622  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
1468623    RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
1468624    RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
1468625    MIN_ADJUSTED = "P_DepVar_minAdjusted_z9SPVnGv1";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_z9SPVnGv1";
1468626    RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
1468627    RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
1468628    MAX_ADJUSTED = "P_DepVar_maxAdjusted_F3pzR8tde";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_F3pzR8tde";
1468629    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
1468630    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
1468631    TEMPORARY_VARIABLE = "P_DepVar1_XhA2ssmJE5CXLxl";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar1_XhA2ssmJE5CXLxl";
1468632    output;
MPRINT(EM_DIAGRAM):   output;
1468633    VARIABLE = "P_DepVar0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar0";
1468634    FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
1468635    TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
1468636    PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
1468637    LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
1468638    PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
1468639    MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
1468640    LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
1468641    GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
1468642    RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
1468643    RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
1468643  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
1468644    RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
1468645    RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
1468646    MIN_ADJUSTED = "P_DepVar_minAdjusted_Z3euaJJn1";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_Z3euaJJn1";
1468647    RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
1468648    RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
1468649    MAX_ADJUSTED = "P_DepVar_maxAdjusted_hITlMK8Jm";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_hITlMK8Jm";
1468650    RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
1468651    RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
1468652    TEMPORARY_VARIABLE = "P_DepVar0_Nys92gwBz9vrSXC";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar0_Nys92gwBz9vrSXC";
1468653    output;
MPRINT(EM_DIAGRAM):   output;
1468654    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_2HR73YZ_ASSESSMETA_LN7LFB has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1468655    /* Generate temporary dataset and obtain summary statistics such as total number of
1468655  !   */
1468656    /* obserations, frequency of target.  However, summary statistics for class
1468656  ! reporting */
1468657    /* variabels are not computed here since if there exist class reporting variables,
1468657  !   */
1468658    /* then PROC DMDB will be called. And there is no need to compute interval reporting
1468658  !   */
1468659    /* summary statisitcs, if any.
1468659  !   */
1468660    data work.ASSESS_2HR73YZ_normSD_1hojLc(drop=
1468661    _numberOfObservation_
1468662    _levelFrequency_1
1468663    _levelFrequency_2
1468664    )
1468665    work.ASSESS_2HR73YZ_meansAndTi_KGTs_U (keep=
1468666    _numberOfObservation_
1468667    _levelFrequency_1
1468668    _levelFrequency_2
1468669    );
MPRINT(EM_DIAGRAM):    data work.ASSESS_2HR73YZ_normSD_1hojLc(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 ) work.ASSESS_2HR73YZ_meansAndTi_KGTs_U (keep= 
_numberOfObservation_ _levelFrequency_1 _levelFrequency_2 );
1468670    set EMWS8.Ensmbl5_TRAIN(
1468671    where=(
1468672    (DepVar ^= .)
1468673    )
1468674    ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_TRAIN( where=( (DepVar ^= .) ) ) end=_lastObservation_;
1468675    keep frequency_FCfoyR;
MPRINT(EM_DIAGRAM):   keep frequency_FCfoyR;
1468676    frequency_FCfoyR = 1;
MPRINT(EM_DIAGRAM):   frequency_FCfoyR = 1;
1468677    keep I_DepVar F_DepVar;
MPRINT(EM_DIAGRAM):   keep I_DepVar F_DepVar;
1468678    keep F_DepVar_1_hvYVQDopYT3bxZd;
MPRINT(EM_DIAGRAM):   keep F_DepVar_1_hvYVQDopYT3bxZd;
1468679    if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
1468680    F_DepVar_1_hvYVQDopYT3bxZd = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_1_hvYVQDopYT3bxZd = 1;
1468681    end;
MPRINT(EM_DIAGRAM):   end;
1468682    else do;
MPRINT(EM_DIAGRAM):   else do;
1468683    F_DepVar_1_hvYVQDopYT3bxZd = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_1_hvYVQDopYT3bxZd = 0;
1468684    end;
MPRINT(EM_DIAGRAM):   end;
1468685    keep F_DepVar_0_Bev7qnKp_bNogqT;
MPRINT(EM_DIAGRAM):   keep F_DepVar_0_Bev7qnKp_bNogqT;
1468686    if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
1468687    F_DepVar_0_Bev7qnKp_bNogqT = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_0_Bev7qnKp_bNogqT = 1;
1468688    end;
MPRINT(EM_DIAGRAM):   end;
1468689    else do;
MPRINT(EM_DIAGRAM):   else do;
1468690    F_DepVar_0_Bev7qnKp_bNogqT = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_0_Bev7qnKp_bNogqT = 0;
1468691    end;
MPRINT(EM_DIAGRAM):   end;
1468692    keep P_DepVar1;
MPRINT(EM_DIAGRAM):   keep P_DepVar1;
1468693    keep P_DepVar0;
MPRINT(EM_DIAGRAM):   keep P_DepVar0;
1468694    output work.ASSESS_2HR73YZ_normSD_1hojLc;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2HR73YZ_normSD_1hojLc;
1468695    keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
1468696    retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
1468697    _numberOfObservation_ + frequency_FCfoyR;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_FCfoyR;
1468698    keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
1468699    retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
1468700    if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
1468701    _levelFrequency_1 + frequency_FCfoyR;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_FCfoyR;
1468702    end;
MPRINT(EM_DIAGRAM):   end;
1468703    keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
1468704    retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
1468705    if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
1468706    _levelFrequency_2 + frequency_FCfoyR;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_FCfoyR;
1468707    end;
MPRINT(EM_DIAGRAM):   end;
1468708    if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
1468709    output work.ASSESS_2HR73YZ_meansAndTi_KGTs_U;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2HR73YZ_meansAndTi_KGTs_U;
1468710    end;
MPRINT(EM_DIAGRAM):   end;
1468711    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL5_TRAIN.
      WHERE DepVar not = .;
NOTE: The data set WORK.ASSESS_2HR73YZ_NORMSD_1HOJLC has 2374 observations and 7 variables.
NOTE: The data set WORK.ASSESS_2HR73YZ_MEANSANDTI_KGTS_U has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
      

1468712    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
1468713    set EMWS8.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS8.MdlComp_EMRANK;
1468714    where MODEL = "Ensmbl5" and TARGET = "DepVar" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Ensmbl5" and TARGET = "DepVar" and dataRole="TRAIN";
1468715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS8.MDLCOMP_EMRANK.
      WHERE (MODEL='Ensmbl5') and (TARGET='DepVar') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1468716    data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
1468717    do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
1468718    DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
1468719    output;
MPRINT(EM_DIAGRAM):   output;
1468720    end;
MPRINT(EM_DIAGRAM):   end;
1468721    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1468722    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
1468723    merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
1468724    by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
1468725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1468726    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
1468727    set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
1468728    retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
1468729    retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
1468730    keep event;
MPRINT(EM_DIAGRAM):   keep event;
1468731    keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
1468732    if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
1468733    bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
1468734    _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
1468735    if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
1468736    /* tied */
1468737    _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
1468738    ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
1468739    end;
MPRINT(EM_DIAGRAM):   end;
1468740    else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
1468741    /* next tied */
1468742    _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
1468743    ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
1468744    end;
MPRINT(EM_DIAGRAM):   end;
1468745    output;
MPRINT(EM_DIAGRAM):   output;
1468746    *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
1468747    * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
1468748    *end;
MPRINT(EM_DIAGRAM):   *end;
1468749    if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
1468750    _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
1468751    end;
MPRINT(EM_DIAGRAM):   end;
1468752    else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
1468753    if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
1468754    _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
1468755    end;
MPRINT(EM_DIAGRAM):   end;
1468756    end;
MPRINT(EM_DIAGRAM):   end;
1468757    bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
1468758    /* correct the previous change */
1468759    end;
MPRINT(EM_DIAGRAM):   end;
1468760    if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
1468761    _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
1468762    output;
MPRINT(EM_DIAGRAM):   output;
1468763    end;
MPRINT(EM_DIAGRAM):   end;
1468764    _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
1468765    _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
1468766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1468767    data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
1468768    set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
1468769    by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
1468770    retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
1468771    if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
1468772    _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
1468773    end;
MPRINT(EM_DIAGRAM):   end;
1468774    if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
1468775    _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
1468776    output;
MPRINT(EM_DIAGRAM):   output;
1468777    end;
MPRINT(EM_DIAGRAM):   end;
1468778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1468779    filename emflow
1468779  ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring ENSMBL5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1468780    *------------------------------------------------------------*;
1468781    * MdlComp: Scoring ENSMBL5_TRAIN data;
1468782    *------------------------------------------------------------*;
1468783    data EMWS8.MdlComp_TRAIN
1468784    / view=EMWS8.MdlComp_TRAIN
1468785    ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_TRAIN / view=EMWS8.MdlComp_TRAIN ;
1468786    set EMWS8.Ensmbl5_TRAIN
1468787    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_TRAIN ;
1468788    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
1468789   +if (P_DepVar1 ge 0.96894879613525) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.96894879613525) then do;
1468790   +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
1468791   +end;
MPRINT(EM_DIAGRAM):   end;
1468792   +else
1468793   +if (P_DepVar1 ge 0.81107775878654) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.81107775878654) then do;
1468794   +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
1468795   +end;
MPRINT(EM_DIAGRAM):   end;
1468796   +else
1468797   +if (P_DepVar1 ge 0.43761148965023) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43761148965023) then do;
1468798   +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
1468799   +end;
MPRINT(EM_DIAGRAM):   end;
1468800   +else
1468801   +if (P_DepVar1 ge 0.16477817702425) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.16477817702425) then do;
1468802   +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
1468803   +end;
MPRINT(EM_DIAGRAM):   end;
1468804   +else
1468805   +if (P_DepVar1 ge 0.06928230230399) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.06928230230399) then do;
1468806   +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
1468807   +end;
MPRINT(EM_DIAGRAM):   end;
1468808   +else
1468809   +if (P_DepVar1 ge 0.03089985306425) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.03089985306425) then do;
1468810   +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
1468811   +end;
MPRINT(EM_DIAGRAM):   end;
1468812   +else
1468813   +if (P_DepVar1 ge 0.01494658701972) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01494658701972) then do;
1468814   +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
1468815   +end;
MPRINT(EM_DIAGRAM):   end;
1468816   +else
1468817   +if (P_DepVar1 ge 0.00802392348426) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00802392348426) then do;
1468818   +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
1468819   +end;
MPRINT(EM_DIAGRAM):   end;
1468820   +else
1468821   +if (P_DepVar1 ge 0.00450976679679) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00450976679679) then do;
1468822   +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
1468823   +end;
MPRINT(EM_DIAGRAM):   end;
1468824   +else
1468825   +if (P_DepVar1 ge 0.00251937449639) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00251937449639) then do;
1468826   +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
1468827   +end;
MPRINT(EM_DIAGRAM):   end;
1468828   +else
1468829   +if (P_DepVar1 ge 0.00141766061481) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00141766061481) then do;
1468830   +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
1468831   +end;
MPRINT(EM_DIAGRAM):   end;
1468832   +else
1468833   +if (P_DepVar1 ge 0.00081170892075) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00081170892075) then do;
1468834   +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
1468835   +end;
MPRINT(EM_DIAGRAM):   end;
1468836   +else
1468837   +if (P_DepVar1 ge 0.00054411751914) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00054411751914) then do;
1468838   +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
1468839   +end;
MPRINT(EM_DIAGRAM):   end;
1468840   +else
1468841   +if (P_DepVar1 ge 0.00039812126036) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00039812126036) then do;
1468842   +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
1468843   +end;
MPRINT(EM_DIAGRAM):   end;
1468844   +else
1468845   +if (P_DepVar1 ge 0.0003043389574) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0003043389574) then do;
1468846   +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
1468847   +end;
MPRINT(EM_DIAGRAM):   end;
1468848   +else
1468849   +if (P_DepVar1 ge 0.0002495315872) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0002495315872) then do;
1468850   +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
1468851   +end;
MPRINT(EM_DIAGRAM):   end;
1468852   +else
1468853   +if (P_DepVar1 ge 0.00020780172127) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00020780172127) then do;
1468854   +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
1468855   +end;
MPRINT(EM_DIAGRAM):   end;
1468856   +else
1468857   +if (P_DepVar1 ge 0.00017412620441) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00017412620441) then do;
1468858   +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
1468859   +end;
MPRINT(EM_DIAGRAM):   end;
1468860   +else
1468861   +if (P_DepVar1 ge 0.00014507816633) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00014507816633) then do;
1468862   +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
1468863   +end;
MPRINT(EM_DIAGRAM):   end;
1468864   +else
1468865   +do;
MPRINT(EM_DIAGRAM):   else do;
1468866   +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
1468867   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1468868    run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1468869    quit;
1468870    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1468871    filename emflow
1468871  ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring ENSMBL5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1468872    *------------------------------------------------------------*;
1468873    * MdlComp: Scoring ENSMBL5_VALIDATE data;
1468874    *------------------------------------------------------------*;
1468875    data EMWS8.MdlComp_VALIDATE
1468876    / view=EMWS8.MdlComp_VALIDATE
1468877    ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_VALIDATE / view=EMWS8.MdlComp_VALIDATE ;
1468878    set EMWS8.Ensmbl5_VALIDATE
1468879    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_VALIDATE ;
1468880    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp\EMFLOWSCORE.sas.
1468881   +if (P_DepVar1 ge 0.96894879613525) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.96894879613525) then do;
1468882   +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
1468883   +end;
MPRINT(EM_DIAGRAM):   end;
1468884   +else
1468885   +if (P_DepVar1 ge 0.81107775878654) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.81107775878654) then do;
1468886   +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
1468887   +end;
MPRINT(EM_DIAGRAM):   end;
1468888   +else
1468889   +if (P_DepVar1 ge 0.43761148965023) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43761148965023) then do;
1468890   +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
1468891   +end;
MPRINT(EM_DIAGRAM):   end;
1468892   +else
1468893   +if (P_DepVar1 ge 0.16477817702425) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.16477817702425) then do;
1468894   +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
1468895   +end;
MPRINT(EM_DIAGRAM):   end;
1468896   +else
1468897   +if (P_DepVar1 ge 0.06928230230399) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.06928230230399) then do;
1468898   +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
1468899   +end;
MPRINT(EM_DIAGRAM):   end;
1468900   +else
1468901   +if (P_DepVar1 ge 0.03089985306425) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.03089985306425) then do;
1468902   +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
1468903   +end;
MPRINT(EM_DIAGRAM):   end;
1468904   +else
1468905   +if (P_DepVar1 ge 0.01494658701972) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01494658701972) then do;
1468906   +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
1468907   +end;
MPRINT(EM_DIAGRAM):   end;
1468908   +else
1468909   +if (P_DepVar1 ge 0.00802392348426) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00802392348426) then do;
1468910   +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
1468911   +end;
MPRINT(EM_DIAGRAM):   end;
1468912   +else
1468913   +if (P_DepVar1 ge 0.00450976679679) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00450976679679) then do;
1468914   +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
1468915   +end;
MPRINT(EM_DIAGRAM):   end;
1468916   +else
1468917   +if (P_DepVar1 ge 0.00251937449639) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00251937449639) then do;
1468918   +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
1468919   +end;
MPRINT(EM_DIAGRAM):   end;
1468920   +else
1468921   +if (P_DepVar1 ge 0.00141766061481) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00141766061481) then do;
1468922   +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
1468923   +end;
MPRINT(EM_DIAGRAM):   end;
1468924   +else
1468925   +if (P_DepVar1 ge 0.00081170892075) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00081170892075) then do;
1468926   +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
1468927   +end;
MPRINT(EM_DIAGRAM):   end;
1468928   +else
1468929   +if (P_DepVar1 ge 0.00054411751914) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00054411751914) then do;
1468930   +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
1468931   +end;
MPRINT(EM_DIAGRAM):   end;
1468932   +else
1468933   +if (P_DepVar1 ge 0.00039812126036) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00039812126036) then do;
1468934   +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
1468935   +end;
MPRINT(EM_DIAGRAM):   end;
1468936   +else
1468937   +if (P_DepVar1 ge 0.0003043389574) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0003043389574) then do;
1468938   +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
1468939   +end;
MPRINT(EM_DIAGRAM):   end;
1468940   +else
1468941   +if (P_DepVar1 ge 0.0002495315872) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0002495315872) then do;
1468942   +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
1468943   +end;
MPRINT(EM_DIAGRAM):   end;
1468944   +else
1468945   +if (P_DepVar1 ge 0.00020780172127) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00020780172127) then do;
1468946   +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
1468947   +end;
MPRINT(EM_DIAGRAM):   end;
1468948   +else
1468949   +if (P_DepVar1 ge 0.00017412620441) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00017412620441) then do;
1468950   +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
1468951   +end;
MPRINT(EM_DIAGRAM):   end;
1468952   +else
1468953   +if (P_DepVar1 ge 0.00014507816633) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00014507816633) then do;
1468954   +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
1468955   +end;
MPRINT(EM_DIAGRAM):   end;
1468956   +else
1468957   +do;
MPRINT(EM_DIAGRAM):   else do;
1468958   +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
1468959   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1468960    run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL5_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1468961    quit;
1468962    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1468963    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1468964    * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
1468965    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.MdlComp_TRAIN out=WORK.M2NQN_3H noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NQN_3H;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NQN_3H(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NQN_3H;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NQN_3H;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3OZEEOB NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M106QVQA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OZEEOB;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Ensmbl5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
