MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.51 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.51 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1B568BW 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1B568BW new;
MPRINT(EM_DIAGRAM):   run;
524263     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
524264     set EMWS8.Neural27_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_OUTKEY;
524265     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
524266     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 30 observations read from the data set EMWS8.NEURAL27_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

524267     filename emflow
524267   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural27: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
524268     *------------------------------------------------------------*;
524269     * Neural27: Scoring DATA data;
524270     *------------------------------------------------------------*;
524271     data EMWS8.Neural27_TRAIN
524272     / view=EMWS8.Neural27_TRAIN
524273     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_TRAIN / view=EMWS8.Neural27_TRAIN ;
524274     set EMWS8.Varsel_TRAIN
524275     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
524276     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas.
524277    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
524278    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
524279    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
524280    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
524281    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
524282    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
524283    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
524284    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
524285    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
524286    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
524287    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
524288    +LENGTH _WARN_ $4
524289    +      F_DepVar  $ 12
524290    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
524291    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
524292    +
524293    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
524294    +
524295    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
524296    +
524297    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
524298    +
524299    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
524300    +
524301    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
524302    +
524303    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
524304    +
524305    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
524306    +
524307    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
524308    +
524309    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
524310    +
524311    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
524312    +
524313    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
524314    +
524315    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
524316    +
524317    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
524318    +
524319    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
524320    +
524321    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
524322    +
524323    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
524324    +
524325    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
524326    +
524327    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
524328    +
524329    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
524330    +
524331    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
524332    +
524333    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
524334    +
524335    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
524336    +
524337    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
524338    +
524339    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
524340    +
524341    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
524342    +
524343    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
524344    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
524345    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
524346    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
524347    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
524348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
524349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
524350    +end;
MPRINT(EM_DIAGRAM):   end;
524351    +else do;
MPRINT(EM_DIAGRAM):   else do;
524352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
524353    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
524354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
524355    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
524356    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
524357    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
524358    +   end;
MPRINT(EM_DIAGRAM):   end;
524359    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
524360    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
524361    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
524362    +   end;
MPRINT(EM_DIAGRAM):   end;
524363    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
524364    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
524365    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
524366    +   end;
MPRINT(EM_DIAGRAM):   end;
524367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
524368    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
524369    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
524370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
524371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
524372    +   end;
MPRINT(EM_DIAGRAM):   end;
524373    +end;
MPRINT(EM_DIAGRAM):   end;
524374    +
524375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524376    +*** Checking missing input Interval
524377    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
524378    +
524379    +IF NMISS(
524380    +   AcceptedCmpTotal ,
524381    +   Frq ,
524382    +   Income ,
524383    +   Mnt ,
524384    +   MntGoldProds ,
524385    +   MntMeatProducts ,
524386    +   MntWines ,
524387    +   NumDistPurchases ,
524388    +   RFMstat ,
524389    +   RMntFrq ,
524390    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
524391    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
524392    +
524393    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
524394    +END;
MPRINT(EM_DIAGRAM):   END;
524395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524396    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
524397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524398    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
524399    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
524400    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
524401    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
524402    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
524403    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
524404    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
524405    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
524406    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
524407    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
524408    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
524409    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
524410    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
524411    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
524412    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
524413    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
524414    +END;
MPRINT(EM_DIAGRAM):   END;
524415    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
524416    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
524417    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
524418    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
524419    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
524420    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
524421    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
524422    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
524423    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
524424    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
524425    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
524426    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
524427    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
524428    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
524429    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
524430    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
524431    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
524432    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
524433    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
524434    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
524435    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
524436    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
524437    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
524438    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
524439    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
524440    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
524441    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
524442    +END;
MPRINT(EM_DIAGRAM):   END;
524443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524444    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
524445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524447    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
524448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524449    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
524450    +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
524451    +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
524452    +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
524453    +          +      0.5764056033267 * S_MntMeatProducts
524454    +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
524455    +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
524456    +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
524457    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq 
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds 
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 * 
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq + 
-0.66847972845367 * S_Recency ;
524458    +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
524459    +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
524460    +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
524461    +          +      0.5452732097143 * S_MntMeatProducts
524462    +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
524463    +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
524464    +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
524465    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq 
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds 
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 * 
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq + 
-0.36679237964697 * S_Recency ;
524466    +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
524467    +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
524468    +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
524469    +          +     -0.9040019705776 * S_MntMeatProducts
524470    +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
524471    +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
524472    +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
524473    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq 
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds 
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 * 
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq + 
0.36876094021551 * S_Recency ;
524474    +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
524475    +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
524476    +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
524477    +          +     1.04227983605332 * S_MntMeatProducts
524478    +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
524479    +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
524480    +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
524481    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq 
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 * 
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines + 
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 * 
S_RMntFrq + -0.00929531662146 * S_Recency ;
524482    +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
524483    +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
524484    +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
524485    +          +     0.23454153115636 * S_MntMeatProducts
524486    +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
524487    +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
524488    +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
524489    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq + 
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds + 
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 * 
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq + 
0.62117853933635 * S_Recency ;
524490    +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
524491    +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 * 
G_Marital_Status1 ;
524492    +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
524493    +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 * 
G_Marital_Status1 ;
524494    +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
524495    +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 * 
G_Marital_Status1 ;
524496    +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
524497    +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 * 
G_Marital_Status1 ;
524498    +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
524499    +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 * 
G_Marital_Status1 ;
524500    +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
524501    +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
524502    +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
524503    +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
524504    +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
524505    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
524506    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
524507    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
524508    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
524509    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
524510    +END;
MPRINT(EM_DIAGRAM):   END;
524511    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
524512    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
524513    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
524514    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
524515    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
524516    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
524517    +END;
MPRINT(EM_DIAGRAM):   END;
524518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524519    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
524520    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524521    +
524522    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
524523    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
524524    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
524525    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
524526    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
524527    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
524528    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
524529    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
524530    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
524531    +end;
MPRINT(EM_DIAGRAM):   end;
524532    +else do;
MPRINT(EM_DIAGRAM):   else do;
524533    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
524534    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
524535    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
524536    +   end;
MPRINT(EM_DIAGRAM):   end;
524537    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
524538    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
524539    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
524540    +   end;
MPRINT(EM_DIAGRAM):   end;
524541    +   else do;
MPRINT(EM_DIAGRAM):   else do;
524542    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
524543    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
524544    +   end;
MPRINT(EM_DIAGRAM):   end;
524545    +end;
MPRINT(EM_DIAGRAM):   end;
524546    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
524547    +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
524548    +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
524549    +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 + 
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
524550    +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
524551    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
524552    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
524553    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
524554    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
524555    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
524556    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
524557    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
524558    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
524559    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
524560    +END;
MPRINT(EM_DIAGRAM):   END;
524561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
524562    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
524563    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
524564    +END;
MPRINT(EM_DIAGRAM):   END;
524565    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
524566    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
524567    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
524568    +END;
MPRINT(EM_DIAGRAM):   END;
524569    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
524570    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
524571    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
524572    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
524573    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
524574    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
524575    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
524576    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524577    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
524578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524579    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
524580    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
524581    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
524582    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
524583    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
524584    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
524585    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
524586    +END;
MPRINT(EM_DIAGRAM):   END;
524587    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
524588    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
524589    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
524590    +drop
524591    +H11
524592    +H12
524593    +H13
524594    +H14
524595    +H15
524596    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
524597    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
524598     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
524599     quit;
524600     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
524601     filename emflow
524601   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural27: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
524602     *------------------------------------------------------------*;
524603     * Neural27: Scoring VALIDATE data;
524604     *------------------------------------------------------------*;
524605     data EMWS8.Neural27_VALIDATE
524606     / view=EMWS8.Neural27_VALIDATE
524607     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_VALIDATE / view=EMWS8.Neural27_VALIDATE ;
524608     set EMWS8.Varsel_VALIDATE
524609     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
524610     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas.
524611    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
524612    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
524613    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
524614    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
524615    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
524616    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
524617    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
524618    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
524619    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
524620    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
524621    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
524622    +LENGTH _WARN_ $4
524623    +      F_DepVar  $ 12
524624    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
524625    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
524626    +
524627    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
524628    +
524629    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
524630    +
524631    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
524632    +
524633    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
524634    +
524635    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
524636    +
524637    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
524638    +
524639    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
524640    +
524641    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
524642    +
524643    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
524644    +
524645    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
524646    +
524647    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
524648    +
524649    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
524650    +
524651    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
524652    +
524653    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
524654    +
524655    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
524656    +
524657    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
524658    +
524659    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
524660    +
524661    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
524662    +
524663    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
524664    +
524665    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
524666    +
524667    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
524668    +
524669    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
524670    +
524671    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
524672    +
524673    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
524674    +
524675    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
524676    +
524677    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
524678    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
524679    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
524680    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
524681    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
524682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
524683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
524684    +end;
MPRINT(EM_DIAGRAM):   end;
524685    +else do;
MPRINT(EM_DIAGRAM):   else do;
524686    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
524687    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
524688    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
524689    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
524690    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
524691    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
524692    +   end;
MPRINT(EM_DIAGRAM):   end;
524693    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
524694    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
524695    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
524696    +   end;
MPRINT(EM_DIAGRAM):   end;
524697    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
524698    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
524699    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
524700    +   end;
MPRINT(EM_DIAGRAM):   end;
524701    +   else do;
MPRINT(EM_DIAGRAM):   else do;
524702    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
524703    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
524704    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
524705    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
524706    +   end;
MPRINT(EM_DIAGRAM):   end;
524707    +end;
MPRINT(EM_DIAGRAM):   end;
524708    +
524709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524710    +*** Checking missing input Interval
524711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
524712    +
524713    +IF NMISS(
524714    +   AcceptedCmpTotal ,
524715    +   Frq ,
524716    +   Income ,
524717    +   Mnt ,
524718    +   MntGoldProds ,
524719    +   MntMeatProducts ,
524720    +   MntWines ,
524721    +   NumDistPurchases ,
524722    +   RFMstat ,
524723    +   RMntFrq ,
524724    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
524725    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
524726    +
524727    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
524728    +END;
MPRINT(EM_DIAGRAM):   END;
524729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524730    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
524731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524732    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
524733    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
524734    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
524735    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
524736    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
524737    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
524738    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
524739    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
524740    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
524741    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
524742    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
524743    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
524744    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
524745    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
524746    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
524747    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
524748    +END;
MPRINT(EM_DIAGRAM):   END;
524749    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
524750    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
524751    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
524752    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
524753    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
524754    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
524755    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
524756    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
524757    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
524758    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
524759    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
524760    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
524761    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
524762    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
524763    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
524764    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
524765    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
524766    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
524767    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
524768    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
524769    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
524770    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
524771    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
524772    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
524773    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
524774    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
524775    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
524776    +END;
MPRINT(EM_DIAGRAM):   END;
524777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524778    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
524779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524781    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
524782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524783    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
524784    +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
524785    +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
524786    +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
524787    +          +      0.5764056033267 * S_MntMeatProducts
524788    +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
524789    +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
524790    +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
524791    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq 
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds 
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 * 
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq + 
-0.66847972845367 * S_Recency ;
524792    +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
524793    +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
524794    +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
524795    +          +      0.5452732097143 * S_MntMeatProducts
524796    +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
524797    +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
524798    +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
524799    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq 
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds 
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 * 
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq + 
-0.36679237964697 * S_Recency ;
524800    +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
524801    +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
524802    +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
524803    +          +     -0.9040019705776 * S_MntMeatProducts
524804    +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
524805    +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
524806    +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
524807    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq 
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds 
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 * 
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq + 
0.36876094021551 * S_Recency ;
524808    +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
524809    +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
524810    +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
524811    +          +     1.04227983605332 * S_MntMeatProducts
524812    +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
524813    +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
524814    +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
524815    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq 
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 * 
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines + 
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 * 
S_RMntFrq + -0.00929531662146 * S_Recency ;
524816    +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
524817    +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
524818    +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
524819    +          +     0.23454153115636 * S_MntMeatProducts
524820    +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
524821    +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
524822    +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
524823    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq + 
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds + 
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 * 
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq + 
0.62117853933635 * S_Recency ;
524824    +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
524825    +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 * 
G_Marital_Status1 ;
524826    +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
524827    +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 * 
G_Marital_Status1 ;
524828    +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
524829    +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 * 
G_Marital_Status1 ;
524830    +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
524831    +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 * 
G_Marital_Status1 ;
524832    +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
524833    +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 * 
G_Marital_Status1 ;
524834    +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
524835    +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
524836    +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
524837    +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
524838    +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
524839    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
524840    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
524841    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
524842    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
524843    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
524844    +END;
MPRINT(EM_DIAGRAM):   END;
524845    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
524846    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
524847    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
524848    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
524849    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
524850    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
524851    +END;
MPRINT(EM_DIAGRAM):   END;
524852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524853    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
524854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524855    +
524856    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
524857    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
524858    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
524859    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
524860    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
524861    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
524862    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
524863    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
524864    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
524865    +end;
MPRINT(EM_DIAGRAM):   end;
524866    +else do;
MPRINT(EM_DIAGRAM):   else do;
524867    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
524868    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
524869    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
524870    +   end;
MPRINT(EM_DIAGRAM):   end;
524871    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
524872    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
524873    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
524874    +   end;
MPRINT(EM_DIAGRAM):   end;
524875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
524876    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
524877    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
524878    +   end;
MPRINT(EM_DIAGRAM):   end;
524879    +end;
MPRINT(EM_DIAGRAM):   end;
524880    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
524881    +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
524882    +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
524883    +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 + 
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
524884    +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
524885    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
524886    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
524887    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
524888    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
524889    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
524890    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
524891    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
524892    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
524893    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
524894    +END;
MPRINT(EM_DIAGRAM):   END;
524895    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
524896    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
524897    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
524898    +END;
MPRINT(EM_DIAGRAM):   END;
524899    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
524900    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
524901    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
524902    +END;
MPRINT(EM_DIAGRAM):   END;
524903    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
524904    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
524905    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
524906    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
524907    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
524908    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
524909    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
524910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524911    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
524912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
524913    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
524914    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
524915    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
524916    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
524917    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
524918    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
524919    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
524920    +END;
MPRINT(EM_DIAGRAM):   END;
524921    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
524922    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
524923    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
524924    +drop
524925    +H11
524926    +H12
524927    +H13
524928    +H14
524929    +H15
524930    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
524931    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
524932     run;

The SAS System

NOTE: DATA STEP view saved on file EMWS8.NEURAL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
524933     quit;
524934     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
524935     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
524936     * Neural27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural27: Computing metadata for TRAIN data;
524937     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL27_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural27_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural27_TRAIN out=WORK.M25YI93J noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M25YI93J;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M25YI93J(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M25YI93J;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M25YI93J;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M28OFP10 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MC82UU(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   set WORK.M28OFP10;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
525249     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
525250     set EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_EMINFO;
525251     where DATA='Neural27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
525252     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL27_EMINFO.
      WHERE (DATA='Neural27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

525253     data EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural27_EMINFO;
525254     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
525255     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
525256     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
525260     run;
525261     data EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_EMINFO;
525262     set EMWS8.Neural27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_EMINFO WORK.MODELTEMP_INFO;
525263     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

525264     proc sort data = EMWS8.Neural27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural27_EMINFO NOTHREADS;
525265     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
525266     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL27_EMINFO.
NOTE: The data set EMWS8.NEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

525267     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
525268     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
525269     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

525270     proc sort data = EMWS8.Neural27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
525271     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
525272     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

525273     data EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_EMINFO;
525274     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
525275     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
525276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

525277     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
525278     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
525279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
525280     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL27_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL27_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
