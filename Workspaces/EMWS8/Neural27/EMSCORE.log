MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.08 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.08 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3DRL_DB 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3DRL_DB new;
MPRINT(EM_DIAGRAM):   run;
370922     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
370923     set EMWS8.Neural27_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_OUTKEY;
370924     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
370925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set EMWS8.NEURAL27_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

370926     filename emflow
370926   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural27: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
370927     *------------------------------------------------------------*;
370928     * Neural27: Scoring DATA data;
370929     *------------------------------------------------------------*;
370930     data EMWS8.Neural27_TRAIN
370931     / view=EMWS8.Neural27_TRAIN
370932     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_TRAIN / view=EMWS8.Neural27_TRAIN ;
370933     set EMWS8.Varsel_TRAIN
370934     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
370935     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas.
370936    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
370937    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
370938    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
370939    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
370940    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
370941    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
370942    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
370943    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
370944    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
370945    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
370946    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
370947    +LENGTH _WARN_ $4
370948    +      F_DepVar  $ 12
370949    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
370950    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
370951    +
370952    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
370953    +
370954    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
370955    +
370956    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
370957    +
370958    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
370959    +
370960    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
370961    +
370962    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
370963    +
370964    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
370965    +
370966    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
370967    +
370968    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
370969    +
370970    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
370971    +
370972    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
370973    +
370974    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
370975    +
370976    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
370977    +
370978    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
370979    +
370980    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
370981    +
370982    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
370983    +
370984    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
370985    +
370986    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
370987    +
370988    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370989    +*** Checking missing input Interval
370990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
370991    +
370992    +IF NMISS(
370993    +   AcceptedCmpTotal ,
370994    +   Mnt ,
370995    +   MntMeatProducts ,
370996    +   NumCatalogPurchases ,
370997    +   RFMstat ,
370998    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
370999    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
371000    +
371001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371002    +END;
MPRINT(EM_DIAGRAM):   END;
371003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371004    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
371005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371006    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371007    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371008    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
371009    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371010    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371011    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
371012    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
371013    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
371014    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371015    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371016    +END;
MPRINT(EM_DIAGRAM):   END;
371017    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371018    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
371019    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371020    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
371021    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
371022    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371023    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
371024    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371025    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
371026    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
371027    +   ELSE S_NumCatalogPurchases
371028    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
371029    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
371030    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
371031    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371032    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
371033    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371034    +END;
MPRINT(EM_DIAGRAM):   END;
371035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371036    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
371037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371038    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371039    +   H11  =    -0.26722164464712 * S_AcceptedCmpTotal  +     0.04075768430183 *
371040    +        S_Mnt  +    -0.14387744951395 * S_MntMeatProducts
371041    +          +    -0.27306285421769 * S_NumCatalogPurchases
371042    +          +    -0.08264228402157 * S_RFMstat  +     0.65480854062399 *
371043    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.26722164464712 * S_AcceptedCmpTotal + 0.04075768430183 * S_Mnt 
+ -0.14387744951395 * S_MntMeatProducts + -0.27306285421769 * S_NumCatalogPurchases + 
-0.08264228402157 * S_RFMstat + 0.65480854062399 * S_Recency ;
371044    +   H12  =    -0.75351416084046 * S_AcceptedCmpTotal  +     0.52277401008012 *
371045    +        S_Mnt  +    -0.54516413990982 * S_MntMeatProducts
371046    +          +     -0.0686127004799 * S_NumCatalogPurchases
371047    +          +     0.08512116766951 * S_RFMstat  +     0.81359799950451 *
371048    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.75351416084046 * S_AcceptedCmpTotal + 0.52277401008012 * S_Mnt 
+ -0.54516413990982 * S_MntMeatProducts + -0.0686127004799 * S_NumCatalogPurchases + 
0.08512116766951 * S_RFMstat + 0.81359799950451 * S_Recency ;
371049    +   H13  =     0.02955098348281 * S_AcceptedCmpTotal  +    -0.14081493335567 *
371050    +        S_Mnt  +    -2.75813103631938 * S_MntMeatProducts
371051    +          +    -0.74712508136294 * S_NumCatalogPurchases
371052    +          +    -0.79352948307239 * S_RFMstat  +     0.03918291142705 *
371053    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.02955098348281 * S_AcceptedCmpTotal + -0.14081493335567 * S_Mnt 
+ -2.75813103631938 * S_MntMeatProducts + -0.74712508136294 * S_NumCatalogPurchases + 
-0.79352948307239 * S_RFMstat + 0.03918291142705 * S_Recency ;
371054    +   H14  =     0.75907858324573 * S_AcceptedCmpTotal  +     1.38211517497076 *
371055    +        S_Mnt  +     1.18060955375477 * S_MntMeatProducts
371056    +          +    -0.37728172570087 * S_NumCatalogPurchases
371057    +          +    -2.76202813274234 * S_RFMstat  +    -0.15842857977636 *
371058    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.75907858324573 * S_AcceptedCmpTotal + 1.38211517497076 * S_Mnt + 
1.18060955375477 * S_MntMeatProducts + -0.37728172570087 * S_NumCatalogPurchases + 
-2.76202813274234 * S_RFMstat + -0.15842857977636 * S_Recency ;
371059    +   H15  =    -0.16016600226913 * S_AcceptedCmpTotal  +     2.47052363890196 *
371060    +        S_Mnt  +    -0.91872569099803 * S_MntMeatProducts
371061    +          +    -0.10767997671599 * S_NumCatalogPurchases
371062    +          +     0.11268223210579 * S_RFMstat  +     0.08646017290432 *
371063    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.16016600226913 * S_AcceptedCmpTotal + 2.47052363890196 * S_Mnt 
+ -0.91872569099803 * S_MntMeatProducts + -0.10767997671599 * S_NumCatalogPurchases + 
0.11268223210579 * S_RFMstat + 0.08646017290432 * S_Recency ;
371064    +   H11  =     1.70904496773549 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.70904496773549 + H11 ;
371065    +   H12  =    -0.75066885844141 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75066885844141 + H12 ;
371066    +   H13  =    -3.06547429791923 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.06547429791923 + H13 ;
371067    +   H14  =    -0.30791973300056 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.30791973300056 + H14 ;
371068    +   H15  =     1.39876187284436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.39876187284436 + H15 ;
371069    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
371070    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
371071    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
371072    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
371073    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
371074    +END;
MPRINT(EM_DIAGRAM):   END;
371075    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371076    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
371077    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
371078    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
371079    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
371080    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
371081    +END;
MPRINT(EM_DIAGRAM):   END;
371082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371083    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
371084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371085    +
371086    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
371087    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
371088    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
371089    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
371090    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
371091    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371092    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
371093    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371094    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371095    +end;
MPRINT(EM_DIAGRAM):   end;
371096    +else do;
MPRINT(EM_DIAGRAM):   else do;
371097    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
371098    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
371099    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
371100    +   end;
MPRINT(EM_DIAGRAM):   end;
371101    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
371102    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
371103    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
371104    +   end;
MPRINT(EM_DIAGRAM):   end;
371105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371106    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371107    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371108    +   end;
MPRINT(EM_DIAGRAM):   end;
371109    +end;
MPRINT(EM_DIAGRAM):   end;
371110    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371111    +   P_DepVar1  =    -4.85125437606138 * H11  +    -2.45566607820423 * H12
371112    +          +    -5.91091097658466 * H13  +     1.06755367873748 * H14
371113    +          +    -5.85018554594302 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.85125437606138 * H11 + -2.45566607820423 * H12 + 
-5.91091097658466 * H13 + 1.06755367873748 * H14 + -5.85018554594302 * H15 ;
371114    +   P_DepVar1  =    -0.91583665378719 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.91583665378719 + P_DepVar1 ;
371115    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
371116    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
371117    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
371118    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
371119    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
371120    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
371121    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
371122    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
371123    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
371124    +END;
MPRINT(EM_DIAGRAM):   END;
371125    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371126    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
371127    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
371128    +END;
MPRINT(EM_DIAGRAM):   END;
371129    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
371130    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
371131    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
371132    +END;
MPRINT(EM_DIAGRAM):   END;
371133    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
371134    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
371135    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
371136    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
371137    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
371138    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
371139    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
371140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371141    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
371142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371143    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
371144    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
371145    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
371146    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
371147    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
371148    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
371149    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
371150    +END;
MPRINT(EM_DIAGRAM):   END;
371151    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371152    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
371153    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371154    +drop
371155    +H11
371156    +H12
371157    +H13
371158    +H14
371159    +H15
371160    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
371161    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371162     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371163     quit;
371164     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
371165     filename emflow
371165   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural27: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371166     *------------------------------------------------------------*;
371167     * Neural27: Scoring VALIDATE data;
371168     *------------------------------------------------------------*;
371169     data EMWS8.Neural27_VALIDATE
371170     / view=EMWS8.Neural27_VALIDATE
371171     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_VALIDATE / view=EMWS8.Neural27_VALIDATE ;
371172     set EMWS8.Varsel_VALIDATE
371173     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
371174     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMFLOWSCORE.sas.
371175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371176    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
371177    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371178    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
371179    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
371180    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
371181    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
371182    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
371183    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
371184    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
371185    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
371186    +LENGTH _WARN_ $4
371187    +      F_DepVar  $ 12
371188    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
371189    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
371190    +
371191    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
371192    +
371193    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
371194    +
371195    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
371196    +
371197    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
371198    +
371199    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
371200    +
371201    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
371202    +
371203    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
371204    +
371205    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
371206    +
371207    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
371208    +
371209    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
371210    +
371211    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
371212    +
371213    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
371214    +
371215    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
371216    +
371217    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
371218    +
371219    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
371220    +
371221    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
371222    +
371223    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
371224    +
371225    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
371226    +
371227    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371228    +*** Checking missing input Interval
371229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
371230    +
371231    +IF NMISS(
371232    +   AcceptedCmpTotal ,
371233    +   Mnt ,
371234    +   MntMeatProducts ,
371235    +   NumCatalogPurchases ,
371236    +   RFMstat ,
371237    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
371238    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
371239    +
371240    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371241    +END;
MPRINT(EM_DIAGRAM):   END;
371242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371243    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
371244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371245    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371246    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371247    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
371248    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371249    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371250    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
371251    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
371252    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
371253    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371254    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371255    +END;
MPRINT(EM_DIAGRAM):   END;
371256    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371257    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
371258    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371259    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
371260    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
371261    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371262    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
371263    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371264    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
371265    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
371266    +   ELSE S_NumCatalogPurchases
371267    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
371268    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
371269    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
371270    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371271    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
371272    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371273    +END;
MPRINT(EM_DIAGRAM):   END;
371274    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371275    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
371276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371277    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371278    +   H11  =    -0.26722164464712 * S_AcceptedCmpTotal  +     0.04075768430183 *
371279    +        S_Mnt  +    -0.14387744951395 * S_MntMeatProducts
371280    +          +    -0.27306285421769 * S_NumCatalogPurchases
371281    +          +    -0.08264228402157 * S_RFMstat  +     0.65480854062399 *
371282    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.26722164464712 * S_AcceptedCmpTotal + 0.04075768430183 * S_Mnt 
+ -0.14387744951395 * S_MntMeatProducts + -0.27306285421769 * S_NumCatalogPurchases + 
-0.08264228402157 * S_RFMstat + 0.65480854062399 * S_Recency ;
371283    +   H12  =    -0.75351416084046 * S_AcceptedCmpTotal  +     0.52277401008012 *
371284    +        S_Mnt  +    -0.54516413990982 * S_MntMeatProducts
371285    +          +     -0.0686127004799 * S_NumCatalogPurchases
371286    +          +     0.08512116766951 * S_RFMstat  +     0.81359799950451 *
371287    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.75351416084046 * S_AcceptedCmpTotal + 0.52277401008012 * S_Mnt 
+ -0.54516413990982 * S_MntMeatProducts + -0.0686127004799 * S_NumCatalogPurchases + 
0.08512116766951 * S_RFMstat + 0.81359799950451 * S_Recency ;
371288    +   H13  =     0.02955098348281 * S_AcceptedCmpTotal  +    -0.14081493335567 *
371289    +        S_Mnt  +    -2.75813103631938 * S_MntMeatProducts
371290    +          +    -0.74712508136294 * S_NumCatalogPurchases
371291    +          +    -0.79352948307239 * S_RFMstat  +     0.03918291142705 *
371292    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.02955098348281 * S_AcceptedCmpTotal + -0.14081493335567 * S_Mnt 
+ -2.75813103631938 * S_MntMeatProducts + -0.74712508136294 * S_NumCatalogPurchases + 
-0.79352948307239 * S_RFMstat + 0.03918291142705 * S_Recency ;
371293    +   H14  =     0.75907858324573 * S_AcceptedCmpTotal  +     1.38211517497076 *
371294    +        S_Mnt  +     1.18060955375477 * S_MntMeatProducts
371295    +          +    -0.37728172570087 * S_NumCatalogPurchases
371296    +          +    -2.76202813274234 * S_RFMstat  +    -0.15842857977636 *
371297    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.75907858324573 * S_AcceptedCmpTotal + 1.38211517497076 * S_Mnt + 
1.18060955375477 * S_MntMeatProducts + -0.37728172570087 * S_NumCatalogPurchases + 
-2.76202813274234 * S_RFMstat + -0.15842857977636 * S_Recency ;
371298    +   H15  =    -0.16016600226913 * S_AcceptedCmpTotal  +     2.47052363890196 *
371299    +        S_Mnt  +    -0.91872569099803 * S_MntMeatProducts
371300    +          +    -0.10767997671599 * S_NumCatalogPurchases
371301    +          +     0.11268223210579 * S_RFMstat  +     0.08646017290432 *
371302    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.16016600226913 * S_AcceptedCmpTotal + 2.47052363890196 * S_Mnt 
+ -0.91872569099803 * S_MntMeatProducts + -0.10767997671599 * S_NumCatalogPurchases + 
0.11268223210579 * S_RFMstat + 0.08646017290432 * S_Recency ;
371303    +   H11  =     1.70904496773549 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.70904496773549 + H11 ;
371304    +   H12  =    -0.75066885844141 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75066885844141 + H12 ;
371305    +   H13  =    -3.06547429791923 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.06547429791923 + H13 ;
371306    +   H14  =    -0.30791973300056 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.30791973300056 + H14 ;
371307    +   H15  =     1.39876187284436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.39876187284436 + H15 ;
371308    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
371309    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
371310    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
371311    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
371312    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
371313    +END;
MPRINT(EM_DIAGRAM):   END;
371314    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371315    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
371316    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
371317    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
371318    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
371319    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
371320    +END;
MPRINT(EM_DIAGRAM):   END;
371321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371322    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
The SAS System

371323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371324    +
371325    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
371326    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
371327    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
371328    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
371329    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
371330    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371331    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
371332    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371333    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371334    +end;
MPRINT(EM_DIAGRAM):   end;
371335    +else do;
MPRINT(EM_DIAGRAM):   else do;
371336    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
371337    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
371338    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
371339    +   end;
MPRINT(EM_DIAGRAM):   end;
371340    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
371341    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
371342    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
371343    +   end;
MPRINT(EM_DIAGRAM):   end;
371344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371345    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371346    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371347    +   end;
MPRINT(EM_DIAGRAM):   end;
371348    +end;
MPRINT(EM_DIAGRAM):   end;
371349    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371350    +   P_DepVar1  =    -4.85125437606138 * H11  +    -2.45566607820423 * H12
371351    +          +    -5.91091097658466 * H13  +     1.06755367873748 * H14
371352    +          +    -5.85018554594302 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.85125437606138 * H11 + -2.45566607820423 * H12 + 
-5.91091097658466 * H13 + 1.06755367873748 * H14 + -5.85018554594302 * H15 ;
371353    +   P_DepVar1  =    -0.91583665378719 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.91583665378719 + P_DepVar1 ;
371354    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
371355    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
371356    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
371357    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
371358    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
371359    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
371360    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
371361    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
371362    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
371363    +END;
MPRINT(EM_DIAGRAM):   END;
371364    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371365    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
371366    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
371367    +END;
MPRINT(EM_DIAGRAM):   END;
371368    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
371369    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
371370    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
371371    +END;
MPRINT(EM_DIAGRAM):   END;
371372    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
371373    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
371374    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
371375    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
371376    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
371377    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
371378    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
371379    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371380    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
371381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371382    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
371383    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
371384    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
371385    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
371386    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
371387    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
371388    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
371389    +END;
MPRINT(EM_DIAGRAM):   END;
371390    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371391    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
371392    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371393    +drop
371394    +H11
371395    +H12
371396    +H13
371397    +H14
371398    +H15
371399    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
371400    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371401     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371402     quit;
371403     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
371404     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
371405     * Neural27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural27: Computing metadata for TRAIN data;
371406     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL27_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural27_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural27_TRAIN out=WORK.M1ZE5E36 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZE5E36;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZE5E36(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZE5E36;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZE5E36;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2Y8R5JV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RWGXTP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Y8R5JV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
371718     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
371719     set EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_EMINFO;
371720     where DATA='Neural27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
371721     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL27_EMINFO.
      WHERE (DATA='Neural27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

371722     data EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural27_EMINFO;
371723     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
371724     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
371725     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
371729     run;
371730     data EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_EMINFO;
371731     set EMWS8.Neural27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_EMINFO WORK.MODELTEMP_INFO;
371732     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371733     proc sort data = EMWS8.Neural27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural27_EMINFO NOTHREADS;
371734     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
371735     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL27_EMINFO.
NOTE: The data set EMWS8.NEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371736     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
371737     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
371738     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371739     proc sort data = EMWS8.Neural27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
371740     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
371741     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

371742     data EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural27_EMINFO;
371743     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
371744     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
371745     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371746     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
371747     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
371748     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
371749     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL27_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL27_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
