MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O15C2Z_F 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O15C2Z_F new;
MPRINT(EM_DIAGRAM):   run;
1945379    filename emflow
1945379  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring NEURAL10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945380    *------------------------------------------------------------*;
1945381    * Ensmbl29: Scoring NEURAL10_TRAIN data;
1945382    *------------------------------------------------------------*;
1945383    data EMWS8.Ensmbl29_TRAIN
1945384    / view=EMWS8.Ensmbl29_TRAIN
1945385    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_TRAIN / view=EMWS8.Ensmbl29_TRAIN ;
1945386    set EMWS8.Neural10_TRAIN
1945387    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_TRAIN ;
1945388    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas.
1945389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945390   +* Ensmbl29: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Combine model for DepVar;
1945391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945392   +* Ensmbl29: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 1 of 10;
1945393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945395   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1945396   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1945397   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1945398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945400   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1945401   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1945402   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1945403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945405   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1945406   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1945407   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1945408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945410   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1945411   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1945412   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1945413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945414   +
1945415   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1945416   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1945416  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1945417   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1945418   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1945419   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1945420   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1945421   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1945422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945423   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1945424   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1945425   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1945426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945428   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1945429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945430   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1945431   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1945432   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1945433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945434   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1945435   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1945436   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1945437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945439   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1945440   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1945441   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1945442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945444   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1945445   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1945446   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1945447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1945448   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1945449   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1945450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1945451   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1945452   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1945453   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1945454   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1945455   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1945456   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1945457   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1945458   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1945459   +LENGTH _WARN_ $4
1945460   +      F_DepVar  $ 12
1945461   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1945462   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1945463   +
1945464   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1945465   +
1945466   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1945467   +
1945468   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1945469   +
1945470   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1945471   +
1945472   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1945473   +
1945474   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1945475   +
1945476   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1945477   +
1945478   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1945479   +
1945480   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1945481   +
1945482   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1945483   +
1945484   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1945485   +
1945486   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1945487   +
1945488   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1945489   +
1945490   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1945491   +
1945492   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1945493   +
1945494   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1945495   +
1945496   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1945497   +
1945498   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1945499   +
1945500   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1945501   +
1945502   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1945503   +
1945504   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1945505   +
1945506   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1945507   +
1945508   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1945509   +
1945510   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1945511   +
1945512   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1945513   +
1945514   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1945515   +
1945516   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1945517   +
1945518   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1945519   +
1945520   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1945521   +
1945522   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1945523   +
1945524   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1945525   +
1945526   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1945527   +
1945528   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1945529   +
1945530   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1945531   +
1945532   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1945533   +
1945534   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1945535   +
1945536   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1945537   +
1945538   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1945539   +
1945540   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1945541   +
1945542   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1945543   +
1945544   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1945545   +
1945546   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1945547   +
1945548   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1945549   +
1945550   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1945551   +
1945552   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1945553   +
1945554   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1945555   +
1945556   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1945557   +
1945558   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1945559   +
1945560   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1945561   +
1945562   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1945563   +
1945564   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1945565   +
1945566   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1945567   +
1945568   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1945569   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1945570   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1945571   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1945572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945574   +end;
MPRINT(EM_DIAGRAM):   end;
1945575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945577   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1945578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945579   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1945580   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1945581   +   end;
MPRINT(EM_DIAGRAM):   end;
1945582   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1945583   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1945584   +   end;
MPRINT(EM_DIAGRAM):   end;
1945585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945586   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1945587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945589   +   end;
MPRINT(EM_DIAGRAM):   end;
1945590   +end;
MPRINT(EM_DIAGRAM):   end;
1945591   +
1945592   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1945593   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1945594   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1945595   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1945596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945598   +end;
MPRINT(EM_DIAGRAM):   end;
1945599   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945601   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1945602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1945604   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1945605   +   end;
MPRINT(EM_DIAGRAM):   end;
1945606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1945607   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1945608   +   end;
MPRINT(EM_DIAGRAM):   end;
1945609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945610   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1945611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945613   +   end;
MPRINT(EM_DIAGRAM):   end;
1945614   +end;
MPRINT(EM_DIAGRAM):   end;
1945615   +
1945616   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1945617   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1945618   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1945619   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1945620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945622   +end;
MPRINT(EM_DIAGRAM):   end;
1945623   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945625   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1945626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1945628   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1945629   +   end;
MPRINT(EM_DIAGRAM):   end;
1945630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1945631   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1945632   +   end;
MPRINT(EM_DIAGRAM):   end;
1945633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945634   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1945635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945637   +   end;
MPRINT(EM_DIAGRAM):   end;
1945638   +end;
MPRINT(EM_DIAGRAM):   end;
1945639   +
1945640   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1945641   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1945642   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1945643   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1945644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945646   +end;
MPRINT(EM_DIAGRAM):   end;
1945647   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945649   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1945650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1945652   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1945653   +   end;
MPRINT(EM_DIAGRAM):   end;
1945654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1945655   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1945656   +   end;
MPRINT(EM_DIAGRAM):   end;
1945657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945658   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1945659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945661   +   end;
MPRINT(EM_DIAGRAM):   end;
1945662   +end;
MPRINT(EM_DIAGRAM):   end;
1945663   +
1945664   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1945665   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1945666   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1945667   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1945668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945670   +end;
MPRINT(EM_DIAGRAM):   end;
1945671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945673   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1945674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1945676   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1945677   +   end;
MPRINT(EM_DIAGRAM):   end;
1945678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1945679   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1945680   +   end;
MPRINT(EM_DIAGRAM):   end;
1945681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945682   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1945683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945685   +   end;
MPRINT(EM_DIAGRAM):   end;
1945686   +end;
MPRINT(EM_DIAGRAM):   end;
1945687   +
1945688   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1945689   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1945690   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1945691   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1945692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945694   +end;
MPRINT(EM_DIAGRAM):   end;
1945695   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945697   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1945698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1945700   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1945701   +   end;
MPRINT(EM_DIAGRAM):   end;
1945702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1945703   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1945704   +   end;
MPRINT(EM_DIAGRAM):   end;
1945705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945706   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1945707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945709   +   end;
MPRINT(EM_DIAGRAM):   end;
1945710   +end;
MPRINT(EM_DIAGRAM):   end;
1945711   +
1945712   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1945713   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1945714   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1945715   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1945716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945718   +end;
MPRINT(EM_DIAGRAM):   end;
1945719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1945721   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1945722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945723   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1945724   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1945725   +   end;
MPRINT(EM_DIAGRAM):   end;
1945726   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1945727   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1945728   +   end;
MPRINT(EM_DIAGRAM):   end;
1945729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945730   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1945731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945733   +   end;
MPRINT(EM_DIAGRAM):   end;
1945734   +end;
MPRINT(EM_DIAGRAM):   end;
1945735   +
1945736   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1945737   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1945738   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1945739   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1945740   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1945741   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1945742   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1945743   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1945744   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1945745   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1945746   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1945747   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1945748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945750   +end;
MPRINT(EM_DIAGRAM):   end;
1945751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945752   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1945753   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1945754   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945755   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1945756   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1945757   +   end;
MPRINT(EM_DIAGRAM):   end;
1945758   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1945759   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1945760   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1945761   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1945762   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1945763   +   end;
MPRINT(EM_DIAGRAM):   end;
1945764   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1945765   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1945766   +   end;
MPRINT(EM_DIAGRAM):   end;
1945767   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1945768   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1945769   +   end;
MPRINT(EM_DIAGRAM):   end;
1945770   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1945771   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1945772   +   end;
MPRINT(EM_DIAGRAM):   end;
1945773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945774   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1945775   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1945776   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1945777   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1945778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945780   +   end;
MPRINT(EM_DIAGRAM):   end;
1945781   +end;
MPRINT(EM_DIAGRAM):   end;
1945782   +
1945783   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1945784   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1945785   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1945786   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1945787   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1945788   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1945789   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1945790   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1945791   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1945792   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1945793   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1945794   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1945795   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1945796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1945797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945798   +end;
MPRINT(EM_DIAGRAM):   end;
1945799   +else do;
MPRINT(EM_DIAGRAM):   else do;
1945800   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1945801   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1945802   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1945803   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1945804   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1945805   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1945806   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1945807   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1945808   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1945809   +         end;
MPRINT(EM_DIAGRAM):   end;
1945810   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1945811   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1945812   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1945813   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1945814   +            end;
MPRINT(EM_DIAGRAM):   end;
1945815   +         end;
MPRINT(EM_DIAGRAM):   end;
1945816   +      end;
MPRINT(EM_DIAGRAM):   end;
1945817   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1945818   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1945819   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1945820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1945821   +         end;
MPRINT(EM_DIAGRAM):   end;
1945822   +      end;
MPRINT(EM_DIAGRAM):   end;
1945823   +   end;
MPRINT(EM_DIAGRAM):   end;
1945824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1945825   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1945826   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1945827   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1945828   +      end;
MPRINT(EM_DIAGRAM):   end;
1945829   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1945830   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1945831   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1945832   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1945833   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1945834   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1945835   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1945836   +         end;
MPRINT(EM_DIAGRAM):   end;
1945837   +      end;
MPRINT(EM_DIAGRAM):   end;
1945838   +   end;
MPRINT(EM_DIAGRAM):   end;
1945839   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1945840   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1945841   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1945842   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1945843   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1945844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1945845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945846   +   end;
MPRINT(EM_DIAGRAM):   end;
1945847   +end;
MPRINT(EM_DIAGRAM):   end;
1945848   +
1945849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945850   +*** Checking missing input Interval
1945851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1945852   +
1945853   +IF NMISS(
1945854   +   AcceptedCmpTotal ,
1945855   +   Age ,
1945856   +   Frq ,
1945857   +   Income ,
1945858   +   Kidhome ,
1945859   +   Mnt ,
1945860   +   MntFishProducts ,
1945861   +   MntFruits ,
1945862   +   MntGoldProds ,
1945863   +   MntMeatProducts ,
1945864   +   MntSweetProducts ,
1945865   +   MntWines ,
1945866   +   MonthsAsCustomer ,
1945867   +   NumCatalogPurchases ,
1945868   +   NumDealsPurchases ,
1945869   +   NumDistPurchases ,
1945870   +   NumStorePurchases ,
1945871   +   NumWebPurchases ,
1945872   +   NumWebVisitsMonth ,
1945873   +   RFMstat ,
1945874   +   RMntFrq ,
1945875   +   Recency ,
1945876   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1945877   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1945878   +
1945879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1945880   +END;
MPRINT(EM_DIAGRAM):   END;
1945881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945882   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1945883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945884   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1945885   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1945886   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1945887   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1945888   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1945889   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1945890   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1945891   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1945892   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1945893   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1945894   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1945895   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1945896   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1945897   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1945898   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1945899   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1945900   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1945901   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1945902   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1945903   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1945904   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1945905   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1945906   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1945907   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1945908   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1945909   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1945910   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1945911   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1945912   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1945913   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1945914   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1945915   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1945916   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1945917   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1945918   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1945919   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1945920   +END;
MPRINT(EM_DIAGRAM):   END;
1945921   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1945922   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1945923   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1945924   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1945925   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1945926   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1945927   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1945928   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1945929   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1945930   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1945931   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1945932   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1945933   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1945934   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1945935   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1945936   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1945937   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1945938   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1945939   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1945940   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1945941   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1945942   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1945943   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1945944   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1945945   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1945946   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1945947   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1945948   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1945949   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1945950   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1945951   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1945952   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1945953   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1945954   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1945955   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1945956   +   ELSE S_NumCatalogPurchases
1945957   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1945958   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1945959   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1945960   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1945961   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1945962   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1945963   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1945964   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1945965   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1945966   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1945967   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1945968   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1945969   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1945970   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1945971   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1945972   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1945973   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1945974   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1945975   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1945976   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1945977   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1945978   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1945979   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1945980   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1945981   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1945982   +END;
MPRINT(EM_DIAGRAM):   END;
1945983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945984   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1945985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945987   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1945988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945990   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1945991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1945992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1945993   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
1945994   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
1945995   +        S_Income  +    -0.43070069114587 * S_Kidhome
1945996   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
1945997   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
1945998   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
1945999   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
1946000   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
1946001   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
1946002   +          +    -0.21858146166244 * S_NumDealsPurchases
1946003   +          +     0.18409991080913 * S_NumDistPurchases
1946004   +          +     0.35683163455594 * S_NumStorePurchases
1946005   +          +     0.24429183714976 * S_NumWebPurchases
1946006   +          +     -0.1263739191616 * S_NumWebVisitsMonth
1946007   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
1946008   +        S_RMntFrq  +      0.3452503815146 * S_Recency
1946009   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
1946010   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
1946011   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
1946012   +        S_Income  +     0.24623934031778 * S_Kidhome
1946013   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
1946014   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
1946015   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
1946016   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
1946017   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
1946018   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
1946019   +          +    -0.08125614129909 * S_NumDealsPurchases
1946020   +          +     0.38003696656333 * S_NumDistPurchases
1946021   +          +     0.22006494588298 * S_NumStorePurchases
1946022   +          +     0.26217639358993 * S_NumWebPurchases
1946023   +          +    -0.56905781005459 * S_NumWebVisitsMonth
1946024   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
1946025   +        S_RMntFrq  +     0.33060213336674 * S_Recency
1946026   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
1946027   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
1946028   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
1946029   +        S_Income  +     0.18597632724783 * S_Kidhome
1946030   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
1946031   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
1946032   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
1946033   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
1946034   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
1946035   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
1946036   +          +     0.08121213946217 * S_NumDealsPurchases
1946037   +          +    -0.04963282234139 * S_NumDistPurchases
1946038   +          +    -0.09521586837775 * S_NumStorePurchases
1946039   +          +     0.00630626523742 * S_NumWebPurchases
1946040   +          +    -0.03891587920939 * S_NumWebVisitsMonth
1946041   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
1946042   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
1946043   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
1946044   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
1946045   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
1946046   +        S_Income  +     0.25356767518099 * S_Kidhome
1946047   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
1946048   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
1946049   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
1946050   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
1946051   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
1946052   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
1946053   +          +     0.83749876944877 * S_NumDealsPurchases
1946054   +          +     0.29636537008068 * S_NumDistPurchases
1946055   +          +    -0.61202052257506 * S_NumStorePurchases
1946056   +          +    -0.96921731415369 * S_NumWebPurchases
1946057   +          +     0.10056455703323 * S_NumWebVisitsMonth
1946058   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
1946059   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
1946060   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
1946061   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
1946062   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
1946063   +        S_Income  +    -0.66239517276633 * S_Kidhome
1946064   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
1946065   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
1946066   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
1946067   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
1946068   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
1946069   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
1946070   +          +     0.63122884753912 * S_NumDealsPurchases
1946071   +          +     0.00285388491049 * S_NumDistPurchases
1946072   +          +    -0.76222252593182 * S_NumStorePurchases
1946073   +          +    -0.71485070772733 * S_NumWebPurchases
1946074   +          +     1.59020450778179 * S_NumWebVisitsMonth
1946075   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
1946076   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
1946077   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
1946078   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
1946079   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
1946080   +        S_Income  +    -0.22662005590555 * S_Kidhome
1946081   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
1946082   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
1946083   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
1946084   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
1946085   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
1946086   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
1946087   +          +    -0.28143084367284 * S_NumDealsPurchases
1946088   +          +     0.09640746756361 * S_NumDistPurchases
1946089   +          +      0.1754994442449 * S_NumStorePurchases
1946090   +          +     0.14321475617403 * S_NumWebPurchases
1946091   +          +     -0.1908048876137 * S_NumWebVisitsMonth
1946092   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
1946093   +        S_RMntFrq  +     0.02280616139018 * S_Recency
1946094   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
1946095   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
1946096   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
1946097   +        S_Income  +    -0.45643247613458 * S_Kidhome
1946098   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
1946099   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
1946100   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
1946101   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
1946102   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
1946103   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
1946104   +          +    -0.14623073736275 * S_NumDealsPurchases
1946105   +          +      0.1591142102614 * S_NumDistPurchases
1946106   +          +     0.10364624011419 * S_NumStorePurchases
1946107   +          +     0.21545343951201 * S_NumWebPurchases
1946108   +          +     0.61096997379603 * S_NumWebVisitsMonth
1946109   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
1946110   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
1946111   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
1946112   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
1946113   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
1946114   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
1946115   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
1946116   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
1946117   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
1946118   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
1946119   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
1946120   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
1946121   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
1946122   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
1946123   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
1946124   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
1946125   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
1946126   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
1946127   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
1946128   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
1946129   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
1946130   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
1946131   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
1946132   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
1946133   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
1946134   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
1946135   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
1946136   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
1946137   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
1946138   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
1946139   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
1946140   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
1946141   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
1946142   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
1946143   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
1946144   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
1946145   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
1946146   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
1946147   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
1946148   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
1946149   +        EducationGraduation  +     0.00389495660452 * EducationMaster
1946150   +          +     0.39856598367829 * Marital_StatusDivorced
1946151   +          +    -0.45922754552461 * Marital_StatusMarried
1946152   +          +     0.41270195301891 * Marital_StatusSingle
1946153   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
1946154   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
1946155   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
1946156   +        EducationGraduation  +      0.2609956614651 * EducationMaster
1946157   +          +     0.12002180366932 * Marital_StatusDivorced
1946158   +          +     0.50693056076018 * Marital_StatusMarried
1946159   +          +    -0.40828651697464 * Marital_StatusSingle
1946160   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
1946161   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
1946162   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
1946163   +        EducationGraduation  +     0.20017847825938 * EducationMaster
1946164   +          +    -0.05075621283629 * Marital_StatusDivorced
1946165   +          +     0.06731276969307 * Marital_StatusMarried
1946166   +          +     0.20458391966582 * Marital_StatusSingle
1946167   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
1946168   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
1946169   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
1946170   +        EducationGraduation  +     0.28829384238085 * EducationMaster
1946171   +          +    -0.37925185401218 * Marital_StatusDivorced
1946172   +          +     0.62971134740586 * Marital_StatusMarried
1946173   +          +    -0.36562351730859 * Marital_StatusSingle
1946174   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
1946175   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
1946176   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
1946177   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
1946178   +          +     0.84382044664305 * Marital_StatusDivorced
1946179   +          +    -0.84062627203871 * Marital_StatusMarried
1946180   +          +     0.74100406031127 * Marital_StatusSingle
1946181   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
1946182   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
1946183   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
1946184   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
1946185   +          +     -0.1195105091383 * Marital_StatusDivorced
1946186   +          +    -0.13486422945269 * Marital_StatusMarried
1946187   +          +     0.33592403429156 * Marital_StatusSingle
1946188   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
1946189   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
1946190   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
1946191   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
1946192   +          +     0.14792293029589 * Marital_StatusDivorced
1946193   +          +    -0.96003393582564 * Marital_StatusMarried
1946194   +          +     0.64637652355384 * Marital_StatusSingle
1946195   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
1946196   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
1946197   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
1946198   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
1946199   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
1946200   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
1946201   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
1946202   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
1946203   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1946204   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1946205   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1946206   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1946207   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1946208   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1946209   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1946210   +END;
MPRINT(EM_DIAGRAM):   END;
1946211   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1946212   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1946213   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1946214   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1946215   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1946216   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1946217   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1946218   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1946219   +END;
MPRINT(EM_DIAGRAM):   END;
1946220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946221   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1946222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946223   +
1946224   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1946225   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1946226   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1946227   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1946228   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1946229   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946230   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1946231   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1946232   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1946233   +end;
MPRINT(EM_DIAGRAM):   end;
1946234   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946235   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1946236   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1946237   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1946238   +   end;
MPRINT(EM_DIAGRAM):   end;
1946239   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1946240   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1946241   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1946242   +   end;
MPRINT(EM_DIAGRAM):   end;
1946243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946244   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1946245   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1946246   +   end;
MPRINT(EM_DIAGRAM):   end;
1946247   +end;
MPRINT(EM_DIAGRAM):   end;
1946248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1946249   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
1946250   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
1946251   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
1946252   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
1946253   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
1946254   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1946255   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1946256   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1946257   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1946258   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1946259   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1946260   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1946261   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1946262   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1946263   +END;
MPRINT(EM_DIAGRAM):   END;
1946264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1946265   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1946266   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1946267   +END;
MPRINT(EM_DIAGRAM):   END;
1946268   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1946269   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1946270   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1946271   +END;
MPRINT(EM_DIAGRAM):   END;
1946272   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1946273   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1946274   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1946275   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1946276   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1946277   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1946278   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1946279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946280   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1946281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946282   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1946283   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1946284   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1946285   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1946286   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1946287   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1946288   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1946289   +END;
MPRINT(EM_DIAGRAM):   END;
1946290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1946291   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1946292   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1946293   +drop
1946294   +H11
1946295   +H12
1946296   +H13
1946297   +H14
1946298   +H15
1946299   +H16
1946300   +H17
1946301   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1946302   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1946303   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1946304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946305   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1946306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946307   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1946308   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1946309   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1946310   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1946311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946312   +* Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
1946313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946314   +length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
1946315   +drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
1946316   +Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
1946317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946318   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1946319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946320   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1946321   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1946322   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1946323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946324   +* Ensmbl29: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 2 of 10;
1946325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946327   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1946328   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1946329   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1946330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1946331   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1946332   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1946333   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1946334   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1946335   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1946336   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1946337   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1946338   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1946339   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1946340   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1946341   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1946342   +LENGTH _WARN_ $4
1946343   +      F_DepVar  $ 12
1946344   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1946345   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1946346   +
1946347   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1946348   +
1946349   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1946350   +
1946351   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1946352   +
1946353   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1946354   +
1946355   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1946356   +
1946357   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1946358   +
1946359   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1946360   +
1946361   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1946362   +
1946363   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1946364   +
1946365   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1946366   +
1946367   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1946368   +
1946369   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1946370   +
1946371   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1946372   +
1946373   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1946374   +
1946375   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1946376   +
1946377   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1946378   +
1946379   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1946380   +
1946381   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1946382   +
1946383   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1946384   +
1946385   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1946386   +
1946387   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1946388   +
1946389   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1946390   +
1946391   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1946392   +
1946393   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1946394   +
1946395   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1946396   +
1946397   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1946398   +
1946399   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1946400   +
1946401   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1946402   +
1946403   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1946404   +
1946405   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1946406   +
1946407   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1946408   +
1946409   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1946410   +
1946411   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1946412   +
1946413   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1946414   +
1946415   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1946416   +
1946417   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1946418   +
1946419   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1946420   +
1946421   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1946422   +
1946423   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1946424   +
1946425   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1946426   +
1946427   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1946428   +
1946429   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1946430   +
1946431   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1946432   +
1946433   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1946434   +
1946435   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1946436   +
1946437   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1946438   +
1946439   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1946440   +
1946441   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1946442   +
1946443   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1946444   +
1946445   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1946446   +
1946447   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1946448   +
1946449   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1946450   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1946451   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1946452   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1946453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946455   +end;
MPRINT(EM_DIAGRAM):   end;
1946456   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946458   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1946459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1946461   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1946462   +   end;
MPRINT(EM_DIAGRAM):   end;
1946463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1946464   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1946465   +   end;
MPRINT(EM_DIAGRAM):   end;
1946466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946467   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1946468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946470   +   end;
MPRINT(EM_DIAGRAM):   end;
1946471   +end;
MPRINT(EM_DIAGRAM):   end;
1946472   +
1946473   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1946474   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1946475   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1946476   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1946477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946479   +end;
MPRINT(EM_DIAGRAM):   end;
1946480   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946482   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1946483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1946485   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1946486   +   end;
MPRINT(EM_DIAGRAM):   end;
1946487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1946488   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1946489   +   end;
MPRINT(EM_DIAGRAM):   end;
1946490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946491   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1946492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946494   +   end;
MPRINT(EM_DIAGRAM):   end;
1946495   +end;
MPRINT(EM_DIAGRAM):   end;
1946496   +
1946497   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1946498   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1946499   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1946500   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1946501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946503   +end;
MPRINT(EM_DIAGRAM):   end;
1946504   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946506   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1946507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946508   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1946509   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1946510   +   end;
MPRINT(EM_DIAGRAM):   end;
1946511   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1946512   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1946513   +   end;
MPRINT(EM_DIAGRAM):   end;
1946514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946515   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1946516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946518   +   end;
MPRINT(EM_DIAGRAM):   end;
1946519   +end;
MPRINT(EM_DIAGRAM):   end;
1946520   +
1946521   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1946522   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1946523   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1946524   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1946525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946527   +end;
MPRINT(EM_DIAGRAM):   end;
1946528   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946529   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946530   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1946531   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946532   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1946533   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1946534   +   end;
MPRINT(EM_DIAGRAM):   end;
1946535   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1946536   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1946537   +   end;
MPRINT(EM_DIAGRAM):   end;
1946538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946539   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1946540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946542   +   end;
MPRINT(EM_DIAGRAM):   end;
1946543   +end;
MPRINT(EM_DIAGRAM):   end;
1946544   +
1946545   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1946546   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1946547   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1946548   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1946549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946551   +end;
MPRINT(EM_DIAGRAM):   end;
1946552   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946553   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946554   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1946555   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946556   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1946557   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1946558   +   end;
MPRINT(EM_DIAGRAM):   end;
1946559   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1946560   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1946561   +   end;
MPRINT(EM_DIAGRAM):   end;
1946562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946563   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1946564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946566   +   end;
MPRINT(EM_DIAGRAM):   end;
1946567   +end;
MPRINT(EM_DIAGRAM):   end;
1946568   +
1946569   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1946570   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1946571   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1946572   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1946573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946575   +end;
MPRINT(EM_DIAGRAM):   end;
1946576   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946578   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1946579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946580   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1946581   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1946582   +   end;
MPRINT(EM_DIAGRAM):   end;
1946583   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1946584   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1946585   +   end;
MPRINT(EM_DIAGRAM):   end;
1946586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946587   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1946588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946590   +   end;
MPRINT(EM_DIAGRAM):   end;
1946591   +end;
MPRINT(EM_DIAGRAM):   end;
1946592   +
1946593   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1946594   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1946595   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1946596   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1946597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946599   +end;
MPRINT(EM_DIAGRAM):   end;
1946600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946601   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1946602   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1946603   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946604   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1946605   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1946606   +   end;
MPRINT(EM_DIAGRAM):   end;
1946607   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1946608   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1946609   +   end;
MPRINT(EM_DIAGRAM):   end;
1946610   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946611   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1946612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946614   +   end;
MPRINT(EM_DIAGRAM):   end;
1946615   +end;
MPRINT(EM_DIAGRAM):   end;
1946616   +
1946617   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1946618   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1946619   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1946620   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1946621   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1946622   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1946623   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1946624   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1946625   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1946626   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1946627   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1946628   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1946629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946631   +end;
MPRINT(EM_DIAGRAM):   end;
1946632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946633   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1946634   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1946635   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946636   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1946637   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1946638   +   end;
MPRINT(EM_DIAGRAM):   end;
1946639   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1946640   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1946641   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1946642   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1946643   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1946644   +   end;
MPRINT(EM_DIAGRAM):   end;
1946645   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1946646   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1946647   +   end;
MPRINT(EM_DIAGRAM):   end;
1946648   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1946649   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1946650   +   end;
MPRINT(EM_DIAGRAM):   end;
1946651   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1946652   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1946653   +   end;
MPRINT(EM_DIAGRAM):   end;
1946654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946655   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1946656   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1946657   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1946658   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1946659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946661   +   end;
MPRINT(EM_DIAGRAM):   end;
1946662   +end;
MPRINT(EM_DIAGRAM):   end;
1946663   +
1946664   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1946665   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1946666   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1946667   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1946668   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1946669   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1946670   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1946671   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1946672   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1946673   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1946674   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1946675   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1946676   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1946677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1946678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946679   +end;
MPRINT(EM_DIAGRAM):   end;
1946680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1946681   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1946682   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1946683   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1946684   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1946685   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1946686   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1946687   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1946688   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1946689   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1946690   +         end;
MPRINT(EM_DIAGRAM):   end;
1946691   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1946692   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1946693   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1946694   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1946695   +            end;
MPRINT(EM_DIAGRAM):   end;
1946696   +         end;
MPRINT(EM_DIAGRAM):   end;
1946697   +      end;
MPRINT(EM_DIAGRAM):   end;
1946698   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1946699   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1946700   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1946701   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1946702   +         end;
MPRINT(EM_DIAGRAM):   end;
1946703   +      end;
MPRINT(EM_DIAGRAM):   end;
1946704   +   end;
MPRINT(EM_DIAGRAM):   end;
1946705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1946706   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1946707   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1946708   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1946709   +      end;
MPRINT(EM_DIAGRAM):   end;
1946710   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1946711   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1946712   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1946713   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1946714   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1946715   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1946716   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1946717   +         end;
MPRINT(EM_DIAGRAM):   end;
1946718   +      end;
MPRINT(EM_DIAGRAM):   end;
1946719   +   end;
MPRINT(EM_DIAGRAM):   end;
1946720   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1946721   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1946722   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1946723   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1946724   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1946725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1946726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946727   +   end;
MPRINT(EM_DIAGRAM):   end;
1946728   +end;
MPRINT(EM_DIAGRAM):   end;
1946729   +
1946730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946731   +*** Checking missing input Interval
1946732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1946733   +
1946734   +IF NMISS(
1946735   +   AcceptedCmpTotal ,
1946736   +   Age ,
1946737   +   Frq ,
1946738   +   Income ,
1946739   +   Kidhome ,
1946740   +   Mnt ,
1946741   +   MntFishProducts ,
1946742   +   MntFruits ,
1946743   +   MntGoldProds ,
1946744   +   MntMeatProducts ,
1946745   +   MntSweetProducts ,
1946746   +   MntWines ,
1946747   +   MonthsAsCustomer ,
1946748   +   NumCatalogPurchases ,
1946749   +   NumDealsPurchases ,
1946750   +   NumDistPurchases ,
1946751   +   NumStorePurchases ,
1946752   +   NumWebPurchases ,
1946753   +   NumWebVisitsMonth ,
1946754   +   RFMstat ,
1946755   +   RMntFrq ,
1946756   +   Recency ,
1946757   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1946758   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1946759   +
1946760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1946761   +END;
MPRINT(EM_DIAGRAM):   END;
1946762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946763   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1946764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946765   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1946766   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1946767   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1946768   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1946769   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1946770   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1946771   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1946772   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1946773   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1946774   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1946775   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1946776   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1946777   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1946778   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1946779   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1946780   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1946781   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1946782   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1946783   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1946784   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1946785   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1946786   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1946787   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1946788   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1946789   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1946790   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1946791   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1946792   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1946793   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1946794   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1946795   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1946796   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1946797   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1946798   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1946799   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1946800   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1946801   +END;
MPRINT(EM_DIAGRAM):   END;
1946802   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1946803   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1946804   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1946805   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1946806   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1946807   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1946808   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1946809   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1946810   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1946811   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1946812   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1946813   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1946814   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1946815   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1946816   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1946817   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1946818   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1946819   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1946820   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1946821   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1946822   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1946823   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1946824   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1946825   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1946826   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1946827   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1946828   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1946829   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1946830   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1946831   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1946832   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1946833   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1946834   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1946835   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1946836   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1946837   +   ELSE S_NumCatalogPurchases
1946838   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1946839   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1946840   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1946841   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1946842   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1946843   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1946844   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1946845   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1946846   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1946847   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1946848   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1946849   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1946850   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1946851   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1946852   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1946853   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1946854   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1946855   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1946856   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1946857   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1946858   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1946859   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1946860   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1946861   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1946862   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1946863   +END;
MPRINT(EM_DIAGRAM):   END;
1946864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946865   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1946866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946868   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1946869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946871   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1946872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1946873   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1946874   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1946875   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1946876   +        S_Income  +    -0.14142658616971 * S_Kidhome
1946877   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1946878   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1946879   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1946880   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1946881   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1946882   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1946883   +          +     0.96837841774168 * S_NumDealsPurchases
1946884   +          +      0.2846105381881 * S_NumDistPurchases
1946885   +          +    -0.69514041792943 * S_NumStorePurchases
1946886   +          +    -0.96425407351749 * S_NumWebPurchases
1946887   +          +     0.79545449599683 * S_NumWebVisitsMonth
1946888   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1946889   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1946890   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1946891   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1946892   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1946893   +        S_Income  +    -0.55432195959203 * S_Kidhome
1946894   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1946895   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1946896   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1946897   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1946898   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1946899   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1946900   +          +      0.2190184330724 * S_NumDealsPurchases
1946901   +          +    -0.01682909442896 * S_NumDistPurchases
1946902   +          +    -0.70244951048552 * S_NumStorePurchases
1946903   +          +     -0.3057457659316 * S_NumWebPurchases
1946904   +          +     0.95928538762715 * S_NumWebVisitsMonth
1946905   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1946906   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1946907   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1946908   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1946909   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1946910   +        S_Income  +    -0.06354861159882 * S_Kidhome
1946911   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1946912   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1946913   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1946914   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1946915   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1946916   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1946917   +          +    -0.21394230159696 * S_NumDealsPurchases
1946918   +          +    -0.23833771124663 * S_NumDistPurchases
1946919   +          +     0.45832031017813 * S_NumStorePurchases
1946920   +          +    -0.30226952040179 * S_NumWebPurchases
1946921   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1946922   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1946923   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1946924   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
1946925   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1946926   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1946927   +        S_Income  +    -0.04839586846715 * S_Kidhome
1946928   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1946929   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1946930   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1946931   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1946932   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1946933   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1946934   +          +    -0.43749647771198 * S_NumDealsPurchases
1946935   +          +     0.21263473847472 * S_NumDistPurchases
1946936   +          +     0.26102168039141 * S_NumStorePurchases
1946937   +          +     0.54921725943657 * S_NumWebPurchases
1946938   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1946939   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1946940   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1946941   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1946942   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1946943   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1946944   +        S_Income  +     0.71499527198653 * S_Kidhome
1946945   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1946946   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1946947   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1946948   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1946949   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1946950   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1946951   +          +     0.09436067776126 * S_NumDealsPurchases
1946952   +          +    -0.02824201859641 * S_NumDistPurchases
1946953   +          +    -0.06770433780564 * S_NumStorePurchases
1946954   +          +    -0.07177620319715 * S_NumWebPurchases
1946955   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1946956   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1946957   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1946958   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1946959   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1946960   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1946961   +        S_Income  +    -0.63474522042341 * S_Kidhome
1946962   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1946963   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1946964   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1946965   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1946966   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1946967   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1946968   +          +    -0.51154511343396 * S_NumDealsPurchases
1946969   +          +    -0.52422915823572 * S_NumDistPurchases
1946970   +          +     0.30305498422357 * S_NumStorePurchases
1946971   +          +     0.12197321559338 * S_NumWebPurchases
1946972   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1946973   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1946974   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1946975   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1946976   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1946977   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1946978   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1946979   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1946980   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
1946981   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1946982   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1946983   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1946984   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1946985   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
1946986   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1946987   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1946988   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1946989   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1946990   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
1946991   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1946992   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1946993   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1946994   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1946995   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
1946996   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1946997   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1946998   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1946999   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1947000   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
1947001   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1947002   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1947003   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1947004   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1947005   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
1947006   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1947007   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1947008   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1947009   +          +     0.10234616400375 * Marital_StatusDivorced
1947010   +          +     0.27961650739075 * Marital_StatusMarried
1947011   +          +    -0.40239488723767 * Marital_StatusSingle
1947012   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1947013   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1947014   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1947015   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1947016   +          +     0.46385792428023 * Marital_StatusDivorced
1947017   +          +    -0.62344590646391 * Marital_StatusMarried
1947018   +          +     0.61767209252062 * Marital_StatusSingle
1947019   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1947020   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1947021   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1947022   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1947023   +          +    -0.07839612590836 * Marital_StatusDivorced
1947024   +          +     0.35316864062221 * Marital_StatusMarried
1947025   +          +    -0.10730136429834 * Marital_StatusSingle
1947026   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1947027   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1947028   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1947029   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1947030   +          +    -0.09942175269886 * Marital_StatusDivorced
1947031   +          +     0.24385460865335 * Marital_StatusMarried
1947032   +          +    -0.33658955096296 * Marital_StatusSingle
1947033   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1947034   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1947035   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1947036   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1947037   +          +    -0.08047852561096 * Marital_StatusDivorced
1947038   +          +     1.16485862694561 * Marital_StatusMarried
1947039   +          +    -0.94140251178566 * Marital_StatusSingle
1947040   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1947041   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1947042   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1947043   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1947044   +          +    -0.16621963893391 * Marital_StatusDivorced
1947045   +          +    -0.44542186297324 * Marital_StatusMarried
1947046   +          +     0.42176133228308 * Marital_StatusSingle
1947047   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1947048   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1947049   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1947050   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1947051   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1947052   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1947053   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1947054   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1947055   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1947056   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1947057   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1947058   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1947059   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1947060   +END;
MPRINT(EM_DIAGRAM):   END;
1947061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1947062   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1947063   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1947064   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1947065   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1947066   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1947067   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1947068   +END;
MPRINT(EM_DIAGRAM):   END;
1947069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947070   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1947071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947072   +
1947073   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1947074   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1947075   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1947076   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1947077   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1947078   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947079   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1947080   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1947081   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1947082   +end;
MPRINT(EM_DIAGRAM):   end;
1947083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947084   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1947085   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1947086   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1947087   +   end;
MPRINT(EM_DIAGRAM):   end;
1947088   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1947089   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1947090   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1947091   +   end;
MPRINT(EM_DIAGRAM):   end;
1947092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947093   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1947094   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1947095   +   end;
MPRINT(EM_DIAGRAM):   end;
1947096   +end;
MPRINT(EM_DIAGRAM):   end;
1947097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1947098   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1947099   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1947100   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
1947101   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1947102   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1947103   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1947104   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1947105   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1947106   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1947107   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1947108   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1947109   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1947110   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1947111   +END;
MPRINT(EM_DIAGRAM):   END;
1947112   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1947113   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1947114   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1947115   +END;
MPRINT(EM_DIAGRAM):   END;
1947116   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1947117   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1947118   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1947119   +END;
MPRINT(EM_DIAGRAM):   END;
1947120   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1947121   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1947122   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1947123   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1947124   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1947125   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1947126   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1947127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947128   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1947129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947130   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1947131   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1947132   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1947133   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1947134   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1947135   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1947136   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1947137   +END;
MPRINT(EM_DIAGRAM):   END;
1947138   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1947139   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1947140   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1947141   +drop
1947142   +H11
1947143   +H12
1947144   +H13
1947145   +H14
1947146   +H15
1947147   +H16
1947148   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1947149   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1947150   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1947151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947152   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1947153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947154   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1947155   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1947156   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1947157   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1947158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947159   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1947160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947161   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1947162   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1947163   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1947164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947165   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1947166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947167   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1947168   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1947169   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1947170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947171   +* Ensmbl29: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 3 of 10;
1947172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947174   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1947175   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1947176   +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
1947177   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947178   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1947179   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1947180   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1947181   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1947182   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1947183   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1947184   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1947185   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1947186   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1947187   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1947188   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1947189   +LENGTH _WARN_ $4
1947190   +      F_DepVar  $ 12
1947191   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1947192   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1947193   +
1947194   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1947195   +
1947196   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1947197   +
1947198   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1947199   +
1947200   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1947201   +
1947202   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1947203   +
1947204   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1947205   +
1947206   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1947207   +
1947208   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1947209   +
1947210   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1947211   +
1947212   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1947213   +
1947214   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1947215   +
1947216   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1947217   +
1947218   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1947219   +
1947220   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1947221   +
1947222   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1947223   +
1947224   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1947225   +
1947226   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1947227   +
1947228   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1947229   +
1947230   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1947231   +
1947232   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1947233   +
1947234   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1947235   +
1947236   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1947237   +
1947238   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1947239   +
1947240   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1947241   +
1947242   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1947243   +
1947244   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1947245   +
1947246   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1947247   +
1947248   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1947249   +
1947250   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1947251   +
1947252   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1947253   +
1947254   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1947255   +
1947256   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1947257   +
1947258   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1947259   +
1947260   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1947261   +
1947262   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1947263   +
1947264   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1947265   +
1947266   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1947267   +
1947268   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1947269   +
1947270   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1947271   +
1947272   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1947273   +
1947274   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1947275   +
1947276   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1947277   +
1947278   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1947279   +
1947280   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1947281   +
1947282   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1947283   +
1947284   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1947285   +
1947286   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1947287   +
1947288   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1947289   +
1947290   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1947291   +
1947292   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1947293   +
1947294   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1947295   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1947296   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1947297   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1947298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947300   +end;
MPRINT(EM_DIAGRAM):   end;
1947301   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947303   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1947304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947305   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1947306   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1947307   +   end;
MPRINT(EM_DIAGRAM):   end;
1947308   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1947309   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1947310   +   end;
MPRINT(EM_DIAGRAM):   end;
1947311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947312   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1947313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947315   +   end;
MPRINT(EM_DIAGRAM):   end;
1947316   +end;
MPRINT(EM_DIAGRAM):   end;
1947317   +
1947318   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1947319   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1947320   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1947321   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1947322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947324   +end;
MPRINT(EM_DIAGRAM):   end;
1947325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947327   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1947328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947329   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1947330   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1947331   +   end;
MPRINT(EM_DIAGRAM):   end;
1947332   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1947333   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1947334   +   end;
MPRINT(EM_DIAGRAM):   end;
1947335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947336   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1947337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947339   +   end;
MPRINT(EM_DIAGRAM):   end;
1947340   +end;
MPRINT(EM_DIAGRAM):   end;
1947341   +
1947342   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1947343   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1947344   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1947345   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1947346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947348   +end;
MPRINT(EM_DIAGRAM):   end;
1947349   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947351   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1947352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947353   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1947354   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1947355   +   end;
MPRINT(EM_DIAGRAM):   end;
1947356   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1947357   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1947358   +   end;
MPRINT(EM_DIAGRAM):   end;
1947359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947360   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1947361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947363   +   end;
MPRINT(EM_DIAGRAM):   end;
1947364   +end;
MPRINT(EM_DIAGRAM):   end;
1947365   +
1947366   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1947367   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1947368   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1947369   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1947370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947372   +end;
MPRINT(EM_DIAGRAM):   end;
1947373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947375   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1947376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1947378   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1947379   +   end;
MPRINT(EM_DIAGRAM):   end;
1947380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1947381   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1947382   +   end;
MPRINT(EM_DIAGRAM):   end;
1947383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947384   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1947385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947387   +   end;
MPRINT(EM_DIAGRAM):   end;
1947388   +end;
MPRINT(EM_DIAGRAM):   end;
1947389   +
The SAS System

1947390   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1947391   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1947392   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1947393   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1947394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947396   +end;
MPRINT(EM_DIAGRAM):   end;
1947397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947399   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1947400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1947402   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1947403   +   end;
MPRINT(EM_DIAGRAM):   end;
1947404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1947405   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1947406   +   end;
MPRINT(EM_DIAGRAM):   end;
1947407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947408   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1947409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947411   +   end;
MPRINT(EM_DIAGRAM):   end;
1947412   +end;
MPRINT(EM_DIAGRAM):   end;
1947413   +
1947414   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1947415   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1947416   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1947417   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1947418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947420   +end;
MPRINT(EM_DIAGRAM):   end;
1947421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947423   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1947424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1947426   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1947427   +   end;
MPRINT(EM_DIAGRAM):   end;
1947428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1947429   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1947430   +   end;
MPRINT(EM_DIAGRAM):   end;
1947431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947432   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1947433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947435   +   end;
MPRINT(EM_DIAGRAM):   end;
1947436   +end;
MPRINT(EM_DIAGRAM):   end;
1947437   +
1947438   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1947439   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1947440   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1947441   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1947442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947444   +end;
MPRINT(EM_DIAGRAM):   end;
1947445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1947447   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1947448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947449   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1947450   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1947451   +   end;
MPRINT(EM_DIAGRAM):   end;
1947452   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1947453   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1947454   +   end;
MPRINT(EM_DIAGRAM):   end;
1947455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947456   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1947457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947459   +   end;
MPRINT(EM_DIAGRAM):   end;
1947460   +end;
MPRINT(EM_DIAGRAM):   end;
1947461   +
1947462   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1947463   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1947464   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1947465   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1947466   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1947467   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1947468   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1947469   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1947470   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1947471   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1947472   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1947473   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1947474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947476   +end;
MPRINT(EM_DIAGRAM):   end;
1947477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947478   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1947479   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1947480   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947481   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1947482   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1947483   +   end;
MPRINT(EM_DIAGRAM):   end;
1947484   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1947485   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1947486   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1947487   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1947488   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1947489   +   end;
MPRINT(EM_DIAGRAM):   end;
1947490   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1947491   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1947492   +   end;
MPRINT(EM_DIAGRAM):   end;
1947493   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1947494   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1947495   +   end;
MPRINT(EM_DIAGRAM):   end;
1947496   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1947497   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1947498   +   end;
MPRINT(EM_DIAGRAM):   end;
1947499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947500   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1947501   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1947502   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1947503   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1947504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947506   +   end;
MPRINT(EM_DIAGRAM):   end;
1947507   +end;
MPRINT(EM_DIAGRAM):   end;
1947508   +
1947509   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1947510   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1947511   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1947512   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1947513   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1947514   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1947515   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1947516   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1947517   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1947518   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1947519   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1947520   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1947521   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1947522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1947523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947524   +end;
MPRINT(EM_DIAGRAM):   end;
1947525   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947526   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1947527   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1947528   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947529   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1947530   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1947531   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1947532   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1947533   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1947534   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1947535   +         end;
MPRINT(EM_DIAGRAM):   end;
1947536   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1947537   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1947538   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1947539   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1947540   +            end;
MPRINT(EM_DIAGRAM):   end;
1947541   +         end;
MPRINT(EM_DIAGRAM):   end;
1947542   +      end;
MPRINT(EM_DIAGRAM):   end;
1947543   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1947544   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1947545   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1947546   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1947547   +         end;
MPRINT(EM_DIAGRAM):   end;
1947548   +      end;
MPRINT(EM_DIAGRAM):   end;
1947549   +   end;
MPRINT(EM_DIAGRAM):   end;
1947550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947551   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1947552   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1947553   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1947554   +      end;
MPRINT(EM_DIAGRAM):   end;
1947555   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1947556   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1947557   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1947558   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1947559   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1947560   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1947561   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1947562   +         end;
MPRINT(EM_DIAGRAM):   end;
1947563   +      end;
MPRINT(EM_DIAGRAM):   end;
1947564   +   end;
MPRINT(EM_DIAGRAM):   end;
1947565   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1947566   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1947567   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1947568   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1947569   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1947570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1947571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947572   +   end;
MPRINT(EM_DIAGRAM):   end;
1947573   +end;
MPRINT(EM_DIAGRAM):   end;
1947574   +
1947575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947576   +*** Checking missing input Interval
1947577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1947578   +
1947579   +IF NMISS(
1947580   +   AcceptedCmpTotal ,
1947581   +   Age ,
1947582   +   Frq ,
1947583   +   Income ,
1947584   +   Kidhome ,
1947585   +   Mnt ,
1947586   +   MntFishProducts ,
1947587   +   MntFruits ,
1947588   +   MntGoldProds ,
1947589   +   MntMeatProducts ,
1947590   +   MntSweetProducts ,
1947591   +   MntWines ,
1947592   +   MonthsAsCustomer ,
1947593   +   NumCatalogPurchases ,
1947594   +   NumDealsPurchases ,
1947595   +   NumDistPurchases ,
1947596   +   NumStorePurchases ,
1947597   +   NumWebPurchases ,
1947598   +   NumWebVisitsMonth ,
1947599   +   RFMstat ,
1947600   +   RMntFrq ,
1947601   +   Recency ,
1947602   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1947603   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1947604   +
1947605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1947606   +END;
MPRINT(EM_DIAGRAM):   END;
1947607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947608   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1947609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947610   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1947611   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1947612   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1947613   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1947614   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1947615   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1947616   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1947617   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1947618   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1947619   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1947620   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1947621   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1947622   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1947623   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1947624   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1947625   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1947626   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1947627   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1947628   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1947629   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1947630   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1947631   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1947632   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1947633   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1947634   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1947635   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1947636   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1947637   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1947638   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1947639   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1947640   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1947641   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1947642   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1947643   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1947644   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1947645   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1947646   +END;
MPRINT(EM_DIAGRAM):   END;
1947647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1947648   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1947649   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1947650   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1947651   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1947652   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1947653   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1947654   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1947655   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1947656   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1947657   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1947658   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1947659   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1947660   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1947661   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1947662   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1947663   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1947664   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1947665   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1947666   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1947667   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1947668   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1947669   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1947670   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1947671   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1947672   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1947673   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1947674   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1947675   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1947676   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1947677   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1947678   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1947679   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1947680   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1947681   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1947682   +   ELSE S_NumCatalogPurchases
1947683   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1947684   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1947685   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1947686   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1947687   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1947688   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1947689   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1947690   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1947691   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1947692   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1947693   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1947694   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1947695   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1947696   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1947697   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1947698   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1947699   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1947700   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1947701   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1947702   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1947703   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1947704   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1947705   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1947706   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1947707   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1947708   +END;
MPRINT(EM_DIAGRAM):   END;
1947709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947710   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1947711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947713   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1947714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947716   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1947717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947718   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1947719   +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
1947720   +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
1947721   +        S_Income  +    -0.32248758927071 * S_Kidhome
1947722   +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
1947723   +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
1947724   +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
1947725   +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
1947726   +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
1947727   +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
1947728   +          +    -0.68207513361313 * S_NumDealsPurchases
1947729   +          +    -0.37964850256921 * S_NumDistPurchases
1947730   +          +     0.36066480603854 * S_NumStorePurchases
1947731   +          +     0.25966011307033 * S_NumWebPurchases
1947732   +          +    -0.03958464718959 * S_NumWebVisitsMonth
1947733   +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
1947734   +        S_RMntFrq  +      0.2807801943237 * S_Recency
1947735   +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
1947736   +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
1947737   +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
1947738   +        S_Income  +    -0.01525271628925 * S_Kidhome
1947739   +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
1947740   +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
1947741   +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
1947742   +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
1947743   +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
1947744   +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
1947745   +          +    -0.05060212016961 * S_NumDealsPurchases
1947746   +          +    -0.14809619066524 * S_NumDistPurchases
1947747   +          +    -0.02428798408125 * S_NumStorePurchases
1947748   +          +     0.05554695337353 * S_NumWebPurchases
1947749   +          +     -0.3347797414912 * S_NumWebVisitsMonth
1947750   +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
1947751   +        S_RMntFrq  +     0.34878481829389 * S_Recency
1947752   +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
1947753   +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
1947754   +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
1947755   +        S_Income  +    -0.05479760920776 * S_Kidhome
1947756   +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
1947757   +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
1947758   +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
1947759   +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
1947760   +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
1947761   +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
1947762   +          +     0.18029447475323 * S_NumDealsPurchases
1947763   +          +     0.05934542805435 * S_NumDistPurchases
1947764   +          +     0.11232970412862 * S_NumStorePurchases
1947765   +          +    -0.10916601726159 * S_NumWebPurchases
1947766   +          +    -0.01910812243665 * S_NumWebVisitsMonth
1947767   +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
1947768   +        S_RMntFrq  +    -0.40799689263706 * S_Recency
1947769   +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
1947770   +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
1947771   +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
1947772   +        S_Income  +     0.31726096463976 * S_Kidhome
1947773   +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
1947774   +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
1947775   +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
1947776   +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
1947777   +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
1947778   +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
1947779   +          +    -0.05889648319294 * S_NumDealsPurchases
1947780   +          +     0.04297768152043 * S_NumDistPurchases
1947781   +          +     0.08289772168464 * S_NumStorePurchases
1947782   +          +     0.02925451736459 * S_NumWebPurchases
1947783   +          +    -0.34806744064693 * S_NumWebVisitsMonth
1947784   +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
1947785   +        S_RMntFrq  +     0.54567939140523 * S_Recency
1947786   +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
1947787   +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
1947788   +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
1947789   +        S_Income  +     -0.1831746721838 * S_Kidhome
1947790   +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
1947791   +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
1947792   +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
1947793   +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
1947794   +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
1947795   +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
1947796   +          +     0.46814119938755 * S_NumDealsPurchases
1947797   +          +     0.03182241038425 * S_NumDistPurchases
1947798   +          +    -0.51911846047007 * S_NumStorePurchases
1947799   +          +    -0.53954754105242 * S_NumWebPurchases
1947800   +          +     1.07208473057077 * S_NumWebVisitsMonth
1947801   +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
1947802   +        S_RMntFrq  +    -0.95916513053649 * S_Recency
1947803   +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
1947804   +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
1947805   +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
1947806   +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
1947807   +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
1947808   +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
1947809   +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
1947810   +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
1947811   +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
1947812   +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
1947813   +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
1947814   +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
1947815   +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
1947816   +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
1947817   +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
1947818   +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
1947819   +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
1947820   +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
1947821   +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
1947822   +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
1947823   +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
1947824   +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
1947825   +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
1947826   +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
1947827   +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
1947828   +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
1947829   +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
1947830   +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
1947831   +        EducationGraduation  +     0.16905118469563 * EducationMaster
1947832   +          +     0.09920310143649 * Marital_StatusDivorced
1947833   +          +    -0.03469710828426 * Marital_StatusMarried
1947834   +          +     0.04524816569771 * Marital_StatusSingle
1947835   +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
1947836   +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
1947837   +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
1947838   +        EducationGraduation  +     0.14755035027548 * EducationMaster
1947839   +          +     0.15544361606364 * Marital_StatusDivorced
1947840   +          +    -0.04549024479337 * Marital_StatusMarried
1947841   +          +    -0.22192209058914 * Marital_StatusSingle
1947842   +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
1947843   +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
1947844   +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
1947845   +        EducationGraduation  +    -0.10472711185558 * EducationMaster
1947846   +          +     0.06080683366118 * Marital_StatusDivorced
1947847   +          +    -0.29971612034722 * Marital_StatusMarried
1947848   +          +    -0.28960939443613 * Marital_StatusSingle
1947849   +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
1947850   +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
1947851   +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
1947852   +        EducationGraduation  +    -0.19451337075589 * EducationMaster
1947853   +          +    -0.27877133922419 * Marital_StatusDivorced
1947854   +          +     0.25867038797563 * Marital_StatusMarried
1947855   +          +    -0.17854477297284 * Marital_StatusSingle
1947856   +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
1947857   +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
1947858   +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
1947859   +        EducationGraduation  +    -0.05191600320717 * EducationMaster
1947860   +          +     0.30169513410559 * Marital_StatusDivorced
1947861   +          +    -0.33752566748869 * Marital_StatusMarried
1947862   +          +     0.43876556032036 * Marital_StatusSingle
1947863   +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
1947864   +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
1947865   +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
1947866   +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
1947867   +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
1947868   +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
1947869   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1947870   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1947871   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1947872   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1947873   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1947874   +END;
MPRINT(EM_DIAGRAM):   END;
1947875   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1947876   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1947877   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1947878   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1947879   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1947880   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1947881   +END;
MPRINT(EM_DIAGRAM):   END;
1947882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947883   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1947884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947885   +
1947886   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1947887   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1947888   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1947889   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1947890   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1947891   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1947892   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1947893   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1947894   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1947895   +end;
MPRINT(EM_DIAGRAM):   end;
1947896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1947897   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1947898   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1947899   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1947900   +   end;
MPRINT(EM_DIAGRAM):   end;
1947901   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1947902   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1947903   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1947904   +   end;
MPRINT(EM_DIAGRAM):   end;
1947905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1947906   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1947907   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1947908   +   end;
MPRINT(EM_DIAGRAM):   end;
1947909   +end;
MPRINT(EM_DIAGRAM):   end;
1947910   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1947911   +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
1947912   +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
1947913   +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
1947914   +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
1947915   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1947916   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1947917   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1947918   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1947919   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1947920   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1947921   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1947922   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1947923   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1947924   +END;
MPRINT(EM_DIAGRAM):   END;
1947925   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1947926   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1947927   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1947928   +END;
MPRINT(EM_DIAGRAM):   END;
1947929   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1947930   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1947931   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1947932   +END;
MPRINT(EM_DIAGRAM):   END;
1947933   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1947934   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1947935   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1947936   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1947937   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1947938   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1947939   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1947940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947941   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1947942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1947943   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1947944   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1947945   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1947946   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1947947   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1947948   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1947949   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1947950   +END;
MPRINT(EM_DIAGRAM):   END;
1947951   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1947952   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1947953   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1947954   +drop
1947955   +H11
1947956   +H12
1947957   +H13
1947958   +H14
1947959   +H15
1947960   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1947961   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1947962   +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
1947963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947964   +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
1947965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947966   +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
1947967   +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
1947968   +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
1947969   +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
1947970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947971   +* Renaming Into variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural7;
1947972   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947973   +length Neural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural7_I_DepVar $32;
1947974   +drop Neural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural7_I_DepVar;
1947975   +Neural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural7_I_DepVar = I_DepVar;
1947976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947977   +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
1947978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947979   +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
1947980   +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
1947981   +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
1947982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947983   +* Ensmbl29: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 4 of 10;
1947984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947986   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1947987   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1947988   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1947989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1947990   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1947991   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1947992   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1947993   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1947994   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1947995   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1947996   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1947997   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1947998   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1947999   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1948000   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1948001   +LENGTH _WARN_ $4
1948002   +      F_DepVar  $ 12
1948003   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1948004   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1948005   +
1948006   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1948007   +
1948008   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1948009   +
1948010   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1948011   +
1948012   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1948013   +
1948014   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1948015   +
1948016   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1948017   +
1948018   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1948019   +
1948020   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1948021   +
1948022   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1948023   +
1948024   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1948025   +
1948026   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1948027   +
1948028   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1948029   +
1948030   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1948031   +
1948032   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1948033   +
1948034   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1948035   +
1948036   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1948037   +
1948038   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1948039   +
1948040   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1948041   +
1948042   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1948043   +
1948044   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1948045   +
1948046   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1948047   +
1948048   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1948049   +
1948050   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1948051   +
1948052   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1948053   +
1948054   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1948055   +
1948056   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1948057   +
1948058   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1948059   +
1948060   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1948061   +
1948062   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1948063   +
1948064   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1948065   +
1948066   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1948067   +
1948068   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1948069   +
1948070   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1948071   +
1948072   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1948073   +
1948074   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1948075   +
1948076   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1948077   +
1948078   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1948079   +
1948080   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1948081   +
1948082   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1948083   +
1948084   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1948085   +
1948086   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1948087   +
1948088   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1948089   +
1948090   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1948091   +
1948092   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1948093   +
1948094   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1948095   +
1948096   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1948097   +
1948098   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1948099   +
1948100   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1948101   +
1948102   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1948103   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1948104   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1948105   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1948106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948108   +end;
MPRINT(EM_DIAGRAM):   end;
1948109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948111   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1948112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948113   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948114   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1948115   +   end;
MPRINT(EM_DIAGRAM):   end;
1948116   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948117   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1948118   +   end;
MPRINT(EM_DIAGRAM):   end;
1948119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948120   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1948121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948123   +   end;
MPRINT(EM_DIAGRAM):   end;
1948124   +end;
MPRINT(EM_DIAGRAM):   end;
1948125   +
1948126   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1948127   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1948128   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1948129   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1948130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948132   +end;
MPRINT(EM_DIAGRAM):   end;
1948133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948135   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1948136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948138   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1948139   +   end;
MPRINT(EM_DIAGRAM):   end;
1948140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948141   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1948142   +   end;
MPRINT(EM_DIAGRAM):   end;
1948143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948144   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1948145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948147   +   end;
MPRINT(EM_DIAGRAM):   end;
1948148   +end;
MPRINT(EM_DIAGRAM):   end;
1948149   +
1948150   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1948151   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1948152   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1948153   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1948154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948156   +end;
MPRINT(EM_DIAGRAM):   end;
1948157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948159   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1948160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948162   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1948163   +   end;
MPRINT(EM_DIAGRAM):   end;
1948164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948165   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1948166   +   end;
MPRINT(EM_DIAGRAM):   end;
1948167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948168   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1948169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948171   +   end;
MPRINT(EM_DIAGRAM):   end;
1948172   +end;
MPRINT(EM_DIAGRAM):   end;
1948173   +
1948174   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1948175   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1948176   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1948177   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1948178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948180   +end;
MPRINT(EM_DIAGRAM):   end;
1948181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948183   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1948184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948186   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1948187   +   end;
MPRINT(EM_DIAGRAM):   end;
1948188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948189   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1948190   +   end;
MPRINT(EM_DIAGRAM):   end;
1948191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948192   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1948193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948195   +   end;
MPRINT(EM_DIAGRAM):   end;
1948196   +end;
MPRINT(EM_DIAGRAM):   end;
1948197   +
1948198   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1948199   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1948200   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1948201   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1948202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948204   +end;
MPRINT(EM_DIAGRAM):   end;
1948205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948207   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1948208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948210   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1948211   +   end;
MPRINT(EM_DIAGRAM):   end;
1948212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948213   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1948214   +   end;
MPRINT(EM_DIAGRAM):   end;
1948215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948216   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1948217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948219   +   end;
MPRINT(EM_DIAGRAM):   end;
1948220   +end;
MPRINT(EM_DIAGRAM):   end;
1948221   +
1948222   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1948223   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1948224   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1948225   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1948226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948228   +end;
MPRINT(EM_DIAGRAM):   end;
1948229   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948231   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1948232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948234   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1948235   +   end;
MPRINT(EM_DIAGRAM):   end;
1948236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948237   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1948238   +   end;
MPRINT(EM_DIAGRAM):   end;
1948239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948240   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1948241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948243   +   end;
MPRINT(EM_DIAGRAM):   end;
1948244   +end;
MPRINT(EM_DIAGRAM):   end;
1948245   +
1948246   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1948247   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1948248   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1948249   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1948250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948252   +end;
MPRINT(EM_DIAGRAM):   end;
1948253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948254   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948255   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1948256   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948257   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1948258   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1948259   +   end;
MPRINT(EM_DIAGRAM):   end;
1948260   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1948261   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1948262   +   end;
MPRINT(EM_DIAGRAM):   end;
1948263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948264   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1948265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948267   +   end;
MPRINT(EM_DIAGRAM):   end;
1948268   +end;
MPRINT(EM_DIAGRAM):   end;
1948269   +
1948270   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1948271   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1948272   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1948273   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1948274   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1948275   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1948276   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1948277   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1948278   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1948279   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1948280   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1948281   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1948282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948284   +end;
MPRINT(EM_DIAGRAM):   end;
1948285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948286   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1948287   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1948288   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948289   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1948290   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1948291   +   end;
MPRINT(EM_DIAGRAM):   end;
1948292   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1948293   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1948294   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1948295   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1948296   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1948297   +   end;
MPRINT(EM_DIAGRAM):   end;
1948298   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1948299   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1948300   +   end;
MPRINT(EM_DIAGRAM):   end;
1948301   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1948302   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1948303   +   end;
MPRINT(EM_DIAGRAM):   end;
1948304   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1948305   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1948306   +   end;
MPRINT(EM_DIAGRAM):   end;
1948307   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948308   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1948309   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1948310   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1948311   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1948312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948314   +   end;
MPRINT(EM_DIAGRAM):   end;
1948315   +end;
MPRINT(EM_DIAGRAM):   end;
1948316   +
1948317   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1948318   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1948319   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1948320   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1948321   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1948322   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1948323   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1948324   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1948325   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1948326   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1948327   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1948328   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1948329   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1948330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948332   +end;
MPRINT(EM_DIAGRAM):   end;
1948333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948334   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1948335   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1948336   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948337   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1948338   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1948339   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1948340   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1948341   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1948342   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1948343   +         end;
MPRINT(EM_DIAGRAM):   end;
1948344   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1948345   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1948346   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1948347   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1948348   +            end;
MPRINT(EM_DIAGRAM):   end;
1948349   +         end;
MPRINT(EM_DIAGRAM):   end;
1948350   +      end;
MPRINT(EM_DIAGRAM):   end;
1948351   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1948352   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1948353   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1948354   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1948355   +         end;
MPRINT(EM_DIAGRAM):   end;
1948356   +      end;
MPRINT(EM_DIAGRAM):   end;
1948357   +   end;
MPRINT(EM_DIAGRAM):   end;
1948358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948359   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1948360   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1948361   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1948362   +      end;
MPRINT(EM_DIAGRAM):   end;
1948363   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1948364   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1948365   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1948366   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1948367   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1948368   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1948369   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1948370   +         end;
MPRINT(EM_DIAGRAM):   end;
1948371   +      end;
MPRINT(EM_DIAGRAM):   end;
1948372   +   end;
MPRINT(EM_DIAGRAM):   end;
1948373   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1948374   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1948375   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1948376   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1948377   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1948378   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948379   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948380   +   end;
MPRINT(EM_DIAGRAM):   end;
1948381   +end;
MPRINT(EM_DIAGRAM):   end;
1948382   +
1948383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948384   +*** Checking missing input Interval
1948385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1948386   +
1948387   +IF NMISS(
1948388   +   AcceptedCmpTotal ,
1948389   +   Age ,
1948390   +   Frq ,
1948391   +   Income ,
1948392   +   Kidhome ,
1948393   +   Mnt ,
1948394   +   MntFishProducts ,
1948395   +   MntFruits ,
1948396   +   MntGoldProds ,
1948397   +   MntMeatProducts ,
1948398   +   MntSweetProducts ,
1948399   +   MntWines ,
1948400   +   MonthsAsCustomer ,
1948401   +   NumCatalogPurchases ,
1948402   +   NumDealsPurchases ,
1948403   +   NumDistPurchases ,
1948404   +   NumStorePurchases ,
1948405   +   NumWebPurchases ,
1948406   +   NumWebVisitsMonth ,
1948407   +   RFMstat ,
1948408   +   RMntFrq ,
1948409   +   Recency ,
1948410   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1948411   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1948412   +
1948413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948414   +END;
MPRINT(EM_DIAGRAM):   END;
1948415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948416   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1948417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948418   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1948419   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1948420   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1948421   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1948422   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1948423   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1948424   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1948425   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1948426   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1948427   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1948428   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1948429   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1948430   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1948431   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1948432   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1948433   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1948434   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1948435   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1948436   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1948437   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1948438   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1948439   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1948440   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1948441   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1948442   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1948443   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1948444   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1948445   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1948446   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1948447   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1948448   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1948449   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1948450   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1948451   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1948452   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1948453   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1948454   +END;
MPRINT(EM_DIAGRAM):   END;
1948455   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1948456   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1948457   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1948458   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1948459   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1948460   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1948461   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1948462   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1948463   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1948464   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1948465   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1948466   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1948467   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1948468   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1948469   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1948470   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1948471   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1948472   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1948473   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1948474   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1948475   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1948476   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1948477   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1948478   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1948479   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1948480   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1948481   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1948482   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1948483   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1948484   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1948485   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1948486   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1948487   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1948488   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1948489   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1948490   +   ELSE S_NumCatalogPurchases
1948491   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1948492   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1948493   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1948494   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1948495   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1948496   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1948497   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1948498   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1948499   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1948500   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1948501   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1948502   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1948503   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1948504   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1948505   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1948506   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1948507   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1948508   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1948509   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1948510   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1948511   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1948512   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1948513   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1948514   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1948515   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1948516   +END;
MPRINT(EM_DIAGRAM):   END;
1948517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948518   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1948519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948521   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1948522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948524   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1948525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1948527   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1948528   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1948529   +        S_Income  +     0.51123266106809 * S_Kidhome
1948530   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1948531   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1948532   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1948533   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1948534   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1948535   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1948536   +          +     1.34095732961105 * S_NumDealsPurchases
1948537   +          +     0.16605991333252 * S_NumDistPurchases
1948538   +          +    -0.61746267736536 * S_NumStorePurchases
1948539   +          +    -0.61812800689506 * S_NumWebPurchases
1948540   +          +     1.44649145055387 * S_NumWebVisitsMonth
1948541   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1948542   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1948543   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1948544   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1948545   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1948546   +        S_Income  +     0.52295323651199 * S_Kidhome
1948547   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1948548   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1948549   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1948550   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1948551   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1948552   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1948553   +          +    -0.72543332317832 * S_NumDealsPurchases
1948554   +          +    -0.05245472565117 * S_NumDistPurchases
1948555   +          +     1.00667431585298 * S_NumStorePurchases
1948556   +          +     1.02836701470962 * S_NumWebPurchases
1948557   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1948558   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1948559   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1948560   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1948561   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1948562   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1948563   +        S_Income  +     0.58025720116696 * S_Kidhome
1948564   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1948565   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1948566   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1948567   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1948568   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1948569   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1948570   +          +     0.12670438262487 * S_NumDealsPurchases
1948571   +          +    -0.46113523834333 * S_NumDistPurchases
1948572   +          +     0.07074818720567 * S_NumStorePurchases
1948573   +          +    -0.05066645783537 * S_NumWebPurchases
1948574   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1948575   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1948576   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1948577   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1948578   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1948579   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1948580   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1948581   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1948582   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
1948583   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1948584   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1948585   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1948586   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1948587   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
1948588   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1948589   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1948590   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1948591   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1948592   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
1948593   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1948594   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1948595   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1948596   +          +     0.12692950862511 * Marital_StatusDivorced
1948597   +          +     0.10026497666167 * Marital_StatusMarried
1948598   +          +    -0.19893864592813 * Marital_StatusSingle
1948599   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1948600   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1948601   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1948602   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1948603   +          +    -0.16785192490199 * Marital_StatusDivorced
1948604   +          +     0.13153695130362 * Marital_StatusMarried
1948605   +          +    -0.50411544587104 * Marital_StatusSingle
1948606   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1948607   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1948608   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1948609   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1948610   +          +    -0.62654958087044 * Marital_StatusDivorced
1948611   +          +     1.86250132393341 * Marital_StatusMarried
1948612   +          +    -1.37067556451928 * Marital_StatusSingle
1948613   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1948614   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1948615   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1948616   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1948617   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1948618   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1948619   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1948620   +END;
MPRINT(EM_DIAGRAM):   END;
1948621   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1948622   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1948623   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1948624   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1948625   +END;
MPRINT(EM_DIAGRAM):   END;
1948626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948627   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1948628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948629   +
1948630   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1948631   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1948632   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1948633   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1948634   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1948635   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948636   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1948637   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1948638   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1948639   +end;
MPRINT(EM_DIAGRAM):   end;
1948640   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948641   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1948642   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1948643   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1948644   +   end;
MPRINT(EM_DIAGRAM):   end;
1948645   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1948646   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1948647   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1948648   +   end;
MPRINT(EM_DIAGRAM):   end;
1948649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948650   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1948651   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1948652   +   end;
MPRINT(EM_DIAGRAM):   end;
1948653   +end;
MPRINT(EM_DIAGRAM):   end;
1948654   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1948655   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1948656   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
1948657   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1948658   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1948659   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1948660   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1948661   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1948662   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1948663   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1948664   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1948665   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1948666   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1948667   +END;
MPRINT(EM_DIAGRAM):   END;
1948668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1948669   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1948670   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1948671   +END;
MPRINT(EM_DIAGRAM):   END;
1948672   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1948673   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1948674   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1948675   +END;
MPRINT(EM_DIAGRAM):   END;
1948676   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1948677   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1948678   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1948679   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1948680   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1948681   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1948682   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1948683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948684   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1948685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1948686   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1948687   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1948688   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1948689   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1948690   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1948691   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1948692   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1948693   +END;
MPRINT(EM_DIAGRAM):   END;
1948694   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1948695   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1948696   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1948697   +drop
1948698   +H11
1948699   +H12
1948700   +H13
1948701   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1948702   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1948703   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1948704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948705   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1948706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948707   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1948708   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1948709   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1948710   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1948711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948712   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1948713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948714   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1948715   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1948716   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1948717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948718   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1948719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948720   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1948721   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1948722   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1948723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948724   +* Ensmbl29: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 5 of 10;
1948725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948727   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1948728   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1948729   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1948730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1948731   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1948732   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1948733   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1948734   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1948735   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1948736   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1948737   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1948738   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1948739   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1948740   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1948741   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1948742   +LENGTH _WARN_ $4
1948743   +      F_DepVar  $ 12
1948744   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1948745   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1948746   +
1948747   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1948748   +
1948749   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1948750   +
1948751   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1948752   +
1948753   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1948754   +
1948755   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1948756   +
1948757   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1948758   +
1948759   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1948760   +
1948761   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1948762   +
1948763   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1948764   +
1948765   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1948766   +
1948767   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1948768   +
1948769   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1948770   +
1948771   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1948772   +
1948773   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1948774   +
1948775   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1948776   +
1948777   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1948778   +
1948779   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1948780   +
1948781   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1948782   +
1948783   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1948784   +
1948785   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1948786   +
1948787   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1948788   +
1948789   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1948790   +
1948791   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1948792   +
1948793   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1948794   +
1948795   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1948796   +
1948797   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1948798   +
1948799   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1948800   +
1948801   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1948802   +
1948803   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1948804   +
1948805   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1948806   +
1948807   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1948808   +
1948809   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1948810   +
1948811   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1948812   +
1948813   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1948814   +
1948815   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1948816   +
1948817   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1948818   +
1948819   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1948820   +
1948821   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1948822   +
1948823   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1948824   +
1948825   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1948826   +
1948827   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1948828   +
1948829   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1948830   +
1948831   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1948832   +
1948833   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1948834   +
1948835   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1948836   +
1948837   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1948838   +
1948839   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1948840   +
1948841   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1948842   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1948843   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1948844   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1948845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948847   +end;
MPRINT(EM_DIAGRAM):   end;
1948848   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948850   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1948851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948853   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1948854   +   end;
MPRINT(EM_DIAGRAM):   end;
1948855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948856   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1948857   +   end;
MPRINT(EM_DIAGRAM):   end;
1948858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948859   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1948860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948862   +   end;
MPRINT(EM_DIAGRAM):   end;
1948863   +end;
MPRINT(EM_DIAGRAM):   end;
1948864   +
1948865   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1948866   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1948867   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1948868   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1948869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948871   +end;
MPRINT(EM_DIAGRAM):   end;
1948872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948874   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1948875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948877   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1948878   +   end;
MPRINT(EM_DIAGRAM):   end;
1948879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948880   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1948881   +   end;
MPRINT(EM_DIAGRAM):   end;
1948882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948883   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1948884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948886   +   end;
MPRINT(EM_DIAGRAM):   end;
1948887   +end;
MPRINT(EM_DIAGRAM):   end;
1948888   +
1948889   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1948890   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1948891   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1948892   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1948893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948895   +end;
MPRINT(EM_DIAGRAM):   end;
1948896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948898   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1948899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948900   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948901   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1948902   +   end;
MPRINT(EM_DIAGRAM):   end;
1948903   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948904   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1948905   +   end;
MPRINT(EM_DIAGRAM):   end;
1948906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948907   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1948908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948910   +   end;
MPRINT(EM_DIAGRAM):   end;
1948911   +end;
MPRINT(EM_DIAGRAM):   end;
1948912   +
1948913   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1948914   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1948915   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1948916   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1948917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948919   +end;
MPRINT(EM_DIAGRAM):   end;
1948920   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948922   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1948923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948925   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1948926   +   end;
MPRINT(EM_DIAGRAM):   end;
1948927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948928   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1948929   +   end;
MPRINT(EM_DIAGRAM):   end;
1948930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948931   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1948932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948934   +   end;
MPRINT(EM_DIAGRAM):   end;
1948935   +end;
MPRINT(EM_DIAGRAM):   end;
1948936   +
1948937   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1948938   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1948939   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1948940   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1948941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948943   +end;
MPRINT(EM_DIAGRAM):   end;
1948944   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948946   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1948947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948949   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1948950   +   end;
MPRINT(EM_DIAGRAM):   end;
1948951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948952   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1948953   +   end;
MPRINT(EM_DIAGRAM):   end;
1948954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948955   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1948956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948958   +   end;
MPRINT(EM_DIAGRAM):   end;
1948959   +end;
MPRINT(EM_DIAGRAM):   end;
1948960   +
1948961   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1948962   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1948963   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1948964   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1948965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948967   +end;
MPRINT(EM_DIAGRAM):   end;
1948968   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948970   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1948971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948972   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1948973   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1948974   +   end;
MPRINT(EM_DIAGRAM):   end;
1948975   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1948976   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1948977   +   end;
MPRINT(EM_DIAGRAM):   end;
1948978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1948979   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1948980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1948981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948982   +   end;
MPRINT(EM_DIAGRAM):   end;
1948983   +end;
MPRINT(EM_DIAGRAM):   end;
1948984   +
1948985   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1948986   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1948987   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1948988   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1948989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1948990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1948991   +end;
MPRINT(EM_DIAGRAM):   end;
1948992   +else do;
MPRINT(EM_DIAGRAM):   else do;
1948993   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1948994   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1948995   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1948996   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1948997   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1948998   +   end;
MPRINT(EM_DIAGRAM):   end;
1948999   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1949000   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1949001   +   end;
MPRINT(EM_DIAGRAM):   end;
1949002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949003   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1949004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949006   +   end;
MPRINT(EM_DIAGRAM):   end;
1949007   +end;
MPRINT(EM_DIAGRAM):   end;
1949008   +
1949009   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1949010   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1949011   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1949012   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1949013   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1949014   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1949015   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1949016   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1949017   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1949018   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1949019   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1949020   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1949021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949023   +end;
MPRINT(EM_DIAGRAM):   end;
1949024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949025   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1949026   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1949027   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949028   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1949029   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1949030   +   end;
MPRINT(EM_DIAGRAM):   end;
1949031   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1949032   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1949033   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1949034   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1949035   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1949036   +   end;
MPRINT(EM_DIAGRAM):   end;
1949037   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1949038   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1949039   +   end;
MPRINT(EM_DIAGRAM):   end;
1949040   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1949041   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1949042   +   end;
MPRINT(EM_DIAGRAM):   end;
1949043   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1949044   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1949045   +   end;
MPRINT(EM_DIAGRAM):   end;
1949046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949047   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1949048   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1949049   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1949050   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1949051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949053   +   end;
MPRINT(EM_DIAGRAM):   end;
1949054   +end;
MPRINT(EM_DIAGRAM):   end;
1949055   +
1949056   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1949057   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1949058   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1949059   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1949060   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1949061   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1949062   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1949063   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1949064   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1949065   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1949066   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1949067   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1949068   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1949069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949071   +end;
MPRINT(EM_DIAGRAM):   end;
1949072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949073   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1949074   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1949075   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949076   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1949077   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1949078   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1949079   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1949080   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1949081   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949082   +         end;
MPRINT(EM_DIAGRAM):   end;
1949083   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1949084   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1949085   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1949086   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949087   +            end;
MPRINT(EM_DIAGRAM):   end;
1949088   +         end;
MPRINT(EM_DIAGRAM):   end;
1949089   +      end;
MPRINT(EM_DIAGRAM):   end;
1949090   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1949091   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1949092   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1949093   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949094   +         end;
MPRINT(EM_DIAGRAM):   end;
1949095   +      end;
MPRINT(EM_DIAGRAM):   end;
1949096   +   end;
MPRINT(EM_DIAGRAM):   end;
1949097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949098   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1949099   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1949100   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949101   +      end;
MPRINT(EM_DIAGRAM):   end;
1949102   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1949103   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1949104   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1949105   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1949106   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1949107   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1949108   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949109   +         end;
MPRINT(EM_DIAGRAM):   end;
1949110   +      end;
MPRINT(EM_DIAGRAM):   end;
1949111   +   end;
MPRINT(EM_DIAGRAM):   end;
1949112   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1949113   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1949114   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1949115   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1949116   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1949117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949119   +   end;
MPRINT(EM_DIAGRAM):   end;
1949120   +end;
MPRINT(EM_DIAGRAM):   end;
1949121   +
1949122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949123   +*** Checking missing input Interval
1949124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1949125   +
1949126   +IF NMISS(
1949127   +   AcceptedCmpTotal ,
1949128   +   Age ,
1949129   +   Frq ,
1949130   +   Income ,
1949131   +   Kidhome ,
1949132   +   Mnt ,
1949133   +   MntFishProducts ,
1949134   +   MntFruits ,
1949135   +   MntGoldProds ,
1949136   +   MntMeatProducts ,
1949137   +   MntSweetProducts ,
1949138   +   MntWines ,
1949139   +   MonthsAsCustomer ,
1949140   +   NumCatalogPurchases ,
1949141   +   NumDealsPurchases ,
1949142   +   NumDistPurchases ,
1949143   +   NumStorePurchases ,
1949144   +   NumWebPurchases ,
1949145   +   NumWebVisitsMonth ,
1949146   +   RFMstat ,
1949147   +   RMntFrq ,
1949148   +   Recency ,
1949149   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1949150   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1949151   +
1949152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949153   +END;
MPRINT(EM_DIAGRAM):   END;
1949154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949155   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1949156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949157   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1949158   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1949159   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1949160   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1949161   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1949162   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1949163   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1949164   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1949165   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1949166   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1949167   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1949168   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1949169   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1949170   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1949171   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1949172   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1949173   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1949174   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1949175   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1949176   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1949177   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1949178   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1949179   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1949180   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1949181   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1949182   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1949183   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1949184   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1949185   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1949186   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1949187   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1949188   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1949189   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1949190   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1949191   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1949192   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1949193   +END;
MPRINT(EM_DIAGRAM):   END;
1949194   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1949195   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1949196   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1949197   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1949198   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1949199   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1949200   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1949201   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1949202   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1949203   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1949204   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1949205   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1949206   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1949207   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1949208   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1949209   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1949210   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1949211   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1949212   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1949213   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1949214   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1949215   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1949216   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1949217   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1949218   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1949219   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1949220   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1949221   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1949222   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1949223   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1949224   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1949225   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1949226   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1949227   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1949228   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1949229   +   ELSE S_NumCatalogPurchases
1949230   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1949231   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1949232   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1949233   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1949234   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1949235   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1949236   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1949237   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1949238   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1949239   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1949240   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1949241   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1949242   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1949243   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1949244   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1949245   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1949246   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1949247   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1949248   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1949249   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1949250   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1949251   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1949252   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1949253   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1949254   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1949255   +END;
MPRINT(EM_DIAGRAM):   END;
1949256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949257   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1949258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949260   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1949261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949263   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1949264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949265   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1949266   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1949267   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1949268   +        S_Income  +    -1.07615700855274 * S_Kidhome
1949269   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1949270   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1949271   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1949272   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1949273   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1949274   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1949275   +          +      0.3429043319369 * S_NumDealsPurchases
1949276   +          +     0.71313309767469 * S_NumDistPurchases
1949277   +          +     0.06017757740083 * S_NumStorePurchases
1949278   +          +    -0.19817724925068 * S_NumWebPurchases
1949279   +          +     1.34164122205952 * S_NumWebVisitsMonth
1949280   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1949281   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1949282   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1949283   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1949284   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1949285   +        S_Income  +     -0.0027232441092 * S_Kidhome
1949286   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1949287   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1949288   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1949289   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1949290   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1949291   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1949292   +          +      0.4576973746858 * S_NumDealsPurchases
1949293   +          +     0.15590877272659 * S_NumDistPurchases
1949294   +          +    -0.33414539713736 * S_NumStorePurchases
1949295   +          +    -0.39370244666257 * S_NumWebPurchases
1949296   +          +     0.52596714886704 * S_NumWebVisitsMonth
1949297   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1949298   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1949299   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1949300   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1949301   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1949302   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1949303   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1949304   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
1949305   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1949306   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1949307   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1949308   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1949309   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
1949310   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1949311   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1949312   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1949313   +          +      0.4663802937397 * Marital_StatusDivorced
1949314   +          +    -1.27401898796099 * Marital_StatusMarried
1949315   +          +      1.3125969368079 * Marital_StatusSingle
1949316   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1949317   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1949318   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1949319   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1949320   +          +     0.07419179522004 * Marital_StatusDivorced
1949321   +          +     0.00234615813337 * Marital_StatusMarried
1949322   +          +    -0.00725460458412 * Marital_StatusSingle
1949323   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1949324   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1949325   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1949326   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1949327   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1949328   +END;
MPRINT(EM_DIAGRAM):   END;
1949329   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1949330   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1949331   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1949332   +END;
MPRINT(EM_DIAGRAM):   END;
1949333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949334   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1949335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949336   +
1949337   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1949338   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1949339   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1949340   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1949341   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1949342   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949343   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1949344   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1949345   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1949346   +end;
MPRINT(EM_DIAGRAM):   end;
1949347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949348   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1949349   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1949350   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1949351   +   end;
MPRINT(EM_DIAGRAM):   end;
1949352   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1949353   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1949354   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1949355   +   end;
MPRINT(EM_DIAGRAM):   end;
1949356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949357   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1949358   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1949359   +   end;
MPRINT(EM_DIAGRAM):   end;
1949360   +end;
MPRINT(EM_DIAGRAM):   end;
1949361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1949362   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1949363   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1949364   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1949365   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1949366   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1949367   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1949368   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1949369   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1949370   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1949371   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1949372   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1949373   +END;
MPRINT(EM_DIAGRAM):   END;
1949374   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1949375   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1949376   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1949377   +END;
MPRINT(EM_DIAGRAM):   END;
1949378   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1949379   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1949380   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1949381   +END;
MPRINT(EM_DIAGRAM):   END;
1949382   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1949383   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1949384   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1949385   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1949386   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1949387   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1949388   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1949389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949390   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1949391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949392   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1949393   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1949394   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1949395   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1949396   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1949397   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1949398   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1949399   +END;
MPRINT(EM_DIAGRAM):   END;
1949400   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1949401   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1949402   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1949403   +drop
1949404   +H11
1949405   +H12
1949406   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1949407   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1949408   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1949409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949410   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1949411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949412   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1949413   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1949414   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1949415   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1949416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949417   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1949418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949419   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1949420   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1949421   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1949422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949423   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1949424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949425   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1949426   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1949427   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1949428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949429   +* Ensmbl29: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 6 of 10;
1949430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949432   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1949433   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1949434   +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
1949435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1949436   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1949437   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1949438   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1949439   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1949440   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1949441   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1949442   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1949443   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1949444   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1949445   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1949446   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1949447   +LENGTH _WARN_ $4
1949448   +      F_DepVar  $ 12
1949449   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1949450   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1949451   +
1949452   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1949453   +
1949454   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1949455   +
1949456   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1949457   +
1949458   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1949459   +
1949460   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1949461   +
1949462   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1949463   +
1949464   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1949465   +
1949466   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1949467   +
1949468   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1949469   +
1949470   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1949471   +
1949472   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1949473   +
1949474   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1949475   +
1949476   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1949477   +
1949478   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1949479   +
1949480   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1949481   +
1949482   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1949483   +
1949484   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1949485   +
1949486   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1949487   +
1949488   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1949489   +
1949490   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1949491   +
1949492   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1949493   +
1949494   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1949495   +
1949496   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1949497   +
1949498   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1949499   +
1949500   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1949501   +
1949502   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1949503   +
1949504   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1949505   +
1949506   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1949507   +
1949508   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1949509   +
1949510   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1949511   +
1949512   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1949513   +
1949514   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1949515   +
1949516   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1949517   +
1949518   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1949519   +
1949520   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1949521   +
1949522   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1949523   +
1949524   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1949525   +
1949526   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1949527   +
1949528   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1949529   +
1949530   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1949531   +
1949532   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1949533   +
1949534   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1949535   +
1949536   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1949537   +
1949538   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1949539   +
1949540   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1949541   +
1949542   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1949543   +
1949544   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1949545   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1949546   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1949547   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1949548   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949550   +end;
MPRINT(EM_DIAGRAM):   end;
1949551   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949552   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949553   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1949554   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949555   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1949556   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1949557   +   end;
MPRINT(EM_DIAGRAM):   end;
1949558   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1949559   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1949560   +   end;
MPRINT(EM_DIAGRAM):   end;
1949561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949562   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1949563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949565   +   end;
MPRINT(EM_DIAGRAM):   end;
1949566   +end;
MPRINT(EM_DIAGRAM):   end;
1949567   +
1949568   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1949569   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1949570   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1949571   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1949572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949574   +end;
MPRINT(EM_DIAGRAM):   end;
1949575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949577   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1949578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949579   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1949580   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1949581   +   end;
MPRINT(EM_DIAGRAM):   end;
1949582   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1949583   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1949584   +   end;
MPRINT(EM_DIAGRAM):   end;
1949585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949586   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1949587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949589   +   end;
MPRINT(EM_DIAGRAM):   end;
1949590   +end;
MPRINT(EM_DIAGRAM):   end;
1949591   +
1949592   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1949593   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1949594   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1949595   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1949596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949598   +end;
MPRINT(EM_DIAGRAM):   end;
1949599   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949601   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1949602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1949604   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1949605   +   end;
MPRINT(EM_DIAGRAM):   end;
1949606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1949607   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1949608   +   end;
MPRINT(EM_DIAGRAM):   end;
1949609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949610   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1949611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949613   +   end;
MPRINT(EM_DIAGRAM):   end;
1949614   +end;
MPRINT(EM_DIAGRAM):   end;
1949615   +
1949616   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1949617   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1949618   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1949619   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1949620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949622   +end;
MPRINT(EM_DIAGRAM):   end;
1949623   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949625   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1949626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1949628   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1949629   +   end;
MPRINT(EM_DIAGRAM):   end;
1949630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1949631   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1949632   +   end;
MPRINT(EM_DIAGRAM):   end;
1949633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949634   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1949635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949637   +   end;
MPRINT(EM_DIAGRAM):   end;
1949638   +end;
MPRINT(EM_DIAGRAM):   end;
1949639   +
1949640   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1949641   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1949642   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1949643   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1949644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949646   +end;
MPRINT(EM_DIAGRAM):   end;
1949647   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949649   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1949650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1949652   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1949653   +   end;
MPRINT(EM_DIAGRAM):   end;
1949654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1949655   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1949656   +   end;
MPRINT(EM_DIAGRAM):   end;
1949657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949658   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1949659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949661   +   end;
MPRINT(EM_DIAGRAM):   end;
1949662   +end;
MPRINT(EM_DIAGRAM):   end;
1949663   +
1949664   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1949665   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1949666   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1949667   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1949668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949670   +end;
MPRINT(EM_DIAGRAM):   end;
1949671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949673   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1949674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1949676   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1949677   +   end;
MPRINT(EM_DIAGRAM):   end;
1949678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1949679   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1949680   +   end;
MPRINT(EM_DIAGRAM):   end;
1949681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949682   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1949683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949685   +   end;
MPRINT(EM_DIAGRAM):   end;
1949686   +end;
MPRINT(EM_DIAGRAM):   end;
1949687   +
1949688   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1949689   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1949690   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1949691   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1949692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949694   +end;
MPRINT(EM_DIAGRAM):   end;
1949695   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1949697   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1949698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949699   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1949700   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1949701   +   end;
MPRINT(EM_DIAGRAM):   end;
1949702   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1949703   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1949704   +   end;
MPRINT(EM_DIAGRAM):   end;
1949705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949706   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1949707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949709   +   end;
MPRINT(EM_DIAGRAM):   end;
1949710   +end;
MPRINT(EM_DIAGRAM):   end;
1949711   +
1949712   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1949713   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1949714   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1949715   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1949716   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1949717   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1949718   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1949719   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1949720   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1949721   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1949722   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1949723   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1949724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949726   +end;
MPRINT(EM_DIAGRAM):   end;
1949727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949728   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1949729   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1949730   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949731   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1949732   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1949733   +   end;
MPRINT(EM_DIAGRAM):   end;
1949734   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1949735   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1949736   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1949737   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1949738   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1949739   +   end;
MPRINT(EM_DIAGRAM):   end;
1949740   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1949741   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1949742   +   end;
MPRINT(EM_DIAGRAM):   end;
1949743   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1949744   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1949745   +   end;
MPRINT(EM_DIAGRAM):   end;
1949746   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1949747   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1949748   +   end;
MPRINT(EM_DIAGRAM):   end;
1949749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949750   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1949751   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1949752   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1949753   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1949754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949756   +   end;
MPRINT(EM_DIAGRAM):   end;
1949757   +end;
MPRINT(EM_DIAGRAM):   end;
1949758   +
1949759   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1949760   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1949761   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1949762   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1949763   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1949764   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1949765   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1949766   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1949767   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1949768   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1949769   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1949770   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1949771   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1949772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1949773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949774   +end;
MPRINT(EM_DIAGRAM):   end;
1949775   +else do;
MPRINT(EM_DIAGRAM):   else do;
1949776   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1949777   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1949778   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1949779   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1949780   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1949781   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1949782   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1949783   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1949784   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949785   +         end;
MPRINT(EM_DIAGRAM):   end;
1949786   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1949787   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1949788   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1949789   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949790   +            end;
MPRINT(EM_DIAGRAM):   end;
1949791   +         end;
MPRINT(EM_DIAGRAM):   end;
1949792   +      end;
MPRINT(EM_DIAGRAM):   end;
1949793   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1949794   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1949795   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1949796   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949797   +         end;
MPRINT(EM_DIAGRAM):   end;
1949798   +      end;
MPRINT(EM_DIAGRAM):   end;
1949799   +   end;
MPRINT(EM_DIAGRAM):   end;
1949800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1949801   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1949802   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1949803   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949804   +      end;
MPRINT(EM_DIAGRAM):   end;
1949805   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1949806   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1949807   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1949808   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1949809   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1949810   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1949811   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1949812   +         end;
MPRINT(EM_DIAGRAM):   end;
1949813   +      end;
MPRINT(EM_DIAGRAM):   end;
1949814   +   end;
MPRINT(EM_DIAGRAM):   end;
1949815   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1949816   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1949817   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1949818   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1949819   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1949820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1949821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949822   +   end;
MPRINT(EM_DIAGRAM):   end;
1949823   +end;
MPRINT(EM_DIAGRAM):   end;
1949824   +
1949825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949826   +*** Checking missing input Interval
1949827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1949828   +
1949829   +IF NMISS(
1949830   +   AcceptedCmpTotal ,
1949831   +   Age ,
1949832   +   Frq ,
1949833   +   Income ,
1949834   +   Kidhome ,
1949835   +   Mnt ,
1949836   +   MntFishProducts ,
1949837   +   MntFruits ,
1949838   +   MntGoldProds ,
1949839   +   MntMeatProducts ,
1949840   +   MntSweetProducts ,
1949841   +   MntWines ,
1949842   +   MonthsAsCustomer ,
1949843   +   NumCatalogPurchases ,
1949844   +   NumDealsPurchases ,
1949845   +   NumDistPurchases ,
1949846   +   NumStorePurchases ,
1949847   +   NumWebPurchases ,
1949848   +   NumWebVisitsMonth ,
1949849   +   RFMstat ,
1949850   +   RMntFrq ,
1949851   +   Recency ,
1949852   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1949853   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1949854   +
1949855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1949856   +END;
MPRINT(EM_DIAGRAM):   END;
1949857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949858   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1949859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949860   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1949861   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1949862   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1949863   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1949864   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1949865   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1949866   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1949867   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1949868   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1949869   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1949870   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1949871   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1949872   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1949873   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1949874   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1949875   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1949876   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1949877   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1949878   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1949879   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1949880   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1949881   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1949882   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1949883   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1949884   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1949885   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1949886   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1949887   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1949888   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1949889   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1949890   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1949891   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1949892   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1949893   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1949894   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1949895   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1949896   +END;
MPRINT(EM_DIAGRAM):   END;
1949897   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1949898   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1949899   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1949900   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1949901   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1949902   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1949903   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1949904   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1949905   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1949906   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1949907   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1949908   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1949909   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1949910   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1949911   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1949912   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1949913   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1949914   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1949915   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1949916   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1949917   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1949918   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1949919   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1949920   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1949921   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1949922   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1949923   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1949924   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1949925   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1949926   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1949927   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1949928   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1949929   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1949930   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1949931   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1949932   +   ELSE S_NumCatalogPurchases
1949933   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1949934   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1949935   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1949936   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1949937   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1949938   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1949939   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1949940   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1949941   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1949942   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1949943   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1949944   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1949945   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1949946   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1949947   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1949948   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1949949   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1949950   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1949951   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1949952   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1949953   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1949954   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1949955   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1949956   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1949957   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1949958   +END;
MPRINT(EM_DIAGRAM):   END;
1949959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949960   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1949961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949963   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1949964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949966   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1949967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1949968   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1949969   +   H11  =     0.21200891808959 * S_AcceptedCmpTotal  +     -0.0294266976166 *
1949970   +        S_Age  +    -0.16916645815546 * S_Frq  +     0.14504026791442 *
1949971   +        S_Income  +    -0.02671573431371 * S_Kidhome
1949972   +          +     0.00786762022906 * S_Mnt  +    -0.04771740067188 *
1949973   +        S_MntFishProducts  +    -0.04225362276447 * S_MntFruits
1949974   +          +     0.00800255816668 * S_MntGoldProds  +      0.2107523790232 *
1949975   +        S_MntMeatProducts  +     -0.0235222276585 * S_MntSweetProducts
1949976   +          +    -0.19316587677023 * S_MntWines  +    -0.02053398305898 *
1949977   +        S_MonthsAsCustomer  +     0.28123583383823 * S_NumCatalogPurchases
1949978   +          +     0.15209264570536 * S_NumDealsPurchases
1949979   +          +     0.06911391326046 * S_NumDistPurchases
1949980   +          +    -0.06311267460348 * S_NumStorePurchases
1949981   +          +    -0.10769250099266 * S_NumWebPurchases
1949982   +          +     0.30164996141574 * S_NumWebVisitsMonth
1949983   +          +     0.04874443897811 * S_RFMstat  +      0.0566600966077 *
1949984   +        S_RMntFrq  +    -0.33974896769357 * S_Recency
1949985   +          +    -0.07912190966726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21200891808959 * S_AcceptedCmpTotal + -0.0294266976166 * S_Age + 
-0.16916645815546 * S_Frq + 0.14504026791442 * S_Income + -0.02671573431371 * S_Kidhome + 
0.00786762022906 * S_Mnt + -0.04771740067188 * S_MntFishProducts + -0.04225362276447 * 
S_MntFruits + 0.00800255816668 * S_MntGoldProds + 0.2107523790232 * S_MntMeatProducts + 
-0.0235222276585 * S_MntSweetProducts + -0.19316587677023 * S_MntWines + -0.02053398305898 * 
S_MonthsAsCustomer + 0.28123583383823 * S_NumCatalogPurchases + 0.15209264570536 * 
S_NumDealsPurchases + 0.06911391326046 * S_NumDistPurchases + -0.06311267460348 * 
S_NumStorePurchases + -0.10769250099266 * S_NumWebPurchases + 0.30164996141574 * 
S_NumWebVisitsMonth + 0.04874443897811 * S_RFMstat + 0.0566600966077 * S_RMntFrq + 
-0.33974896769357 * S_Recency + -0.07912190966726 * S_Teenhome ;
1949986   +   H11  = H11  +    -0.00087097404949 * AcceptedCmp10
1949987   +          +     0.00352229851757 * AcceptedCmp20  +    -0.01949770623849 *
1949988   +        AcceptedCmp30  +      0.0152220267038 * AcceptedCmp40
1949989   +          +    -0.06776123706739 * AcceptedCmp50  +      0.0455648678007 *
1949990   +        Complain0  +    -0.02207743549319 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00087097404949 * AcceptedCmp10 + 0.00352229851757 * 
AcceptedCmp20 + -0.01949770623849 * AcceptedCmp30 + 0.0152220267038 * AcceptedCmp40 + 
-0.06776123706739 * AcceptedCmp50 + 0.0455648678007 * Complain0 + -0.02207743549319 * 
HigherEducationBinary0 ;
1949991   +   H11  = H11  +     0.02219619537454 * Education2n_Cycle
1949992   +          +    -0.04162935656009 * EducationBasic  +     0.02075327633983 *
1949993   +        EducationGraduation  +    -0.00120846175125 * EducationMaster
1949994   +          +     0.03223611494434 * Marital_StatusDivorced
1949995   +          +    -0.11925283937202 * Marital_StatusMarried
1949996   +          +     0.09076376580065 * Marital_StatusSingle
1949997   +          +    -0.12474639400352 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02219619537454 * Education2n_Cycle + -0.04162935656009 * 
EducationBasic + 0.02075327633983 * EducationGraduation + -0.00120846175125 * EducationMaster 
+ 0.03223611494434 * Marital_StatusDivorced + -0.11925283937202 * Marital_StatusMarried + 
0.09076376580065 * Marital_StatusSingle + -0.12474639400352 * Marital_StatusTogether ;
1949998   +   H11  =    -0.51521830302904 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.51521830302904 + H11 ;
1949999   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1950000   +END;
MPRINT(EM_DIAGRAM):   END;
1950001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950002   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1950003   +END;
MPRINT(EM_DIAGRAM):   END;
1950004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950005   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1950006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950007   +
1950008   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1950009   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1950010   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1950011   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1950012   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1950013   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950014   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1950015   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1950016   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1950017   +end;
MPRINT(EM_DIAGRAM):   end;
1950018   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950019   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1950020   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1950021   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1950022   +   end;
MPRINT(EM_DIAGRAM):   end;
1950023   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1950024   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1950025   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1950026   +   end;
MPRINT(EM_DIAGRAM):   end;
1950027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950028   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1950029   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1950030   +   end;
MPRINT(EM_DIAGRAM):   end;
1950031   +end;
MPRINT(EM_DIAGRAM):   end;
1950032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1950033   +   P_DepVar1  =     8.82365339154683 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82365339154683 * H11 ;
1950034   +   P_DepVar1  =    -0.59048702965933 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.59048702965933 + P_DepVar1 ;
1950035   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1950036   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1950037   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1950038   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1950039   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1950040   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1950041   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1950042   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1950043   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1950044   +END;
MPRINT(EM_DIAGRAM):   END;
1950045   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950046   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1950047   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1950048   +END;
MPRINT(EM_DIAGRAM):   END;
1950049   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1950050   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1950051   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1950052   +END;
MPRINT(EM_DIAGRAM):   END;
1950053   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1950054   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1950055   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1950056   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1950057   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1950058   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1950059   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1950060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950061   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1950062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950063   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1950064   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1950065   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1950066   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1950067   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1950068   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1950069   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1950070   +END;
MPRINT(EM_DIAGRAM):   END;
1950071   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1950072   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1950073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1950074   +drop
1950075   +H11
1950076   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1950077   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1950078   +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
1950079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950080   +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
1950081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950082   +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
1950083   +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
1950084   +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
1950085   +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
1950086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950087   +* Renaming Into variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural;
1950088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950089   +length Neural_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural_I_DepVar $32;
1950090   +drop Neural_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural_I_DepVar;
1950091   +Neural_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural_I_DepVar = I_DepVar;
1950092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950093   +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
1950094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950095   +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
1950096   +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
1950097   +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
1950098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950099   +* Ensmbl29: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 7 of 10;
1950100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950102   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1950103   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1950104   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1950105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950106   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1950107   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1950108   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1950109   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1950110   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1950111   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1950112   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1950113   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1950114   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1950115   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1950116   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1950117   +LENGTH _WARN_ $4
1950118   +      F_DepVar  $ 12
1950119   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1950120   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1950121   +
1950122   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1950123   +
1950124   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1950125   +
1950126   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1950127   +
1950128   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1950129   +
1950130   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1950131   +
1950132   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1950133   +
1950134   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1950135   +
1950136   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1950137   +
1950138   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1950139   +
1950140   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1950141   +
1950142   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1950143   +
1950144   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1950145   +
1950146   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1950147   +
1950148   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1950149   +
1950150   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1950151   +
1950152   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1950153   +
1950154   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1950155   +
1950156   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1950157   +
1950158   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1950159   +
1950160   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1950161   +
1950162   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1950163   +
1950164   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1950165   +
1950166   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1950167   +
1950168   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1950169   +
1950170   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1950171   +
1950172   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1950173   +
1950174   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1950175   +
1950176   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1950177   +
1950178   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1950179   +
1950180   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1950181   +
1950182   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1950183   +
1950184   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1950185   +
1950186   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1950187   +
1950188   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1950189   +
1950190   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1950191   +
1950192   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1950193   +
1950194   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1950195   +
1950196   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1950197   +
1950198   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1950199   +
1950200   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1950201   +
1950202   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1950203   +
1950204   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1950205   +
1950206   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1950207   +
1950208   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1950209   +
1950210   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1950211   +
1950212   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1950213   +
1950214   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1950215   +
1950216   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1950217   +
1950218   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1950219   +
1950220   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1950221   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1950222   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1950223   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1950224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950226   +end;
MPRINT(EM_DIAGRAM):   end;
1950227   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950229   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1950230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1950232   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1950233   +   end;
MPRINT(EM_DIAGRAM):   end;
1950234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1950235   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1950236   +   end;
MPRINT(EM_DIAGRAM):   end;
1950237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950238   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1950239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950241   +   end;
MPRINT(EM_DIAGRAM):   end;
1950242   +end;
MPRINT(EM_DIAGRAM):   end;
1950243   +
1950244   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1950245   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1950246   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1950247   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1950248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950250   +end;
MPRINT(EM_DIAGRAM):   end;
1950251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950253   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1950254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1950256   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1950257   +   end;
MPRINT(EM_DIAGRAM):   end;
1950258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1950259   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1950260   +   end;
MPRINT(EM_DIAGRAM):   end;
1950261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950262   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1950263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950265   +   end;
MPRINT(EM_DIAGRAM):   end;
1950266   +end;
MPRINT(EM_DIAGRAM):   end;
1950267   +
1950268   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1950269   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1950270   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1950271   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1950272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950274   +end;
MPRINT(EM_DIAGRAM):   end;
1950275   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950277   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1950278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1950280   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1950281   +   end;
MPRINT(EM_DIAGRAM):   end;
1950282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1950283   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1950284   +   end;
MPRINT(EM_DIAGRAM):   end;
1950285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950286   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1950287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950289   +   end;
MPRINT(EM_DIAGRAM):   end;
1950290   +end;
MPRINT(EM_DIAGRAM):   end;
1950291   +
1950292   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1950293   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1950294   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1950295   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1950296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950298   +end;
MPRINT(EM_DIAGRAM):   end;
1950299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950301   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1950302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1950304   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1950305   +   end;
MPRINT(EM_DIAGRAM):   end;
1950306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1950307   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1950308   +   end;
MPRINT(EM_DIAGRAM):   end;
1950309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950310   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1950311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950313   +   end;
MPRINT(EM_DIAGRAM):   end;
1950314   +end;
MPRINT(EM_DIAGRAM):   end;
1950315   +
1950316   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1950317   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1950318   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1950319   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1950320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950322   +end;
MPRINT(EM_DIAGRAM):   end;
1950323   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950325   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1950326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1950328   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1950329   +   end;
MPRINT(EM_DIAGRAM):   end;
1950330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1950331   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1950332   +   end;
MPRINT(EM_DIAGRAM):   end;
1950333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950334   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1950335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950337   +   end;
MPRINT(EM_DIAGRAM):   end;
1950338   +end;
MPRINT(EM_DIAGRAM):   end;
1950339   +
1950340   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1950341   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1950342   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1950343   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1950344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950346   +end;
MPRINT(EM_DIAGRAM):   end;
1950347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950349   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1950350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950351   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1950352   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1950353   +   end;
MPRINT(EM_DIAGRAM):   end;
1950354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1950355   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1950356   +   end;
MPRINT(EM_DIAGRAM):   end;
1950357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950358   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1950359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950361   +   end;
MPRINT(EM_DIAGRAM):   end;
1950362   +end;
MPRINT(EM_DIAGRAM):   end;
1950363   +
1950364   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1950365   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1950366   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1950367   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1950368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950370   +end;
MPRINT(EM_DIAGRAM):   end;
1950371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1950373   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1950374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950375   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1950376   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1950377   +   end;
MPRINT(EM_DIAGRAM):   end;
1950378   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1950379   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1950380   +   end;
MPRINT(EM_DIAGRAM):   end;
1950381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950382   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1950383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950385   +   end;
MPRINT(EM_DIAGRAM):   end;
1950386   +end;
MPRINT(EM_DIAGRAM):   end;
1950387   +
1950388   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1950389   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1950390   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1950391   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1950392   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1950393   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1950394   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1950395   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1950396   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1950397   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1950398   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1950399   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1950400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950402   +end;
MPRINT(EM_DIAGRAM):   end;
1950403   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950404   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1950405   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1950406   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950407   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1950408   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1950409   +   end;
MPRINT(EM_DIAGRAM):   end;
1950410   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1950411   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1950412   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1950413   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1950414   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1950415   +   end;
MPRINT(EM_DIAGRAM):   end;
1950416   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1950417   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1950418   +   end;
MPRINT(EM_DIAGRAM):   end;
1950419   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1950420   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1950421   +   end;
MPRINT(EM_DIAGRAM):   end;
1950422   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1950423   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1950424   +   end;
MPRINT(EM_DIAGRAM):   end;
1950425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950426   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1950427   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1950428   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1950429   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1950430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950432   +   end;
MPRINT(EM_DIAGRAM):   end;
1950433   +end;
MPRINT(EM_DIAGRAM):   end;
1950434   +
1950435   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1950436   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1950437   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1950438   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1950439   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1950440   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1950441   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1950442   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1950443   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1950444   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1950445   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1950446   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1950447   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1950448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1950449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950450   +end;
MPRINT(EM_DIAGRAM):   end;
1950451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950452   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1950453   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1950454   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950455   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1950456   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1950457   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1950458   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1950459   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1950460   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1950461   +         end;
MPRINT(EM_DIAGRAM):   end;
1950462   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1950463   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1950464   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1950465   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1950466   +            end;
MPRINT(EM_DIAGRAM):   end;
1950467   +         end;
MPRINT(EM_DIAGRAM):   end;
1950468   +      end;
MPRINT(EM_DIAGRAM):   end;
1950469   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1950470   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1950471   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1950472   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1950473   +         end;
MPRINT(EM_DIAGRAM):   end;
1950474   +      end;
MPRINT(EM_DIAGRAM):   end;
1950475   +   end;
MPRINT(EM_DIAGRAM):   end;
1950476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950477   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1950478   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1950479   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1950480   +      end;
MPRINT(EM_DIAGRAM):   end;
1950481   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1950482   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1950483   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1950484   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1950485   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1950486   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1950487   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1950488   +         end;
MPRINT(EM_DIAGRAM):   end;
1950489   +      end;
MPRINT(EM_DIAGRAM):   end;
1950490   +   end;
MPRINT(EM_DIAGRAM):   end;
1950491   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1950492   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1950493   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1950494   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1950495   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1950496   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1950497   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950498   +   end;
MPRINT(EM_DIAGRAM):   end;
1950499   +end;
MPRINT(EM_DIAGRAM):   end;
1950500   +
1950501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950502   +*** Checking missing input Interval
1950503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1950504   +
1950505   +IF NMISS(
1950506   +   AcceptedCmpTotal ,
1950507   +   Age ,
1950508   +   Frq ,
1950509   +   Income ,
1950510   +   Kidhome ,
1950511   +   Mnt ,
1950512   +   MntFishProducts ,
1950513   +   MntFruits ,
1950514   +   MntGoldProds ,
1950515   +   MntMeatProducts ,
1950516   +   MntSweetProducts ,
1950517   +   MntWines ,
1950518   +   MonthsAsCustomer ,
1950519   +   NumCatalogPurchases ,
1950520   +   NumDealsPurchases ,
1950521   +   NumDistPurchases ,
1950522   +   NumStorePurchases ,
1950523   +   NumWebPurchases ,
1950524   +   NumWebVisitsMonth ,
1950525   +   RFMstat ,
1950526   +   RMntFrq ,
1950527   +   Recency ,
1950528   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1950529   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1950530   +
1950531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1950532   +END;
MPRINT(EM_DIAGRAM):   END;
1950533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950534   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1950535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950536   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1950537   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1950538   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1950539   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1950540   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1950541   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1950542   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1950543   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1950544   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1950545   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1950546   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1950547   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1950548   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1950549   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1950550   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1950551   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1950552   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1950553   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1950554   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1950555   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1950556   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1950557   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1950558   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1950559   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1950560   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1950561   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1950562   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1950563   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1950564   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1950565   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1950566   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1950567   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1950568   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1950569   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1950570   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1950571   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1950572   +END;
MPRINT(EM_DIAGRAM):   END;
1950573   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950574   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1950575   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1950576   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1950577   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1950578   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1950579   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1950580   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1950581   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1950582   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1950583   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1950584   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1950585   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1950586   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1950587   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1950588   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1950589   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1950590   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1950591   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1950592   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1950593   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1950594   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1950595   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1950596   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1950597   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1950598   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1950599   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1950600   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1950601   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1950602   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1950603   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1950604   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1950605   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1950606   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1950607   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1950608   +   ELSE S_NumCatalogPurchases
1950609   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1950610   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1950611   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1950612   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1950613   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1950614   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1950615   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1950616   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1950617   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1950618   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1950619   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1950620   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1950621   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1950622   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1950623   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1950624   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1950625   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1950626   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1950627   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1950628   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1950629   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1950630   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1950631   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1950632   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1950633   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1950634   +END;
MPRINT(EM_DIAGRAM):   END;
1950635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950636   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1950637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950639   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1950640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950642   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1950643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950644   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1950645   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
1950646   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
1950647   +        S_Income  +    -0.27053363011695 * S_Kidhome
1950648   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
1950649   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
1950650   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
1950651   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
1950652   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
1950653   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
1950654   +          +    -1.35624485206227 * S_NumDealsPurchases
1950655   +          +    -0.54646115734684 * S_NumDistPurchases
1950656   +          +     1.29794225108321 * S_NumStorePurchases
1950657   +          +      1.8453064081809 * S_NumWebPurchases
1950658   +          +    -0.92747144824026 * S_NumWebVisitsMonth
1950659   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
1950660   +        S_RMntFrq  +     0.73207333681971 * S_Recency
1950661   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
1950662   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
1950663   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
1950664   +        S_Income  +    -0.79821220724157 * S_Kidhome
1950665   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
1950666   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
1950667   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
1950668   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
1950669   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
1950670   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
1950671   +          +     0.72513216556859 * S_NumDealsPurchases
1950672   +          +    -0.15566774650584 * S_NumDistPurchases
1950673   +          +     -0.8847675798982 * S_NumStorePurchases
1950674   +          +    -0.79405200318252 * S_NumWebPurchases
1950675   +          +     1.74003779802254 * S_NumWebVisitsMonth
1950676   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
1950677   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
1950678   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
1950679   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
1950680   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
1950681   +        S_Income  +    -0.58596240450544 * S_Kidhome
1950682   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
1950683   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
1950684   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
1950685   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
1950686   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
1950687   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
1950688   +          +     0.17466385502192 * S_NumDealsPurchases
1950689   +          +    -0.06219545947203 * S_NumDistPurchases
1950690   +          +     0.16637546838853 * S_NumStorePurchases
1950691   +          +    -0.06908729397635 * S_NumWebPurchases
1950692   +          +     1.44269772444244 * S_NumWebVisitsMonth
1950693   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
1950694   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
1950695   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
1950696   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
1950697   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
1950698   +        S_Income  +    -0.42454238091412 * S_Kidhome
1950699   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
1950700   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
1950701   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
1950702   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
1950703   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
1950704   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
1950705   +          +     0.77329078721398 * S_NumDealsPurchases
1950706   +          +     0.31693324305765 * S_NumDistPurchases
1950707   +          +    -1.08524196373091 * S_NumStorePurchases
1950708   +          +    -0.96945384922979 * S_NumWebPurchases
1950709   +          +     1.24659288571587 * S_NumWebVisitsMonth
1950710   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
1950711   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
1950712   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
1950713   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
1950714   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
1950715   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
1950716   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
1950717   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
1950718   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
1950719   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
1950720   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
1950721   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
1950722   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
1950723   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
1950724   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
1950725   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
1950726   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
1950727   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
1950728   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
1950729   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
1950730   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
1950731   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
1950732   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
1950733   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
1950734   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
1950735   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
1950736   +          +     0.36788499721115 * Marital_StatusDivorced
1950737   +          +    -0.16988636986433 * Marital_StatusMarried
1950738   +          +    -0.24560973256761 * Marital_StatusSingle
1950739   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
1950740   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
1950741   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
1950742   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
1950743   +          +     0.24497797058028 * Marital_StatusDivorced
1950744   +          +    -1.44410245434424 * Marital_StatusMarried
1950745   +          +     1.47441310087392 * Marital_StatusSingle
1950746   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
1950747   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
1950748   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
1950749   +        EducationGraduation  +     0.04653963359475 * EducationMaster
1950750   +          +     0.15823225296452 * Marital_StatusDivorced
1950751   +          +    -0.39129434667884 * Marital_StatusMarried
1950752   +          +     0.84414069966504 * Marital_StatusSingle
1950753   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
1950754   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
1950755   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
1950756   +        EducationGraduation  +     0.40030852414737 * EducationMaster
1950757   +          +     1.22039169814542 * Marital_StatusDivorced
1950758   +          +     0.91592976063128 * Marital_StatusMarried
1950759   +          +    -1.51267332883308 * Marital_StatusSingle
1950760   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
1950761   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
1950762   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
1950763   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
1950764   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
1950765   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1950766   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1950767   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1950768   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1950769   +END;
MPRINT(EM_DIAGRAM):   END;
1950770   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950771   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1950772   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1950773   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1950774   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1950775   +END;
MPRINT(EM_DIAGRAM):   END;
1950776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950777   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1950778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950779   +
1950780   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1950781   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1950782   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1950783   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1950784   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1950785   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1950786   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1950787   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1950788   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1950789   +end;
MPRINT(EM_DIAGRAM):   end;
1950790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1950791   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1950792   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1950793   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1950794   +   end;
MPRINT(EM_DIAGRAM):   end;
1950795   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1950796   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1950797   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1950798   +   end;
MPRINT(EM_DIAGRAM):   end;
1950799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1950800   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1950801   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1950802   +   end;
MPRINT(EM_DIAGRAM):   end;
1950803   +end;
MPRINT(EM_DIAGRAM):   end;
1950804   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1950805   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
1950806   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
1950807   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
1950808   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1950809   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1950810   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1950811   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1950812   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1950813   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1950814   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1950815   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1950816   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1950817   +END;
MPRINT(EM_DIAGRAM):   END;
1950818   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950819   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1950820   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1950821   +END;
MPRINT(EM_DIAGRAM):   END;
1950822   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1950823   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1950824   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1950825   +END;
MPRINT(EM_DIAGRAM):   END;
1950826   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1950827   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1950828   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1950829   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1950830   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1950831   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1950832   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1950833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950834   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1950835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1950836   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1950837   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1950838   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1950839   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1950840   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1950841   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1950842   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1950843   +END;
MPRINT(EM_DIAGRAM):   END;
1950844   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1950845   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1950846   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1950847   +drop
1950848   +H11
1950849   +H12
1950850   +H13
1950851   +H14
1950852   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1950853   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1950854   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1950855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950856   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1950857   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950858   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1950859   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1950860   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1950861   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1950862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950863   +* Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
1950864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950865   +length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
1950866   +drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
1950867   +Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
1950868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950869   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1950870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950871   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1950872   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1950873   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1950874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950875   +* Ensmbl29: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 8 of 10;
1950876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950878   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1950879   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1950880   +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
1950881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1950882   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1950883   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1950884   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1950885   +
1950886   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1950887   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1950888   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1950889   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1950890   +
1950891   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1950892   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1950893   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1950894   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1950895   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1950896   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1950897   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1950898   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1950899   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1950900   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1950901   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1950902   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1950903   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1950904   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1950905   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1950906   +
1950907   +
1950908   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1950909   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1950910   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1950911   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1950912   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1950913   +
1950914   +
1950915   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1950916   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1950917   +
1950918   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1950919   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1950920   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1950921   +  IF  NOT MISSING(Recency ) AND
1950922   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1950923   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1950924   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1950925   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1950926   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1950927   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1950928   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1950929   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1950930   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1950931   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1950932   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1950933   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1950934   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1950935   +      END;
MPRINT(EM_DIAGRAM):   END;
1950936   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950937   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1950938   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1950939   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1950940   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1950941   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1950942   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1950943   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1950944   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1950945   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1950946   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1950947   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1950948   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1950949   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1950950   +        END;
MPRINT(EM_DIAGRAM):   END;
1950951   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950952   +        IF  NOT MISSING(NumStorePurchases ) AND
1950953   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1950954   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1950955   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1950956   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1950957   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1950958   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1950959   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1950960   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1950961   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1950962   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1950963   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1950964   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1950965   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1950966   +            END;
MPRINT(EM_DIAGRAM):   END;
1950967   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950968   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1950969   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1950970   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1950971   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1950972   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1950973   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1950974   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1950975   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1950976   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1950977   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1950978   +            END;
MPRINT(EM_DIAGRAM):   END;
1950979   +          END;
MPRINT(EM_DIAGRAM):   END;
1950980   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950981   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1950982   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1950983   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1950984   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1950985   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1950986   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1950987   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1950988   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1950989   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1950990   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1950991   +          END;
MPRINT(EM_DIAGRAM):   END;
1950992   +        END;
MPRINT(EM_DIAGRAM):   END;
1950993   +      END;
MPRINT(EM_DIAGRAM):   END;
1950994   +    END;
MPRINT(EM_DIAGRAM):   END;
1950995   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1950996   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1950997   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1950998   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1950999   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1951000   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1951001   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1951002   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1951003   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1951004   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1951005   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1951006   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1951007   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1951008   +      END;
MPRINT(EM_DIAGRAM):   END;
1951009   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951010   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1951011   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1951012   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1951013   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1951014   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1951015   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1951016   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1951017   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1951018   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951019   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951020   +      END;
MPRINT(EM_DIAGRAM):   END;
1951021   +    END;
MPRINT(EM_DIAGRAM):   END;
1951022   +  END;
MPRINT(EM_DIAGRAM):   END;
1951023   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951024   +  IF  NOT MISSING(Recency ) AND
1951025   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1951026   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1951027   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1951028   +      IF  NOT MISSING(NumStorePurchases ) AND
1951029   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1951030   +        IF  NOT MISSING(RFMstat ) AND
1951031   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1951032   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1951033   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1951034   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1951035   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1951036   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1951037   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1951038   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1951039   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1951040   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1951041   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1951042   +          END;
MPRINT(EM_DIAGRAM):   END;
1951043   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951044   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1951045   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1951046   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1951047   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1951048   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1951049   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1951050   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1951051   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1951052   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951053   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951054   +          END;
MPRINT(EM_DIAGRAM):   END;
1951055   +        END;
MPRINT(EM_DIAGRAM):   END;
1951056   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951057   +        IF  NOT MISSING(MntFishProducts ) AND
1951058   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1951059   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1951060   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1951061   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1951062   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1951063   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1951064   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1951065   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1951066   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1951067   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951068   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951069   +          END;
MPRINT(EM_DIAGRAM):   END;
1951070   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951071   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1951072   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1951073   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1951074   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1951075   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1951076   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1951077   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1951078   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1951079   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1951080   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1951081   +          END;
MPRINT(EM_DIAGRAM):   END;
1951082   +        END;
MPRINT(EM_DIAGRAM):   END;
1951083   +      END;
MPRINT(EM_DIAGRAM):   END;
1951084   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951085   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1951086   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1951087   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1951088   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1951089   +          IF  NOT MISSING(Kidhome ) AND
1951090   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1951091   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1951092   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1951093   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1951094   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1951095   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1951096   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1951097   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1951098   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1951099   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951100   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951101   +            END;
MPRINT(EM_DIAGRAM):   END;
1951102   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951103   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1951104   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1951105   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1951106   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1951107   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1951108   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1951109   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1951110   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1951111   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1951112   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1951113   +            END;
MPRINT(EM_DIAGRAM):   END;
1951114   +          END;
MPRINT(EM_DIAGRAM):   END;
1951115   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951116   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1951117   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1951118   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1951119   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1951120   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1951121   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1951122   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1951123   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1951124   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951125   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951126   +          END;
MPRINT(EM_DIAGRAM):   END;
1951127   +        END;
MPRINT(EM_DIAGRAM):   END;
1951128   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951129   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1951130   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1951131   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1951132   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1951133   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1951134   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1951135   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1951136   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1951137   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951138   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951139   +        END;
MPRINT(EM_DIAGRAM):   END;
1951140   +      END;
MPRINT(EM_DIAGRAM):   END;
1951141   +    END;
MPRINT(EM_DIAGRAM):   END;
1951142   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951143   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1951144   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1951145   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1951146   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1951147   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1951148   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1951149   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1951150   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1951151   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1951152   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1951153   +    END;
MPRINT(EM_DIAGRAM):   END;
1951154   +  END;
MPRINT(EM_DIAGRAM):   END;
1951155   +
1951156   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1951157   +IF  F_DepVar  NE '0'
1951158   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1951159   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1951160   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1951161   + END;
MPRINT(EM_DIAGRAM):   END;
1951162   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1951163   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1951164   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1951165   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1951166   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1951167   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1951168   +       END;
MPRINT(EM_DIAGRAM):   END;
1951169   + END;
MPRINT(EM_DIAGRAM):   END;
1951170   +
1951171   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1951172   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1951173   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1951174   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1951175   +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
1951176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951177   +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
1951178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951179   +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
1951180   +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
1951181   +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
1951182   +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
1951183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951184   +* Renaming Into variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Tree;
1951185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951186   +length Tree_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Tree_I_DepVar $32;
1951187   +drop Tree_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Tree_I_DepVar;
1951188   +Tree_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Tree_I_DepVar = I_DepVar;
1951189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951190   +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
1951191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951192   +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
1951193   +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
1951194   +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
1951195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951196   +* Ensmbl29: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 9 of 10;
1951197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951199   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1951200   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1951201   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1951202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951203   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951204   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1951205   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951206   +
1951207   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1951208   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1951209   +
1951210   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1951211   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1951212   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1951213   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1951214   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1951215   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1951216   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1951217   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1951218   +
1951219   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1951220   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1951221   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1951222   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1951223   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1951224   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1951225   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1951226   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1951227   +end;
MPRINT(EM_DIAGRAM):   end;
1951228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1951229   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1951230   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1951231   +   end;
MPRINT(EM_DIAGRAM):   end;
1951232   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1951233   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1951234   +   end;
MPRINT(EM_DIAGRAM):   end;
1951235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1951236   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1951237   +   end;
MPRINT(EM_DIAGRAM):   end;
1951238   +end;
MPRINT(EM_DIAGRAM):   end;
1951239   +
1951240   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1951241   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1951242   +
1951243   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1951244   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1951245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951247   +end;
MPRINT(EM_DIAGRAM):   end;
1951248   +
1951249   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1951250   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1951251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951253   +end;
MPRINT(EM_DIAGRAM):   end;
1951254   +
1951255   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1951256   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1951257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951259   +end;
MPRINT(EM_DIAGRAM):   end;
1951260   +
1951261   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1951262   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1951263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951265   +end;
MPRINT(EM_DIAGRAM):   end;
1951266   +
1951267   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1951268   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1951269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951271   +end;
MPRINT(EM_DIAGRAM):   end;
1951272   +
1951273   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1951274   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1951275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951277   +end;
MPRINT(EM_DIAGRAM):   end;
1951278   +
1951279   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1951280   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1951281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951283   +end;
MPRINT(EM_DIAGRAM):   end;
1951284   +
1951285   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1951286   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1951287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951289   +end;
MPRINT(EM_DIAGRAM):   end;
1951290   +
1951291   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1951292   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1951293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951295   +end;
MPRINT(EM_DIAGRAM):   end;
1951296   +
1951297   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1951298   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1951299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951301   +end;
MPRINT(EM_DIAGRAM):   end;
1951302   +
1951303   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1951304   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1951305   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951306   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951307   +end;
MPRINT(EM_DIAGRAM):   end;
1951308   +
1951309   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1951310   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1951311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951313   +end;
MPRINT(EM_DIAGRAM):   end;
1951314   +
1951315   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1951316   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1951317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951319   +end;
MPRINT(EM_DIAGRAM):   end;
1951320   +
1951321   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1951322   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1951323   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1951324   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1951325   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1951326   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1951327   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1951328   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1951329   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1951330   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1951331   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1951332   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1951333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951335   +end;
MPRINT(EM_DIAGRAM):   end;
1951336   +else do;
MPRINT(EM_DIAGRAM):   else do;
1951337   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1951338   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1951339   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1951340   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1951341   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1951342   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1951343   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1951344   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1951345   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951346   +         end;
MPRINT(EM_DIAGRAM):   end;
1951347   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1951348   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1951349   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1951350   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951351   +            end;
MPRINT(EM_DIAGRAM):   end;
1951352   +         end;
MPRINT(EM_DIAGRAM):   end;
1951353   +      end;
MPRINT(EM_DIAGRAM):   end;
1951354   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1951355   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1951356   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1951357   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951358   +         end;
MPRINT(EM_DIAGRAM):   end;
1951359   +      end;
MPRINT(EM_DIAGRAM):   end;
1951360   +   end;
MPRINT(EM_DIAGRAM):   end;
1951361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1951362   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1951363   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1951364   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951365   +      end;
MPRINT(EM_DIAGRAM):   end;
1951366   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1951367   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1951368   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1951369   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1951370   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1951371   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1951372   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951373   +         end;
MPRINT(EM_DIAGRAM):   end;
1951374   +      end;
MPRINT(EM_DIAGRAM):   end;
1951375   +   end;
MPRINT(EM_DIAGRAM):   end;
1951376   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1951377   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1951378   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1951379   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1951380   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1951381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1951382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951383   +   end;
MPRINT(EM_DIAGRAM):   end;
1951384   +end;
MPRINT(EM_DIAGRAM):   end;
1951385   +
1951386   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1951387   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1951388   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1951389   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1951390   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1951391   +end;
MPRINT(EM_DIAGRAM):   end;
1951392   +
1951393   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1951394   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1951395   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1951396   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1951397   +
1951398   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1951399   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1951400   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1951401   +
1951402   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1951403   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1951404   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1951405   +
1951406   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1951407   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1951408   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1951409   +
1951410   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1951411   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1951412   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1951413   +
1951414   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1951415   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1951416   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1951417   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1951418   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1951419   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1951420   +
1951421   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1951422   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1951423   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1951424   +
1951425   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1951426   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1951427   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1951428   +
1951429   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1951430   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1951431   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1951432   +
1951433   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1951434   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1951435   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1951436   +
1951437   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1951438   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1951439   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1951440   +
1951441   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1951442   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1951443   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1951444   +
1951445   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1951446   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1951447   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1951448   +
1951449   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1951450   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1951451   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1951452   +
1951453   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1951454   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1951455   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1951456   +
1951457   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1951458   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1951459   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1951460   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1951461   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1951462   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1951463   +end;
MPRINT(EM_DIAGRAM):   end;
1951464   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1951465   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1951466   +
1951467   +REGDR1:
1951468   +
1951469   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1951470   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1951471   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1951472   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1951473   +end;
MPRINT(EM_DIAGRAM):   end;
1951474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1951475   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1951476   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1951477   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1951478   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1951479   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1951480   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1951481   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1951482   +   end;
MPRINT(EM_DIAGRAM):   end;
1951483   +end;
MPRINT(EM_DIAGRAM):   end;
1951484   +
1951485   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1951486   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1951487   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1951488   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1951489   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1951490   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1951491   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1951492   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1951493   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1951494   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1951495   +end;
MPRINT(EM_DIAGRAM):   end;
1951496   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1951497   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1951498   +
1951499   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951500   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1951501   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951502   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1951503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951504   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1951505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951506   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1951507   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1951508   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1951509   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1951510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951511   +* Renaming Into variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg;
1951512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951513   +length Reg_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg_I_DepVar $32;
1951514   +drop Reg_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg_I_DepVar;
1951515   +Reg_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg_I_DepVar = I_DepVar;
1951516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951517   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1951518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951519   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1951520   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1951521   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1951522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951523   +* Ensmbl29: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 10 of 10;
1951524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951526   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1951527   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1951528   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1951529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951530   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951531   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1951532   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951533   +
1951534   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1951535   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1951536   +
1951537   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1951538   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1951539   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1951540   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1951541   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1951542   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1951543   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1951544   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1951545   +
1951546   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1951547   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1951548   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1951549   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1951550   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1951551   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1951552   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1951553   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1951554   +end;
MPRINT(EM_DIAGRAM):   end;
1951555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1951556   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1951557   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1951558   +   end;
MPRINT(EM_DIAGRAM):   end;
1951559   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1951560   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1951561   +   end;
MPRINT(EM_DIAGRAM):   end;
1951562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1951563   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1951564   +   end;
MPRINT(EM_DIAGRAM):   end;
1951565   +end;
MPRINT(EM_DIAGRAM):   end;
1951566   +
1951567   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1951568   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1951569   +
1951570   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1951571   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1951572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951574   +end;
MPRINT(EM_DIAGRAM):   end;
1951575   +
1951576   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1951577   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1951578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951580   +end;
MPRINT(EM_DIAGRAM):   end;
1951581   +
1951582   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1951583   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1951584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951586   +end;
MPRINT(EM_DIAGRAM):   end;
1951587   +
1951588   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1951589   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1951590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951592   +end;
MPRINT(EM_DIAGRAM):   end;
1951593   +
1951594   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1951595   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1951596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951598   +end;
MPRINT(EM_DIAGRAM):   end;
1951599   +
1951600   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1951601   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1951602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951604   +end;
MPRINT(EM_DIAGRAM):   end;
1951605   +
1951606   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1951607   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1951608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951610   +end;
MPRINT(EM_DIAGRAM):   end;
1951611   +
1951612   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1951613   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1951614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951616   +end;
MPRINT(EM_DIAGRAM):   end;
1951617   +
1951618   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1951619   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1951620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951622   +end;
MPRINT(EM_DIAGRAM):   end;
1951623   +
1951624   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1951625   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1951626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951628   +end;
MPRINT(EM_DIAGRAM):   end;
1951629   +
1951630   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1951631   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1951632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951634   +end;
MPRINT(EM_DIAGRAM):   end;
1951635   +
1951636   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1951637   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1951638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951640   +end;
MPRINT(EM_DIAGRAM):   end;
1951641   +
1951642   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1951643   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1951644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1951645   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1951646   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1951647   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1951648   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1951649   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1951650   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1951651   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1951652   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1951653   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1951654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1951655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951656   +end;
MPRINT(EM_DIAGRAM):   end;
1951657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1951658   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1951659   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1951660   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1951661   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1951662   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1951663   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1951664   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1951665   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1951666   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951667   +         end;
MPRINT(EM_DIAGRAM):   end;
1951668   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1951669   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1951670   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1951671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951672   +            end;
MPRINT(EM_DIAGRAM):   end;
1951673   +         end;
MPRINT(EM_DIAGRAM):   end;
1951674   +      end;
MPRINT(EM_DIAGRAM):   end;
1951675   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1951676   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1951677   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1951678   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951679   +         end;
MPRINT(EM_DIAGRAM):   end;
1951680   +      end;
MPRINT(EM_DIAGRAM):   end;
1951681   +   end;
MPRINT(EM_DIAGRAM):   end;
1951682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1951683   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1951684   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1951685   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951686   +      end;
MPRINT(EM_DIAGRAM):   end;
1951687   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1951688   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1951689   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1951690   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1951691   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1951692   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1951693   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1951694   +         end;
MPRINT(EM_DIAGRAM):   end;
1951695   +      end;
MPRINT(EM_DIAGRAM):   end;
1951696   +   end;
MPRINT(EM_DIAGRAM):   end;
1951697   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1951698   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1951699   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1951700   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1951701   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1951702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1951703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1951704   +   end;
MPRINT(EM_DIAGRAM):   end;
1951705   +end;
MPRINT(EM_DIAGRAM):   end;
1951706   +
1951707   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1951708   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1951709   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1951710   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1951711   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1951712   +end;
MPRINT(EM_DIAGRAM):   end;
1951713   +
1951714   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1951715   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1951716   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1951717   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1951718   +
1951719   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1951720   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1951721   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1951722   +
1951723   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1951724   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1951725   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1951726   +
1951727   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1951728   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1951729   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1951730   +
1951731   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1951732   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1951733   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1951734   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1951735   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1951736   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1951737   +
1951738   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1951739   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1951740   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1951741   +
1951742   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1951743   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1951744   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1951745   +
1951746   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1951747   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1951748   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1951749   +
1951750   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1951751   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1951752   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1951753   +
1951754   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1951755   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1951756   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1951757   +
1951758   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1951759   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1951760   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1951761   +
1951762   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1951763   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1951764   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1951765   +
1951766   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1951767   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1951768   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1951769   +
1951770   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1951771   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1951772   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1951773   +
1951774   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1951775   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1951776   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1951777   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1951778   +
1951779   +REG5DR1:
1951780   +
1951781   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1951782   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1951783   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1951784   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1951785   +end;
MPRINT(EM_DIAGRAM):   end;
1951786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1951787   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1951788   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1951789   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1951790   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1951791   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1951792   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1951793   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1951794   +   end;
MPRINT(EM_DIAGRAM):   end;
1951795   +end;
MPRINT(EM_DIAGRAM):   end;
1951796   +
1951797   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1951798   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1951799   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1951800   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1951801   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1951802   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1951803   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1951804   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1951805   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1951806   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1951807   +end;
MPRINT(EM_DIAGRAM):   end;
1951808   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1951809   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1951810   +
1951811   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951812   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1951813   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1951814   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1951815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951816   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1951817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951818   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1951819   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1951820   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1951821   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1951822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951823   +* Renaming Into variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg5;
1951824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951825   +length Reg5_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg5_I_DepVar $32;
1951826   +drop Reg5_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg5_I_DepVar;
1951827   +Reg5_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg5_I_DepVar = I_DepVar;
1951828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951829   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1951830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951831   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1951832   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1951833   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1951834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951835   +* Ensmbl29: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Voting to produce predicted target;
1951836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951837   +array Ensmbl29_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_post{2} _temporary_;
1951838   +array Ensmbl29_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_count{2} _temporary_;
1951839   +array Ensmbl29_level{2} $32 _temporary_ (
1951840   +"1"
1951841   +"0"
1951842   +);
MPRINT(EM_DIAGRAM):   array Ensmbl29_level{2} $32 _temporary_ ( "1" "0" );
1951843   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1951844   +Ensmbl29_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{i} = 0;
1951845   +Ensmbl29_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{i} = 0;
1951846   +end;
MPRINT(EM_DIAGRAM):   end;
1951847   +if Neural10_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{1} then do;
1951848   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951849   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
1951850   +end;
MPRINT(EM_DIAGRAM):   end;
1951851   +if Neural9_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{1} then do;
1951852   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951853   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
1951854   +end;
MPRINT(EM_DIAGRAM):   end;
1951855   +if Neural7_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{1} then do;
1951856   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951857   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
1951858   +end;
MPRINT(EM_DIAGRAM):   end;
1951859   +if Neural3_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{1} then do;
1951860   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951861   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
1951862   +end;
MPRINT(EM_DIAGRAM):   end;
1951863   +if Neural2_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{1} then do;
1951864   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951865   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
1951866   +end;
MPRINT(EM_DIAGRAM):   end;
1951867   +if Neural_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{1} then do;
1951868   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951869   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
1951870   +end;
MPRINT(EM_DIAGRAM):   end;
1951871   +if Neural4_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{1} then do;
1951872   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951873   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
1951874   +end;
MPRINT(EM_DIAGRAM):   end;
1951875   +if Tree_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{1} then do;
1951876   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951877   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
1951878   +end;
MPRINT(EM_DIAGRAM):   end;
1951879   +if Reg_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{1} then do;
1951880   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951881   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
1951882   +end;
MPRINT(EM_DIAGRAM):   end;
1951883   +if Reg5_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{1} then do;
1951884   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1951885   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
1951886   +end;
MPRINT(EM_DIAGRAM):   end;
1951887   +if Neural10_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{2} then do;
1951888   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951889   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
1951890   +end;
MPRINT(EM_DIAGRAM):   end;
1951891   +if Neural9_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{2} then do;
1951892   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951893   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
1951894   +end;
MPRINT(EM_DIAGRAM):   end;
1951895   +if Neural7_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{2} then do;
1951896   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951897   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
1951898   +end;
MPRINT(EM_DIAGRAM):   end;
1951899   +if Neural3_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{2} then do;
1951900   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951901   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
1951902   +end;
MPRINT(EM_DIAGRAM):   end;
1951903   +if Neural2_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{2} then do;
1951904   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951905   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
1951906   +end;
MPRINT(EM_DIAGRAM):   end;
1951907   +if Neural_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{2} then do;
1951908   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951909   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
1951910   +end;
MPRINT(EM_DIAGRAM):   end;
1951911   +if Neural4_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{2} then do;
1951912   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951913   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
1951914   +end;
MPRINT(EM_DIAGRAM):   end;
1951915   +if Tree_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{2} then do;
1951916   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951917   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
1951918   +end;
MPRINT(EM_DIAGRAM):   end;
1951919   +if Reg_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{2} then do;
1951920   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951921   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
1951922   +end;
MPRINT(EM_DIAGRAM):   end;
1951923   +if Reg5_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{2} then do;
1951924   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1951925   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
1951926   +end;
MPRINT(EM_DIAGRAM):   end;
1951927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951928   +* Ensmbl29: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Determine Into Variable;
1951929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951930   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1951931   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1951932   +vote_count = max(
1951933   +Ensmbl29_count{1} ,
1951934   +Ensmbl29_count{2}
1951935   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl29_count{1} , Ensmbl29_count{2} );
1951936   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1951937   +if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
1951938   +I_DepVar = Ensmbl29_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl29_level{i};
1951939   +vote_post = Ensmbl29_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl29_count{i};
1951940   +end;
MPRINT(EM_DIAGRAM):   end;
1951941   +end;
MPRINT(EM_DIAGRAM):   end;
1951942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951943   +* Ensmbl29: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Compute posterior vars using models predicting the chosen 
level;
1951944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951945   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1951946   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1951947   +if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
1951948   +P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
1951949   +P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
1951950   +end;
MPRINT(EM_DIAGRAM):   end;
1951951   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1951952   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1951953   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1951954   +end;
MPRINT(EM_DIAGRAM):   end;
1951955   +if I_DepVar = Neural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural7_I_DepVar then do;
1951956   +P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
1951957   +P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
1951958   +end;
MPRINT(EM_DIAGRAM):   end;
1951959   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1951960   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1951961   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1951962   +end;
MPRINT(EM_DIAGRAM):   end;
1951963   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1951964   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1951965   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1951966   +end;
MPRINT(EM_DIAGRAM):   end;
1951967   +if I_DepVar = Neural_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural_I_DepVar then do;
1951968   +P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
1951969   +P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
1951970   +end;
MPRINT(EM_DIAGRAM):   end;
1951971   +if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
1951972   +P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
1951973   +P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
1951974   +end;
MPRINT(EM_DIAGRAM):   end;
1951975   +if I_DepVar = Tree_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Tree_I_DepVar then do;
1951976   +P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
1951977   +P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
1951978   +end;
MPRINT(EM_DIAGRAM):   end;
1951979   +if I_DepVar = Reg_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg_I_DepVar then do;
1951980   +P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
1951981   +P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
1951982   +end;
MPRINT(EM_DIAGRAM):   end;
1951983   +if I_DepVar = Reg5_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg5_I_DepVar then do;
1951984   +P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
1951985   +P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
1951986   +end;
MPRINT(EM_DIAGRAM):   end;
1951987   +* Ensmbl29: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Averaging posterior;
1951988   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1951989   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1951990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951991   +* Ensmbl29: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Producing Unformatted variable;
1951992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951993   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1951994   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1951995   +else
1951996   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1951997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1951998   +* Ensmbl29: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing _WARN_ Variable;
1951999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952000   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1952001   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1952002   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1952003   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1952003  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1952004   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1952004  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1952005   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1952005  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1952006   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1952006  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1952007   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1952008   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1952009   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1952010   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1952011   +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1952012   +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1952013   +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1952014   +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1952015   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1952016   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1952017   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1952018   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1952019   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1952020   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1952021   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1952022   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1952023   +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1952024   +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1952025   +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1952026   +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1952027   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1952028   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1952029   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1952030   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1952031   +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1952032   +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1952033   +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1952034   +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1952035   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1952036   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1952037   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1952038   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1952039   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1952040   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1952041   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1952042   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1952043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952044   +* Ensmbl29: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing Residual Vars;
1952045   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952046   +if
1952047   +F_DepVar NE '1'
1952048   +AND F_DepVar NE '0'
1952049   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1952050   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1952051   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1952052   +end;
MPRINT(EM_DIAGRAM):   end;
1952053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952054   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1952055   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1952056   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1952057   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1952058   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1952059   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1952060   +END;
MPRINT(EM_DIAGRAM):   END;
1952061   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1952062    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL29_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1952063    quit;
1952064    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1952065    filename emflow
1952065  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring NEURAL10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952066    *------------------------------------------------------------*;
1952067    * Ensmbl29: Scoring NEURAL10_VALIDATE data;
1952068    *------------------------------------------------------------*;
1952069    data EMWS8.Ensmbl29_VALIDATE
1952070    / view=EMWS8.Ensmbl29_VALIDATE
1952071    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_VALIDATE / view=EMWS8.Ensmbl29_VALIDATE ;
1952072    set EMWS8.Neural10_VALIDATE
1952073    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_VALIDATE ;
1952074    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas.
1952075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952076   +* Ensmbl29: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Combine model for DepVar;
1952077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952078   +* Ensmbl29: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 1 of 10;
1952079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952081   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1952082   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1952083   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1952084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952086   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1952087   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1952088   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1952089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952091   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1952092   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1952093   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1952094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952096   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1952097   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1952098   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1952099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952100   +
1952101   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1952102   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1952102  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1952103   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1952104   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1952105   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1952106   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1952107   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1952108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952109   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1952110   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1952111   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1952112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952114   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1952115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952116   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1952117   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1952118   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1952119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952120   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1952121   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1952122   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1952123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952125   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1952126   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1952127   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1952128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952130   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1952131   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1952132   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1952133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952134   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1952135   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1952136   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1952137   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1952138   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1952139   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1952140   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1952141   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1952142   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1952143   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1952144   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1952145   +LENGTH _WARN_ $4
1952146   +      F_DepVar  $ 12
1952147   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1952148   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1952149   +
1952150   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1952151   +
1952152   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1952153   +
1952154   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1952155   +
1952156   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1952157   +
1952158   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1952159   +
1952160   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1952161   +
1952162   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1952163   +
1952164   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1952165   +
1952166   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1952167   +
1952168   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1952169   +
1952170   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1952171   +
1952172   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1952173   +
1952174   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1952175   +
1952176   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1952177   +
1952178   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1952179   +
1952180   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1952181   +
1952182   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1952183   +
1952184   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1952185   +
1952186   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1952187   +
1952188   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1952189   +
1952190   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1952191   +
1952192   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1952193   +
1952194   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1952195   +
1952196   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1952197   +
1952198   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1952199   +
1952200   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1952201   +
1952202   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1952203   +
1952204   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1952205   +
1952206   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1952207   +
1952208   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1952209   +
1952210   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1952211   +
1952212   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1952213   +
1952214   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1952215   +
1952216   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1952217   +
1952218   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1952219   +
1952220   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1952221   +
1952222   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1952223   +
1952224   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1952225   +
1952226   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1952227   +
1952228   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1952229   +
1952230   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1952231   +
1952232   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1952233   +
1952234   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1952235   +
1952236   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1952237   +
1952238   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1952239   +
1952240   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1952241   +
1952242   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1952243   +
1952244   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1952245   +
1952246   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1952247   +
1952248   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1952249   +
1952250   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1952251   +
1952252   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1952253   +
1952254   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1952255   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1952256   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1952257   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1952258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952260   +end;
MPRINT(EM_DIAGRAM):   end;
1952261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952263   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1952264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1952266   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1952267   +   end;
MPRINT(EM_DIAGRAM):   end;
1952268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1952269   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1952270   +   end;
MPRINT(EM_DIAGRAM):   end;
1952271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952272   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1952273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952275   +   end;
MPRINT(EM_DIAGRAM):   end;
1952276   +end;
MPRINT(EM_DIAGRAM):   end;
1952277   +
1952278   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1952279   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1952280   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1952281   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1952282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952284   +end;
MPRINT(EM_DIAGRAM):   end;
1952285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952287   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1952288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1952290   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1952291   +   end;
MPRINT(EM_DIAGRAM):   end;
1952292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1952293   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1952294   +   end;
MPRINT(EM_DIAGRAM):   end;
1952295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952296   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1952297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952299   +   end;
MPRINT(EM_DIAGRAM):   end;
1952300   +end;
MPRINT(EM_DIAGRAM):   end;
1952301   +
1952302   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1952303   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1952304   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1952305   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1952306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952308   +end;
MPRINT(EM_DIAGRAM):   end;
1952309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952311   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1952312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1952314   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1952315   +   end;
MPRINT(EM_DIAGRAM):   end;
1952316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1952317   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1952318   +   end;
MPRINT(EM_DIAGRAM):   end;
1952319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952320   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1952321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952323   +   end;
MPRINT(EM_DIAGRAM):   end;
1952324   +end;
MPRINT(EM_DIAGRAM):   end;
1952325   +
1952326   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1952327   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1952328   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1952329   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1952330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952332   +end;
MPRINT(EM_DIAGRAM):   end;
1952333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952335   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1952336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1952338   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1952339   +   end;
MPRINT(EM_DIAGRAM):   end;
1952340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1952341   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1952342   +   end;
MPRINT(EM_DIAGRAM):   end;
1952343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952344   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1952345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952347   +   end;
MPRINT(EM_DIAGRAM):   end;
1952348   +end;
MPRINT(EM_DIAGRAM):   end;
1952349   +
1952350   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1952351   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1952352   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1952353   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1952354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952356   +end;
MPRINT(EM_DIAGRAM):   end;
1952357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952359   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1952360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1952362   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1952363   +   end;
MPRINT(EM_DIAGRAM):   end;
1952364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1952365   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1952366   +   end;
MPRINT(EM_DIAGRAM):   end;
1952367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952368   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1952369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952371   +   end;
MPRINT(EM_DIAGRAM):   end;
1952372   +end;
MPRINT(EM_DIAGRAM):   end;
1952373   +
1952374   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1952375   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1952376   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1952377   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1952378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952380   +end;
MPRINT(EM_DIAGRAM):   end;
1952381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952383   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1952384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1952386   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1952387   +   end;
MPRINT(EM_DIAGRAM):   end;
1952388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1952389   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1952390   +   end;
MPRINT(EM_DIAGRAM):   end;
1952391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952392   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1952393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952395   +   end;
MPRINT(EM_DIAGRAM):   end;
1952396   +end;
MPRINT(EM_DIAGRAM):   end;
1952397   +
1952398   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1952399   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1952400   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1952401   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1952402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952404   +end;
MPRINT(EM_DIAGRAM):   end;
1952405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1952407   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1952408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952409   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1952410   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1952411   +   end;
MPRINT(EM_DIAGRAM):   end;
1952412   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1952413   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1952414   +   end;
MPRINT(EM_DIAGRAM):   end;
1952415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952416   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1952417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952419   +   end;
MPRINT(EM_DIAGRAM):   end;
1952420   +end;
MPRINT(EM_DIAGRAM):   end;
1952421   +
1952422   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1952423   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1952424   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1952425   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1952426   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1952427   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1952428   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1952429   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1952430   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1952431   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1952432   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1952433   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1952434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952436   +end;
MPRINT(EM_DIAGRAM):   end;
1952437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952438   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1952439   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1952440   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952441   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1952442   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1952443   +   end;
MPRINT(EM_DIAGRAM):   end;
1952444   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1952445   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1952446   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1952447   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1952448   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1952449   +   end;
MPRINT(EM_DIAGRAM):   end;
1952450   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1952451   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1952452   +   end;
MPRINT(EM_DIAGRAM):   end;
1952453   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1952454   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1952455   +   end;
MPRINT(EM_DIAGRAM):   end;
1952456   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1952457   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1952458   +   end;
MPRINT(EM_DIAGRAM):   end;
1952459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952460   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1952461   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1952462   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1952463   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1952464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952466   +   end;
MPRINT(EM_DIAGRAM):   end;
1952467   +end;
MPRINT(EM_DIAGRAM):   end;
1952468   +
1952469   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1952470   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1952471   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1952472   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1952473   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1952474   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1952475   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1952476   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1952477   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1952478   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1952479   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1952480   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1952481   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1952482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1952483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952484   +end;
MPRINT(EM_DIAGRAM):   end;
1952485   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952486   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1952487   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1952488   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952489   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1952490   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1952491   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1952492   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1952493   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1952494   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1952495   +         end;
MPRINT(EM_DIAGRAM):   end;
1952496   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1952497   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1952498   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1952499   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1952500   +            end;
MPRINT(EM_DIAGRAM):   end;
1952501   +         end;
MPRINT(EM_DIAGRAM):   end;
1952502   +      end;
MPRINT(EM_DIAGRAM):   end;
1952503   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1952504   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1952505   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1952506   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1952507   +         end;
MPRINT(EM_DIAGRAM):   end;
1952508   +      end;
MPRINT(EM_DIAGRAM):   end;
1952509   +   end;
MPRINT(EM_DIAGRAM):   end;
1952510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952511   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1952512   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1952513   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1952514   +      end;
MPRINT(EM_DIAGRAM):   end;
1952515   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1952516   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1952517   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1952518   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1952519   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1952520   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1952521   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1952522   +         end;
MPRINT(EM_DIAGRAM):   end;
1952523   +      end;
MPRINT(EM_DIAGRAM):   end;
1952524   +   end;
MPRINT(EM_DIAGRAM):   end;
1952525   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1952526   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1952527   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1952528   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1952529   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1952530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1952531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952532   +   end;
MPRINT(EM_DIAGRAM):   end;
1952533   +end;
MPRINT(EM_DIAGRAM):   end;
1952534   +
1952535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952536   +*** Checking missing input Interval
1952537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1952538   +
1952539   +IF NMISS(
1952540   +   AcceptedCmpTotal ,
1952541   +   Age ,
1952542   +   Frq ,
1952543   +   Income ,
1952544   +   Kidhome ,
1952545   +   Mnt ,
1952546   +   MntFishProducts ,
1952547   +   MntFruits ,
1952548   +   MntGoldProds ,
1952549   +   MntMeatProducts ,
1952550   +   MntSweetProducts ,
1952551   +   MntWines ,
1952552   +   MonthsAsCustomer ,
1952553   +   NumCatalogPurchases ,
1952554   +   NumDealsPurchases ,
1952555   +   NumDistPurchases ,
1952556   +   NumStorePurchases ,
1952557   +   NumWebPurchases ,
1952558   +   NumWebVisitsMonth ,
1952559   +   RFMstat ,
1952560   +   RMntFrq ,
1952561   +   Recency ,
1952562   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1952563   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1952564   +
1952565   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1952566   +END;
MPRINT(EM_DIAGRAM):   END;
1952567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952568   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1952569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1952571   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1952572   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1952573   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1952574   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1952575   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1952576   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1952577   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1952578   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1952579   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1952580   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1952581   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1952582   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1952583   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1952584   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1952585   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1952586   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1952587   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1952588   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1952589   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1952590   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1952591   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1952592   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1952593   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1952594   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1952595   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1952596   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1952597   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1952598   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1952599   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1952600   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1952601   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1952602   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1952603   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1952604   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1952605   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1952606   +END;
MPRINT(EM_DIAGRAM):   END;
1952607   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1952608   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1952609   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1952610   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1952611   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1952612   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1952613   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1952614   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1952615   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1952616   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1952617   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1952618   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1952619   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1952620   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1952621   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1952622   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1952623   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1952624   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1952625   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1952626   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1952627   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1952628   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1952629   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1952630   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1952631   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1952632   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1952633   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1952634   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1952635   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1952636   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1952637   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1952638   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1952639   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
The SAS System

1952640   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1952641   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1952642   +   ELSE S_NumCatalogPurchases
1952643   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1952644   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1952645   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1952646   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1952647   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1952648   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1952649   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1952650   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1952651   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1952652   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1952653   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1952654   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1952655   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1952656   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1952657   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1952658   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1952659   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1952660   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1952661   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1952662   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1952663   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1952664   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1952665   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1952666   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1952667   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1952668   +END;
MPRINT(EM_DIAGRAM):   END;
1952669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952670   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1952671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952673   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1952674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952676   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1952677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952678   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1952679   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
1952680   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
1952681   +        S_Income  +    -0.43070069114587 * S_Kidhome
1952682   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
1952683   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
1952684   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
1952685   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
1952686   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
1952687   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
1952688   +          +    -0.21858146166244 * S_NumDealsPurchases
1952689   +          +     0.18409991080913 * S_NumDistPurchases
1952690   +          +     0.35683163455594 * S_NumStorePurchases
1952691   +          +     0.24429183714976 * S_NumWebPurchases
1952692   +          +     -0.1263739191616 * S_NumWebVisitsMonth
1952693   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
1952694   +        S_RMntFrq  +      0.3452503815146 * S_Recency
1952695   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
1952696   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
1952697   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
1952698   +        S_Income  +     0.24623934031778 * S_Kidhome
1952699   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
1952700   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
1952701   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
1952702   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
1952703   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
1952704   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
1952705   +          +    -0.08125614129909 * S_NumDealsPurchases
1952706   +          +     0.38003696656333 * S_NumDistPurchases
1952707   +          +     0.22006494588298 * S_NumStorePurchases
1952708   +          +     0.26217639358993 * S_NumWebPurchases
1952709   +          +    -0.56905781005459 * S_NumWebVisitsMonth
1952710   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
1952711   +        S_RMntFrq  +     0.33060213336674 * S_Recency
1952712   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
1952713   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
1952714   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
1952715   +        S_Income  +     0.18597632724783 * S_Kidhome
1952716   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
1952717   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
1952718   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
1952719   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
1952720   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
1952721   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
1952722   +          +     0.08121213946217 * S_NumDealsPurchases
1952723   +          +    -0.04963282234139 * S_NumDistPurchases
1952724   +          +    -0.09521586837775 * S_NumStorePurchases
1952725   +          +     0.00630626523742 * S_NumWebPurchases
1952726   +          +    -0.03891587920939 * S_NumWebVisitsMonth
1952727   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
1952728   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
1952729   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
1952730   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
1952731   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
1952732   +        S_Income  +     0.25356767518099 * S_Kidhome
1952733   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
1952734   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
1952735   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
1952736   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
1952737   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
1952738   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
1952739   +          +     0.83749876944877 * S_NumDealsPurchases
1952740   +          +     0.29636537008068 * S_NumDistPurchases
1952741   +          +    -0.61202052257506 * S_NumStorePurchases
1952742   +          +    -0.96921731415369 * S_NumWebPurchases
1952743   +          +     0.10056455703323 * S_NumWebVisitsMonth
1952744   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
1952745   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
1952746   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
1952747   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
1952748   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
1952749   +        S_Income  +    -0.66239517276633 * S_Kidhome
1952750   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
1952751   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
1952752   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
1952753   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
1952754   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
1952755   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
1952756   +          +     0.63122884753912 * S_NumDealsPurchases
1952757   +          +     0.00285388491049 * S_NumDistPurchases
1952758   +          +    -0.76222252593182 * S_NumStorePurchases
1952759   +          +    -0.71485070772733 * S_NumWebPurchases
1952760   +          +     1.59020450778179 * S_NumWebVisitsMonth
1952761   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
1952762   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
1952763   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
1952764   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
1952765   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
1952766   +        S_Income  +    -0.22662005590555 * S_Kidhome
1952767   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
1952768   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
1952769   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
1952770   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
1952771   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
1952772   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
1952773   +          +    -0.28143084367284 * S_NumDealsPurchases
1952774   +          +     0.09640746756361 * S_NumDistPurchases
1952775   +          +      0.1754994442449 * S_NumStorePurchases
1952776   +          +     0.14321475617403 * S_NumWebPurchases
1952777   +          +     -0.1908048876137 * S_NumWebVisitsMonth
1952778   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
1952779   +        S_RMntFrq  +     0.02280616139018 * S_Recency
1952780   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
1952781   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
1952782   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
1952783   +        S_Income  +    -0.45643247613458 * S_Kidhome
1952784   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
1952785   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
1952786   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
1952787   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
1952788   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
1952789   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
1952790   +          +    -0.14623073736275 * S_NumDealsPurchases
1952791   +          +      0.1591142102614 * S_NumDistPurchases
1952792   +          +     0.10364624011419 * S_NumStorePurchases
1952793   +          +     0.21545343951201 * S_NumWebPurchases
1952794   +          +     0.61096997379603 * S_NumWebVisitsMonth
1952795   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
1952796   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
1952797   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
1952798   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
1952799   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
1952800   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
1952801   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
1952802   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
1952803   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
1952804   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
1952805   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
1952806   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
1952807   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
1952808   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
1952809   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
1952810   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
1952811   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
1952812   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
1952813   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
1952814   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
1952815   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
1952816   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
1952817   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
1952818   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
1952819   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
1952820   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
1952821   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
1952822   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
1952823   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
1952824   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
1952825   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
1952826   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
1952827   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
1952828   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
1952829   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
1952830   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
1952831   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
1952832   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
1952833   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
1952834   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
1952835   +        EducationGraduation  +     0.00389495660452 * EducationMaster
1952836   +          +     0.39856598367829 * Marital_StatusDivorced
1952837   +          +    -0.45922754552461 * Marital_StatusMarried
1952838   +          +     0.41270195301891 * Marital_StatusSingle
1952839   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
1952840   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
1952841   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
1952842   +        EducationGraduation  +      0.2609956614651 * EducationMaster
1952843   +          +     0.12002180366932 * Marital_StatusDivorced
1952844   +          +     0.50693056076018 * Marital_StatusMarried
1952845   +          +    -0.40828651697464 * Marital_StatusSingle
1952846   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
1952847   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
1952848   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
1952849   +        EducationGraduation  +     0.20017847825938 * EducationMaster
1952850   +          +    -0.05075621283629 * Marital_StatusDivorced
1952851   +          +     0.06731276969307 * Marital_StatusMarried
1952852   +          +     0.20458391966582 * Marital_StatusSingle
1952853   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
1952854   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
1952855   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
1952856   +        EducationGraduation  +     0.28829384238085 * EducationMaster
1952857   +          +    -0.37925185401218 * Marital_StatusDivorced
1952858   +          +     0.62971134740586 * Marital_StatusMarried
1952859   +          +    -0.36562351730859 * Marital_StatusSingle
1952860   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
1952861   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
1952862   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
1952863   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
1952864   +          +     0.84382044664305 * Marital_StatusDivorced
1952865   +          +    -0.84062627203871 * Marital_StatusMarried
1952866   +          +     0.74100406031127 * Marital_StatusSingle
1952867   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
1952868   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
1952869   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
1952870   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
1952871   +          +     -0.1195105091383 * Marital_StatusDivorced
1952872   +          +    -0.13486422945269 * Marital_StatusMarried
1952873   +          +     0.33592403429156 * Marital_StatusSingle
1952874   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
1952875   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
1952876   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
1952877   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
1952878   +          +     0.14792293029589 * Marital_StatusDivorced
1952879   +          +    -0.96003393582564 * Marital_StatusMarried
1952880   +          +     0.64637652355384 * Marital_StatusSingle
1952881   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
1952882   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
1952883   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
1952884   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
1952885   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
1952886   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
1952887   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
1952888   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
1952889   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1952890   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1952891   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1952892   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1952893   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1952894   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1952895   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1952896   +END;
MPRINT(EM_DIAGRAM):   END;
1952897   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1952898   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1952899   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1952900   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1952901   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1952902   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1952903   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1952904   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1952905   +END;
MPRINT(EM_DIAGRAM):   END;
1952906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952907   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1952908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952909   +
1952910   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1952911   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1952912   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1952913   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1952914   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1952915   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1952916   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1952917   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1952918   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1952919   +end;
MPRINT(EM_DIAGRAM):   end;
1952920   +else do;
MPRINT(EM_DIAGRAM):   else do;
1952921   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1952922   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1952923   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1952924   +   end;
MPRINT(EM_DIAGRAM):   end;
1952925   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1952926   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1952927   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1952928   +   end;
MPRINT(EM_DIAGRAM):   end;
1952929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1952930   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1952931   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1952932   +   end;
MPRINT(EM_DIAGRAM):   end;
1952933   +end;
MPRINT(EM_DIAGRAM):   end;
1952934   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1952935   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
1952936   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
1952937   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
1952938   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
1952939   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
1952940   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1952941   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1952942   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1952943   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1952944   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1952945   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1952946   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1952947   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1952948   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1952949   +END;
MPRINT(EM_DIAGRAM):   END;
1952950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1952951   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1952952   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1952953   +END;
MPRINT(EM_DIAGRAM):   END;
1952954   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1952955   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1952956   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1952957   +END;
MPRINT(EM_DIAGRAM):   END;
1952958   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1952959   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1952960   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1952961   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1952962   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1952963   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1952964   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1952965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952966   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1952967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1952968   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1952969   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1952970   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1952971   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1952972   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1952973   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1952974   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1952975   +END;
MPRINT(EM_DIAGRAM):   END;
1952976   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1952977   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1952978   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1952979   +drop
1952980   +H11
1952981   +H12
1952982   +H13
1952983   +H14
1952984   +H15
1952985   +H16
1952986   +H17
1952987   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1952988   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1952989   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1952990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952991   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1952992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952993   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1952994   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1952995   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1952996   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1952997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1952998   +* Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
1952999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953000   +length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
1953001   +drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
1953002   +Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
1953003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953004   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1953005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953006   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1953007   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1953008   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1953009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953010   +* Ensmbl29: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 2 of 10;
1953011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953013   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1953014   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1953015   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1953016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953017   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1953018   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1953019   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1953020   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1953021   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1953022   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1953023   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1953024   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1953025   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1953026   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1953027   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1953028   +LENGTH _WARN_ $4
1953029   +      F_DepVar  $ 12
1953030   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1953031   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1953032   +
1953033   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1953034   +
1953035   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1953036   +
1953037   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1953038   +
1953039   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1953040   +
1953041   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1953042   +
1953043   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1953044   +
1953045   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1953046   +
1953047   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1953048   +
1953049   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1953050   +
1953051   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1953052   +
1953053   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1953054   +
1953055   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1953056   +
1953057   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1953058   +
1953059   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1953060   +
1953061   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1953062   +
1953063   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1953064   +
1953065   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1953066   +
1953067   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1953068   +
1953069   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1953070   +
1953071   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1953072   +
1953073   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1953074   +
1953075   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1953076   +
1953077   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1953078   +
1953079   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1953080   +
1953081   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1953082   +
1953083   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1953084   +
1953085   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1953086   +
1953087   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1953088   +
1953089   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1953090   +
1953091   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1953092   +
1953093   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1953094   +
1953095   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1953096   +
1953097   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1953098   +
1953099   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1953100   +
1953101   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1953102   +
1953103   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1953104   +
1953105   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1953106   +
1953107   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1953108   +
1953109   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1953110   +
1953111   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1953112   +
1953113   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1953114   +
1953115   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1953116   +
1953117   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1953118   +
1953119   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1953120   +
1953121   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1953122   +
1953123   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1953124   +
1953125   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1953126   +
1953127   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1953128   +
1953129   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1953130   +
1953131   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1953132   +
1953133   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1953134   +
1953135   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1953136   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1953137   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1953138   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1953139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953141   +end;
MPRINT(EM_DIAGRAM):   end;
1953142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953144   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1953145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953146   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953147   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1953148   +   end;
MPRINT(EM_DIAGRAM):   end;
1953149   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953150   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1953151   +   end;
MPRINT(EM_DIAGRAM):   end;
1953152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953153   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1953154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953156   +   end;
MPRINT(EM_DIAGRAM):   end;
1953157   +end;
MPRINT(EM_DIAGRAM):   end;
1953158   +
1953159   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1953160   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1953161   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1953162   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1953163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953165   +end;
MPRINT(EM_DIAGRAM):   end;
1953166   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953167   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953168   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1953169   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953170   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953171   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1953172   +   end;
MPRINT(EM_DIAGRAM):   end;
1953173   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953174   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1953175   +   end;
MPRINT(EM_DIAGRAM):   end;
1953176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953177   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1953178   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953179   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953180   +   end;
MPRINT(EM_DIAGRAM):   end;
1953181   +end;
MPRINT(EM_DIAGRAM):   end;
1953182   +
1953183   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1953184   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1953185   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1953186   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1953187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953189   +end;
MPRINT(EM_DIAGRAM):   end;
1953190   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953191   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953192   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1953193   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953194   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953195   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1953196   +   end;
MPRINT(EM_DIAGRAM):   end;
1953197   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953198   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1953199   +   end;
MPRINT(EM_DIAGRAM):   end;
1953200   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953201   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1953202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953204   +   end;
MPRINT(EM_DIAGRAM):   end;
1953205   +end;
MPRINT(EM_DIAGRAM):   end;
1953206   +
1953207   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1953208   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1953209   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1953210   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1953211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953213   +end;
MPRINT(EM_DIAGRAM):   end;
1953214   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953215   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953216   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1953217   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953218   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953219   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1953220   +   end;
MPRINT(EM_DIAGRAM):   end;
1953221   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953222   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1953223   +   end;
MPRINT(EM_DIAGRAM):   end;
1953224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953225   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1953226   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953227   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953228   +   end;
MPRINT(EM_DIAGRAM):   end;
1953229   +end;
MPRINT(EM_DIAGRAM):   end;
1953230   +
1953231   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1953232   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1953233   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1953234   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1953235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953237   +end;
MPRINT(EM_DIAGRAM):   end;
1953238   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953240   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1953241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953242   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953243   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1953244   +   end;
MPRINT(EM_DIAGRAM):   end;
1953245   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953246   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1953247   +   end;
MPRINT(EM_DIAGRAM):   end;
1953248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953249   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1953250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953252   +   end;
MPRINT(EM_DIAGRAM):   end;
1953253   +end;
MPRINT(EM_DIAGRAM):   end;
1953254   +
1953255   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1953256   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1953257   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1953258   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1953259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953261   +end;
MPRINT(EM_DIAGRAM):   end;
1953262   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953264   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1953265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953266   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953267   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1953268   +   end;
MPRINT(EM_DIAGRAM):   end;
1953269   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953270   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1953271   +   end;
MPRINT(EM_DIAGRAM):   end;
1953272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953273   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1953274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953276   +   end;
MPRINT(EM_DIAGRAM):   end;
1953277   +end;
MPRINT(EM_DIAGRAM):   end;
1953278   +
1953279   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1953280   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1953281   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1953282   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1953283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953285   +end;
MPRINT(EM_DIAGRAM):   end;
1953286   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953288   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1953289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953290   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1953291   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1953292   +   end;
MPRINT(EM_DIAGRAM):   end;
1953293   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1953294   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1953295   +   end;
MPRINT(EM_DIAGRAM):   end;
1953296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953297   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1953298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953300   +   end;
MPRINT(EM_DIAGRAM):   end;
1953301   +end;
MPRINT(EM_DIAGRAM):   end;
1953302   +
1953303   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1953304   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1953305   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1953306   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1953307   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1953308   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1953309   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1953310   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1953311   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1953312   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1953313   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1953314   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1953315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953317   +end;
MPRINT(EM_DIAGRAM):   end;
1953318   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953319   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1953320   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1953321   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953322   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1953323   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1953324   +   end;
MPRINT(EM_DIAGRAM):   end;
1953325   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1953326   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1953327   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1953328   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1953329   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1953330   +   end;
MPRINT(EM_DIAGRAM):   end;
1953331   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1953332   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1953333   +   end;
MPRINT(EM_DIAGRAM):   end;
1953334   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1953335   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1953336   +   end;
MPRINT(EM_DIAGRAM):   end;
1953337   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1953338   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1953339   +   end;
MPRINT(EM_DIAGRAM):   end;
1953340   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953341   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1953342   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1953343   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1953344   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1953345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953347   +   end;
MPRINT(EM_DIAGRAM):   end;
1953348   +end;
MPRINT(EM_DIAGRAM):   end;
1953349   +
1953350   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1953351   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1953352   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1953353   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1953354   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1953355   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1953356   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1953357   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1953358   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1953359   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1953360   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1953361   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1953362   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1953363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953365   +end;
MPRINT(EM_DIAGRAM):   end;
1953366   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953367   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1953368   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1953369   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953370   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1953371   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1953372   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1953373   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1953374   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1953375   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1953376   +         end;
MPRINT(EM_DIAGRAM):   end;
1953377   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1953378   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1953379   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1953380   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1953381   +            end;
MPRINT(EM_DIAGRAM):   end;
1953382   +         end;
MPRINT(EM_DIAGRAM):   end;
1953383   +      end;
MPRINT(EM_DIAGRAM):   end;
1953384   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1953385   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1953386   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1953387   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1953388   +         end;
MPRINT(EM_DIAGRAM):   end;
1953389   +      end;
MPRINT(EM_DIAGRAM):   end;
1953390   +   end;
MPRINT(EM_DIAGRAM):   end;
1953391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953392   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1953393   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1953394   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1953395   +      end;
MPRINT(EM_DIAGRAM):   end;
1953396   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1953397   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1953398   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1953399   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1953400   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1953401   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1953402   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1953403   +         end;
MPRINT(EM_DIAGRAM):   end;
1953404   +      end;
MPRINT(EM_DIAGRAM):   end;
1953405   +   end;
MPRINT(EM_DIAGRAM):   end;
1953406   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1953407   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1953408   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1953409   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1953410   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1953411   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1953412   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953413   +   end;
MPRINT(EM_DIAGRAM):   end;
1953414   +end;
MPRINT(EM_DIAGRAM):   end;
1953415   +
1953416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953417   +*** Checking missing input Interval
1953418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1953419   +
1953420   +IF NMISS(
1953421   +   AcceptedCmpTotal ,
1953422   +   Age ,
1953423   +   Frq ,
1953424   +   Income ,
1953425   +   Kidhome ,
1953426   +   Mnt ,
1953427   +   MntFishProducts ,
1953428   +   MntFruits ,
1953429   +   MntGoldProds ,
1953430   +   MntMeatProducts ,
1953431   +   MntSweetProducts ,
1953432   +   MntWines ,
1953433   +   MonthsAsCustomer ,
1953434   +   NumCatalogPurchases ,
1953435   +   NumDealsPurchases ,
1953436   +   NumDistPurchases ,
1953437   +   NumStorePurchases ,
1953438   +   NumWebPurchases ,
1953439   +   NumWebVisitsMonth ,
1953440   +   RFMstat ,
1953441   +   RMntFrq ,
1953442   +   Recency ,
1953443   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1953444   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1953445   +
1953446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953447   +END;
MPRINT(EM_DIAGRAM):   END;
1953448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953449   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1953450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1953452   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1953453   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1953454   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1953455   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1953456   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1953457   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1953458   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1953459   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1953460   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1953461   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1953462   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1953463   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1953464   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1953465   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1953466   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1953467   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1953468   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1953469   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1953470   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1953471   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1953472   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1953473   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1953474   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1953475   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1953476   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1953477   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1953478   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1953479   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1953480   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1953481   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1953482   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1953483   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1953484   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1953485   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1953486   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1953487   +END;
MPRINT(EM_DIAGRAM):   END;
1953488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1953489   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1953490   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1953491   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1953492   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1953493   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1953494   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1953495   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1953496   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1953497   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1953498   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1953499   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1953500   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1953501   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1953502   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1953503   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1953504   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1953505   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1953506   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1953507   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1953508   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1953509   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1953510   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1953511   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1953512   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1953513   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1953514   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1953515   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1953516   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1953517   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1953518   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1953519   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1953520   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1953521   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1953522   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1953523   +   ELSE S_NumCatalogPurchases
1953524   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1953525   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1953526   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1953527   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1953528   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1953529   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1953530   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1953531   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1953532   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1953533   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1953534   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1953535   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1953536   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1953537   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1953538   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1953539   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1953540   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1953541   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1953542   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1953543   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1953544   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1953545   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1953546   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1953547   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1953548   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1953549   +END;
MPRINT(EM_DIAGRAM):   END;
1953550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953551   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1953552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953554   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1953555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953557   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1953558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953559   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1953560   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1953561   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1953562   +        S_Income  +    -0.14142658616971 * S_Kidhome
1953563   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1953564   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1953565   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1953566   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1953567   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1953568   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1953569   +          +     0.96837841774168 * S_NumDealsPurchases
1953570   +          +      0.2846105381881 * S_NumDistPurchases
1953571   +          +    -0.69514041792943 * S_NumStorePurchases
1953572   +          +    -0.96425407351749 * S_NumWebPurchases
1953573   +          +     0.79545449599683 * S_NumWebVisitsMonth
1953574   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1953575   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1953576   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1953577   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1953578   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1953579   +        S_Income  +    -0.55432195959203 * S_Kidhome
1953580   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1953581   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1953582   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1953583   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1953584   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1953585   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1953586   +          +      0.2190184330724 * S_NumDealsPurchases
1953587   +          +    -0.01682909442896 * S_NumDistPurchases
1953588   +          +    -0.70244951048552 * S_NumStorePurchases
1953589   +          +     -0.3057457659316 * S_NumWebPurchases
1953590   +          +     0.95928538762715 * S_NumWebVisitsMonth
1953591   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1953592   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1953593   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1953594   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1953595   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1953596   +        S_Income  +    -0.06354861159882 * S_Kidhome
1953597   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1953598   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1953599   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1953600   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1953601   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1953602   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1953603   +          +    -0.21394230159696 * S_NumDealsPurchases
1953604   +          +    -0.23833771124663 * S_NumDistPurchases
1953605   +          +     0.45832031017813 * S_NumStorePurchases
1953606   +          +    -0.30226952040179 * S_NumWebPurchases
1953607   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1953608   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1953609   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1953610   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
1953611   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1953612   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1953613   +        S_Income  +    -0.04839586846715 * S_Kidhome
1953614   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1953615   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1953616   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1953617   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1953618   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1953619   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1953620   +          +    -0.43749647771198 * S_NumDealsPurchases
1953621   +          +     0.21263473847472 * S_NumDistPurchases
1953622   +          +     0.26102168039141 * S_NumStorePurchases
1953623   +          +     0.54921725943657 * S_NumWebPurchases
1953624   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1953625   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1953626   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1953627   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1953628   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1953629   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1953630   +        S_Income  +     0.71499527198653 * S_Kidhome
1953631   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1953632   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1953633   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1953634   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1953635   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1953636   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1953637   +          +     0.09436067776126 * S_NumDealsPurchases
1953638   +          +    -0.02824201859641 * S_NumDistPurchases
1953639   +          +    -0.06770433780564 * S_NumStorePurchases
1953640   +          +    -0.07177620319715 * S_NumWebPurchases
1953641   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1953642   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1953643   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1953644   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1953645   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1953646   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1953647   +        S_Income  +    -0.63474522042341 * S_Kidhome
1953648   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1953649   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1953650   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1953651   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1953652   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1953653   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1953654   +          +    -0.51154511343396 * S_NumDealsPurchases
1953655   +          +    -0.52422915823572 * S_NumDistPurchases
1953656   +          +     0.30305498422357 * S_NumStorePurchases
1953657   +          +     0.12197321559338 * S_NumWebPurchases
1953658   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1953659   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1953660   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1953661   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1953662   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1953663   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1953664   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1953665   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1953666   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
1953667   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1953668   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1953669   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1953670   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1953671   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
1953672   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1953673   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1953674   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1953675   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1953676   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
1953677   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1953678   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1953679   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1953680   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1953681   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
1953682   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1953683   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1953684   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1953685   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1953686   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
1953687   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1953688   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1953689   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1953690   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1953691   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
1953692   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1953693   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1953694   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1953695   +          +     0.10234616400375 * Marital_StatusDivorced
1953696   +          +     0.27961650739075 * Marital_StatusMarried
1953697   +          +    -0.40239488723767 * Marital_StatusSingle
1953698   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1953699   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1953700   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1953701   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1953702   +          +     0.46385792428023 * Marital_StatusDivorced
1953703   +          +    -0.62344590646391 * Marital_StatusMarried
1953704   +          +     0.61767209252062 * Marital_StatusSingle
1953705   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1953706   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1953707   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1953708   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1953709   +          +    -0.07839612590836 * Marital_StatusDivorced
1953710   +          +     0.35316864062221 * Marital_StatusMarried
1953711   +          +    -0.10730136429834 * Marital_StatusSingle
1953712   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1953713   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1953714   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1953715   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1953716   +          +    -0.09942175269886 * Marital_StatusDivorced
1953717   +          +     0.24385460865335 * Marital_StatusMarried
1953718   +          +    -0.33658955096296 * Marital_StatusSingle
1953719   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1953720   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1953721   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1953722   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1953723   +          +    -0.08047852561096 * Marital_StatusDivorced
1953724   +          +     1.16485862694561 * Marital_StatusMarried
1953725   +          +    -0.94140251178566 * Marital_StatusSingle
1953726   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1953727   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1953728   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1953729   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1953730   +          +    -0.16621963893391 * Marital_StatusDivorced
1953731   +          +    -0.44542186297324 * Marital_StatusMarried
1953732   +          +     0.42176133228308 * Marital_StatusSingle
1953733   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1953734   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1953735   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1953736   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1953737   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1953738   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1953739   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1953740   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1953741   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1953742   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1953743   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1953744   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1953745   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1953746   +END;
MPRINT(EM_DIAGRAM):   END;
1953747   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1953748   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1953749   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1953750   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1953751   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1953752   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1953753   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1953754   +END;
MPRINT(EM_DIAGRAM):   END;
1953755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953756   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1953757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953758   +
1953759   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1953760   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1953761   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1953762   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1953763   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1953764   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953765   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1953766   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1953767   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1953768   +end;
MPRINT(EM_DIAGRAM):   end;
1953769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953770   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1953771   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1953772   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1953773   +   end;
MPRINT(EM_DIAGRAM):   end;
1953774   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1953775   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1953776   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1953777   +   end;
MPRINT(EM_DIAGRAM):   end;
1953778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953779   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1953780   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1953781   +   end;
MPRINT(EM_DIAGRAM):   end;
1953782   +end;
MPRINT(EM_DIAGRAM):   end;
1953783   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1953784   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1953785   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1953786   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
1953787   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1953788   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1953789   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1953790   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1953791   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1953792   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1953793   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1953794   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1953795   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1953796   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1953797   +END;
MPRINT(EM_DIAGRAM):   END;
1953798   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1953799   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1953800   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1953801   +END;
MPRINT(EM_DIAGRAM):   END;
1953802   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1953803   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1953804   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1953805   +END;
MPRINT(EM_DIAGRAM):   END;
1953806   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1953807   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1953808   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1953809   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1953810   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1953811   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1953812   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1953813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953814   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1953815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1953816   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1953817   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1953818   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1953819   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1953820   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1953821   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1953822   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1953823   +END;
MPRINT(EM_DIAGRAM):   END;
1953824   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1953825   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1953826   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1953827   +drop
1953828   +H11
1953829   +H12
1953830   +H13
1953831   +H14
1953832   +H15
1953833   +H16
1953834   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1953835   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1953836   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1953837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953838   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1953839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953840   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1953841   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1953842   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1953843   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1953844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953845   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1953846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953847   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1953848   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1953849   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1953850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953851   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1953852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953853   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1953854   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1953855   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1953856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953857   +* Ensmbl29: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 3 of 10;
1953858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953860   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1953861   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1953862   +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
1953863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1953864   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1953865   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1953866   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1953867   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1953868   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1953869   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1953870   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1953871   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1953872   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1953873   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1953874   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1953875   +LENGTH _WARN_ $4
1953876   +      F_DepVar  $ 12
1953877   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1953878   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1953879   +
1953880   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1953881   +
1953882   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1953883   +
1953884   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1953885   +
1953886   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1953887   +
1953888   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1953889   +
1953890   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1953891   +
1953892   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1953893   +
1953894   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1953895   +
1953896   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1953897   +
1953898   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1953899   +
1953900   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1953901   +
1953902   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1953903   +
1953904   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1953905   +
1953906   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1953907   +
1953908   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1953909   +
1953910   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1953911   +
1953912   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1953913   +
1953914   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1953915   +
1953916   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1953917   +
1953918   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1953919   +
1953920   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1953921   +
1953922   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1953923   +
1953924   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1953925   +
1953926   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1953927   +
1953928   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1953929   +
1953930   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1953931   +
1953932   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1953933   +
1953934   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1953935   +
1953936   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1953937   +
1953938   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1953939   +
1953940   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1953941   +
1953942   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1953943   +
1953944   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1953945   +
1953946   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1953947   +
1953948   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1953949   +
1953950   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1953951   +
1953952   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1953953   +
1953954   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1953955   +
1953956   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1953957   +
1953958   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1953959   +
1953960   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1953961   +
1953962   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1953963   +
1953964   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1953965   +
1953966   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1953967   +
1953968   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1953969   +
1953970   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1953971   +
1953972   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1953973   +
1953974   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1953975   +
1953976   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1953977   +
1953978   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1953979   +
1953980   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1953981   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1953982   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1953983   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1953984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1953985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1953986   +end;
MPRINT(EM_DIAGRAM):   end;
1953987   +else do;
MPRINT(EM_DIAGRAM):   else do;
1953988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1953989   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1953990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1953991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1953992   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1953993   +   end;
MPRINT(EM_DIAGRAM):   end;
1953994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1953995   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1953996   +   end;
MPRINT(EM_DIAGRAM):   end;
1953997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1953998   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1953999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954001   +   end;
MPRINT(EM_DIAGRAM):   end;
1954002   +end;
MPRINT(EM_DIAGRAM):   end;
1954003   +
1954004   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1954005   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1954006   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1954007   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1954008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954010   +end;
MPRINT(EM_DIAGRAM):   end;
1954011   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954013   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1954014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954016   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1954017   +   end;
MPRINT(EM_DIAGRAM):   end;
1954018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954019   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1954020   +   end;
MPRINT(EM_DIAGRAM):   end;
1954021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954022   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1954023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954025   +   end;
MPRINT(EM_DIAGRAM):   end;
1954026   +end;
MPRINT(EM_DIAGRAM):   end;
1954027   +
1954028   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1954029   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1954030   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1954031   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1954032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954034   +end;
MPRINT(EM_DIAGRAM):   end;
1954035   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954037   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1954038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954039   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954040   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1954041   +   end;
MPRINT(EM_DIAGRAM):   end;
1954042   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954043   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1954044   +   end;
MPRINT(EM_DIAGRAM):   end;
1954045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954046   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1954047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954049   +   end;
MPRINT(EM_DIAGRAM):   end;
1954050   +end;
MPRINT(EM_DIAGRAM):   end;
1954051   +
1954052   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1954053   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1954054   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1954055   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1954056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954058   +end;
MPRINT(EM_DIAGRAM):   end;
1954059   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954061   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1954062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954063   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954064   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1954065   +   end;
MPRINT(EM_DIAGRAM):   end;
1954066   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954067   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1954068   +   end;
MPRINT(EM_DIAGRAM):   end;
1954069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954070   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1954071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954073   +   end;
MPRINT(EM_DIAGRAM):   end;
1954074   +end;
MPRINT(EM_DIAGRAM):   end;
1954075   +
1954076   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1954077   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1954078   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1954079   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1954080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954082   +end;
MPRINT(EM_DIAGRAM):   end;
1954083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954085   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1954086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954088   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1954089   +   end;
MPRINT(EM_DIAGRAM):   end;
1954090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954091   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1954092   +   end;
MPRINT(EM_DIAGRAM):   end;
1954093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954094   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1954095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954097   +   end;
MPRINT(EM_DIAGRAM):   end;
1954098   +end;
MPRINT(EM_DIAGRAM):   end;
1954099   +
1954100   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1954101   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1954102   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1954103   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1954104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954106   +end;
MPRINT(EM_DIAGRAM):   end;
1954107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954109   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1954110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954112   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1954113   +   end;
MPRINT(EM_DIAGRAM):   end;
1954114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954115   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1954116   +   end;
MPRINT(EM_DIAGRAM):   end;
1954117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954118   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1954119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954121   +   end;
MPRINT(EM_DIAGRAM):   end;
1954122   +end;
MPRINT(EM_DIAGRAM):   end;
1954123   +
1954124   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1954125   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1954126   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1954127   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1954128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954130   +end;
MPRINT(EM_DIAGRAM):   end;
1954131   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954133   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1954134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954135   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1954136   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1954137   +   end;
MPRINT(EM_DIAGRAM):   end;
1954138   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1954139   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1954140   +   end;
MPRINT(EM_DIAGRAM):   end;
1954141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954142   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1954143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954145   +   end;
MPRINT(EM_DIAGRAM):   end;
1954146   +end;
MPRINT(EM_DIAGRAM):   end;
1954147   +
1954148   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1954149   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1954150   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1954151   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1954152   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1954153   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1954154   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1954155   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1954156   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1954157   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1954158   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1954159   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1954160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954162   +end;
MPRINT(EM_DIAGRAM):   end;
1954163   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954164   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1954165   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1954166   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954167   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1954168   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1954169   +   end;
MPRINT(EM_DIAGRAM):   end;
1954170   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1954171   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1954172   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1954173   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1954174   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1954175   +   end;
MPRINT(EM_DIAGRAM):   end;
1954176   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1954177   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1954178   +   end;
MPRINT(EM_DIAGRAM):   end;
1954179   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1954180   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1954181   +   end;
MPRINT(EM_DIAGRAM):   end;
1954182   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1954183   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1954184   +   end;
MPRINT(EM_DIAGRAM):   end;
1954185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954186   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1954187   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1954188   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1954189   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1954190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954192   +   end;
MPRINT(EM_DIAGRAM):   end;
1954193   +end;
MPRINT(EM_DIAGRAM):   end;
1954194   +
1954195   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1954196   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1954197   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1954198   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1954199   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1954200   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1954201   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1954202   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1954203   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1954204   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1954205   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1954206   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1954207   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1954208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954210   +end;
MPRINT(EM_DIAGRAM):   end;
1954211   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954212   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1954213   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1954214   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954215   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1954216   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1954217   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1954218   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1954219   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1954220   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1954221   +         end;
MPRINT(EM_DIAGRAM):   end;
1954222   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1954223   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1954224   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1954225   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1954226   +            end;
MPRINT(EM_DIAGRAM):   end;
1954227   +         end;
MPRINT(EM_DIAGRAM):   end;
1954228   +      end;
MPRINT(EM_DIAGRAM):   end;
1954229   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1954230   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1954231   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1954232   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1954233   +         end;
MPRINT(EM_DIAGRAM):   end;
1954234   +      end;
MPRINT(EM_DIAGRAM):   end;
1954235   +   end;
MPRINT(EM_DIAGRAM):   end;
1954236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954237   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1954238   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1954239   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1954240   +      end;
MPRINT(EM_DIAGRAM):   end;
1954241   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1954242   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1954243   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1954244   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1954245   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1954246   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1954247   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1954248   +         end;
MPRINT(EM_DIAGRAM):   end;
1954249   +      end;
MPRINT(EM_DIAGRAM):   end;
1954250   +   end;
MPRINT(EM_DIAGRAM):   end;
1954251   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1954252   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1954253   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1954254   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1954255   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1954256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954258   +   end;
MPRINT(EM_DIAGRAM):   end;
1954259   +end;
MPRINT(EM_DIAGRAM):   end;
1954260   +
1954261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954262   +*** Checking missing input Interval
1954263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1954264   +
1954265   +IF NMISS(
1954266   +   AcceptedCmpTotal ,
1954267   +   Age ,
1954268   +   Frq ,
1954269   +   Income ,
1954270   +   Kidhome ,
1954271   +   Mnt ,
1954272   +   MntFishProducts ,
1954273   +   MntFruits ,
1954274   +   MntGoldProds ,
1954275   +   MntMeatProducts ,
1954276   +   MntSweetProducts ,
1954277   +   MntWines ,
1954278   +   MonthsAsCustomer ,
1954279   +   NumCatalogPurchases ,
1954280   +   NumDealsPurchases ,
1954281   +   NumDistPurchases ,
1954282   +   NumStorePurchases ,
1954283   +   NumWebPurchases ,
1954284   +   NumWebVisitsMonth ,
1954285   +   RFMstat ,
1954286   +   RMntFrq ,
1954287   +   Recency ,
1954288   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1954289   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1954290   +
1954291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954292   +END;
MPRINT(EM_DIAGRAM):   END;
1954293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954294   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1954295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954296   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1954297   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1954298   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1954299   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1954300   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1954301   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1954302   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1954303   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1954304   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1954305   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1954306   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1954307   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1954308   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1954309   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1954310   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1954311   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1954312   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1954313   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1954314   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1954315   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1954316   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1954317   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1954318   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1954319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1954320   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1954321   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1954322   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1954323   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1954324   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1954325   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1954326   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1954327   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1954328   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1954329   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1954330   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1954331   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1954332   +END;
MPRINT(EM_DIAGRAM):   END;
1954333   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1954334   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1954335   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1954336   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1954337   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1954338   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1954339   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1954340   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1954341   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1954342   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1954343   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1954344   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1954345   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1954346   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1954347   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1954348   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1954349   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1954350   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1954351   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1954352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1954353   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1954354   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1954355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1954356   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1954357   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1954358   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1954359   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1954360   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1954361   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1954362   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1954363   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1954364   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1954365   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1954366   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1954367   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1954368   +   ELSE S_NumCatalogPurchases
1954369   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1954370   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1954371   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1954372   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1954373   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1954374   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1954375   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1954376   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1954377   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1954378   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1954379   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1954380   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1954381   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1954382   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1954383   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1954384   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1954385   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1954386   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1954387   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1954388   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1954389   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1954390   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1954391   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1954392   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1954393   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1954394   +END;
MPRINT(EM_DIAGRAM):   END;
1954395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954396   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1954397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954399   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1954400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954402   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1954403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954404   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1954405   +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
1954406   +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
1954407   +        S_Income  +    -0.32248758927071 * S_Kidhome
1954408   +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
1954409   +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
1954410   +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
1954411   +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
1954412   +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
1954413   +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
1954414   +          +    -0.68207513361313 * S_NumDealsPurchases
1954415   +          +    -0.37964850256921 * S_NumDistPurchases
1954416   +          +     0.36066480603854 * S_NumStorePurchases
1954417   +          +     0.25966011307033 * S_NumWebPurchases
1954418   +          +    -0.03958464718959 * S_NumWebVisitsMonth
1954419   +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
1954420   +        S_RMntFrq  +      0.2807801943237 * S_Recency
1954421   +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
1954422   +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
1954423   +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
1954424   +        S_Income  +    -0.01525271628925 * S_Kidhome
1954425   +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
1954426   +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
1954427   +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
1954428   +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
1954429   +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
1954430   +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
1954431   +          +    -0.05060212016961 * S_NumDealsPurchases
1954432   +          +    -0.14809619066524 * S_NumDistPurchases
1954433   +          +    -0.02428798408125 * S_NumStorePurchases
1954434   +          +     0.05554695337353 * S_NumWebPurchases
1954435   +          +     -0.3347797414912 * S_NumWebVisitsMonth
1954436   +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
1954437   +        S_RMntFrq  +     0.34878481829389 * S_Recency
1954438   +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
1954439   +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
1954440   +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
1954441   +        S_Income  +    -0.05479760920776 * S_Kidhome
1954442   +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
1954443   +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
1954444   +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
1954445   +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
1954446   +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
1954447   +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
1954448   +          +     0.18029447475323 * S_NumDealsPurchases
1954449   +          +     0.05934542805435 * S_NumDistPurchases
1954450   +          +     0.11232970412862 * S_NumStorePurchases
1954451   +          +    -0.10916601726159 * S_NumWebPurchases
1954452   +          +    -0.01910812243665 * S_NumWebVisitsMonth
1954453   +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
1954454   +        S_RMntFrq  +    -0.40799689263706 * S_Recency
1954455   +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
1954456   +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
1954457   +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
1954458   +        S_Income  +     0.31726096463976 * S_Kidhome
1954459   +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
1954460   +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
1954461   +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
1954462   +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
1954463   +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
1954464   +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
1954465   +          +    -0.05889648319294 * S_NumDealsPurchases
1954466   +          +     0.04297768152043 * S_NumDistPurchases
1954467   +          +     0.08289772168464 * S_NumStorePurchases
1954468   +          +     0.02925451736459 * S_NumWebPurchases
1954469   +          +    -0.34806744064693 * S_NumWebVisitsMonth
1954470   +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
1954471   +        S_RMntFrq  +     0.54567939140523 * S_Recency
1954472   +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
1954473   +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
1954474   +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
1954475   +        S_Income  +     -0.1831746721838 * S_Kidhome
1954476   +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
1954477   +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
1954478   +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
1954479   +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
1954480   +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
1954481   +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
1954482   +          +     0.46814119938755 * S_NumDealsPurchases
1954483   +          +     0.03182241038425 * S_NumDistPurchases
1954484   +          +    -0.51911846047007 * S_NumStorePurchases
1954485   +          +    -0.53954754105242 * S_NumWebPurchases
1954486   +          +     1.07208473057077 * S_NumWebVisitsMonth
1954487   +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
1954488   +        S_RMntFrq  +    -0.95916513053649 * S_Recency
1954489   +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
1954490   +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
1954491   +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
1954492   +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
1954493   +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
1954494   +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
1954495   +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
1954496   +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
1954497   +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
1954498   +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
1954499   +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
1954500   +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
1954501   +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
1954502   +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
1954503   +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
1954504   +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
1954505   +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
1954506   +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
1954507   +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
1954508   +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
1954509   +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
1954510   +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
1954511   +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
1954512   +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
1954513   +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
1954514   +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
1954515   +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
1954516   +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
1954517   +        EducationGraduation  +     0.16905118469563 * EducationMaster
1954518   +          +     0.09920310143649 * Marital_StatusDivorced
1954519   +          +    -0.03469710828426 * Marital_StatusMarried
1954520   +          +     0.04524816569771 * Marital_StatusSingle
1954521   +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
1954522   +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
1954523   +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
1954524   +        EducationGraduation  +     0.14755035027548 * EducationMaster
1954525   +          +     0.15544361606364 * Marital_StatusDivorced
1954526   +          +    -0.04549024479337 * Marital_StatusMarried
1954527   +          +    -0.22192209058914 * Marital_StatusSingle
1954528   +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
1954529   +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
1954530   +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
1954531   +        EducationGraduation  +    -0.10472711185558 * EducationMaster
1954532   +          +     0.06080683366118 * Marital_StatusDivorced
1954533   +          +    -0.29971612034722 * Marital_StatusMarried
1954534   +          +    -0.28960939443613 * Marital_StatusSingle
1954535   +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
1954536   +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
1954537   +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
1954538   +        EducationGraduation  +    -0.19451337075589 * EducationMaster
1954539   +          +    -0.27877133922419 * Marital_StatusDivorced
1954540   +          +     0.25867038797563 * Marital_StatusMarried
1954541   +          +    -0.17854477297284 * Marital_StatusSingle
1954542   +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
1954543   +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
1954544   +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
1954545   +        EducationGraduation  +    -0.05191600320717 * EducationMaster
1954546   +          +     0.30169513410559 * Marital_StatusDivorced
1954547   +          +    -0.33752566748869 * Marital_StatusMarried
1954548   +          +     0.43876556032036 * Marital_StatusSingle
1954549   +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
1954550   +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
1954551   +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
1954552   +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
1954553   +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
1954554   +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
1954555   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1954556   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1954557   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1954558   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1954559   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1954560   +END;
MPRINT(EM_DIAGRAM):   END;
1954561   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1954562   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1954563   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1954564   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1954565   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1954566   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1954567   +END;
MPRINT(EM_DIAGRAM):   END;
1954568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954569   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1954570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954571   +
1954572   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1954573   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1954574   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1954575   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1954576   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1954577   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954578   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1954579   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1954580   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1954581   +end;
MPRINT(EM_DIAGRAM):   end;
1954582   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954583   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1954584   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1954585   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1954586   +   end;
MPRINT(EM_DIAGRAM):   end;
1954587   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1954588   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1954589   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1954590   +   end;
MPRINT(EM_DIAGRAM):   end;
1954591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954592   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1954593   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1954594   +   end;
MPRINT(EM_DIAGRAM):   end;
1954595   +end;
MPRINT(EM_DIAGRAM):   end;
1954596   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1954597   +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
1954598   +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
1954599   +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
1954600   +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
1954601   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1954602   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1954603   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1954604   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1954605   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1954606   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1954607   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1954608   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1954609   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1954610   +END;
MPRINT(EM_DIAGRAM):   END;
1954611   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1954612   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1954613   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1954614   +END;
MPRINT(EM_DIAGRAM):   END;
1954615   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1954616   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1954617   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1954618   +END;
MPRINT(EM_DIAGRAM):   END;
1954619   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1954620   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1954621   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1954622   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1954623   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1954624   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1954625   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1954626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954627   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1954628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1954629   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1954630   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1954631   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1954632   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1954633   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1954634   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1954635   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1954636   +END;
MPRINT(EM_DIAGRAM):   END;
1954637   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1954638   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1954639   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1954640   +drop
1954641   +H11
1954642   +H12
1954643   +H13
1954644   +H14
1954645   +H15
1954646   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1954647   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1954648   +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
1954649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954650   +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
1954651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954652   +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
1954653   +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
1954654   +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
1954655   +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
1954656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954657   +* Renaming Into variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural7;
1954658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954659   +length Neural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural7_I_DepVar $32;
1954660   +drop Neural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural7_I_DepVar;
1954661   +Neural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural7_I_DepVar = I_DepVar;
1954662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954663   +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
1954664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954665   +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
1954666   +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
1954667   +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
1954668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954669   +* Ensmbl29: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 4 of 10;
1954670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954672   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1954673   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1954674   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1954675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1954676   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1954677   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1954678   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1954679   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1954680   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1954681   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1954682   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1954683   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1954684   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1954685   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1954686   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1954687   +LENGTH _WARN_ $4
1954688   +      F_DepVar  $ 12
1954689   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1954690   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1954691   +
1954692   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1954693   +
1954694   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1954695   +
1954696   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1954697   +
1954698   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1954699   +
1954700   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1954701   +
1954702   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1954703   +
1954704   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1954705   +
1954706   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1954707   +
1954708   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1954709   +
1954710   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1954711   +
1954712   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1954713   +
1954714   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1954715   +
1954716   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1954717   +
1954718   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1954719   +
1954720   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1954721   +
1954722   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1954723   +
1954724   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1954725   +
1954726   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1954727   +
1954728   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1954729   +
1954730   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1954731   +
1954732   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1954733   +
1954734   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1954735   +
1954736   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1954737   +
1954738   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1954739   +
1954740   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1954741   +
1954742   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1954743   +
1954744   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1954745   +
1954746   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1954747   +
1954748   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1954749   +
1954750   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1954751   +
1954752   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1954753   +
1954754   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1954755   +
1954756   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1954757   +
1954758   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1954759   +
1954760   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1954761   +
1954762   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1954763   +
1954764   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1954765   +
1954766   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1954767   +
1954768   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1954769   +
1954770   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1954771   +
1954772   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1954773   +
1954774   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1954775   +
1954776   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1954777   +
1954778   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1954779   +
1954780   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1954781   +
1954782   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1954783   +
1954784   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1954785   +
1954786   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1954787   +
1954788   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1954789   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1954790   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1954791   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1954792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954794   +end;
MPRINT(EM_DIAGRAM):   end;
1954795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954797   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1954798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954799   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954800   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1954801   +   end;
MPRINT(EM_DIAGRAM):   end;
1954802   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954803   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1954804   +   end;
MPRINT(EM_DIAGRAM):   end;
1954805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954806   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1954807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954809   +   end;
MPRINT(EM_DIAGRAM):   end;
1954810   +end;
MPRINT(EM_DIAGRAM):   end;
1954811   +
1954812   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1954813   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1954814   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1954815   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1954816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954818   +end;
MPRINT(EM_DIAGRAM):   end;
1954819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954821   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1954822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954823   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954824   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1954825   +   end;
MPRINT(EM_DIAGRAM):   end;
1954826   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954827   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1954828   +   end;
MPRINT(EM_DIAGRAM):   end;
1954829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954830   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1954831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954833   +   end;
MPRINT(EM_DIAGRAM):   end;
1954834   +end;
MPRINT(EM_DIAGRAM):   end;
1954835   +
1954836   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1954837   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1954838   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1954839   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1954840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954842   +end;
MPRINT(EM_DIAGRAM):   end;
1954843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954844   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954845   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1954846   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954847   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954848   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1954849   +   end;
MPRINT(EM_DIAGRAM):   end;
1954850   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954851   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1954852   +   end;
MPRINT(EM_DIAGRAM):   end;
1954853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954854   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1954855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954857   +   end;
MPRINT(EM_DIAGRAM):   end;
1954858   +end;
MPRINT(EM_DIAGRAM):   end;
1954859   +
1954860   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1954861   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1954862   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1954863   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1954864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954866   +end;
MPRINT(EM_DIAGRAM):   end;
1954867   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954869   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1954870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954871   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954872   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1954873   +   end;
MPRINT(EM_DIAGRAM):   end;
1954874   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954875   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1954876   +   end;
MPRINT(EM_DIAGRAM):   end;
1954877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954878   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1954879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954881   +   end;
MPRINT(EM_DIAGRAM):   end;
1954882   +end;
MPRINT(EM_DIAGRAM):   end;
1954883   +
1954884   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1954885   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1954886   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1954887   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1954888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954890   +end;
MPRINT(EM_DIAGRAM):   end;
1954891   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954892   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954893   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1954894   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954895   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954896   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1954897   +   end;
MPRINT(EM_DIAGRAM):   end;
1954898   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954899   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1954900   +   end;
MPRINT(EM_DIAGRAM):   end;
1954901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954902   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1954903   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954904   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954905   +   end;
MPRINT(EM_DIAGRAM):   end;
1954906   +end;
MPRINT(EM_DIAGRAM):   end;
1954907   +
1954908   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1954909   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1954910   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1954911   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1954912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954914   +end;
MPRINT(EM_DIAGRAM):   end;
1954915   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954916   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954917   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1954918   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954919   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1954920   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1954921   +   end;
MPRINT(EM_DIAGRAM):   end;
1954922   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1954923   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1954924   +   end;
MPRINT(EM_DIAGRAM):   end;
1954925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954926   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1954927   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954928   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954929   +   end;
MPRINT(EM_DIAGRAM):   end;
1954930   +end;
MPRINT(EM_DIAGRAM):   end;
1954931   +
1954932   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1954933   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1954934   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1954935   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1954936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954938   +end;
MPRINT(EM_DIAGRAM):   end;
1954939   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954940   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1954941   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1954942   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954943   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1954944   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1954945   +   end;
MPRINT(EM_DIAGRAM):   end;
1954946   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1954947   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1954948   +   end;
MPRINT(EM_DIAGRAM):   end;
1954949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954950   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1954951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954953   +   end;
MPRINT(EM_DIAGRAM):   end;
1954954   +end;
MPRINT(EM_DIAGRAM):   end;
1954955   +
1954956   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1954957   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1954958   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1954959   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1954960   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1954961   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1954962   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1954963   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1954964   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1954965   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1954966   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1954967   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1954968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1954969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1954970   +end;
MPRINT(EM_DIAGRAM):   end;
1954971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1954972   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1954973   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1954974   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1954975   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1954976   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1954977   +   end;
MPRINT(EM_DIAGRAM):   end;
1954978   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1954979   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1954980   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1954981   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1954982   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1954983   +   end;
MPRINT(EM_DIAGRAM):   end;
1954984   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1954985   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1954986   +   end;
MPRINT(EM_DIAGRAM):   end;
1954987   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1954988   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1954989   +   end;
MPRINT(EM_DIAGRAM):   end;
1954990   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1954991   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1954992   +   end;
MPRINT(EM_DIAGRAM):   end;
1954993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1954994   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1954995   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1954996   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1954997   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1954998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1954999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955000   +   end;
MPRINT(EM_DIAGRAM):   end;
1955001   +end;
MPRINT(EM_DIAGRAM):   end;
1955002   +
1955003   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1955004   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1955005   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1955006   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1955007   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1955008   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1955009   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1955010   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1955011   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1955012   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1955013   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1955014   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1955015   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1955016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955018   +end;
MPRINT(EM_DIAGRAM):   end;
1955019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955020   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1955021   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1955022   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955023   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1955024   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1955025   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1955026   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1955027   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1955028   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955029   +         end;
MPRINT(EM_DIAGRAM):   end;
1955030   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1955031   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1955032   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1955033   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955034   +            end;
MPRINT(EM_DIAGRAM):   end;
1955035   +         end;
MPRINT(EM_DIAGRAM):   end;
1955036   +      end;
MPRINT(EM_DIAGRAM):   end;
1955037   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1955038   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1955039   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1955040   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955041   +         end;
MPRINT(EM_DIAGRAM):   end;
1955042   +      end;
MPRINT(EM_DIAGRAM):   end;
1955043   +   end;
MPRINT(EM_DIAGRAM):   end;
1955044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955045   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1955046   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1955047   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955048   +      end;
MPRINT(EM_DIAGRAM):   end;
1955049   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1955050   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1955051   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1955052   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1955053   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1955054   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1955055   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955056   +         end;
MPRINT(EM_DIAGRAM):   end;
1955057   +      end;
MPRINT(EM_DIAGRAM):   end;
1955058   +   end;
MPRINT(EM_DIAGRAM):   end;
1955059   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1955060   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1955061   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1955062   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1955063   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1955064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955066   +   end;
MPRINT(EM_DIAGRAM):   end;
1955067   +end;
MPRINT(EM_DIAGRAM):   end;
1955068   +
1955069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955070   +*** Checking missing input Interval
1955071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1955072   +
1955073   +IF NMISS(
1955074   +   AcceptedCmpTotal ,
1955075   +   Age ,
1955076   +   Frq ,
1955077   +   Income ,
1955078   +   Kidhome ,
1955079   +   Mnt ,
1955080   +   MntFishProducts ,
1955081   +   MntFruits ,
1955082   +   MntGoldProds ,
1955083   +   MntMeatProducts ,
1955084   +   MntSweetProducts ,
1955085   +   MntWines ,
1955086   +   MonthsAsCustomer ,
1955087   +   NumCatalogPurchases ,
1955088   +   NumDealsPurchases ,
1955089   +   NumDistPurchases ,
1955090   +   NumStorePurchases ,
1955091   +   NumWebPurchases ,
1955092   +   NumWebVisitsMonth ,
1955093   +   RFMstat ,
1955094   +   RMntFrq ,
1955095   +   Recency ,
1955096   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1955097   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1955098   +
1955099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955100   +END;
MPRINT(EM_DIAGRAM):   END;
1955101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955102   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1955103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955104   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1955105   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1955106   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1955107   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1955108   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1955109   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1955110   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1955111   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1955112   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1955113   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1955114   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1955115   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1955116   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1955117   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1955118   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1955119   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1955120   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1955121   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1955122   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1955123   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1955124   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1955125   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1955126   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1955127   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1955128   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1955129   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1955130   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1955131   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1955132   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1955133   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1955134   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1955135   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1955136   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1955137   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1955138   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1955139   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1955140   +END;
MPRINT(EM_DIAGRAM):   END;
1955141   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1955142   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1955143   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1955144   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1955145   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1955146   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1955147   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1955148   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1955149   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1955150   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1955151   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1955152   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1955153   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1955154   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1955155   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1955156   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1955157   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1955158   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1955159   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1955160   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1955161   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1955162   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1955163   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1955164   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1955165   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1955166   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1955167   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1955168   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1955169   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1955170   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1955171   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1955172   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1955173   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1955174   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1955175   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1955176   +   ELSE S_NumCatalogPurchases
1955177   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1955178   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1955179   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1955180   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1955181   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1955182   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1955183   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1955184   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1955185   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1955186   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1955187   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1955188   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1955189   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1955190   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1955191   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1955192   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1955193   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1955194   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1955195   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1955196   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1955197   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1955198   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1955199   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1955200   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1955201   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1955202   +END;
MPRINT(EM_DIAGRAM):   END;
1955203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955204   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1955205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955207   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1955208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955210   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1955211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955212   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1955213   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1955214   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1955215   +        S_Income  +     0.51123266106809 * S_Kidhome
1955216   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1955217   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1955218   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1955219   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1955220   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1955221   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1955222   +          +     1.34095732961105 * S_NumDealsPurchases
1955223   +          +     0.16605991333252 * S_NumDistPurchases
1955224   +          +    -0.61746267736536 * S_NumStorePurchases
1955225   +          +    -0.61812800689506 * S_NumWebPurchases
1955226   +          +     1.44649145055387 * S_NumWebVisitsMonth
1955227   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1955228   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1955229   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1955230   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1955231   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1955232   +        S_Income  +     0.52295323651199 * S_Kidhome
1955233   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1955234   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1955235   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1955236   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1955237   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1955238   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1955239   +          +    -0.72543332317832 * S_NumDealsPurchases
1955240   +          +    -0.05245472565117 * S_NumDistPurchases
1955241   +          +     1.00667431585298 * S_NumStorePurchases
1955242   +          +     1.02836701470962 * S_NumWebPurchases
1955243   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1955244   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1955245   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1955246   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1955247   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1955248   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1955249   +        S_Income  +     0.58025720116696 * S_Kidhome
1955250   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1955251   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1955252   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1955253   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1955254   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1955255   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1955256   +          +     0.12670438262487 * S_NumDealsPurchases
1955257   +          +    -0.46113523834333 * S_NumDistPurchases
1955258   +          +     0.07074818720567 * S_NumStorePurchases
1955259   +          +    -0.05066645783537 * S_NumWebPurchases
1955260   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1955261   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1955262   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1955263   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1955264   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1955265   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1955266   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1955267   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1955268   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
1955269   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1955270   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1955271   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1955272   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1955273   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
1955274   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1955275   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1955276   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1955277   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1955278   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
1955279   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1955280   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1955281   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1955282   +          +     0.12692950862511 * Marital_StatusDivorced
1955283   +          +     0.10026497666167 * Marital_StatusMarried
1955284   +          +    -0.19893864592813 * Marital_StatusSingle
1955285   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1955286   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1955287   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1955288   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1955289   +          +    -0.16785192490199 * Marital_StatusDivorced
1955290   +          +     0.13153695130362 * Marital_StatusMarried
1955291   +          +    -0.50411544587104 * Marital_StatusSingle
1955292   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1955293   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1955294   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1955295   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1955296   +          +    -0.62654958087044 * Marital_StatusDivorced
1955297   +          +     1.86250132393341 * Marital_StatusMarried
1955298   +          +    -1.37067556451928 * Marital_StatusSingle
1955299   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1955300   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1955301   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1955302   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1955303   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1955304   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1955305   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1955306   +END;
MPRINT(EM_DIAGRAM):   END;
1955307   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1955308   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1955309   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1955310   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1955311   +END;
MPRINT(EM_DIAGRAM):   END;
1955312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955313   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1955314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955315   +
1955316   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1955317   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1955318   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1955319   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1955320   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1955321   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955322   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1955323   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1955324   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1955325   +end;
MPRINT(EM_DIAGRAM):   end;
1955326   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955327   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1955328   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1955329   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1955330   +   end;
MPRINT(EM_DIAGRAM):   end;
1955331   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1955332   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1955333   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1955334   +   end;
MPRINT(EM_DIAGRAM):   end;
1955335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955336   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1955337   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1955338   +   end;
MPRINT(EM_DIAGRAM):   end;
1955339   +end;
MPRINT(EM_DIAGRAM):   end;
1955340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1955341   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1955342   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
1955343   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1955344   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1955345   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1955346   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1955347   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1955348   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1955349   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1955350   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1955351   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1955352   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1955353   +END;
MPRINT(EM_DIAGRAM):   END;
1955354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1955355   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1955356   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1955357   +END;
MPRINT(EM_DIAGRAM):   END;
1955358   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1955359   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1955360   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1955361   +END;
MPRINT(EM_DIAGRAM):   END;
1955362   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1955363   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1955364   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1955365   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1955366   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1955367   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1955368   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1955369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955370   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1955371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955372   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1955373   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1955374   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1955375   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1955376   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1955377   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1955378   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1955379   +END;
MPRINT(EM_DIAGRAM):   END;
1955380   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1955381   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1955382   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1955383   +drop
1955384   +H11
1955385   +H12
1955386   +H13
1955387   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1955388   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1955389   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1955390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955391   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1955392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955393   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1955394   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1955395   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1955396   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1955397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955398   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1955399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955400   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1955401   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1955402   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1955403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955404   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1955405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955406   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1955407   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1955408   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1955409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955410   +* Ensmbl29: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 5 of 10;
1955411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955413   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1955414   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1955415   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1955416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1955417   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1955418   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1955419   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1955420   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1955421   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1955422   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1955423   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1955424   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1955425   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1955426   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1955427   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1955428   +LENGTH _WARN_ $4
1955429   +      F_DepVar  $ 12
1955430   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1955431   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1955432   +
1955433   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1955434   +
1955435   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1955436   +
1955437   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1955438   +
1955439   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1955440   +
1955441   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1955442   +
1955443   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1955444   +
1955445   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1955446   +
1955447   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1955448   +
1955449   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1955450   +
1955451   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1955452   +
1955453   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1955454   +
1955455   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1955456   +
1955457   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1955458   +
1955459   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1955460   +
1955461   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1955462   +
1955463   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1955464   +
1955465   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1955466   +
1955467   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1955468   +
1955469   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1955470   +
1955471   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1955472   +
1955473   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1955474   +
1955475   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1955476   +
1955477   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1955478   +
1955479   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1955480   +
1955481   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1955482   +
1955483   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1955484   +
1955485   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1955486   +
1955487   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1955488   +
1955489   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1955490   +
1955491   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1955492   +
1955493   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1955494   +
1955495   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1955496   +
1955497   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1955498   +
1955499   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1955500   +
1955501   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1955502   +
1955503   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1955504   +
1955505   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1955506   +
1955507   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1955508   +
1955509   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1955510   +
1955511   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1955512   +
1955513   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1955514   +
1955515   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1955516   +
1955517   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1955518   +
1955519   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1955520   +
1955521   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1955522   +
1955523   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1955524   +
1955525   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1955526   +
1955527   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1955528   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1955529   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1955530   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1955531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955533   +end;
MPRINT(EM_DIAGRAM):   end;
1955534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955536   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1955537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955538   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1955539   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1955540   +   end;
MPRINT(EM_DIAGRAM):   end;
1955541   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1955542   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1955543   +   end;
MPRINT(EM_DIAGRAM):   end;
1955544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955545   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1955546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955548   +   end;
MPRINT(EM_DIAGRAM):   end;
1955549   +end;
MPRINT(EM_DIAGRAM):   end;
1955550   +
1955551   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1955552   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1955553   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1955554   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1955555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955557   +end;
MPRINT(EM_DIAGRAM):   end;
1955558   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955559   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955560   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1955561   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955562   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1955563   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1955564   +   end;
MPRINT(EM_DIAGRAM):   end;
1955565   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1955566   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1955567   +   end;
MPRINT(EM_DIAGRAM):   end;
1955568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955569   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1955570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955572   +   end;
MPRINT(EM_DIAGRAM):   end;
1955573   +end;
MPRINT(EM_DIAGRAM):   end;
1955574   +
1955575   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1955576   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1955577   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1955578   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1955579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955581   +end;
MPRINT(EM_DIAGRAM):   end;
1955582   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955584   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1955585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955586   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1955587   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1955588   +   end;
MPRINT(EM_DIAGRAM):   end;
1955589   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1955590   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1955591   +   end;
MPRINT(EM_DIAGRAM):   end;
1955592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955593   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1955594   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955595   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955596   +   end;
MPRINT(EM_DIAGRAM):   end;
1955597   +end;
MPRINT(EM_DIAGRAM):   end;
1955598   +
1955599   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1955600   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1955601   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1955602   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1955603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955605   +end;
MPRINT(EM_DIAGRAM):   end;
1955606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955607   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955608   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1955609   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955610   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1955611   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1955612   +   end;
MPRINT(EM_DIAGRAM):   end;
1955613   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1955614   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1955615   +   end;
MPRINT(EM_DIAGRAM):   end;
1955616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955617   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1955618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955620   +   end;
MPRINT(EM_DIAGRAM):   end;
1955621   +end;
MPRINT(EM_DIAGRAM):   end;
1955622   +
1955623   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1955624   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1955625   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1955626   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1955627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955629   +end;
MPRINT(EM_DIAGRAM):   end;
1955630   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955631   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955632   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1955633   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955634   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1955635   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1955636   +   end;
MPRINT(EM_DIAGRAM):   end;
1955637   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1955638   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1955639   +   end;
MPRINT(EM_DIAGRAM):   end;
1955640   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955641   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1955642   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955643   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955644   +   end;
MPRINT(EM_DIAGRAM):   end;
1955645   +end;
MPRINT(EM_DIAGRAM):   end;
1955646   +
1955647   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1955648   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1955649   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1955650   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1955651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955653   +end;
MPRINT(EM_DIAGRAM):   end;
1955654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955655   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955656   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1955657   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955658   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1955659   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1955660   +   end;
MPRINT(EM_DIAGRAM):   end;
1955661   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1955662   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1955663   +   end;
MPRINT(EM_DIAGRAM):   end;
1955664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955665   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1955666   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955667   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955668   +   end;
MPRINT(EM_DIAGRAM):   end;
1955669   +end;
MPRINT(EM_DIAGRAM):   end;
1955670   +
1955671   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1955672   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1955673   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1955674   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1955675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955677   +end;
MPRINT(EM_DIAGRAM):   end;
1955678   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955679   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1955680   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1955681   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955682   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1955683   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1955684   +   end;
MPRINT(EM_DIAGRAM):   end;
1955685   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1955686   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1955687   +   end;
MPRINT(EM_DIAGRAM):   end;
1955688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955689   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1955690   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955691   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955692   +   end;
MPRINT(EM_DIAGRAM):   end;
1955693   +end;
MPRINT(EM_DIAGRAM):   end;
1955694   +
1955695   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1955696   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1955697   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1955698   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1955699   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1955700   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1955701   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1955702   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1955703   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1955704   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1955705   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1955706   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1955707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955709   +end;
MPRINT(EM_DIAGRAM):   end;
1955710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955711   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1955712   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1955713   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955714   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1955715   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1955716   +   end;
MPRINT(EM_DIAGRAM):   end;
1955717   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1955718   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1955719   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1955720   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1955721   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1955722   +   end;
MPRINT(EM_DIAGRAM):   end;
1955723   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1955724   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1955725   +   end;
MPRINT(EM_DIAGRAM):   end;
1955726   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1955727   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1955728   +   end;
MPRINT(EM_DIAGRAM):   end;
1955729   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1955730   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1955731   +   end;
MPRINT(EM_DIAGRAM):   end;
1955732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955733   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1955734   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1955735   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1955736   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1955737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955739   +   end;
MPRINT(EM_DIAGRAM):   end;
1955740   +end;
MPRINT(EM_DIAGRAM):   end;
1955741   +
1955742   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1955743   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1955744   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1955745   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1955746   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1955747   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1955748   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1955749   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1955750   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1955751   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1955752   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1955753   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1955754   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1955755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1955756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955757   +end;
MPRINT(EM_DIAGRAM):   end;
1955758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1955759   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1955760   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1955761   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1955762   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1955763   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1955764   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1955765   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1955766   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1955767   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955768   +         end;
MPRINT(EM_DIAGRAM):   end;
1955769   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1955770   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1955771   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1955772   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955773   +            end;
MPRINT(EM_DIAGRAM):   end;
1955774   +         end;
MPRINT(EM_DIAGRAM):   end;
1955775   +      end;
MPRINT(EM_DIAGRAM):   end;
1955776   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1955777   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1955778   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1955779   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955780   +         end;
MPRINT(EM_DIAGRAM):   end;
1955781   +      end;
MPRINT(EM_DIAGRAM):   end;
1955782   +   end;
MPRINT(EM_DIAGRAM):   end;
1955783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1955784   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1955785   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1955786   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955787   +      end;
MPRINT(EM_DIAGRAM):   end;
1955788   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1955789   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1955790   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1955791   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1955792   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1955793   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1955794   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1955795   +         end;
MPRINT(EM_DIAGRAM):   end;
1955796   +      end;
MPRINT(EM_DIAGRAM):   end;
1955797   +   end;
MPRINT(EM_DIAGRAM):   end;
1955798   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1955799   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1955800   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1955801   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1955802   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1955803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1955804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955805   +   end;
MPRINT(EM_DIAGRAM):   end;
1955806   +end;
MPRINT(EM_DIAGRAM):   end;
1955807   +
1955808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955809   +*** Checking missing input Interval
1955810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1955811   +
1955812   +IF NMISS(
1955813   +   AcceptedCmpTotal ,
1955814   +   Age ,
1955815   +   Frq ,
1955816   +   Income ,
1955817   +   Kidhome ,
1955818   +   Mnt ,
1955819   +   MntFishProducts ,
1955820   +   MntFruits ,
1955821   +   MntGoldProds ,
1955822   +   MntMeatProducts ,
1955823   +   MntSweetProducts ,
1955824   +   MntWines ,
1955825   +   MonthsAsCustomer ,
1955826   +   NumCatalogPurchases ,
1955827   +   NumDealsPurchases ,
1955828   +   NumDistPurchases ,
1955829   +   NumStorePurchases ,
1955830   +   NumWebPurchases ,
1955831   +   NumWebVisitsMonth ,
1955832   +   RFMstat ,
1955833   +   RMntFrq ,
1955834   +   Recency ,
1955835   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1955836   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1955837   +
1955838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1955839   +END;
MPRINT(EM_DIAGRAM):   END;
1955840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955841   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1955842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955843   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1955844   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1955845   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1955846   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1955847   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1955848   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1955849   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1955850   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1955851   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1955852   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1955853   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1955854   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1955855   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1955856   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1955857   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1955858   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1955859   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1955860   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1955861   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1955862   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1955863   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1955864   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1955865   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1955866   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1955867   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1955868   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1955869   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1955870   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1955871   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1955872   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1955873   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1955874   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1955875   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1955876   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1955877   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1955878   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1955879   +END;
MPRINT(EM_DIAGRAM):   END;
1955880   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1955881   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1955882   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1955883   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1955884   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1955885   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1955886   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1955887   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1955888   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1955889   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1955890   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1955891   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1955892   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1955893   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1955894   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1955895   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1955896   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1955897   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1955898   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1955899   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1955900   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1955901   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1955902   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1955903   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1955904   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1955905   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1955906   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1955907   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1955908   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1955909   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1955910   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1955911   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1955912   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1955913   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1955914   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1955915   +   ELSE S_NumCatalogPurchases
1955916   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1955917   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1955918   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1955919   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1955920   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1955921   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1955922   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1955923   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1955924   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1955925   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1955926   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1955927   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1955928   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1955929   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1955930   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1955931   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1955932   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1955933   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1955934   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1955935   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1955936   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1955937   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1955938   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1955939   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1955940   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1955941   +END;
MPRINT(EM_DIAGRAM):   END;
1955942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955943   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1955944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955946   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1955947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955949   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1955950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1955951   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1955952   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1955953   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1955954   +        S_Income  +    -1.07615700855274 * S_Kidhome
1955955   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1955956   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1955957   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1955958   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1955959   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1955960   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1955961   +          +      0.3429043319369 * S_NumDealsPurchases
1955962   +          +     0.71313309767469 * S_NumDistPurchases
1955963   +          +     0.06017757740083 * S_NumStorePurchases
1955964   +          +    -0.19817724925068 * S_NumWebPurchases
1955965   +          +     1.34164122205952 * S_NumWebVisitsMonth
1955966   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1955967   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1955968   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1955969   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1955970   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1955971   +        S_Income  +     -0.0027232441092 * S_Kidhome
1955972   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1955973   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1955974   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1955975   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1955976   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1955977   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1955978   +          +      0.4576973746858 * S_NumDealsPurchases
1955979   +          +     0.15590877272659 * S_NumDistPurchases
1955980   +          +    -0.33414539713736 * S_NumStorePurchases
1955981   +          +    -0.39370244666257 * S_NumWebPurchases
1955982   +          +     0.52596714886704 * S_NumWebVisitsMonth
1955983   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1955984   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1955985   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1955986   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1955987   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1955988   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1955989   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1955990   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
1955991   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1955992   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1955993   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1955994   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1955995   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
1955996   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1955997   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1955998   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1955999   +          +      0.4663802937397 * Marital_StatusDivorced
1956000   +          +    -1.27401898796099 * Marital_StatusMarried
1956001   +          +      1.3125969368079 * Marital_StatusSingle
1956002   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1956003   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1956004   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1956005   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1956006   +          +     0.07419179522004 * Marital_StatusDivorced
1956007   +          +     0.00234615813337 * Marital_StatusMarried
1956008   +          +    -0.00725460458412 * Marital_StatusSingle
1956009   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1956010   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1956011   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1956012   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1956013   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1956014   +END;
MPRINT(EM_DIAGRAM):   END;
1956015   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1956016   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1956017   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1956018   +END;
MPRINT(EM_DIAGRAM):   END;
1956019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956020   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1956021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956022   +
1956023   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1956024   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1956025   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1956026   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1956027   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1956028   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956029   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1956030   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1956031   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1956032   +end;
MPRINT(EM_DIAGRAM):   end;
1956033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956034   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1956035   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1956036   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1956037   +   end;
MPRINT(EM_DIAGRAM):   end;
1956038   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1956039   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1956040   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1956041   +   end;
MPRINT(EM_DIAGRAM):   end;
1956042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956043   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1956044   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1956045   +   end;
MPRINT(EM_DIAGRAM):   end;
1956046   +end;
MPRINT(EM_DIAGRAM):   end;
1956047   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1956048   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1956049   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1956050   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1956051   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1956052   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1956053   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1956054   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1956055   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1956056   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1956057   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1956058   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1956059   +END;
MPRINT(EM_DIAGRAM):   END;
1956060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1956061   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1956062   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1956063   +END;
MPRINT(EM_DIAGRAM):   END;
1956064   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1956065   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1956066   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1956067   +END;
MPRINT(EM_DIAGRAM):   END;
1956068   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1956069   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1956070   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1956071   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1956072   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1956073   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1956074   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1956075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956076   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1956077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956078   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1956079   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1956080   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1956081   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1956082   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1956083   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1956084   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1956085   +END;
MPRINT(EM_DIAGRAM):   END;
1956086   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1956087   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1956088   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1956089   +drop
1956090   +H11
1956091   +H12
1956092   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1956093   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1956094   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1956095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956096   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1956097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956098   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1956099   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1956100   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1956101   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1956102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956103   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1956104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956105   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1956106   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1956107   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1956108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956109   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1956110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956111   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1956112   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1956113   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1956114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956115   +* Ensmbl29: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 6 of 10;
1956116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956118   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1956119   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1956120   +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
1956121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956122   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1956123   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1956124   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1956125   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1956126   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1956127   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1956128   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1956129   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1956130   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1956131   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1956132   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1956133   +LENGTH _WARN_ $4
1956134   +      F_DepVar  $ 12
1956135   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1956136   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1956137   +
1956138   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1956139   +
1956140   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1956141   +
1956142   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1956143   +
1956144   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1956145   +
1956146   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1956147   +
1956148   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1956149   +
1956150   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1956151   +
1956152   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1956153   +
1956154   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1956155   +
1956156   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1956157   +
1956158   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1956159   +
1956160   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1956161   +
1956162   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1956163   +
1956164   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1956165   +
1956166   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1956167   +
1956168   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1956169   +
1956170   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1956171   +
1956172   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1956173   +
1956174   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1956175   +
1956176   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1956177   +
1956178   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1956179   +
1956180   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1956181   +
1956182   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1956183   +
1956184   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1956185   +
1956186   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1956187   +
1956188   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1956189   +
1956190   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1956191   +
1956192   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1956193   +
1956194   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1956195   +
1956196   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1956197   +
1956198   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1956199   +
1956200   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1956201   +
1956202   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1956203   +
1956204   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1956205   +
1956206   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1956207   +
1956208   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1956209   +
1956210   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1956211   +
1956212   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1956213   +
1956214   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1956215   +
1956216   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1956217   +
1956218   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1956219   +
1956220   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1956221   +
1956222   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1956223   +
1956224   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1956225   +
1956226   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1956227   +
1956228   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1956229   +
1956230   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1956231   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1956232   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1956233   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1956234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956236   +end;
MPRINT(EM_DIAGRAM):   end;
1956237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956239   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1956240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956242   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1956243   +   end;
MPRINT(EM_DIAGRAM):   end;
1956244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956245   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1956246   +   end;
MPRINT(EM_DIAGRAM):   end;
1956247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956248   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1956249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956251   +   end;
MPRINT(EM_DIAGRAM):   end;
1956252   +end;
MPRINT(EM_DIAGRAM):   end;
1956253   +
1956254   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1956255   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1956256   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1956257   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1956258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956260   +end;
MPRINT(EM_DIAGRAM):   end;
1956261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956263   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1956264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956266   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1956267   +   end;
MPRINT(EM_DIAGRAM):   end;
1956268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956269   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1956270   +   end;
MPRINT(EM_DIAGRAM):   end;
1956271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956272   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1956273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956275   +   end;
MPRINT(EM_DIAGRAM):   end;
1956276   +end;
MPRINT(EM_DIAGRAM):   end;
1956277   +
1956278   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1956279   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1956280   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1956281   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1956282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956284   +end;
MPRINT(EM_DIAGRAM):   end;
1956285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956287   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1956288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956290   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1956291   +   end;
MPRINT(EM_DIAGRAM):   end;
1956292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956293   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1956294   +   end;
MPRINT(EM_DIAGRAM):   end;
1956295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956296   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1956297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956299   +   end;
MPRINT(EM_DIAGRAM):   end;
1956300   +end;
MPRINT(EM_DIAGRAM):   end;
1956301   +
1956302   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1956303   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1956304   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1956305   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1956306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956308   +end;
MPRINT(EM_DIAGRAM):   end;
1956309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956311   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1956312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956314   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1956315   +   end;
MPRINT(EM_DIAGRAM):   end;
1956316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956317   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1956318   +   end;
MPRINT(EM_DIAGRAM):   end;
1956319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956320   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1956321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956323   +   end;
MPRINT(EM_DIAGRAM):   end;
1956324   +end;
MPRINT(EM_DIAGRAM):   end;
1956325   +
1956326   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1956327   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1956328   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1956329   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1956330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956332   +end;
MPRINT(EM_DIAGRAM):   end;
1956333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956335   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1956336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956338   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1956339   +   end;
MPRINT(EM_DIAGRAM):   end;
1956340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956341   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1956342   +   end;
MPRINT(EM_DIAGRAM):   end;
1956343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956344   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1956345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956347   +   end;
MPRINT(EM_DIAGRAM):   end;
1956348   +end;
MPRINT(EM_DIAGRAM):   end;
1956349   +
1956350   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1956351   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1956352   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1956353   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1956354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956356   +end;
MPRINT(EM_DIAGRAM):   end;
1956357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956359   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1956360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956362   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1956363   +   end;
MPRINT(EM_DIAGRAM):   end;
1956364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956365   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1956366   +   end;
MPRINT(EM_DIAGRAM):   end;
1956367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956368   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1956369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956371   +   end;
MPRINT(EM_DIAGRAM):   end;
1956372   +end;
MPRINT(EM_DIAGRAM):   end;
1956373   +
1956374   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1956375   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1956376   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1956377   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1956378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956380   +end;
MPRINT(EM_DIAGRAM):   end;
1956381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956383   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1956384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956385   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1956386   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1956387   +   end;
MPRINT(EM_DIAGRAM):   end;
1956388   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1956389   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1956390   +   end;
MPRINT(EM_DIAGRAM):   end;
1956391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956392   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1956393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956395   +   end;
MPRINT(EM_DIAGRAM):   end;
1956396   +end;
MPRINT(EM_DIAGRAM):   end;
1956397   +
1956398   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1956399   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1956400   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1956401   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1956402   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1956403   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1956404   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1956405   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1956406   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1956407   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1956408   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1956409   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1956410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956412   +end;
MPRINT(EM_DIAGRAM):   end;
1956413   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956414   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1956415   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1956416   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956417   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1956418   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1956419   +   end;
MPRINT(EM_DIAGRAM):   end;
1956420   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1956421   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1956422   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1956423   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1956424   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1956425   +   end;
MPRINT(EM_DIAGRAM):   end;
1956426   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1956427   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1956428   +   end;
MPRINT(EM_DIAGRAM):   end;
1956429   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1956430   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1956431   +   end;
MPRINT(EM_DIAGRAM):   end;
1956432   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1956433   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1956434   +   end;
MPRINT(EM_DIAGRAM):   end;
1956435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956436   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1956437   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1956438   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1956439   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1956440   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956441   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956442   +   end;
MPRINT(EM_DIAGRAM):   end;
1956443   +end;
MPRINT(EM_DIAGRAM):   end;
1956444   +
1956445   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1956446   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1956447   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1956448   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1956449   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1956450   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1956451   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1956452   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1956453   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1956454   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1956455   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1956456   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1956457   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1956458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956460   +end;
MPRINT(EM_DIAGRAM):   end;
1956461   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956462   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1956463   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1956464   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956465   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1956466   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1956467   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1956468   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1956469   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1956470   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1956471   +         end;
MPRINT(EM_DIAGRAM):   end;
1956472   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1956473   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1956474   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1956475   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1956476   +            end;
MPRINT(EM_DIAGRAM):   end;
1956477   +         end;
MPRINT(EM_DIAGRAM):   end;
1956478   +      end;
MPRINT(EM_DIAGRAM):   end;
1956479   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1956480   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1956481   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1956482   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1956483   +         end;
MPRINT(EM_DIAGRAM):   end;
1956484   +      end;
MPRINT(EM_DIAGRAM):   end;
1956485   +   end;
MPRINT(EM_DIAGRAM):   end;
1956486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956487   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1956488   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1956489   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1956490   +      end;
MPRINT(EM_DIAGRAM):   end;
1956491   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1956492   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1956493   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1956494   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1956495   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1956496   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1956497   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1956498   +         end;
MPRINT(EM_DIAGRAM):   end;
1956499   +      end;
MPRINT(EM_DIAGRAM):   end;
1956500   +   end;
MPRINT(EM_DIAGRAM):   end;
1956501   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1956502   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1956503   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1956504   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1956505   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1956506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956508   +   end;
MPRINT(EM_DIAGRAM):   end;
1956509   +end;
MPRINT(EM_DIAGRAM):   end;
1956510   +
1956511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956512   +*** Checking missing input Interval
1956513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1956514   +
1956515   +IF NMISS(
1956516   +   AcceptedCmpTotal ,
1956517   +   Age ,
1956518   +   Frq ,
1956519   +   Income ,
1956520   +   Kidhome ,
1956521   +   Mnt ,
1956522   +   MntFishProducts ,
1956523   +   MntFruits ,
1956524   +   MntGoldProds ,
1956525   +   MntMeatProducts ,
1956526   +   MntSweetProducts ,
1956527   +   MntWines ,
1956528   +   MonthsAsCustomer ,
1956529   +   NumCatalogPurchases ,
1956530   +   NumDealsPurchases ,
1956531   +   NumDistPurchases ,
1956532   +   NumStorePurchases ,
1956533   +   NumWebPurchases ,
1956534   +   NumWebVisitsMonth ,
1956535   +   RFMstat ,
1956536   +   RMntFrq ,
1956537   +   Recency ,
1956538   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1956539   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1956540   +
1956541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956542   +END;
MPRINT(EM_DIAGRAM):   END;
1956543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956544   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1956545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956546   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1956547   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1956548   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1956549   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1956550   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1956551   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1956552   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1956553   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1956554   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1956555   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1956556   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1956557   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1956558   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1956559   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1956560   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1956561   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1956562   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1956563   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1956564   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1956565   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1956566   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1956567   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1956568   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1956569   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1956570   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1956571   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1956572   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1956573   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1956574   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1956575   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1956576   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1956577   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1956578   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1956579   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1956580   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1956581   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1956582   +END;
MPRINT(EM_DIAGRAM):   END;
1956583   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1956584   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1956585   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1956586   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1956587   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1956588   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1956589   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1956590   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1956591   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1956592   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1956593   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1956594   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1956595   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1956596   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1956597   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1956598   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1956599   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1956600   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1956601   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1956602   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1956603   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1956604   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1956605   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1956606   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1956607   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1956608   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1956609   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1956610   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1956611   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1956612   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1956613   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1956614   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1956615   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1956616   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1956617   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1956618   +   ELSE S_NumCatalogPurchases
1956619   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1956620   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1956621   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1956622   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1956623   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1956624   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1956625   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1956626   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1956627   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1956628   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1956629   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1956630   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1956631   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1956632   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1956633   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1956634   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1956635   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1956636   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1956637   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1956638   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1956639   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1956640   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1956641   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1956642   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1956643   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1956644   +END;
MPRINT(EM_DIAGRAM):   END;
1956645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956646   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1956647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956649   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1956650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956652   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1956653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956654   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1956655   +   H11  =     0.21200891808959 * S_AcceptedCmpTotal  +     -0.0294266976166 *
1956656   +        S_Age  +    -0.16916645815546 * S_Frq  +     0.14504026791442 *
1956657   +        S_Income  +    -0.02671573431371 * S_Kidhome
1956658   +          +     0.00786762022906 * S_Mnt  +    -0.04771740067188 *
1956659   +        S_MntFishProducts  +    -0.04225362276447 * S_MntFruits
1956660   +          +     0.00800255816668 * S_MntGoldProds  +      0.2107523790232 *
1956661   +        S_MntMeatProducts  +     -0.0235222276585 * S_MntSweetProducts
1956662   +          +    -0.19316587677023 * S_MntWines  +    -0.02053398305898 *
1956663   +        S_MonthsAsCustomer  +     0.28123583383823 * S_NumCatalogPurchases
1956664   +          +     0.15209264570536 * S_NumDealsPurchases
1956665   +          +     0.06911391326046 * S_NumDistPurchases
1956666   +          +    -0.06311267460348 * S_NumStorePurchases
1956667   +          +    -0.10769250099266 * S_NumWebPurchases
1956668   +          +     0.30164996141574 * S_NumWebVisitsMonth
1956669   +          +     0.04874443897811 * S_RFMstat  +      0.0566600966077 *
1956670   +        S_RMntFrq  +    -0.33974896769357 * S_Recency
1956671   +          +    -0.07912190966726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21200891808959 * S_AcceptedCmpTotal + -0.0294266976166 * S_Age + 
-0.16916645815546 * S_Frq + 0.14504026791442 * S_Income + -0.02671573431371 * S_Kidhome + 
0.00786762022906 * S_Mnt + -0.04771740067188 * S_MntFishProducts + -0.04225362276447 * 
S_MntFruits + 0.00800255816668 * S_MntGoldProds + 0.2107523790232 * S_MntMeatProducts + 
-0.0235222276585 * S_MntSweetProducts + -0.19316587677023 * S_MntWines + -0.02053398305898 * 
S_MonthsAsCustomer + 0.28123583383823 * S_NumCatalogPurchases + 0.15209264570536 * 
S_NumDealsPurchases + 0.06911391326046 * S_NumDistPurchases + -0.06311267460348 * 
S_NumStorePurchases + -0.10769250099266 * S_NumWebPurchases + 0.30164996141574 * 
S_NumWebVisitsMonth + 0.04874443897811 * S_RFMstat + 0.0566600966077 * S_RMntFrq + 
-0.33974896769357 * S_Recency + -0.07912190966726 * S_Teenhome ;
1956672   +   H11  = H11  +    -0.00087097404949 * AcceptedCmp10
1956673   +          +     0.00352229851757 * AcceptedCmp20  +    -0.01949770623849 *
1956674   +        AcceptedCmp30  +      0.0152220267038 * AcceptedCmp40
1956675   +          +    -0.06776123706739 * AcceptedCmp50  +      0.0455648678007 *
1956676   +        Complain0  +    -0.02207743549319 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00087097404949 * AcceptedCmp10 + 0.00352229851757 * 
AcceptedCmp20 + -0.01949770623849 * AcceptedCmp30 + 0.0152220267038 * AcceptedCmp40 + 
-0.06776123706739 * AcceptedCmp50 + 0.0455648678007 * Complain0 + -0.02207743549319 * 
HigherEducationBinary0 ;
1956677   +   H11  = H11  +     0.02219619537454 * Education2n_Cycle
1956678   +          +    -0.04162935656009 * EducationBasic  +     0.02075327633983 *
1956679   +        EducationGraduation  +    -0.00120846175125 * EducationMaster
1956680   +          +     0.03223611494434 * Marital_StatusDivorced
1956681   +          +    -0.11925283937202 * Marital_StatusMarried
1956682   +          +     0.09076376580065 * Marital_StatusSingle
1956683   +          +    -0.12474639400352 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02219619537454 * Education2n_Cycle + -0.04162935656009 * 
EducationBasic + 0.02075327633983 * EducationGraduation + -0.00120846175125 * EducationMaster 
+ 0.03223611494434 * Marital_StatusDivorced + -0.11925283937202 * Marital_StatusMarried + 
0.09076376580065 * Marital_StatusSingle + -0.12474639400352 * Marital_StatusTogether ;
1956684   +   H11  =    -0.51521830302904 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.51521830302904 + H11 ;
1956685   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1956686   +END;
MPRINT(EM_DIAGRAM):   END;
1956687   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1956688   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1956689   +END;
MPRINT(EM_DIAGRAM):   END;
1956690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956691   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1956692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956693   +
1956694   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1956695   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1956696   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1956697   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1956698   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1956699   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956700   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1956701   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1956702   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1956703   +end;
MPRINT(EM_DIAGRAM):   end;
1956704   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956705   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1956706   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1956707   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1956708   +   end;
MPRINT(EM_DIAGRAM):   end;
1956709   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1956710   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1956711   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1956712   +   end;
MPRINT(EM_DIAGRAM):   end;
1956713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956714   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1956715   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1956716   +   end;
MPRINT(EM_DIAGRAM):   end;
1956717   +end;
MPRINT(EM_DIAGRAM):   end;
1956718   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1956719   +   P_DepVar1  =     8.82365339154683 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82365339154683 * H11 ;
1956720   +   P_DepVar1  =    -0.59048702965933 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.59048702965933 + P_DepVar1 ;
1956721   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1956722   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1956723   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1956724   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1956725   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1956726   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1956727   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1956728   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1956729   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1956730   +END;
MPRINT(EM_DIAGRAM):   END;
1956731   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1956732   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1956733   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1956734   +END;
MPRINT(EM_DIAGRAM):   END;
1956735   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1956736   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1956737   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1956738   +END;
MPRINT(EM_DIAGRAM):   END;
1956739   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1956740   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1956741   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1956742   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1956743   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1956744   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1956745   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1956746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956747   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1956748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1956749   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1956750   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1956751   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1956752   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1956753   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1956754   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1956755   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1956756   +END;
MPRINT(EM_DIAGRAM):   END;
1956757   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1956758   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1956759   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1956760   +drop
1956761   +H11
1956762   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1956763   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1956764   +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
1956765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956766   +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
1956767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956768   +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
1956769   +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
1956770   +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
1956771   +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
1956772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956773   +* Renaming Into variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural;
1956774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956775   +length Neural_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural_I_DepVar $32;
1956776   +drop Neural_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural_I_DepVar;
1956777   +Neural_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural_I_DepVar = I_DepVar;
1956778   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956779   +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
1956780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956781   +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
1956782   +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
1956783   +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
1956784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956785   +* Ensmbl29: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 7 of 10;
1956786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956788   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1956789   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1956790   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1956791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1956792   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1956793   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1956794   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1956795   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1956796   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1956797   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1956798   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1956799   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1956800   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1956801   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1956802   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1956803   +LENGTH _WARN_ $4
1956804   +      F_DepVar  $ 12
1956805   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1956806   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1956807   +
1956808   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1956809   +
1956810   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1956811   +
1956812   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1956813   +
1956814   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1956815   +
1956816   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1956817   +
1956818   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1956819   +
1956820   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1956821   +
1956822   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1956823   +
1956824   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1956825   +
1956826   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1956827   +
1956828   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1956829   +
1956830   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1956831   +
1956832   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1956833   +
1956834   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1956835   +
1956836   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1956837   +
1956838   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1956839   +
1956840   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1956841   +
1956842   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1956843   +
1956844   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1956845   +
1956846   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1956847   +
1956848   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1956849   +
1956850   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1956851   +
1956852   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1956853   +
1956854   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1956855   +
1956856   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1956857   +
1956858   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1956859   +
1956860   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1956861   +
1956862   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1956863   +
1956864   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1956865   +
1956866   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1956867   +
1956868   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1956869   +
1956870   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1956871   +
1956872   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1956873   +
1956874   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1956875   +
1956876   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1956877   +
1956878   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1956879   +
1956880   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1956881   +
1956882   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1956883   +
1956884   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1956885   +
1956886   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1956887   +
1956888   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1956889   +
1956890   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1956891   +
1956892   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1956893   +
1956894   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1956895   +
1956896   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1956897   +
1956898   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1956899   +
1956900   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1956901   +
1956902   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1956903   +
1956904   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1956905   +
1956906   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1956907   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1956908   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1956909   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1956910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956912   +end;
MPRINT(EM_DIAGRAM):   end;
1956913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956915   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1956916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956918   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1956919   +   end;
MPRINT(EM_DIAGRAM):   end;
1956920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956921   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1956922   +   end;
MPRINT(EM_DIAGRAM):   end;
1956923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956924   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1956925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956927   +   end;
MPRINT(EM_DIAGRAM):   end;
1956928   +end;
MPRINT(EM_DIAGRAM):   end;
1956929   +
1956930   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1956931   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1956932   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1956933   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1956934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956936   +end;
MPRINT(EM_DIAGRAM):   end;
1956937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956939   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1956940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956942   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1956943   +   end;
MPRINT(EM_DIAGRAM):   end;
1956944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956945   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1956946   +   end;
MPRINT(EM_DIAGRAM):   end;
1956947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956948   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1956949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956951   +   end;
MPRINT(EM_DIAGRAM):   end;
1956952   +end;
MPRINT(EM_DIAGRAM):   end;
1956953   +
1956954   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1956955   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1956956   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1956957   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1956958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956960   +end;
MPRINT(EM_DIAGRAM):   end;
1956961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956963   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1956964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956966   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1956967   +   end;
MPRINT(EM_DIAGRAM):   end;
1956968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956969   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1956970   +   end;
MPRINT(EM_DIAGRAM):   end;
1956971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956972   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1956973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956975   +   end;
MPRINT(EM_DIAGRAM):   end;
1956976   +end;
MPRINT(EM_DIAGRAM):   end;
1956977   +
1956978   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1956979   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1956980   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1956981   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1956982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1956983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956984   +end;
MPRINT(EM_DIAGRAM):   end;
1956985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1956986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1956987   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1956988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1956989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1956990   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1956991   +   end;
MPRINT(EM_DIAGRAM):   end;
1956992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1956993   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1956994   +   end;
MPRINT(EM_DIAGRAM):   end;
1956995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1956996   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1956997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1956998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1956999   +   end;
MPRINT(EM_DIAGRAM):   end;
1957000   +end;
MPRINT(EM_DIAGRAM):   end;
1957001   +
1957002   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1957003   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1957004   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1957005   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1957006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957008   +end;
MPRINT(EM_DIAGRAM):   end;
1957009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1957011   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1957012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1957014   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1957015   +   end;
MPRINT(EM_DIAGRAM):   end;
1957016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1957017   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1957018   +   end;
MPRINT(EM_DIAGRAM):   end;
1957019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957020   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1957021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1957022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957023   +   end;
MPRINT(EM_DIAGRAM):   end;
1957024   +end;
MPRINT(EM_DIAGRAM):   end;
1957025   +
1957026   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1957027   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1957028   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1957029   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1957030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957032   +end;
MPRINT(EM_DIAGRAM):   end;
1957033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1957035   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1957036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1957038   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1957039   +   end;
MPRINT(EM_DIAGRAM):   end;
1957040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1957041   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1957042   +   end;
MPRINT(EM_DIAGRAM):   end;
1957043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957044   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1957045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1957046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957047   +   end;
MPRINT(EM_DIAGRAM):   end;
1957048   +end;
MPRINT(EM_DIAGRAM):   end;
1957049   +
1957050   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1957051   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1957052   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1957053   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1957054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957056   +end;
MPRINT(EM_DIAGRAM):   end;
1957057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1957059   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1957060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957061   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1957062   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1957063   +   end;
MPRINT(EM_DIAGRAM):   end;
1957064   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1957065   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1957066   +   end;
MPRINT(EM_DIAGRAM):   end;
1957067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957068   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1957069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1957070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957071   +   end;
MPRINT(EM_DIAGRAM):   end;
1957072   +end;
MPRINT(EM_DIAGRAM):   end;
1957073   +
1957074   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1957075   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1957076   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1957077   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1957078   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1957079   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1957080   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1957081   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1957082   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1957083   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1957084   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1957085   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1957086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957088   +end;
MPRINT(EM_DIAGRAM):   end;
1957089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957090   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1957091   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1957092   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957093   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1957094   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1957095   +   end;
MPRINT(EM_DIAGRAM):   end;
1957096   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1957097   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1957098   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1957099   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1957100   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1957101   +   end;
MPRINT(EM_DIAGRAM):   end;
1957102   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1957103   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1957104   +   end;
MPRINT(EM_DIAGRAM):   end;
1957105   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1957106   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1957107   +   end;
MPRINT(EM_DIAGRAM):   end;
1957108   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1957109   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1957110   +   end;
MPRINT(EM_DIAGRAM):   end;
1957111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957112   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1957113   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1957114   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1957115   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1957116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1957117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957118   +   end;
MPRINT(EM_DIAGRAM):   end;
1957119   +end;
MPRINT(EM_DIAGRAM):   end;
1957120   +
1957121   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1957122   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1957123   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1957124   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1957125   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1957126   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1957127   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1957128   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1957129   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1957130   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1957131   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1957132   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1957133   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1957134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957136   +end;
MPRINT(EM_DIAGRAM):   end;
1957137   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957138   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1957139   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1957140   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957141   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1957142   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1957143   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1957144   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1957145   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1957146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1957147   +         end;
MPRINT(EM_DIAGRAM):   end;
1957148   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1957149   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1957150   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1957151   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1957152   +            end;
MPRINT(EM_DIAGRAM):   end;
1957153   +         end;
MPRINT(EM_DIAGRAM):   end;
1957154   +      end;
MPRINT(EM_DIAGRAM):   end;
1957155   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1957156   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1957157   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1957158   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1957159   +         end;
MPRINT(EM_DIAGRAM):   end;
1957160   +      end;
MPRINT(EM_DIAGRAM):   end;
1957161   +   end;
MPRINT(EM_DIAGRAM):   end;
1957162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957163   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1957164   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1957165   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1957166   +      end;
MPRINT(EM_DIAGRAM):   end;
1957167   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1957168   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1957169   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1957170   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1957171   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1957172   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1957173   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1957174   +         end;
MPRINT(EM_DIAGRAM):   end;
1957175   +      end;
MPRINT(EM_DIAGRAM):   end;
1957176   +   end;
MPRINT(EM_DIAGRAM):   end;
1957177   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1957178   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1957179   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1957180   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1957181   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1957182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1957183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957184   +   end;
MPRINT(EM_DIAGRAM):   end;
1957185   +end;
MPRINT(EM_DIAGRAM):   end;
1957186   +
1957187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957188   +*** Checking missing input Interval
1957189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1957190   +
1957191   +IF NMISS(
1957192   +   AcceptedCmpTotal ,
1957193   +   Age ,
1957194   +   Frq ,
1957195   +   Income ,
1957196   +   Kidhome ,
1957197   +   Mnt ,
1957198   +   MntFishProducts ,
1957199   +   MntFruits ,
1957200   +   MntGoldProds ,
1957201   +   MntMeatProducts ,
1957202   +   MntSweetProducts ,
1957203   +   MntWines ,
1957204   +   MonthsAsCustomer ,
1957205   +   NumCatalogPurchases ,
1957206   +   NumDealsPurchases ,
1957207   +   NumDistPurchases ,
1957208   +   NumStorePurchases ,
1957209   +   NumWebPurchases ,
1957210   +   NumWebVisitsMonth ,
1957211   +   RFMstat ,
1957212   +   RMntFrq ,
1957213   +   Recency ,
1957214   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1957215   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1957216   +
1957217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957218   +END;
MPRINT(EM_DIAGRAM):   END;
1957219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957220   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1957221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957222   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1957223   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1957224   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1957225   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1957226   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1957227   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1957228   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1957229   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1957230   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1957231   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1957232   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1957233   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1957234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1957235   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1957236   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1957237   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1957238   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1957239   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1957240   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1957241   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1957242   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1957243   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1957244   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1957245   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1957246   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1957247   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1957248   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1957249   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1957250   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1957251   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1957252   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1957253   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1957254   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1957255   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1957256   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1957257   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1957258   +END;
MPRINT(EM_DIAGRAM):   END;
1957259   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957260   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1957261   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1957262   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1957263   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1957264   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1957265   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1957266   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1957267   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1957268   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1957269   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1957270   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1957271   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1957272   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1957273   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1957274   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1957275   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1957276   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1957277   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1957278   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1957279   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1957280   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1957281   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1957282   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1957283   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1957284   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1957285   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1957286   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1957287   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1957288   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1957289   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1957290   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1957291   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1957292   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1957293   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1957294   +   ELSE S_NumCatalogPurchases
1957295   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1957296   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1957297   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1957298   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1957299   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1957300   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1957301   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1957302   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1957303   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1957304   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1957305   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1957306   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1957307   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1957308   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1957309   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1957310   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1957311   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1957312   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1957313   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1957314   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1957315   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1957316   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1957317   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1957318   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1957319   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1957320   +END;
MPRINT(EM_DIAGRAM):   END;
1957321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957322   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1957323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957325   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1957326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957328   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1957329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957330   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1957331   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
1957332   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
1957333   +        S_Income  +    -0.27053363011695 * S_Kidhome
1957334   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
1957335   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
1957336   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
1957337   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
1957338   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
1957339   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
1957340   +          +    -1.35624485206227 * S_NumDealsPurchases
1957341   +          +    -0.54646115734684 * S_NumDistPurchases
1957342   +          +     1.29794225108321 * S_NumStorePurchases
1957343   +          +      1.8453064081809 * S_NumWebPurchases
1957344   +          +    -0.92747144824026 * S_NumWebVisitsMonth
1957345   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
1957346   +        S_RMntFrq  +     0.73207333681971 * S_Recency
1957347   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
1957348   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
1957349   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
1957350   +        S_Income  +    -0.79821220724157 * S_Kidhome
1957351   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
1957352   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
1957353   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
1957354   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
1957355   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
1957356   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
1957357   +          +     0.72513216556859 * S_NumDealsPurchases
1957358   +          +    -0.15566774650584 * S_NumDistPurchases
1957359   +          +     -0.8847675798982 * S_NumStorePurchases
1957360   +          +    -0.79405200318252 * S_NumWebPurchases
1957361   +          +     1.74003779802254 * S_NumWebVisitsMonth
1957362   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
1957363   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
1957364   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
1957365   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
1957366   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
1957367   +        S_Income  +    -0.58596240450544 * S_Kidhome
1957368   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
1957369   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
1957370   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
1957371   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
1957372   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
1957373   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
1957374   +          +     0.17466385502192 * S_NumDealsPurchases
1957375   +          +    -0.06219545947203 * S_NumDistPurchases
1957376   +          +     0.16637546838853 * S_NumStorePurchases
1957377   +          +    -0.06908729397635 * S_NumWebPurchases
1957378   +          +     1.44269772444244 * S_NumWebVisitsMonth
1957379   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
1957380   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
1957381   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
1957382   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
1957383   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
1957384   +        S_Income  +    -0.42454238091412 * S_Kidhome
1957385   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
1957386   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
1957387   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
1957388   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
1957389   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
1957390   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
1957391   +          +     0.77329078721398 * S_NumDealsPurchases
1957392   +          +     0.31693324305765 * S_NumDistPurchases
1957393   +          +    -1.08524196373091 * S_NumStorePurchases
1957394   +          +    -0.96945384922979 * S_NumWebPurchases
1957395   +          +     1.24659288571587 * S_NumWebVisitsMonth
1957396   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
1957397   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
1957398   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
1957399   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
1957400   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
1957401   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
1957402   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
1957403   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
1957404   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
1957405   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
1957406   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
1957407   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
1957408   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
1957409   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
1957410   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
1957411   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
1957412   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
1957413   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
1957414   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
1957415   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
1957416   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
1957417   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
1957418   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
1957419   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
1957420   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
1957421   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
1957422   +          +     0.36788499721115 * Marital_StatusDivorced
1957423   +          +    -0.16988636986433 * Marital_StatusMarried
1957424   +          +    -0.24560973256761 * Marital_StatusSingle
1957425   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
1957426   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
1957427   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
1957428   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
1957429   +          +     0.24497797058028 * Marital_StatusDivorced
1957430   +          +    -1.44410245434424 * Marital_StatusMarried
1957431   +          +     1.47441310087392 * Marital_StatusSingle
1957432   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
1957433   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
1957434   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
1957435   +        EducationGraduation  +     0.04653963359475 * EducationMaster
1957436   +          +     0.15823225296452 * Marital_StatusDivorced
1957437   +          +    -0.39129434667884 * Marital_StatusMarried
1957438   +          +     0.84414069966504 * Marital_StatusSingle
1957439   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
1957440   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
1957441   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
1957442   +        EducationGraduation  +     0.40030852414737 * EducationMaster
1957443   +          +     1.22039169814542 * Marital_StatusDivorced
1957444   +          +     0.91592976063128 * Marital_StatusMarried
1957445   +          +    -1.51267332883308 * Marital_StatusSingle
1957446   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
1957447   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
1957448   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
1957449   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
1957450   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
1957451   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1957452   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1957453   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1957454   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1957455   +END;
MPRINT(EM_DIAGRAM):   END;
1957456   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957457   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1957458   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1957459   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1957460   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1957461   +END;
MPRINT(EM_DIAGRAM):   END;
1957462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957463   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1957464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957465   +
1957466   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1957467   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1957468   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1957469   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1957470   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1957471   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957472   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1957473   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1957474   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1957475   +end;
MPRINT(EM_DIAGRAM):   end;
1957476   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957477   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1957478   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1957479   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1957480   +   end;
MPRINT(EM_DIAGRAM):   end;
1957481   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1957482   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1957483   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1957484   +   end;
MPRINT(EM_DIAGRAM):   end;
1957485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957486   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1957487   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1957488   +   end;
MPRINT(EM_DIAGRAM):   end;
1957489   +end;
MPRINT(EM_DIAGRAM):   end;
1957490   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1957491   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
1957492   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
1957493   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
1957494   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1957495   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1957496   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1957497   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1957498   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1957499   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1957500   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1957501   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1957502   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1957503   +END;
MPRINT(EM_DIAGRAM):   END;
1957504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957505   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1957506   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1957507   +END;
MPRINT(EM_DIAGRAM):   END;
1957508   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1957509   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1957510   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1957511   +END;
MPRINT(EM_DIAGRAM):   END;
1957512   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1957513   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1957514   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1957515   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1957516   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1957517   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1957518   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1957519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957520   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1957521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1957522   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1957523   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1957524   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957525   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1957526   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1957527   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1957528   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957529   +END;
MPRINT(EM_DIAGRAM):   END;
1957530   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1957531   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1957532   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1957533   +drop
1957534   +H11
1957535   +H12
1957536   +H13
1957537   +H14
1957538   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1957539   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1957540   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1957541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957542   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1957543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957544   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1957545   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1957546   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1957547   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1957548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957549   +* Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
1957550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957551   +length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
1957552   +drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
1957553   +Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
1957554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957555   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1957556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957557   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1957558   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1957559   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1957560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957561   +* Ensmbl29: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 8 of 10;
1957562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957564   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1957565   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1957566   +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
1957567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957568   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1957569   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1957570   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1957571   +
1957572   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1957573   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1957574   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1957575   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1957576   +
1957577   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1957578   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1957579   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1957580   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1957581   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1957582   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1957583   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1957584   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1957585   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1957586   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1957587   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1957588   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1957589   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1957590   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1957591   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1957592   +
1957593   +
1957594   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1957595   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1957596   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1957597   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1957598   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1957599   +
1957600   +
1957601   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1957602   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1957603   +
1957604   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1957605   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1957606   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1957607   +  IF  NOT MISSING(Recency ) AND
1957608   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1957609   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1957610   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1957611   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1957612   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1957613   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1957614   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1957615   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1957616   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1957617   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1957618   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1957619   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957620   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957621   +      END;
MPRINT(EM_DIAGRAM):   END;
1957622   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957623   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1957624   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1957625   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1957626   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1957627   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1957628   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1957629   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1957630   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1957631   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1957632   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1957633   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1957634   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957635   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957636   +        END;
MPRINT(EM_DIAGRAM):   END;
1957637   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957638   +        IF  NOT MISSING(NumStorePurchases ) AND
1957639   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1957640   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1957641   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1957642   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1957643   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1957644   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1957645   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1957646   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1957647   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1957648   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1957649   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1957650   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957651   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957652   +            END;
MPRINT(EM_DIAGRAM):   END;
1957653   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957654   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1957655   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1957656   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1957657   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1957658   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1957659   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1957660   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1957661   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1957662   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957663   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957664   +            END;
MPRINT(EM_DIAGRAM):   END;
1957665   +          END;
MPRINT(EM_DIAGRAM):   END;
1957666   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957667   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1957668   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1957669   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1957670   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1957671   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1957672   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1957673   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1957674   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1957675   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957676   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957677   +          END;
MPRINT(EM_DIAGRAM):   END;
1957678   +        END;
MPRINT(EM_DIAGRAM):   END;
1957679   +      END;
MPRINT(EM_DIAGRAM):   END;
1957680   +    END;
MPRINT(EM_DIAGRAM):   END;
1957681   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957682   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1957683   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1957684   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1957685   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1957686   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1957687   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1957688   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1957689   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1957690   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1957691   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1957692   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957693   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957694   +      END;
MPRINT(EM_DIAGRAM):   END;
1957695   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957696   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1957697   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1957698   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1957699   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1957700   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1957701   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1957702   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1957703   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1957704   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957705   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957706   +      END;
MPRINT(EM_DIAGRAM):   END;
1957707   +    END;
MPRINT(EM_DIAGRAM):   END;
1957708   +  END;
MPRINT(EM_DIAGRAM):   END;
1957709   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957710   +  IF  NOT MISSING(Recency ) AND
1957711   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1957712   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1957713   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1957714   +      IF  NOT MISSING(NumStorePurchases ) AND
1957715   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1957716   +        IF  NOT MISSING(RFMstat ) AND
1957717   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1957718   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1957719   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1957720   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1957721   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1957722   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1957723   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1957724   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1957725   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1957726   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957727   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957728   +          END;
MPRINT(EM_DIAGRAM):   END;
1957729   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957730   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1957731   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1957732   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1957733   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1957734   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1957735   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1957736   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1957737   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1957738   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957739   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957740   +          END;
MPRINT(EM_DIAGRAM):   END;
1957741   +        END;
MPRINT(EM_DIAGRAM):   END;
1957742   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957743   +        IF  NOT MISSING(MntFishProducts ) AND
1957744   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1957745   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1957746   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1957747   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1957748   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1957749   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1957750   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1957751   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1957752   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1957753   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957754   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957755   +          END;
MPRINT(EM_DIAGRAM):   END;
1957756   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957757   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1957758   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1957759   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1957760   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1957761   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1957762   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1957763   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1957764   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1957765   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957766   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957767   +          END;
MPRINT(EM_DIAGRAM):   END;
1957768   +        END;
MPRINT(EM_DIAGRAM):   END;
1957769   +      END;
MPRINT(EM_DIAGRAM):   END;
1957770   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957771   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1957772   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1957773   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1957774   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1957775   +          IF  NOT MISSING(Kidhome ) AND
1957776   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1957777   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1957778   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1957779   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1957780   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1957781   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1957782   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1957783   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1957784   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1957785   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957786   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957787   +            END;
MPRINT(EM_DIAGRAM):   END;
1957788   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957789   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1957790   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1957791   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1957792   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1957793   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1957794   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1957795   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1957796   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1957797   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1957798   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1957799   +            END;
MPRINT(EM_DIAGRAM):   END;
1957800   +          END;
MPRINT(EM_DIAGRAM):   END;
1957801   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957802   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1957803   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1957804   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1957805   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1957806   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1957807   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1957808   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1957809   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1957810   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957811   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957812   +          END;
MPRINT(EM_DIAGRAM):   END;
1957813   +        END;
MPRINT(EM_DIAGRAM):   END;
1957814   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957815   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1957816   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1957817   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1957818   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1957819   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1957820   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1957821   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1957822   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1957823   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957824   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957825   +        END;
MPRINT(EM_DIAGRAM):   END;
1957826   +      END;
MPRINT(EM_DIAGRAM):   END;
1957827   +    END;
MPRINT(EM_DIAGRAM):   END;
1957828   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957829   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1957830   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1957831   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1957832   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1957833   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1957834   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1957835   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1957836   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1957837   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1957838   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1957839   +    END;
MPRINT(EM_DIAGRAM):   END;
1957840   +  END;
MPRINT(EM_DIAGRAM):   END;
1957841   +
1957842   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1957843   +IF  F_DepVar  NE '0'
1957844   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1957845   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1957846   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1957847   + END;
MPRINT(EM_DIAGRAM):   END;
1957848   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1957849   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1957850   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1957851   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1957852   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1957853   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1957854   +       END;
MPRINT(EM_DIAGRAM):   END;
1957855   + END;
MPRINT(EM_DIAGRAM):   END;
1957856   +
1957857   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1957858   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1957859   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1957860   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1957861   +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
1957862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957863   +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
1957864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957865   +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
1957866   +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
1957867   +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
1957868   +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
1957869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957870   +* Renaming Into variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Tree;
1957871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957872   +length Tree_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Tree_I_DepVar $32;
1957873   +drop Tree_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Tree_I_DepVar;
1957874   +Tree_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Tree_I_DepVar = I_DepVar;
1957875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957876   +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
1957877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957878   +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
1957879   +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
1957880   +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
1957881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957882   +* Ensmbl29: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 9 of 10;
1957883   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957885   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1957886   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1957887   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1957888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1957889   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1957890   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1957891   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1957892   +
1957893   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1957894   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1957895   +
1957896   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1957897   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1957898   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1957899   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1957900   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1957901   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1957902   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1957903   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1957904   +
1957905   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1957906   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1957907   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1957908   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1957909   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1957910   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1957911   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1957912   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1957913   +end;
MPRINT(EM_DIAGRAM):   end;
1957914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1957915   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1957916   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1957917   +   end;
MPRINT(EM_DIAGRAM):   end;
1957918   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1957919   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1957920   +   end;
MPRINT(EM_DIAGRAM):   end;
1957921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1957922   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1957923   +   end;
MPRINT(EM_DIAGRAM):   end;
1957924   +end;
MPRINT(EM_DIAGRAM):   end;
1957925   +
1957926   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1957927   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1957928   +
1957929   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1957930   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1957931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957933   +end;
MPRINT(EM_DIAGRAM):   end;
1957934   +
1957935   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1957936   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1957937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957939   +end;
MPRINT(EM_DIAGRAM):   end;
1957940   +
1957941   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1957942   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1957943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957945   +end;
MPRINT(EM_DIAGRAM):   end;
1957946   +
1957947   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1957948   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1957949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957951   +end;
MPRINT(EM_DIAGRAM):   end;
1957952   +
1957953   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1957954   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1957955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957957   +end;
MPRINT(EM_DIAGRAM):   end;
1957958   +
1957959   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1957960   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1957961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957963   +end;
MPRINT(EM_DIAGRAM):   end;
1957964   +
1957965   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1957966   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1957967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957969   +end;
MPRINT(EM_DIAGRAM):   end;
1957970   +
1957971   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1957972   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1957973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957975   +end;
MPRINT(EM_DIAGRAM):   end;
1957976   +
1957977   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1957978   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1957979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957981   +end;
MPRINT(EM_DIAGRAM):   end;
1957982   +
1957983   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1957984   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1957985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957987   +end;
MPRINT(EM_DIAGRAM):   end;
1957988   +
1957989   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1957990   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
The SAS System

1957991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957993   +end;
MPRINT(EM_DIAGRAM):   end;
1957994   +
1957995   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1957996   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1957997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1957998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1957999   +end;
MPRINT(EM_DIAGRAM):   end;
1958000   +
1958001   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1958002   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1958003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958005   +end;
MPRINT(EM_DIAGRAM):   end;
1958006   +
1958007   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1958008   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1958009   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1958010   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1958011   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1958012   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1958013   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1958014   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1958015   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1958016   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1958017   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1958018   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1958019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958021   +end;
MPRINT(EM_DIAGRAM):   end;
1958022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958023   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1958024   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1958025   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1958026   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1958027   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1958028   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1958029   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1958030   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1958031   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958032   +         end;
MPRINT(EM_DIAGRAM):   end;
1958033   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1958034   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1958035   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1958036   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958037   +            end;
MPRINT(EM_DIAGRAM):   end;
1958038   +         end;
MPRINT(EM_DIAGRAM):   end;
1958039   +      end;
MPRINT(EM_DIAGRAM):   end;
1958040   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1958041   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1958042   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1958043   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958044   +         end;
MPRINT(EM_DIAGRAM):   end;
1958045   +      end;
MPRINT(EM_DIAGRAM):   end;
1958046   +   end;
MPRINT(EM_DIAGRAM):   end;
1958047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1958048   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1958049   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1958050   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958051   +      end;
MPRINT(EM_DIAGRAM):   end;
1958052   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1958053   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1958054   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1958055   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1958056   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1958057   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1958058   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958059   +         end;
MPRINT(EM_DIAGRAM):   end;
1958060   +      end;
MPRINT(EM_DIAGRAM):   end;
1958061   +   end;
MPRINT(EM_DIAGRAM):   end;
1958062   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1958063   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1958064   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1958065   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1958066   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1958067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1958068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958069   +   end;
MPRINT(EM_DIAGRAM):   end;
1958070   +end;
MPRINT(EM_DIAGRAM):   end;
1958071   +
1958072   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1958073   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1958074   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1958075   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1958076   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1958077   +end;
MPRINT(EM_DIAGRAM):   end;
1958078   +
1958079   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1958080   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1958081   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1958082   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1958083   +
1958084   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1958085   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1958086   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1958087   +
1958088   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1958089   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1958090   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1958091   +
1958092   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1958093   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1958094   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1958095   +
1958096   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1958097   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1958098   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1958099   +
1958100   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1958101   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1958102   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1958103   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1958104   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1958105   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1958106   +
1958107   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1958108   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1958109   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1958110   +
1958111   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1958112   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1958113   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1958114   +
1958115   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1958116   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1958117   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1958118   +
1958119   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1958120   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1958121   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1958122   +
1958123   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1958124   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1958125   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1958126   +
1958127   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1958128   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1958129   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1958130   +
1958131   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1958132   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1958133   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1958134   +
1958135   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1958136   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1958137   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1958138   +
1958139   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1958140   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1958141   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1958142   +
1958143   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1958144   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1958145   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1958146   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1958147   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1958148   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1958149   +end;
MPRINT(EM_DIAGRAM):   end;
1958150   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1958151   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1958152   +
1958153   +REGDR1:
1958154   +
1958155   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1958156   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1958157   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1958158   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1958159   +end;
MPRINT(EM_DIAGRAM):   end;
1958160   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958161   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1958162   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1958163   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1958164   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1958165   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1958166   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1958167   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1958168   +   end;
MPRINT(EM_DIAGRAM):   end;
1958169   +end;
MPRINT(EM_DIAGRAM):   end;
1958170   +
1958171   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1958172   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1958173   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1958174   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1958175   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1958176   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1958177   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1958178   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1958179   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1958180   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1958181   +end;
MPRINT(EM_DIAGRAM):   end;
1958182   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1958183   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1958184   +
1958185   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1958186   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1958187   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1958188   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1958189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958190   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1958191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958192   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1958193   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1958194   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1958195   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1958196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958197   +* Renaming Into variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg;
1958198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958199   +length Reg_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg_I_DepVar $32;
1958200   +drop Reg_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg_I_DepVar;
1958201   +Reg_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg_I_DepVar = I_DepVar;
1958202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958203   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1958204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958205   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1958206   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1958207   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1958208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958209   +* Ensmbl29: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 10 of 10;
1958210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958212   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1958213   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1958214   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1958215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958216   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1958217   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1958218   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1958219   +
1958220   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1958221   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1958222   +
1958223   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1958224   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1958225   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1958226   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1958227   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1958228   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1958229   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1958230   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1958231   +
1958232   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1958233   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1958234   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1958235   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1958236   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1958237   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1958238   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1958239   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1958240   +end;
MPRINT(EM_DIAGRAM):   end;
1958241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958242   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1958243   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1958244   +   end;
MPRINT(EM_DIAGRAM):   end;
1958245   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1958246   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1958247   +   end;
MPRINT(EM_DIAGRAM):   end;
1958248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1958249   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1958250   +   end;
MPRINT(EM_DIAGRAM):   end;
1958251   +end;
MPRINT(EM_DIAGRAM):   end;
1958252   +
1958253   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1958254   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1958255   +
1958256   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1958257   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1958258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958260   +end;
MPRINT(EM_DIAGRAM):   end;
1958261   +
1958262   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1958263   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1958264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958266   +end;
MPRINT(EM_DIAGRAM):   end;
1958267   +
1958268   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1958269   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1958270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958272   +end;
MPRINT(EM_DIAGRAM):   end;
1958273   +
1958274   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1958275   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1958276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958278   +end;
MPRINT(EM_DIAGRAM):   end;
1958279   +
1958280   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1958281   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1958282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958284   +end;
MPRINT(EM_DIAGRAM):   end;
1958285   +
1958286   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1958287   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1958288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958290   +end;
MPRINT(EM_DIAGRAM):   end;
1958291   +
1958292   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1958293   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1958294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958296   +end;
MPRINT(EM_DIAGRAM):   end;
1958297   +
1958298   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1958299   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1958300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958302   +end;
MPRINT(EM_DIAGRAM):   end;
1958303   +
1958304   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1958305   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1958306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958308   +end;
MPRINT(EM_DIAGRAM):   end;
1958309   +
1958310   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1958311   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1958312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958314   +end;
MPRINT(EM_DIAGRAM):   end;
1958315   +
1958316   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1958317   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1958318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958320   +end;
MPRINT(EM_DIAGRAM):   end;
1958321   +
1958322   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1958323   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1958324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958326   +end;
MPRINT(EM_DIAGRAM):   end;
1958327   +
1958328   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1958329   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1958330   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1958331   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1958332   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1958333   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1958334   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1958335   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1958336   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1958337   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1958338   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1958339   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1958340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958342   +end;
MPRINT(EM_DIAGRAM):   end;
1958343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958344   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1958345   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1958346   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1958347   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1958348   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1958349   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1958350   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1958351   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1958352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958353   +         end;
MPRINT(EM_DIAGRAM):   end;
1958354   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1958355   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1958356   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1958357   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958358   +            end;
MPRINT(EM_DIAGRAM):   end;
1958359   +         end;
MPRINT(EM_DIAGRAM):   end;
1958360   +      end;
MPRINT(EM_DIAGRAM):   end;
1958361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1958362   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1958363   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1958364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958365   +         end;
MPRINT(EM_DIAGRAM):   end;
1958366   +      end;
MPRINT(EM_DIAGRAM):   end;
1958367   +   end;
MPRINT(EM_DIAGRAM):   end;
1958368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1958369   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1958370   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1958371   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958372   +      end;
MPRINT(EM_DIAGRAM):   end;
1958373   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1958374   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1958375   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1958376   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1958377   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1958378   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1958379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1958380   +         end;
MPRINT(EM_DIAGRAM):   end;
1958381   +      end;
MPRINT(EM_DIAGRAM):   end;
1958382   +   end;
MPRINT(EM_DIAGRAM):   end;
1958383   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1958384   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1958385   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1958386   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1958387   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1958388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1958389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958390   +   end;
MPRINT(EM_DIAGRAM):   end;
1958391   +end;
MPRINT(EM_DIAGRAM):   end;
1958392   +
1958393   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1958394   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1958395   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1958396   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1958397   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1958398   +end;
MPRINT(EM_DIAGRAM):   end;
1958399   +
1958400   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1958401   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1958402   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1958403   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1958404   +
1958405   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1958406   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1958407   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1958408   +
1958409   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1958410   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1958411   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1958412   +
1958413   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1958414   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1958415   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1958416   +
1958417   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1958418   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1958419   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1958420   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1958421   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1958422   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1958423   +
1958424   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1958425   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1958426   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1958427   +
1958428   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1958429   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1958430   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1958431   +
1958432   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1958433   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1958434   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1958435   +
1958436   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1958437   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1958438   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1958439   +
1958440   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1958441   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1958442   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1958443   +
1958444   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1958445   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1958446   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1958447   +
1958448   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1958449   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1958450   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1958451   +
1958452   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1958453   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1958454   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1958455   +
1958456   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1958457   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1958458   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1958459   +
1958460   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1958461   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1958462   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1958463   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1958464   +
1958465   +REG5DR1:
1958466   +
1958467   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1958468   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1958469   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1958470   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1958471   +end;
MPRINT(EM_DIAGRAM):   end;
1958472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958473   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1958474   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1958475   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1958476   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1958477   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1958478   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1958479   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1958480   +   end;
MPRINT(EM_DIAGRAM):   end;
1958481   +end;
MPRINT(EM_DIAGRAM):   end;
1958482   +
1958483   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1958484   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1958485   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1958486   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1958487   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1958488   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1958489   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1958490   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1958491   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1958492   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1958493   +end;
MPRINT(EM_DIAGRAM):   end;
1958494   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1958495   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1958496   +
1958497   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1958498   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1958499   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1958500   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1958501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958502   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1958503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958504   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1958505   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1958506   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1958507   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1958508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958509   +* Renaming Into variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg5;
1958510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958511   +length Reg5_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg5_I_DepVar $32;
1958512   +drop Reg5_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg5_I_DepVar;
1958513   +Reg5_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg5_I_DepVar = I_DepVar;
1958514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958515   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1958516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958517   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1958518   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1958519   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1958520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958521   +* Ensmbl29: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Voting to produce predicted target;
1958522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958523   +array Ensmbl29_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_post{2} _temporary_;
1958524   +array Ensmbl29_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_count{2} _temporary_;
1958525   +array Ensmbl29_level{2} $32 _temporary_ (
1958526   +"1"
1958527   +"0"
1958528   +);
MPRINT(EM_DIAGRAM):   array Ensmbl29_level{2} $32 _temporary_ ( "1" "0" );
1958529   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1958530   +Ensmbl29_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{i} = 0;
1958531   +Ensmbl29_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{i} = 0;
1958532   +end;
MPRINT(EM_DIAGRAM):   end;
1958533   +if Neural10_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{1} then do;
1958534   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958535   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
1958536   +end;
MPRINT(EM_DIAGRAM):   end;
1958537   +if Neural9_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{1} then do;
1958538   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958539   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
1958540   +end;
MPRINT(EM_DIAGRAM):   end;
1958541   +if Neural7_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{1} then do;
1958542   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958543   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
1958544   +end;
MPRINT(EM_DIAGRAM):   end;
1958545   +if Neural3_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{1} then do;
1958546   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958547   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
1958548   +end;
MPRINT(EM_DIAGRAM):   end;
1958549   +if Neural2_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{1} then do;
1958550   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958551   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
1958552   +end;
MPRINT(EM_DIAGRAM):   end;
1958553   +if Neural_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{1} then do;
1958554   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958555   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
1958556   +end;
MPRINT(EM_DIAGRAM):   end;
1958557   +if Neural4_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{1} then do;
1958558   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958559   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
1958560   +end;
MPRINT(EM_DIAGRAM):   end;
1958561   +if Tree_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{1} then do;
1958562   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958563   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
1958564   +end;
MPRINT(EM_DIAGRAM):   end;
1958565   +if Reg_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{1} then do;
1958566   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958567   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
1958568   +end;
MPRINT(EM_DIAGRAM):   end;
1958569   +if Reg5_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{1} then do;
1958570   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1958571   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
1958572   +end;
MPRINT(EM_DIAGRAM):   end;
1958573   +if Neural10_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{2} then do;
1958574   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958575   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
1958576   +end;
MPRINT(EM_DIAGRAM):   end;
1958577   +if Neural9_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{2} then do;
1958578   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958579   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
1958580   +end;
MPRINT(EM_DIAGRAM):   end;
1958581   +if Neural7_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{2} then do;
1958582   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958583   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
1958584   +end;
MPRINT(EM_DIAGRAM):   end;
1958585   +if Neural3_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{2} then do;
1958586   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958587   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
1958588   +end;
MPRINT(EM_DIAGRAM):   end;
1958589   +if Neural2_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{2} then do;
1958590   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958591   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
1958592   +end;
MPRINT(EM_DIAGRAM):   end;
1958593   +if Neural_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{2} then do;
1958594   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958595   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
1958596   +end;
MPRINT(EM_DIAGRAM):   end;
1958597   +if Neural4_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{2} then do;
1958598   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958599   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
1958600   +end;
MPRINT(EM_DIAGRAM):   end;
1958601   +if Tree_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{2} then do;
1958602   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958603   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
1958604   +end;
MPRINT(EM_DIAGRAM):   end;
1958605   +if Reg_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{2} then do;
1958606   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958607   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
1958608   +end;
MPRINT(EM_DIAGRAM):   end;
1958609   +if Reg5_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{2} then do;
1958610   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1958611   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
1958612   +end;
MPRINT(EM_DIAGRAM):   end;
1958613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958614   +* Ensmbl29: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Determine Into Variable;
1958615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958616   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1958617   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1958618   +vote_count = max(
1958619   +Ensmbl29_count{1} ,
1958620   +Ensmbl29_count{2}
1958621   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl29_count{1} , Ensmbl29_count{2} );
1958622   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1958623   +if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
1958624   +I_DepVar = Ensmbl29_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl29_level{i};
1958625   +vote_post = Ensmbl29_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl29_count{i};
1958626   +end;
MPRINT(EM_DIAGRAM):   end;
1958627   +end;
MPRINT(EM_DIAGRAM):   end;
1958628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958629   +* Ensmbl29: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Compute posterior vars using models predicting the chosen 
level;
1958630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958631   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1958632   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1958633   +if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
1958634   +P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
1958635   +P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
1958636   +end;
MPRINT(EM_DIAGRAM):   end;
1958637   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1958638   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1958639   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1958640   +end;
MPRINT(EM_DIAGRAM):   end;
1958641   +if I_DepVar = Neural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural7_I_DepVar then do;
1958642   +P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
1958643   +P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
1958644   +end;
MPRINT(EM_DIAGRAM):   end;
1958645   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1958646   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1958647   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1958648   +end;
MPRINT(EM_DIAGRAM):   end;
1958649   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1958650   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1958651   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1958652   +end;
MPRINT(EM_DIAGRAM):   end;
1958653   +if I_DepVar = Neural_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural_I_DepVar then do;
1958654   +P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
1958655   +P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
1958656   +end;
MPRINT(EM_DIAGRAM):   end;
1958657   +if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
1958658   +P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
1958659   +P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
1958660   +end;
MPRINT(EM_DIAGRAM):   end;
1958661   +if I_DepVar = Tree_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Tree_I_DepVar then do;
1958662   +P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
1958663   +P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
1958664   +end;
MPRINT(EM_DIAGRAM):   end;
1958665   +if I_DepVar = Reg_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg_I_DepVar then do;
1958666   +P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
1958667   +P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
1958668   +end;
MPRINT(EM_DIAGRAM):   end;
1958669   +if I_DepVar = Reg5_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg5_I_DepVar then do;
1958670   +P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
1958671   +P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
1958672   +end;
MPRINT(EM_DIAGRAM):   end;
1958673   +* Ensmbl29: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Averaging posterior;
1958674   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1958675   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1958676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958677   +* Ensmbl29: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Producing Unformatted variable;
1958678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958679   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1958680   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1958681   +else
1958682   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1958683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958684   +* Ensmbl29: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing _WARN_ Variable;
1958685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958686   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1958687   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1958688   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1958689   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1958689  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1958690   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1958690  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1958691   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1958691  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1958692   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1958692  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1958693   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1958694   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1958695   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1958696   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1958697   +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1958698   +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1958699   +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1958700   +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1958701   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1958702   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1958703   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1958704   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1958705   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1958706   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1958707   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1958708   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1958709   +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1958710   +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1958711   +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1958712   +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1958713   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1958714   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1958715   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1958716   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1958717   +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1958718   +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1958719   +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1958720   +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1958721   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1958722   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1958723   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1958724   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1958725   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1958726   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1958727   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1958728   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1958729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958730   +* Ensmbl29: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing Residual Vars;
1958731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1958732   +if
1958733   +F_DepVar NE '1'
1958734   +AND F_DepVar NE '0'
1958735   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1958736   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1958737   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1958738   +end;
MPRINT(EM_DIAGRAM):   end;
1958739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958740   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1958741   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1958742   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1958743   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1958744   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1958745   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1958746   +END;
MPRINT(EM_DIAGRAM):   END;
1958747   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1958748    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL29_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1958749    quit;
1958750    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl29_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl29_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl29_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1958810    filename _pref
1958810  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1958811    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1958812    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1958813   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1958814   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1958815   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1958816   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1958817   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1958818   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1958819   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1958820   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1958821   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1958822   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1958823   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1958824   +LENGTH _WARN_ $4
1958825   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1958826   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1958827   +
1958828   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1958829   +
1958830   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1958831   +
1958832   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1958833   +
1958834   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1958835   +
1958836   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1958837   +
1958838   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1958839   +
1958840   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1958841   +
1958842   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1958843   +
1958844   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1958845   +
1958846   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1958847   +
1958848   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1958849   +
1958850   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1958851   +
1958852   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1958853   +
1958854   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1958855   +
1958856   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1958857   +
1958858   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1958859   +
1958860   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1958861   +
1958862   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1958863   +
1958864   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1958865   +
1958866   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1958867   +
1958868   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1958869   +
1958870   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1958871   +
1958872   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1958873   +
1958874   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1958875   +
1958876   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1958877   +
1958878   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1958879   +
1958880   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1958881   +
1958882   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1958883   +
1958884   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1958885   +
1958886   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1958887   +
1958888   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1958889   +
1958890   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1958891   +
1958892   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1958893   +
1958894   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1958895   +
1958896   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1958897   +
1958898   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1958899   +
1958900   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1958901   +
1958902   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1958903   +
1958904   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1958905   +
1958906   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1958907   +
1958908   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1958909   +
1958910   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1958911   +
1958912   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1958913   +
1958914   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1958915   +
1958916   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1958917   +
1958918   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1958919   +
1958920   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1958921   +
1958922   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1958923   +
1958924   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1958925   +
1958926   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1958927   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1958928   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1958929   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1958930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958932   +end;
MPRINT(EM_DIAGRAM):   end;
1958933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1958935   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1958936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1958937   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1958938   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1958939   +   end;
MPRINT(EM_DIAGRAM):   end;
1958940   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1958941   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1958942   +   end;
MPRINT(EM_DIAGRAM):   end;
1958943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1958944   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1958945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1958946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958947   +   end;
MPRINT(EM_DIAGRAM):   end;
1958948   +end;
MPRINT(EM_DIAGRAM):   end;
1958949   +
1958950   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1958951   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1958952   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1958953   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1958954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958956   +end;
MPRINT(EM_DIAGRAM):   end;
1958957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1958959   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1958960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1958961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1958962   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1958963   +   end;
MPRINT(EM_DIAGRAM):   end;
1958964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1958965   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1958966   +   end;
MPRINT(EM_DIAGRAM):   end;
1958967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1958968   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1958969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1958970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958971   +   end;
MPRINT(EM_DIAGRAM):   end;
1958972   +end;
MPRINT(EM_DIAGRAM):   end;
1958973   +
1958974   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1958975   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1958976   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1958977   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1958978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1958979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958980   +end;
MPRINT(EM_DIAGRAM):   end;
1958981   +else do;
MPRINT(EM_DIAGRAM):   else do;
1958982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1958983   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1958984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1958985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1958986   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1958987   +   end;
MPRINT(EM_DIAGRAM):   end;
1958988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1958989   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1958990   +   end;
MPRINT(EM_DIAGRAM):   end;
1958991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1958992   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1958993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1958994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1958995   +   end;
MPRINT(EM_DIAGRAM):   end;
1958996   +end;
MPRINT(EM_DIAGRAM):   end;
1958997   +
1958998   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1958999   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1959000   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1959001   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1959002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1959003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959004   +end;
MPRINT(EM_DIAGRAM):   end;
1959005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1959006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1959007   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1959008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1959009   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1959010   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1959011   +   end;
MPRINT(EM_DIAGRAM):   end;
1959012   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1959013   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1959014   +   end;
MPRINT(EM_DIAGRAM):   end;
1959015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1959016   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1959017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1959018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959019   +   end;
MPRINT(EM_DIAGRAM):   end;
1959020   +end;
MPRINT(EM_DIAGRAM):   end;
1959021   +
1959022   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1959023   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1959024   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1959025   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1959026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1959027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959028   +end;
MPRINT(EM_DIAGRAM):   end;
1959029   +else do;
MPRINT(EM_DIAGRAM):   else do;
1959030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1959031   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1959032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1959033   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1959034   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1959035   +   end;
MPRINT(EM_DIAGRAM):   end;
1959036   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1959037   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1959038   +   end;
MPRINT(EM_DIAGRAM):   end;
1959039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1959040   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1959041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1959042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959043   +   end;
MPRINT(EM_DIAGRAM):   end;
1959044   +end;
MPRINT(EM_DIAGRAM):   end;
1959045   +
1959046   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1959047   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1959048   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1959049   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1959050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1959051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959052   +end;
MPRINT(EM_DIAGRAM):   end;
1959053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1959054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1959055   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1959056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1959057   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1959058   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1959059   +   end;
MPRINT(EM_DIAGRAM):   end;
1959060   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1959061   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1959062   +   end;
MPRINT(EM_DIAGRAM):   end;
1959063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1959064   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1959065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1959066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959067   +   end;
MPRINT(EM_DIAGRAM):   end;
1959068   +end;
MPRINT(EM_DIAGRAM):   end;
1959069   +
1959070   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1959071   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1959072   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1959073   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1959074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1959075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959076   +end;
MPRINT(EM_DIAGRAM):   end;
1959077   +else do;
MPRINT(EM_DIAGRAM):   else do;
1959078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1959079   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1959080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1959081   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1959082   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1959083   +   end;
MPRINT(EM_DIAGRAM):   end;
1959084   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1959085   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1959086   +   end;
MPRINT(EM_DIAGRAM):   end;
1959087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1959088   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1959089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1959090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959091   +   end;
MPRINT(EM_DIAGRAM):   end;
1959092   +end;
MPRINT(EM_DIAGRAM):   end;
1959093   +
1959094   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1959095   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1959096   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1959097   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1959098   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1959099   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1959100   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1959101   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1959102   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1959103   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1959104   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1959105   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1959106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1959107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959108   +end;
MPRINT(EM_DIAGRAM):   end;
1959109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1959110   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1959111   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1959112   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1959113   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1959114   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1959115   +   end;
MPRINT(EM_DIAGRAM):   end;
1959116   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1959117   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1959118   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1959119   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1959120   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1959121   +   end;
MPRINT(EM_DIAGRAM):   end;
1959122   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1959123   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1959124   +   end;
MPRINT(EM_DIAGRAM):   end;
1959125   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1959126   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1959127   +   end;
MPRINT(EM_DIAGRAM):   end;
1959128   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1959129   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1959130   +   end;
MPRINT(EM_DIAGRAM):   end;
1959131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1959132   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1959133   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1959134   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1959135   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1959136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1959137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959138   +   end;
MPRINT(EM_DIAGRAM):   end;
1959139   +end;
MPRINT(EM_DIAGRAM):   end;
1959140   +
1959141   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1959142   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1959143   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1959144   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1959145   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1959146   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1959147   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1959148   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1959149   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1959150   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1959151   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1959152   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1959153   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1959154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1959155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959156   +end;
MPRINT(EM_DIAGRAM):   end;
1959157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1959158   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1959159   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1959160   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1959161   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1959162   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1959163   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1959164   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1959165   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1959166   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1959167   +         end;
MPRINT(EM_DIAGRAM):   end;
1959168   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1959169   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1959170   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1959171   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1959172   +            end;
MPRINT(EM_DIAGRAM):   end;
1959173   +         end;
MPRINT(EM_DIAGRAM):   end;
1959174   +      end;
MPRINT(EM_DIAGRAM):   end;
1959175   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1959176   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1959177   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1959178   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1959179   +         end;
MPRINT(EM_DIAGRAM):   end;
1959180   +      end;
MPRINT(EM_DIAGRAM):   end;
1959181   +   end;
MPRINT(EM_DIAGRAM):   end;
1959182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1959183   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1959184   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1959185   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1959186   +      end;
MPRINT(EM_DIAGRAM):   end;
1959187   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1959188   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1959189   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1959190   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1959191   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1959192   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1959193   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1959194   +         end;
MPRINT(EM_DIAGRAM):   end;
1959195   +      end;
MPRINT(EM_DIAGRAM):   end;
1959196   +   end;
MPRINT(EM_DIAGRAM):   end;
1959197   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1959198   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1959199   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1959200   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1959201   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1959202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1959203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959204   +   end;
MPRINT(EM_DIAGRAM):   end;
1959205   +end;
MPRINT(EM_DIAGRAM):   end;
1959206   +
1959207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959208   +*** Checking missing input Interval
1959209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1959210   +
1959211   +IF NMISS(
1959212   +   AcceptedCmpTotal ,
1959213   +   Age ,
1959214   +   Frq ,
1959215   +   Income ,
1959216   +   Kidhome ,
1959217   +   Mnt ,
1959218   +   MntFishProducts ,
1959219   +   MntFruits ,
1959220   +   MntGoldProds ,
1959221   +   MntMeatProducts ,
1959222   +   MntSweetProducts ,
1959223   +   MntWines ,
1959224   +   MonthsAsCustomer ,
1959225   +   NumCatalogPurchases ,
1959226   +   NumDealsPurchases ,
1959227   +   NumDistPurchases ,
1959228   +   NumStorePurchases ,
1959229   +   NumWebPurchases ,
1959230   +   NumWebVisitsMonth ,
1959231   +   RFMstat ,
1959232   +   RMntFrq ,
1959233   +   Recency ,
1959234   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1959235   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1959236   +
1959237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1959238   +END;
MPRINT(EM_DIAGRAM):   END;
1959239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959240   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1959241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959242   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1959243   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1959244   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1959245   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1959246   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1959247   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1959248   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1959249   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1959250   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1959251   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1959252   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1959253   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1959254   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1959255   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1959256   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1959257   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1959258   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1959259   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1959260   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1959261   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1959262   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1959263   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1959264   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1959265   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1959266   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1959267   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1959268   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1959269   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1959270   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1959271   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1959272   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1959273   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1959274   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1959275   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1959276   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1959277   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1959278   +END;
MPRINT(EM_DIAGRAM):   END;
1959279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1959280   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1959281   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1959282   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1959283   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1959284   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1959285   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1959286   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1959287   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1959288   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1959289   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1959290   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1959291   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1959292   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1959293   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1959294   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1959295   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1959296   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1959297   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1959298   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1959299   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1959300   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1959301   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1959302   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1959303   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1959304   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1959305   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1959306   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1959307   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1959308   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1959309   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1959310   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1959311   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1959312   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1959313   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1959314   +   ELSE S_NumCatalogPurchases
1959315   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1959316   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1959317   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1959318   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1959319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1959320   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1959321   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1959322   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1959323   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1959324   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1959325   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1959326   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1959327   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1959328   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1959329   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1959330   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1959331   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1959332   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1959333   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1959334   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1959335   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1959336   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1959337   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1959338   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1959339   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1959340   +END;
MPRINT(EM_DIAGRAM):   END;
1959341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959342   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1959343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959345   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1959346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959348   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1959349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1959351   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
1959352   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
1959353   +        S_Income  +    -0.43070069114587 * S_Kidhome
1959354   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
1959355   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
1959356   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
1959357   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
1959358   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
1959359   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
1959360   +          +    -0.21858146166244 * S_NumDealsPurchases
1959361   +          +     0.18409991080913 * S_NumDistPurchases
1959362   +          +     0.35683163455594 * S_NumStorePurchases
1959363   +          +     0.24429183714976 * S_NumWebPurchases
1959364   +          +     -0.1263739191616 * S_NumWebVisitsMonth
1959365   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
1959366   +        S_RMntFrq  +      0.3452503815146 * S_Recency
1959367   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
1959368   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
1959369   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
1959370   +        S_Income  +     0.24623934031778 * S_Kidhome
1959371   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
1959372   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
1959373   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
1959374   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
1959375   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
1959376   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
1959377   +          +    -0.08125614129909 * S_NumDealsPurchases
1959378   +          +     0.38003696656333 * S_NumDistPurchases
1959379   +          +     0.22006494588298 * S_NumStorePurchases
1959380   +          +     0.26217639358993 * S_NumWebPurchases
1959381   +          +    -0.56905781005459 * S_NumWebVisitsMonth
1959382   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
1959383   +        S_RMntFrq  +     0.33060213336674 * S_Recency
1959384   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
1959385   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
1959386   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
1959387   +        S_Income  +     0.18597632724783 * S_Kidhome
1959388   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
1959389   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
1959390   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
1959391   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
1959392   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
1959393   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
1959394   +          +     0.08121213946217 * S_NumDealsPurchases
1959395   +          +    -0.04963282234139 * S_NumDistPurchases
1959396   +          +    -0.09521586837775 * S_NumStorePurchases
1959397   +          +     0.00630626523742 * S_NumWebPurchases
1959398   +          +    -0.03891587920939 * S_NumWebVisitsMonth
1959399   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
1959400   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
1959401   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
1959402   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
1959403   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
1959404   +        S_Income  +     0.25356767518099 * S_Kidhome
1959405   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
1959406   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
1959407   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
1959408   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
1959409   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
1959410   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
1959411   +          +     0.83749876944877 * S_NumDealsPurchases
1959412   +          +     0.29636537008068 * S_NumDistPurchases
1959413   +          +    -0.61202052257506 * S_NumStorePurchases
1959414   +          +    -0.96921731415369 * S_NumWebPurchases
1959415   +          +     0.10056455703323 * S_NumWebVisitsMonth
1959416   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
1959417   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
1959418   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
1959419   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
1959420   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
1959421   +        S_Income  +    -0.66239517276633 * S_Kidhome
1959422   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
1959423   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
1959424   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
1959425   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
1959426   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
1959427   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
1959428   +          +     0.63122884753912 * S_NumDealsPurchases
1959429   +          +     0.00285388491049 * S_NumDistPurchases
1959430   +          +    -0.76222252593182 * S_NumStorePurchases
1959431   +          +    -0.71485070772733 * S_NumWebPurchases
1959432   +          +     1.59020450778179 * S_NumWebVisitsMonth
1959433   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
1959434   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
1959435   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
1959436   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
1959437   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
1959438   +        S_Income  +    -0.22662005590555 * S_Kidhome
1959439   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
1959440   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
1959441   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
1959442   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
1959443   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
1959444   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
1959445   +          +    -0.28143084367284 * S_NumDealsPurchases
1959446   +          +     0.09640746756361 * S_NumDistPurchases
1959447   +          +      0.1754994442449 * S_NumStorePurchases
1959448   +          +     0.14321475617403 * S_NumWebPurchases
1959449   +          +     -0.1908048876137 * S_NumWebVisitsMonth
1959450   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
1959451   +        S_RMntFrq  +     0.02280616139018 * S_Recency
1959452   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
1959453   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
1959454   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
1959455   +        S_Income  +    -0.45643247613458 * S_Kidhome
1959456   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
1959457   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
1959458   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
1959459   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
1959460   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
1959461   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
1959462   +          +    -0.14623073736275 * S_NumDealsPurchases
1959463   +          +      0.1591142102614 * S_NumDistPurchases
1959464   +          +     0.10364624011419 * S_NumStorePurchases
1959465   +          +     0.21545343951201 * S_NumWebPurchases
1959466   +          +     0.61096997379603 * S_NumWebVisitsMonth
1959467   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
1959468   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
1959469   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
1959470   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
1959471   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
1959472   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
1959473   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
1959474   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
1959475   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
1959476   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
1959477   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
1959478   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
1959479   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
1959480   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
1959481   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
1959482   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
1959483   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
1959484   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
1959485   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
1959486   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
1959487   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
1959488   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
1959489   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
1959490   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
1959491   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
1959492   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
1959493   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
1959494   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
1959495   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
1959496   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
1959497   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
1959498   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
1959499   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
1959500   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
1959501   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
1959502   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
1959503   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
1959504   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
1959505   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
1959506   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
1959507   +        EducationGraduation  +     0.00389495660452 * EducationMaster
1959508   +          +     0.39856598367829 * Marital_StatusDivorced
1959509   +          +    -0.45922754552461 * Marital_StatusMarried
1959510   +          +     0.41270195301891 * Marital_StatusSingle
1959511   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
1959512   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
1959513   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
1959514   +        EducationGraduation  +      0.2609956614651 * EducationMaster
1959515   +          +     0.12002180366932 * Marital_StatusDivorced
1959516   +          +     0.50693056076018 * Marital_StatusMarried
1959517   +          +    -0.40828651697464 * Marital_StatusSingle
1959518   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
1959519   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
1959520   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
1959521   +        EducationGraduation  +     0.20017847825938 * EducationMaster
1959522   +          +    -0.05075621283629 * Marital_StatusDivorced
1959523   +          +     0.06731276969307 * Marital_StatusMarried
1959524   +          +     0.20458391966582 * Marital_StatusSingle
1959525   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
1959526   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
1959527   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
1959528   +        EducationGraduation  +     0.28829384238085 * EducationMaster
1959529   +          +    -0.37925185401218 * Marital_StatusDivorced
1959530   +          +     0.62971134740586 * Marital_StatusMarried
1959531   +          +    -0.36562351730859 * Marital_StatusSingle
1959532   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
1959533   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
1959534   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
1959535   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
1959536   +          +     0.84382044664305 * Marital_StatusDivorced
1959537   +          +    -0.84062627203871 * Marital_StatusMarried
1959538   +          +     0.74100406031127 * Marital_StatusSingle
1959539   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
1959540   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
1959541   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
1959542   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
1959543   +          +     -0.1195105091383 * Marital_StatusDivorced
1959544   +          +    -0.13486422945269 * Marital_StatusMarried
1959545   +          +     0.33592403429156 * Marital_StatusSingle
1959546   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
1959547   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
1959548   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
1959549   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
1959550   +          +     0.14792293029589 * Marital_StatusDivorced
1959551   +          +    -0.96003393582564 * Marital_StatusMarried
1959552   +          +     0.64637652355384 * Marital_StatusSingle
1959553   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
1959554   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
1959555   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
1959556   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
1959557   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
1959558   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
1959559   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
1959560   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
1959561   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1959562   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1959563   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1959564   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1959565   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1959566   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1959567   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1959568   +END;
MPRINT(EM_DIAGRAM):   END;
1959569   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1959570   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1959571   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1959572   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1959573   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1959574   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1959575   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1959576   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1959577   +END;
MPRINT(EM_DIAGRAM):   END;
1959578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959579   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1959580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959581   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1959582   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
1959583   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
1959584   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
1959585   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
1959586   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
1959587   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1959588   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1959589   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1959590   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1959591   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1959592   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1959593   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1959594   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1959595   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1959596   +END;
MPRINT(EM_DIAGRAM):   END;
1959597   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1959598   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1959599   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1959600   +END;
MPRINT(EM_DIAGRAM):   END;
1959601   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1959602   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1959603   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1959604   +END;
MPRINT(EM_DIAGRAM):   END;
1959605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959606   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1959607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1959608   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1959609   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1959610   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1959611   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1959612   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1959613   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1959614   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1959615   +END;
MPRINT(EM_DIAGRAM):   END;
1959616   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1959617   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1959618   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1959619   +drop
1959620   +H11
1959621   +H12
1959622   +H13
1959623   +H14
1959624   +H15
1959625   +H16
1959626   +H17
1959627   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1959628   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1959629    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1959630    quit;
1959631    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1959632    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1959633    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1959634    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1959635    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1959636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959637    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1959638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959639    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959640    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1959641    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959642    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959643    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959644    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1959645    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1959646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959647    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1959648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1959649    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1959650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959652    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959653    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1959654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959655    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959656    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1959657    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1959657  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

1959658    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959659    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1959660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959661    filename _pref
1959661  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1959662    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1959663    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1959664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1959665   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1959666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1959667   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1959668   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1959669   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1959670    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1959671    quit;
1959672    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1959673    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1959674    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1959675    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1959676    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1959677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

1959678    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1959679    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959680    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959681    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1959682    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959683    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959684    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959685    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1959686    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1959687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959688    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1959689    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1959690    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1959691    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959693    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959694    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1959695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959696    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959697    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1959698    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1959698  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1959699    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959700    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1959701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959702    filename _pref
1959702  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1959703    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1959704    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1959705   +
1959706   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1959707   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1959707  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1959708   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1959709   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1959710   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1959711   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1959712   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1959713    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1959714    quit;
1959715    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1959716    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1959717    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1959718    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1959719    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1959720    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1959721    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1959722    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959724    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1959725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959727    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959728    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1959729    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1959730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959731    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1959732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959733    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1959734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959736    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959737    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1959738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959739    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959740    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1959741    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1959741  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1959742    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959743    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1959744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959745    filename _pref
1959745  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1959746    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1959747    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1959748   +
1959749   +
1959750   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1959751   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1959752   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1959753   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1959754   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1959755   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959756   +
1959757   +
1959758   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1959759   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1959760   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1959761   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1959762   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1959763   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959764   +
1959765   +
1959766   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1959767   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1959768   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1959769   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1959770   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1959771   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959772   +
1959773   +
1959774   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1959775   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1959776   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1959777   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1959778   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1959779   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959780   +
1959781   +
1959782   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1959783   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1959784   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1959785   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1959786   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1959787   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959788   +
1959789   +
1959790   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1959791   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1959792   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1959793   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1959794   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1959795   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959796   +
1959797   +
1959798   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1959799   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1959800   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1959801   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1959802   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1959803   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959804   +
1959805   +
1959806   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1959807   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1959808   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1959809   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1959810   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1959811   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1959812   +if
1959813   +_FILTERNORM1 not in ( '.')
1959814   + and
1959815   +_FILTERNORM2 not in ( '.')
1959816   + and
1959817   +_FILTERNORM3 not in ( '.')
1959818   + and
1959819   +_FILTERNORM4 not in ( '.')
1959820   + and
1959821   +_FILTERNORM5 not in ( '.')
1959822   + and
1959823   +_FILTERNORM6 not in ( '.')
1959824   + and
1959825   +_FILTERNORM7 not in ( ' ')
1959826   + and
1959827   +_FILTERNORM8 not in ( ' ')
1959828   +and
1959829   +( Dt_Customer ne .)
1959830   +and ( Income ne . and (Income<=107000))
1959831   +and ( Kidhome ne .)
1959832   +and ( MntFishProducts ne .)
1959833   +and ( MntFruits ne .)
1959834   +and ( MntGoldProds ne .)
1959835   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1959836   +and ( MntSweetProducts ne .)
1959837   +and ( MntWines ne .)
1959838   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1959839   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1959840   +and ( NumStorePurchases ne .)
1959841   +and ( NumWebPurchases ne .)
1959842   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1959843   +and ( Recency ne .)
1959844   +and ( Teenhome ne .)
1959845   +and ( Year_Birth ne .)
1959846   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1959847   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1959848   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1959849   +end;
MPRINT(EM_DIAGRAM):   end;
1959850   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1959851   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1959852    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1959853    quit;
1959854    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1959855    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1959856    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1959857    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1959858    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1959859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959860    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1959861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1959863    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1959864    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959866    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959867    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1959868    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1959869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959870    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1959871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959872    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1959873    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959874    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959875    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1959876    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1959877    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1959878    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959879    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1959880    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1959880  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1959881    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1959882    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1959883    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959884    %macro varDept(fcmpdata=,id=);
1959885    %global nobs&id scoreFlag&id;
1959886    %let scoreFlag&id = 0;
1959887    %if &id=1 or ^&fcmpStart %then %do;
1959888    proc sort data=&fcmpdata out=_temp&id nodupkey;
1959889    by NAME;
1959890    where id=&id and LHS in( %let j=1;
1959891    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1959892    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1959893    "&var" %let j = %eval(&j+1);
1959894    %end;
1959895    );
1959896    run;
1959897    %let dsid = %sysfunc(open(_temp&id));
1959898    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1959899    %let dsid = %sysfunc(close(&dsid));
1959900    %if &&nobs&id %then %do;
1959901    %let scoreFlag&id = 1;
1959902    %let fcmpStart = 1;
1959903    %end;
1959904    %else %let fcmpStart = 0;
1959905    %end;
1959906    %else %do;
1959907    proc sort data=&fcmpdata out=_tempid;
1959908    where id=&id;
1959909    by LHS;
1959910    run;
1959911    %let dsid = %sysfunc(open(_tempid));
1959912    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1959913    %let dsid = %sysfunc(close(&dsid));
1959914    %if ^&&nobs&id %then %do;
1959915    proc datasets lib=work nolist;
1959916    delete _tempid;
1959917    run;
1959918    quit;
1959919    %end;
1959920    %else %do;
1959921    data _tempAll;
1959922    set %let j=%eval(&id-1);
1959923    %do x=1 %to &j;
1959924    %if &&nobs&x %then %do;
1959925    _temp&x %end;
1959926    %end;
1959927    ;
1959928    run;
1959929    proc sql;
1959930    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1959930  ! work._tempid p2 where p.name=p2.lhs;
1959931    quit;
1959932    data _temp&id;
1959933    set _temp&id;
1959934    where LHS ne '' and NAME ne '' and Node ne '';
1959935    run;
1959936    proc datasets lib=work nolist;
1959937    delete _tempAll;
1959938    run;
1959939    %let dsid = %sysfunc(open(_temp&id));
1959940    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1959941    %let dsid = %sysfunc(close(&dsid));
1959942    %if ^&&nobs&id %then %do;
1959943    proc datasets lib=work nolist;
1959944    delete _temp&id;
1959945    run;
1959946    quit;
1959947    %end;
1959948    %else %do;
1959949    %let scoreFlag&id = 1;
1959950    data _temp&id;
1959951    set _temp&id;
1959952    where LHS ne NAME and node ne '';
1959953    run;
1959954    %let dsid = %sysfunc(open(_temp&id));
1959955    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1959956    %let dsid = %sysfunc(close(&dsid));
1959957    %if ^&&nobs&id %then %do;
1959958    proc datasets lib=work nolist;
1959959    delete _temp&id;
1959960    run;
1959961    quit;
1959962    %end;
1959963    %else %do;
1959964    proc sort data=_temp&id nodupkey;
1959965    by LHS NAME;
1959966    run;
1959967    %end;
1959968    %end;
1959969    %end;
1959970    %end;
1959971    %mend varDept;
1959972    %macro optCode(outdata=fcmpdata);
1959973    %global fcmpStart;
1959974    %let fcmpStart = 0;
1959975    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1959976    %let NumNodes=9;
1959977    %do k=1 %to &NumNodes;
1959978    %vardept(fcmpdata=&outdata, id=&k);
1959979    %end;
1959980    %mend optCode;
1959981    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1959982    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1959983    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1959984    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1959985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959986    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1959987    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1959988    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1959989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959990    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1959991    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1959991  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1959992    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1959993    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1959994    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1959995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1959996    filename _pref
1959996  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1959997    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1959998    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1959999   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1960000   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1960001   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1960002   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1960003   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1960004   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1960005   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1960006   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1960007   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1960008   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1960009   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1960010   +LENGTH _WARN_ $4
1960011   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1960012   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1960013   +
1960014   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1960015   +
1960016   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1960017   +
1960018   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1960019   +
1960020   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1960021   +
1960022   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1960023   +
1960024   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1960025   +
1960026   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1960027   +
1960028   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1960029   +
1960030   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1960031   +
1960032   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1960033   +
1960034   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1960035   +
1960036   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1960037   +
1960038   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1960039   +
1960040   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1960041   +
1960042   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1960043   +
1960044   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1960045   +
1960046   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1960047   +
1960048   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1960049   +
1960050   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1960051   +
1960052   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1960053   +
1960054   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1960055   +
1960056   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1960057   +
1960058   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1960059   +
1960060   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1960061   +
1960062   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1960063   +
1960064   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1960065   +
1960066   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1960067   +
1960068   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1960069   +
1960070   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1960071   +
1960072   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1960073   +
1960074   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1960075   +
1960076   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1960077   +
1960078   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1960079   +
1960080   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1960081   +
1960082   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1960083   +
1960084   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1960085   +
1960086   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1960087   +
1960088   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1960089   +
1960090   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1960091   +
1960092   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1960093   +
1960094   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1960095   +
1960096   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1960097   +
1960098   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1960099   +
1960100   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1960101   +
1960102   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1960103   +
1960104   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1960105   +
1960106   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1960107   +
1960108   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1960109   +
1960110   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1960111   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1960112   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1960113   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1960114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960116   +end;
MPRINT(EM_DIAGRAM):   end;
1960117   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960119   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1960120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960121   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1960122   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1960123   +   end;
MPRINT(EM_DIAGRAM):   end;
1960124   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1960125   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1960126   +   end;
MPRINT(EM_DIAGRAM):   end;
1960127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960128   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1960129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960131   +   end;
MPRINT(EM_DIAGRAM):   end;
1960132   +end;
MPRINT(EM_DIAGRAM):   end;
1960133   +
1960134   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1960135   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1960136   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1960137   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1960138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960140   +end;
MPRINT(EM_DIAGRAM):   end;
1960141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960143   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1960144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960145   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1960146   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1960147   +   end;
MPRINT(EM_DIAGRAM):   end;
1960148   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1960149   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1960150   +   end;
MPRINT(EM_DIAGRAM):   end;
1960151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960152   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1960153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960155   +   end;
MPRINT(EM_DIAGRAM):   end;
1960156   +end;
MPRINT(EM_DIAGRAM):   end;
1960157   +
1960158   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1960159   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1960160   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1960161   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1960162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960164   +end;
MPRINT(EM_DIAGRAM):   end;
1960165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960167   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1960168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1960170   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1960171   +   end;
MPRINT(EM_DIAGRAM):   end;
1960172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1960173   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1960174   +   end;
MPRINT(EM_DIAGRAM):   end;
1960175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960176   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1960177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960179   +   end;
MPRINT(EM_DIAGRAM):   end;
1960180   +end;
MPRINT(EM_DIAGRAM):   end;
1960181   +
1960182   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1960183   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1960184   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1960185   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1960186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960188   +end;
MPRINT(EM_DIAGRAM):   end;
1960189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960191   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1960192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1960194   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1960195   +   end;
MPRINT(EM_DIAGRAM):   end;
1960196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1960197   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1960198   +   end;
MPRINT(EM_DIAGRAM):   end;
1960199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960200   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1960201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960203   +   end;
MPRINT(EM_DIAGRAM):   end;
1960204   +end;
MPRINT(EM_DIAGRAM):   end;
1960205   +
1960206   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1960207   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1960208   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1960209   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1960210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960212   +end;
MPRINT(EM_DIAGRAM):   end;
1960213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960215   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1960216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1960218   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1960219   +   end;
MPRINT(EM_DIAGRAM):   end;
1960220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1960221   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1960222   +   end;
MPRINT(EM_DIAGRAM):   end;
1960223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960224   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1960225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960227   +   end;
MPRINT(EM_DIAGRAM):   end;
1960228   +end;
MPRINT(EM_DIAGRAM):   end;
1960229   +
1960230   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1960231   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1960232   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1960233   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1960234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960236   +end;
MPRINT(EM_DIAGRAM):   end;
1960237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960239   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1960240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1960242   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1960243   +   end;
MPRINT(EM_DIAGRAM):   end;
1960244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1960245   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1960246   +   end;
MPRINT(EM_DIAGRAM):   end;
1960247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960248   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1960249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960251   +   end;
MPRINT(EM_DIAGRAM):   end;
1960252   +end;
MPRINT(EM_DIAGRAM):   end;
1960253   +
1960254   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1960255   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1960256   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1960257   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1960258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960260   +end;
MPRINT(EM_DIAGRAM):   end;
1960261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1960263   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1960264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960265   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1960266   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1960267   +   end;
MPRINT(EM_DIAGRAM):   end;
1960268   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1960269   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1960270   +   end;
MPRINT(EM_DIAGRAM):   end;
1960271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960272   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1960273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960275   +   end;
MPRINT(EM_DIAGRAM):   end;
1960276   +end;
MPRINT(EM_DIAGRAM):   end;
1960277   +
1960278   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1960279   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1960280   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1960281   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1960282   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1960283   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1960284   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1960285   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1960286   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1960287   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1960288   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1960289   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1960290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960292   +end;
MPRINT(EM_DIAGRAM):   end;
1960293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960294   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1960295   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1960296   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960297   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1960298   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1960299   +   end;
MPRINT(EM_DIAGRAM):   end;
1960300   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1960301   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1960302   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1960303   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1960304   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1960305   +   end;
MPRINT(EM_DIAGRAM):   end;
1960306   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1960307   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1960308   +   end;
MPRINT(EM_DIAGRAM):   end;
1960309   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1960310   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1960311   +   end;
MPRINT(EM_DIAGRAM):   end;
1960312   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1960313   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1960314   +   end;
MPRINT(EM_DIAGRAM):   end;
1960315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960316   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1960317   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1960318   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1960319   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1960320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960322   +   end;
MPRINT(EM_DIAGRAM):   end;
1960323   +end;
MPRINT(EM_DIAGRAM):   end;
1960324   +
1960325   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1960326   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1960327   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1960328   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1960329   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1960330   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1960331   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1960332   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1960333   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1960334   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1960335   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1960336   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1960337   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1960338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1960339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960340   +end;
MPRINT(EM_DIAGRAM):   end;
1960341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1960342   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1960343   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1960344   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1960345   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1960346   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1960347   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1960348   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1960349   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1960350   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1960351   +         end;
MPRINT(EM_DIAGRAM):   end;
1960352   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1960353   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1960354   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1960355   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1960356   +            end;
MPRINT(EM_DIAGRAM):   end;
1960357   +         end;
MPRINT(EM_DIAGRAM):   end;
1960358   +      end;
MPRINT(EM_DIAGRAM):   end;
1960359   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1960360   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1960361   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1960362   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1960363   +         end;
MPRINT(EM_DIAGRAM):   end;
1960364   +      end;
MPRINT(EM_DIAGRAM):   end;
1960365   +   end;
MPRINT(EM_DIAGRAM):   end;
1960366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1960367   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1960368   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1960369   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1960370   +      end;
MPRINT(EM_DIAGRAM):   end;
1960371   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1960372   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1960373   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1960374   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1960375   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1960376   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1960377   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1960378   +         end;
MPRINT(EM_DIAGRAM):   end;
1960379   +      end;
MPRINT(EM_DIAGRAM):   end;
1960380   +   end;
MPRINT(EM_DIAGRAM):   end;
1960381   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1960382   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1960383   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1960384   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1960385   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1960386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1960387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960388   +   end;
MPRINT(EM_DIAGRAM):   end;
1960389   +end;
MPRINT(EM_DIAGRAM):   end;
1960390   +
1960391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960392   +*** Checking missing input Interval
1960393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1960394   +
1960395   +IF NMISS(
1960396   +   AcceptedCmpTotal ,
1960397   +   Age ,
1960398   +   Frq ,
1960399   +   Income ,
1960400   +   Kidhome ,
1960401   +   Mnt ,
1960402   +   MntFishProducts ,
1960403   +   MntFruits ,
1960404   +   MntGoldProds ,
1960405   +   MntMeatProducts ,
1960406   +   MntSweetProducts ,
1960407   +   MntWines ,
1960408   +   MonthsAsCustomer ,
1960409   +   NumCatalogPurchases ,
1960410   +   NumDealsPurchases ,
1960411   +   NumDistPurchases ,
1960412   +   NumStorePurchases ,
1960413   +   NumWebPurchases ,
1960414   +   NumWebVisitsMonth ,
1960415   +   RFMstat ,
1960416   +   RMntFrq ,
1960417   +   Recency ,
1960418   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1960419   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1960420   +
1960421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1960422   +END;
MPRINT(EM_DIAGRAM):   END;
1960423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960424   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1960425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960426   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1960427   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1960428   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1960429   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1960430   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1960431   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1960432   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1960433   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1960434   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1960435   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1960436   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1960437   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1960438   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1960439   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1960440   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1960441   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1960442   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1960443   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1960444   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1960445   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1960446   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1960447   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1960448   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1960449   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1960450   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1960451   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1960452   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1960453   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1960454   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1960455   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1960456   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1960457   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1960458   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1960459   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1960460   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1960461   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1960462   +END;
MPRINT(EM_DIAGRAM):   END;
1960463   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1960464   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1960465   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1960466   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1960467   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1960468   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1960469   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1960470   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1960471   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1960472   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1960473   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1960474   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1960475   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1960476   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1960477   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1960478   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1960479   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1960480   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1960481   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1960482   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1960483   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1960484   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1960485   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1960486   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1960487   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1960488   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1960489   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1960490   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1960491   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1960492   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1960493   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1960494   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1960495   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1960496   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1960497   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1960498   +   ELSE S_NumCatalogPurchases
1960499   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1960500   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1960501   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1960502   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1960503   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1960504   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1960505   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1960506   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1960507   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1960508   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1960509   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1960510   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1960511   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1960512   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1960513   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1960514   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1960515   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1960516   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1960517   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1960518   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1960519   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1960520   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1960521   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1960522   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1960523   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1960524   +END;
MPRINT(EM_DIAGRAM):   END;
1960525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960526   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1960527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960529   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1960530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960532   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1960533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960534   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1960535   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1960536   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1960537   +        S_Income  +    -0.14142658616971 * S_Kidhome
1960538   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1960539   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1960540   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1960541   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1960542   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1960543   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1960544   +          +     0.96837841774168 * S_NumDealsPurchases
1960545   +          +      0.2846105381881 * S_NumDistPurchases
1960546   +          +    -0.69514041792943 * S_NumStorePurchases
1960547   +          +    -0.96425407351749 * S_NumWebPurchases
1960548   +          +     0.79545449599683 * S_NumWebVisitsMonth
1960549   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1960550   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1960551   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1960552   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1960553   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1960554   +        S_Income  +    -0.55432195959203 * S_Kidhome
1960555   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1960556   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1960557   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1960558   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1960559   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1960560   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1960561   +          +      0.2190184330724 * S_NumDealsPurchases
1960562   +          +    -0.01682909442896 * S_NumDistPurchases
1960563   +          +    -0.70244951048552 * S_NumStorePurchases
1960564   +          +     -0.3057457659316 * S_NumWebPurchases
1960565   +          +     0.95928538762715 * S_NumWebVisitsMonth
1960566   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1960567   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1960568   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1960569   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1960570   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1960571   +        S_Income  +    -0.06354861159882 * S_Kidhome
1960572   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1960573   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1960574   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1960575   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1960576   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1960577   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1960578   +          +    -0.21394230159696 * S_NumDealsPurchases
1960579   +          +    -0.23833771124663 * S_NumDistPurchases
1960580   +          +     0.45832031017813 * S_NumStorePurchases
1960581   +          +    -0.30226952040179 * S_NumWebPurchases
1960582   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1960583   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1960584   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1960585   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
1960586   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1960587   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1960588   +        S_Income  +    -0.04839586846715 * S_Kidhome
1960589   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1960590   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1960591   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1960592   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1960593   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1960594   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1960595   +          +    -0.43749647771198 * S_NumDealsPurchases
1960596   +          +     0.21263473847472 * S_NumDistPurchases
1960597   +          +     0.26102168039141 * S_NumStorePurchases
1960598   +          +     0.54921725943657 * S_NumWebPurchases
1960599   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1960600   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1960601   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1960602   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1960603   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1960604   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1960605   +        S_Income  +     0.71499527198653 * S_Kidhome
1960606   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1960607   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1960608   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1960609   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1960610   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1960611   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1960612   +          +     0.09436067776126 * S_NumDealsPurchases
1960613   +          +    -0.02824201859641 * S_NumDistPurchases
1960614   +          +    -0.06770433780564 * S_NumStorePurchases
1960615   +          +    -0.07177620319715 * S_NumWebPurchases
1960616   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1960617   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1960618   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1960619   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1960620   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1960621   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1960622   +        S_Income  +    -0.63474522042341 * S_Kidhome
1960623   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1960624   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1960625   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1960626   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1960627   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1960628   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1960629   +          +    -0.51154511343396 * S_NumDealsPurchases
1960630   +          +    -0.52422915823572 * S_NumDistPurchases
1960631   +          +     0.30305498422357 * S_NumStorePurchases
1960632   +          +     0.12197321559338 * S_NumWebPurchases
1960633   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1960634   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1960635   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1960636   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1960637   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1960638   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1960639   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1960640   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1960641   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
1960642   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1960643   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1960644   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1960645   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1960646   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
1960647   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1960648   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1960649   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1960650   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1960651   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
1960652   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1960653   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1960654   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1960655   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1960656   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
1960657   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1960658   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1960659   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1960660   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1960661   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
1960662   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1960663   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1960664   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1960665   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1960666   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
1960667   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1960668   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1960669   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1960670   +          +     0.10234616400375 * Marital_StatusDivorced
1960671   +          +     0.27961650739075 * Marital_StatusMarried
1960672   +          +    -0.40239488723767 * Marital_StatusSingle
1960673   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1960674   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1960675   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1960676   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1960677   +          +     0.46385792428023 * Marital_StatusDivorced
1960678   +          +    -0.62344590646391 * Marital_StatusMarried
1960679   +          +     0.61767209252062 * Marital_StatusSingle
1960680   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1960681   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1960682   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1960683   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1960684   +          +    -0.07839612590836 * Marital_StatusDivorced
1960685   +          +     0.35316864062221 * Marital_StatusMarried
1960686   +          +    -0.10730136429834 * Marital_StatusSingle
1960687   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1960688   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1960689   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1960690   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1960691   +          +    -0.09942175269886 * Marital_StatusDivorced
1960692   +          +     0.24385460865335 * Marital_StatusMarried
1960693   +          +    -0.33658955096296 * Marital_StatusSingle
1960694   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1960695   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1960696   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1960697   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1960698   +          +    -0.08047852561096 * Marital_StatusDivorced
1960699   +          +     1.16485862694561 * Marital_StatusMarried
1960700   +          +    -0.94140251178566 * Marital_StatusSingle
1960701   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1960702   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1960703   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1960704   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1960705   +          +    -0.16621963893391 * Marital_StatusDivorced
1960706   +          +    -0.44542186297324 * Marital_StatusMarried
1960707   +          +     0.42176133228308 * Marital_StatusSingle
1960708   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1960709   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1960710   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1960711   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1960712   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1960713   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1960714   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1960715   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1960716   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1960717   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1960718   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1960719   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1960720   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1960721   +END;
MPRINT(EM_DIAGRAM):   END;
1960722   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1960723   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1960724   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1960725   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1960726   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1960727   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1960728   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1960729   +END;
MPRINT(EM_DIAGRAM):   END;
1960730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960731   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1960732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1960734   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1960735   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1960736   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
1960737   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1960738   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1960739   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1960740   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1960741   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1960742   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1960743   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1960744   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1960745   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1960746   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1960747   +END;
MPRINT(EM_DIAGRAM):   END;
1960748   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1960749   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1960750   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1960751   +END;
MPRINT(EM_DIAGRAM):   END;
1960752   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1960753   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1960754   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1960755   +END;
MPRINT(EM_DIAGRAM):   END;
1960756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960757   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1960758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1960759   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1960760   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1960761   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1960762   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1960763   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1960764   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1960765   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1960766   +END;
MPRINT(EM_DIAGRAM):   END;
1960767   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1960768   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1960769   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1960770   +drop
1960771   +H11
1960772   +H12
1960773   +H13
1960774   +H14
1960775   +H15
1960776   +H16
1960777   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1960778   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1960779    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1960780    quit;
1960781    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1960782    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1960783    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1960784    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1960785    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1960786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960787    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1960788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960790    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1960791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960792    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960793    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1960794    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1960795    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1960796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960797    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1960798    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1960799    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1960800    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960802    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1960803    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1960804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960805    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960806    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1960807    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1960807  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1960808    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960809    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1960810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960811    filename _pref
1960811  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1960812    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1960813    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1960814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1960815   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1960816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1960817   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1960818   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1960819   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1960820    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1960821    quit;
1960822    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1960823    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1960824    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1960825    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1960826    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1960827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960828    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1960829    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960831    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1960832    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960833    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960834    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1960835    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1960836    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1960837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960838    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1960839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1960840    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1960841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960843    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1960844    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1960845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960846    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960847    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1960848    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1960848  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1960849    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960850    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1960851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960852    filename _pref
1960852  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1960853    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1960854    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1960855   +
1960856   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1960857   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1960857  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1960858   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1960859   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1960860   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1960861   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1960862   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1960863    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1960864    quit;
1960865    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1960866    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1960867    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1960868    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1960869    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1960870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960871    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1960872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960874    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1960875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960877    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1960878    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1960879    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1960880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960881    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1960882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960883    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1960884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960886    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1960887    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1960888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1960889    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960890    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1960891    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1960891  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1960892    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1960893    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1960894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1960895    filename _pref
1960895  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1960896    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1960897    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1960898   +
1960899   +
1960900   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1960901   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1960902   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1960903   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1960904   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1960905   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960906   +
1960907   +
1960908   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1960909   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1960910   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1960911   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1960912   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1960913   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960914   +
1960915   +
1960916   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1960917   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1960918   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1960919   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1960920   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1960921   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960922   +
1960923   +
1960924   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1960925   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1960926   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1960927   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1960928   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1960929   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960930   +
1960931   +
1960932   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1960933   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1960934   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1960935   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1960936   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1960937   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960938   +
1960939   +
1960940   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1960941   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1960942   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1960943   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1960944   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1960945   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960946   +
1960947   +
1960948   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1960949   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1960950   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1960951   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1960952   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1960953   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960954   +
1960955   +
1960956   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1960957   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1960958   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1960959   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1960960   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1960961   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1960962   +if
1960963   +_FILTERNORM1 not in ( '.')
1960964   + and
1960965   +_FILTERNORM2 not in ( '.')
1960966   + and
1960967   +_FILTERNORM3 not in ( '.')
1960968   + and
1960969   +_FILTERNORM4 not in ( '.')
1960970   + and
1960971   +_FILTERNORM5 not in ( '.')
1960972   + and
1960973   +_FILTERNORM6 not in ( '.')
1960974   + and
1960975   +_FILTERNORM7 not in ( ' ')
1960976   + and
1960977   +_FILTERNORM8 not in ( ' ')
1960978   +and
1960979   +( Dt_Customer ne .)
1960980   +and ( Income ne . and (Income<=107000))
1960981   +and ( Kidhome ne .)
1960982   +and ( MntFishProducts ne .)
1960983   +and ( MntFruits ne .)
1960984   +and ( MntGoldProds ne .)
1960985   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1960986   +and ( MntSweetProducts ne .)
1960987   +and ( MntWines ne .)
1960988   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1960989   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1960990   +and ( NumStorePurchases ne .)
1960991   +and ( NumWebPurchases ne .)
1960992   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1960993   +and ( Recency ne .)
1960994   +and ( Teenhome ne .)
1960995   +and ( Year_Birth ne .)
1960996   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1960997   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1960998   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1960999   +end;
MPRINT(EM_DIAGRAM):   end;
1961000   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1961001   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1961002    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1961003    quit;
1961004    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1961005    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1961006    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1961007    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1961008    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1961009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961010    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1961011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961013    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1961014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961015    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961016    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961017    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1961018    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1961019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961020    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1961021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1961022    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1961023    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961024    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961025    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961026    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1961027    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961028    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961029    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1961030    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1961030  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1961031    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961032    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1961033    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961034    %macro varDept(fcmpdata=,id=);
1961035    %global nobs&id scoreFlag&id;
1961036    %let scoreFlag&id = 0;
1961037    %if &id=1 or ^&fcmpStart %then %do;
1961038    proc sort data=&fcmpdata out=_temp&id nodupkey;
1961039    by NAME;
1961040    where id=&id and LHS in( %let j=1;
1961041    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1961042    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1961043    "&var" %let j = %eval(&j+1);
1961044    %end;
1961045    );
1961046    run;
1961047    %let dsid = %sysfunc(open(_temp&id));
1961048    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1961049    %let dsid = %sysfunc(close(&dsid));
1961050    %if &&nobs&id %then %do;
1961051    %let scoreFlag&id = 1;
1961052    %let fcmpStart = 1;
1961053    %end;
1961054    %else %let fcmpStart = 0;
1961055    %end;
1961056    %else %do;
1961057    proc sort data=&fcmpdata out=_tempid;
1961058    where id=&id;
1961059    by LHS;
1961060    run;
1961061    %let dsid = %sysfunc(open(_tempid));
1961062    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1961063    %let dsid = %sysfunc(close(&dsid));
1961064    %if ^&&nobs&id %then %do;
1961065    proc datasets lib=work nolist;
1961066    delete _tempid;
1961067    run;
1961068    quit;
1961069    %end;
1961070    %else %do;
1961071    data _tempAll;
1961072    set %let j=%eval(&id-1);
1961073    %do x=1 %to &j;
1961074    %if &&nobs&x %then %do;
1961075    _temp&x %end;
1961076    %end;
1961077    ;
1961078    run;
1961079    proc sql;
1961080    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1961080  ! work._tempid p2 where p.name=p2.lhs;
1961081    quit;
1961082    data _temp&id;
1961083    set _temp&id;
1961084    where LHS ne '' and NAME ne '' and Node ne '';
1961085    run;
1961086    proc datasets lib=work nolist;
1961087    delete _tempAll;
1961088    run;
1961089    %let dsid = %sysfunc(open(_temp&id));
1961090    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1961091    %let dsid = %sysfunc(close(&dsid));
1961092    %if ^&&nobs&id %then %do;
1961093    proc datasets lib=work nolist;
1961094    delete _temp&id;
1961095    run;
1961096    quit;
1961097    %end;
1961098    %else %do;
1961099    %let scoreFlag&id = 1;
1961100    data _temp&id;
1961101    set _temp&id;
1961102    where LHS ne NAME and node ne '';
1961103    run;
1961104    %let dsid = %sysfunc(open(_temp&id));
1961105    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1961106    %let dsid = %sysfunc(close(&dsid));
1961107    %if ^&&nobs&id %then %do;
1961108    proc datasets lib=work nolist;
1961109    delete _temp&id;
1961110    run;
1961111    quit;
1961112    %end;
1961113    %else %do;
1961114    proc sort data=_temp&id nodupkey;
1961115    by LHS NAME;
1961116    run;
1961117    %end;
1961118    %end;
1961119    %end;
1961120    %end;
1961121    %mend varDept;
1961122    %macro optCode(outdata=fcmpdata);
1961123    %global fcmpStart;
1961124    %let fcmpStart = 0;
1961125    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1961126    %let NumNodes=9;
1961127    %do k=1 %to &NumNodes;
1961128    %vardept(fcmpdata=&outdata, id=&k);
1961129    %end;
1961130    %mend optCode;
1961131    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1961132    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1961133    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1961134    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1961135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961136    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1961137    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1961138    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1961139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961140    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1961141    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1961141  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1961142    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961143    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1961144    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1961145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961146    filename _pref
1961146  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
1961147    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1961148    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas.
1961149   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1961150   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1961151   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1961152   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1961153   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1961154   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1961155   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1961156   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1961157   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1961158   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1961159   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1961160   +LENGTH _WARN_ $4
1961161   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1961162   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1961163   +
1961164   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1961165   +
1961166   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1961167   +
1961168   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1961169   +
1961170   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1961171   +
1961172   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1961173   +
1961174   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1961175   +
1961176   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1961177   +
1961178   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1961179   +
1961180   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1961181   +
1961182   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1961183   +
1961184   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1961185   +
1961186   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1961187   +
1961188   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1961189   +
1961190   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1961191   +
1961192   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1961193   +
1961194   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1961195   +
1961196   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1961197   +
1961198   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1961199   +
1961200   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1961201   +
1961202   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1961203   +
1961204   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1961205   +
1961206   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1961207   +
1961208   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1961209   +
1961210   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1961211   +
1961212   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1961213   +
1961214   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1961215   +
1961216   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1961217   +
1961218   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1961219   +
1961220   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1961221   +
1961222   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1961223   +
1961224   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1961225   +
1961226   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1961227   +
1961228   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1961229   +
1961230   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1961231   +
1961232   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1961233   +
1961234   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1961235   +
1961236   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1961237   +
1961238   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1961239   +
1961240   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1961241   +
1961242   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1961243   +
1961244   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1961245   +
1961246   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1961247   +
1961248   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1961249   +
1961250   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1961251   +
1961252   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1961253   +
1961254   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1961255   +
1961256   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1961257   +
1961258   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1961259   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1961260   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1961261   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1961262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961264   +end;
MPRINT(EM_DIAGRAM):   end;
1961265   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961267   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1961268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961269   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1961270   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1961271   +   end;
MPRINT(EM_DIAGRAM):   end;
1961272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1961273   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1961274   +   end;
MPRINT(EM_DIAGRAM):   end;
1961275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961276   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1961277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961279   +   end;
MPRINT(EM_DIAGRAM):   end;
1961280   +end;
MPRINT(EM_DIAGRAM):   end;
1961281   +
1961282   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1961283   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1961284   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1961285   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1961286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961288   +end;
MPRINT(EM_DIAGRAM):   end;
1961289   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961291   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1961292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961293   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1961294   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1961295   +   end;
MPRINT(EM_DIAGRAM):   end;
1961296   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1961297   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1961298   +   end;
MPRINT(EM_DIAGRAM):   end;
1961299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961300   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1961301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961303   +   end;
MPRINT(EM_DIAGRAM):   end;
1961304   +end;
MPRINT(EM_DIAGRAM):   end;
1961305   +
1961306   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1961307   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1961308   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1961309   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1961310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961312   +end;
MPRINT(EM_DIAGRAM):   end;
1961313   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961314   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961315   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1961316   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961317   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1961318   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1961319   +   end;
MPRINT(EM_DIAGRAM):   end;
1961320   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1961321   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1961322   +   end;
MPRINT(EM_DIAGRAM):   end;
1961323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961324   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1961325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961327   +   end;
MPRINT(EM_DIAGRAM):   end;
1961328   +end;
MPRINT(EM_DIAGRAM):   end;
1961329   +
1961330   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1961331   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1961332   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1961333   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1961334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961336   +end;
MPRINT(EM_DIAGRAM):   end;
1961337   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961338   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961339   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1961340   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961341   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1961342   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1961343   +   end;
MPRINT(EM_DIAGRAM):   end;
1961344   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1961345   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1961346   +   end;
MPRINT(EM_DIAGRAM):   end;
1961347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961348   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1961349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961351   +   end;
MPRINT(EM_DIAGRAM):   end;
1961352   +end;
MPRINT(EM_DIAGRAM):   end;
1961353   +
1961354   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1961355   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1961356   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1961357   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1961358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961360   +end;
MPRINT(EM_DIAGRAM):   end;
1961361   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961362   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961363   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1961364   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961365   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1961366   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1961367   +   end;
MPRINT(EM_DIAGRAM):   end;
1961368   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1961369   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1961370   +   end;
MPRINT(EM_DIAGRAM):   end;
1961371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961372   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1961373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961375   +   end;
MPRINT(EM_DIAGRAM):   end;
1961376   +end;
MPRINT(EM_DIAGRAM):   end;
1961377   +
1961378   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1961379   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1961380   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1961381   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1961382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961384   +end;
MPRINT(EM_DIAGRAM):   end;
1961385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961386   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961387   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1961388   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961389   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1961390   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1961391   +   end;
MPRINT(EM_DIAGRAM):   end;
1961392   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1961393   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1961394   +   end;
MPRINT(EM_DIAGRAM):   end;
1961395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961396   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1961397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961399   +   end;
MPRINT(EM_DIAGRAM):   end;
1961400   +end;
MPRINT(EM_DIAGRAM):   end;
1961401   +
1961402   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1961403   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1961404   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1961405   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1961406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961408   +end;
MPRINT(EM_DIAGRAM):   end;
1961409   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1961411   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1961412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961413   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1961414   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1961415   +   end;
MPRINT(EM_DIAGRAM):   end;
1961416   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1961417   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1961418   +   end;
MPRINT(EM_DIAGRAM):   end;
1961419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961420   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1961421   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961422   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961423   +   end;
MPRINT(EM_DIAGRAM):   end;
1961424   +end;
MPRINT(EM_DIAGRAM):   end;
1961425   +
1961426   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1961427   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1961428   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1961429   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1961430   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1961431   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1961432   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1961433   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1961434   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1961435   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1961436   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1961437   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1961438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961440   +end;
MPRINT(EM_DIAGRAM):   end;
1961441   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961442   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1961443   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1961444   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961445   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1961446   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1961447   +   end;
MPRINT(EM_DIAGRAM):   end;
1961448   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1961449   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1961450   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1961451   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1961452   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1961453   +   end;
MPRINT(EM_DIAGRAM):   end;
1961454   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1961455   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1961456   +   end;
MPRINT(EM_DIAGRAM):   end;
1961457   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1961458   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1961459   +   end;
MPRINT(EM_DIAGRAM):   end;
1961460   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1961461   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1961462   +   end;
MPRINT(EM_DIAGRAM):   end;
1961463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961464   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1961465   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1961466   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1961467   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1961468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961470   +   end;
MPRINT(EM_DIAGRAM):   end;
1961471   +end;
MPRINT(EM_DIAGRAM):   end;
1961472   +
1961473   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1961474   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1961475   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1961476   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1961477   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1961478   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1961479   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1961480   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1961481   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1961482   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1961483   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1961484   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1961485   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1961486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1961487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961488   +end;
MPRINT(EM_DIAGRAM):   end;
1961489   +else do;
MPRINT(EM_DIAGRAM):   else do;
1961490   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1961491   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1961492   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1961493   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1961494   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1961495   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1961496   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1961497   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1961498   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1961499   +         end;
MPRINT(EM_DIAGRAM):   end;
1961500   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1961501   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1961502   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1961503   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1961504   +            end;
MPRINT(EM_DIAGRAM):   end;
1961505   +         end;
MPRINT(EM_DIAGRAM):   end;
1961506   +      end;
MPRINT(EM_DIAGRAM):   end;
1961507   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1961508   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1961509   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1961510   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1961511   +         end;
MPRINT(EM_DIAGRAM):   end;
1961512   +      end;
MPRINT(EM_DIAGRAM):   end;
1961513   +   end;
MPRINT(EM_DIAGRAM):   end;
1961514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1961515   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1961516   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1961517   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1961518   +      end;
MPRINT(EM_DIAGRAM):   end;
1961519   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1961520   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1961521   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1961522   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1961523   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1961524   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1961525   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1961526   +         end;
MPRINT(EM_DIAGRAM):   end;
1961527   +      end;
MPRINT(EM_DIAGRAM):   end;
1961528   +   end;
MPRINT(EM_DIAGRAM):   end;
1961529   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1961530   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1961531   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1961532   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1961533   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1961534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1961535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961536   +   end;
MPRINT(EM_DIAGRAM):   end;
1961537   +end;
MPRINT(EM_DIAGRAM):   end;
1961538   +
1961539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961540   +*** Checking missing input Interval
1961541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1961542   +
1961543   +IF NMISS(
1961544   +   AcceptedCmpTotal ,
1961545   +   Age ,
1961546   +   Frq ,
1961547   +   Income ,
1961548   +   Kidhome ,
1961549   +   Mnt ,
1961550   +   MntFishProducts ,
1961551   +   MntFruits ,
1961552   +   MntGoldProds ,
1961553   +   MntMeatProducts ,
1961554   +   MntSweetProducts ,
1961555   +   MntWines ,
1961556   +   MonthsAsCustomer ,
1961557   +   NumCatalogPurchases ,
1961558   +   NumDealsPurchases ,
1961559   +   NumDistPurchases ,
1961560   +   NumStorePurchases ,
1961561   +   NumWebPurchases ,
1961562   +   NumWebVisitsMonth ,
1961563   +   RFMstat ,
1961564   +   RMntFrq ,
1961565   +   Recency ,
1961566   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1961567   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1961568   +
1961569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1961570   +END;
MPRINT(EM_DIAGRAM):   END;
1961571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961572   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1961573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961574   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1961575   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1961576   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1961577   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1961578   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1961579   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1961580   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1961581   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1961582   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1961583   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1961584   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1961585   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1961586   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1961587   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1961588   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1961589   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1961590   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1961591   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1961592   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1961593   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1961594   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1961595   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1961596   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1961597   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1961598   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1961599   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1961600   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1961601   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1961602   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1961603   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1961604   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1961605   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1961606   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1961607   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1961608   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1961609   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1961610   +END;
MPRINT(EM_DIAGRAM):   END;
1961611   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1961612   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1961613   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1961614   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1961615   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1961616   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1961617   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1961618   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1961619   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1961620   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1961621   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1961622   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1961623   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1961624   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1961625   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1961626   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1961627   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1961628   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1961629   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1961630   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1961631   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1961632   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1961633   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1961634   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1961635   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1961636   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1961637   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1961638   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1961639   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1961640   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1961641   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1961642   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1961643   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1961644   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1961645   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1961646   +   ELSE S_NumCatalogPurchases
1961647   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1961648   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1961649   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1961650   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1961651   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1961652   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1961653   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1961654   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1961655   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1961656   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1961657   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1961658   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1961659   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1961660   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1961661   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1961662   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1961663   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1961664   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1961665   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1961666   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1961667   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1961668   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1961669   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1961670   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1961671   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1961672   +END;
MPRINT(EM_DIAGRAM):   END;
1961673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961674   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1961675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961677   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1961678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961680   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1961681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1961683   +   H11  =     0.13594465912127 * S_AcceptedCmpTotal  +    -0.04369874222877 *
1961684   +        S_Age  +     -0.0222974124172 * S_Frq  +    -0.11043551468483 *
1961685   +        S_Income  +    -0.32248758927071 * S_Kidhome
1961686   +          +      0.0776161679259 * S_Mnt  +    -0.08725654580836 *
1961687   +        S_MntFishProducts  +     0.14236031403157 * S_MntFruits
1961688   +          +    -0.48581570899412 * S_MntGoldProds  +     0.03414406983139 *
1961689   +        S_MntMeatProducts  +    -0.23271736394479 * S_MntSweetProducts
1961690   +          +     0.43105893695077 * S_MntWines  +     0.31123874593742 *
1961691   +        S_MonthsAsCustomer  +    -0.19669815006873 * S_NumCatalogPurchases
1961692   +          +    -0.68207513361313 * S_NumDealsPurchases
1961693   +          +    -0.37964850256921 * S_NumDistPurchases
1961694   +          +     0.36066480603854 * S_NumStorePurchases
1961695   +          +     0.25966011307033 * S_NumWebPurchases
1961696   +          +    -0.03958464718959 * S_NumWebVisitsMonth
1961697   +          +    -0.12441133162569 * S_RFMstat  +     0.05838942731159 *
1961698   +        S_RMntFrq  +      0.2807801943237 * S_Recency
1961699   +          +    -0.10186253847778 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13594465912127 * S_AcceptedCmpTotal + -0.04369874222877 * S_Age 
+ -0.0222974124172 * S_Frq + -0.11043551468483 * S_Income + -0.32248758927071 * S_Kidhome + 
0.0776161679259 * S_Mnt + -0.08725654580836 * S_MntFishProducts + 0.14236031403157 * 
S_MntFruits + -0.48581570899412 * S_MntGoldProds + 0.03414406983139 * S_MntMeatProducts + 
-0.23271736394479 * S_MntSweetProducts + 0.43105893695077 * S_MntWines + 0.31123874593742 * 
S_MonthsAsCustomer + -0.19669815006873 * S_NumCatalogPurchases + -0.68207513361313 * 
S_NumDealsPurchases + -0.37964850256921 * S_NumDistPurchases + 0.36066480603854 * 
S_NumStorePurchases + 0.25966011307033 * S_NumWebPurchases + -0.03958464718959 * 
S_NumWebVisitsMonth + -0.12441133162569 * S_RFMstat + 0.05838942731159 * S_RMntFrq + 
0.2807801943237 * S_Recency + -0.10186253847778 * S_Teenhome ;
1961700   +   H12  =     0.03443433887324 * S_AcceptedCmpTotal  +    -0.33034112884719 *
1961701   +        S_Age  +    -0.29426561048486 * S_Frq  +      0.1259913339118 *
1961702   +        S_Income  +    -0.01525271628925 * S_Kidhome
1961703   +          +     0.12125196820394 * S_Mnt  +     0.27499561817138 *
1961704   +        S_MntFishProducts  +     0.02702998039497 * S_MntFruits
1961705   +          +     0.19117237676118 * S_MntGoldProds  +     0.14988798454777 *
1961706   +        S_MntMeatProducts  +    -0.12004881951738 * S_MntSweetProducts
1961707   +          +     0.21492388287889 * S_MntWines  +    -0.32645982553718 *
1961708   +        S_MonthsAsCustomer  +     0.33162536777041 * S_NumCatalogPurchases
1961709   +          +    -0.05060212016961 * S_NumDealsPurchases
1961710   +          +    -0.14809619066524 * S_NumDistPurchases
1961711   +          +    -0.02428798408125 * S_NumStorePurchases
1961712   +          +     0.05554695337353 * S_NumWebPurchases
1961713   +          +     -0.3347797414912 * S_NumWebVisitsMonth
1961714   +          +    -0.08694305340873 * S_RFMstat  +    -0.34566171030649 *
1961715   +        S_RMntFrq  +     0.34878481829389 * S_Recency
1961716   +          +     0.10894516705031 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.03443433887324 * S_AcceptedCmpTotal + -0.33034112884719 * S_Age 
+ -0.29426561048486 * S_Frq + 0.1259913339118 * S_Income + -0.01525271628925 * S_Kidhome + 
0.12125196820394 * S_Mnt + 0.27499561817138 * S_MntFishProducts + 0.02702998039497 * 
S_MntFruits + 0.19117237676118 * S_MntGoldProds + 0.14988798454777 * S_MntMeatProducts + 
-0.12004881951738 * S_MntSweetProducts + 0.21492388287889 * S_MntWines + -0.32645982553718 * 
S_MonthsAsCustomer + 0.33162536777041 * S_NumCatalogPurchases + -0.05060212016961 * 
S_NumDealsPurchases + -0.14809619066524 * S_NumDistPurchases + -0.02428798408125 * 
S_NumStorePurchases + 0.05554695337353 * S_NumWebPurchases + -0.3347797414912 * 
S_NumWebVisitsMonth + -0.08694305340873 * S_RFMstat + -0.34566171030649 * S_RMntFrq + 
0.34878481829389 * S_Recency + 0.10894516705031 * S_Teenhome ;
1961717   +   H13  =     0.00370096998686 * S_AcceptedCmpTotal  +    -0.51953611125691 *
1961718   +        S_Age  +     0.17877016433586 * S_Frq  +     0.06789251642015 *
1961719   +        S_Income  +    -0.05479760920776 * S_Kidhome
1961720   +          +    -0.03872422009017 * S_Mnt  +    -0.14541111406951 *
1961721   +        S_MntFishProducts  +     0.02855123883129 * S_MntFruits
1961722   +          +     0.25306699654279 * S_MntGoldProds  +     0.08795222920616 *
1961723   +        S_MntMeatProducts  +    -0.02903225924096 * S_MntSweetProducts
1961724   +          +     0.15553330295402 * S_MntWines  +     0.02888022983016 *
1961725   +        S_MonthsAsCustomer  +    -0.17290950123626 * S_NumCatalogPurchases
1961726   +          +     0.18029447475323 * S_NumDealsPurchases
1961727   +          +     0.05934542805435 * S_NumDistPurchases
1961728   +          +     0.11232970412862 * S_NumStorePurchases
1961729   +          +    -0.10916601726159 * S_NumWebPurchases
1961730   +          +    -0.01910812243665 * S_NumWebVisitsMonth
1961731   +          +    -0.21344753217364 * S_RFMstat  +      0.1645823437477 *
1961732   +        S_RMntFrq  +    -0.40799689263706 * S_Recency
1961733   +          +     0.02511588992095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.00370096998686 * S_AcceptedCmpTotal + -0.51953611125691 * S_Age 
+ 0.17877016433586 * S_Frq + 0.06789251642015 * S_Income + -0.05479760920776 * S_Kidhome + 
-0.03872422009017 * S_Mnt + -0.14541111406951 * S_MntFishProducts + 0.02855123883129 * 
S_MntFruits + 0.25306699654279 * S_MntGoldProds + 0.08795222920616 * S_MntMeatProducts + 
-0.02903225924096 * S_MntSweetProducts + 0.15553330295402 * S_MntWines + 0.02888022983016 * 
S_MonthsAsCustomer + -0.17290950123626 * S_NumCatalogPurchases + 0.18029447475323 * 
S_NumDealsPurchases + 0.05934542805435 * S_NumDistPurchases + 0.11232970412862 * 
S_NumStorePurchases + -0.10916601726159 * S_NumWebPurchases + -0.01910812243665 * 
S_NumWebVisitsMonth + -0.21344753217364 * S_RFMstat + 0.1645823437477 * S_RMntFrq + 
-0.40799689263706 * S_Recency + 0.02511588992095 * S_Teenhome ;
1961734   +   H14  =    -0.61829421083246 * S_AcceptedCmpTotal  +    -0.16873052249719 *
1961735   +        S_Age  +     0.13439351408573 * S_Frq  +    -0.50103344614666 *
1961736   +        S_Income  +     0.31726096463976 * S_Kidhome
1961737   +          +    -0.15181042208759 * S_Mnt  +     0.31922880035738 *
1961738   +        S_MntFishProducts  +     0.09386333655585 * S_MntFruits
1961739   +          +    -0.12620631685892 * S_MntGoldProds  +    -0.92555808639473 *
1961740   +        S_MntMeatProducts  +    -0.15556710025124 * S_MntSweetProducts
1961741   +          +     0.59625872106317 * S_MntWines  +    -0.14105032907988 *
1961742   +        S_MonthsAsCustomer  +    -0.27105883046781 * S_NumCatalogPurchases
1961743   +          +    -0.05889648319294 * S_NumDealsPurchases
1961744   +          +     0.04297768152043 * S_NumDistPurchases
1961745   +          +     0.08289772168464 * S_NumStorePurchases
1961746   +          +     0.02925451736459 * S_NumWebPurchases
1961747   +          +    -0.34806744064693 * S_NumWebVisitsMonth
1961748   +          +    -0.10075155542626 * S_RFMstat  +    -0.54230386384017 *
1961749   +        S_RMntFrq  +     0.54567939140523 * S_Recency
1961750   +          +     0.75126712310981 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.61829421083246 * S_AcceptedCmpTotal + -0.16873052249719 * S_Age 
+ 0.13439351408573 * S_Frq + -0.50103344614666 * S_Income + 0.31726096463976 * S_Kidhome + 
-0.15181042208759 * S_Mnt + 0.31922880035738 * S_MntFishProducts + 0.09386333655585 * 
S_MntFruits + -0.12620631685892 * S_MntGoldProds + -0.92555808639473 * S_MntMeatProducts + 
-0.15556710025124 * S_MntSweetProducts + 0.59625872106317 * S_MntWines + -0.14105032907988 * 
S_MonthsAsCustomer + -0.27105883046781 * S_NumCatalogPurchases + -0.05889648319294 * 
S_NumDealsPurchases + 0.04297768152043 * S_NumDistPurchases + 0.08289772168464 * 
S_NumStorePurchases + 0.02925451736459 * S_NumWebPurchases + -0.34806744064693 * 
S_NumWebVisitsMonth + -0.10075155542626 * S_RFMstat + -0.54230386384017 * S_RMntFrq + 
0.54567939140523 * S_Recency + 0.75126712310981 * S_Teenhome ;
1961751   +   H15  =     0.47250221965687 * S_AcceptedCmpTotal  +    -0.07487325745499 *
1961752   +        S_Age  +      0.0382122049104 * S_Frq  +     0.55347292090838 *
1961753   +        S_Income  +     -0.1831746721838 * S_Kidhome
1961754   +          +    -0.12974904479016 * S_Mnt  +    -0.03773564357475 *
1961755   +        S_MntFishProducts  +    -0.08740721632052 * S_MntFruits
1961756   +          +    -0.10157053454184 * S_MntGoldProds  +     0.52457296443385 *
1961757   +        S_MntMeatProducts  +    -0.13287009184486 * S_MntSweetProducts
1961758   +          +    -0.37745748357546 * S_MntWines  +    -0.04143657431262 *
1961759   +        S_MonthsAsCustomer  +     0.67758682109997 * S_NumCatalogPurchases
1961760   +          +     0.46814119938755 * S_NumDealsPurchases
1961761   +          +     0.03182241038425 * S_NumDistPurchases
1961762   +          +    -0.51911846047007 * S_NumStorePurchases
1961763   +          +    -0.53954754105242 * S_NumWebPurchases
1961764   +          +     1.07208473057077 * S_NumWebVisitsMonth
1961765   +          +     0.12556098363101 * S_RFMstat  +    -0.05748040855256 *
1961766   +        S_RMntFrq  +    -0.95916513053649 * S_Recency
1961767   +          +    -0.24142268692108 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.47250221965687 * S_AcceptedCmpTotal + -0.07487325745499 * S_Age 
+ 0.0382122049104 * S_Frq + 0.55347292090838 * S_Income + -0.1831746721838 * S_Kidhome + 
-0.12974904479016 * S_Mnt + -0.03773564357475 * S_MntFishProducts + -0.08740721632052 * 
S_MntFruits + -0.10157053454184 * S_MntGoldProds + 0.52457296443385 * S_MntMeatProducts + 
-0.13287009184486 * S_MntSweetProducts + -0.37745748357546 * S_MntWines + -0.04143657431262 * 
S_MonthsAsCustomer + 0.67758682109997 * S_NumCatalogPurchases + 0.46814119938755 * 
S_NumDealsPurchases + 0.03182241038425 * S_NumDistPurchases + -0.51911846047007 * 
S_NumStorePurchases + -0.53954754105242 * S_NumWebPurchases + 1.07208473057077 * 
S_NumWebVisitsMonth + 0.12556098363101 * S_RFMstat + -0.05748040855256 * S_RMntFrq + 
-0.95916513053649 * S_Recency + -0.24142268692108 * S_Teenhome ;
1961768   +   H11  = H11  +      0.0203211213932 * AcceptedCmp10
1961769   +          +    -0.24671835063904 * AcceptedCmp20  +    -0.16470646765907 *
1961770   +        AcceptedCmp30  +     -0.4099897223583 * AcceptedCmp40
1961771   +          +    -0.11336081432536 * AcceptedCmp50  +    -0.42649732753042 *
1961772   +        Complain0  +     -0.0416551568273 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0203211213932 * AcceptedCmp10 + -0.24671835063904 * 
AcceptedCmp20 + -0.16470646765907 * AcceptedCmp30 + -0.4099897223583 * AcceptedCmp40 + 
-0.11336081432536 * AcceptedCmp50 + -0.42649732753042 * Complain0 + -0.0416551568273 * 
HigherEducationBinary0 ;
1961773   +   H12  = H12  +     0.02213559506685 * AcceptedCmp10
1961774   +          +      0.0220571091041 * AcceptedCmp20  +     0.17399856069521 *
1961775   +        AcceptedCmp30  +    -0.18257604858416 * AcceptedCmp40
1961776   +          +    -0.18091572749617 * AcceptedCmp50  +     0.05174557804497 *
1961777   +        Complain0  +    -0.05809342634244 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02213559506685 * AcceptedCmp10 + 0.0220571091041 * 
AcceptedCmp20 + 0.17399856069521 * AcceptedCmp30 + -0.18257604858416 * AcceptedCmp40 + 
-0.18091572749617 * AcceptedCmp50 + 0.05174557804497 * Complain0 + -0.05809342634244 * 
HigherEducationBinary0 ;
1961778   +   H13  = H13  +     0.18240929240485 * AcceptedCmp10
1961779   +          +     0.08046156423197 * AcceptedCmp20  +    -0.09196288275429 *
1961780   +        AcceptedCmp30  +     0.22693642674212 * AcceptedCmp40
1961781   +          +    -0.22127877339648 * AcceptedCmp50  +     0.22787694199297 *
1961782   +        Complain0  +    -0.20447728360836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18240929240485 * AcceptedCmp10 + 0.08046156423197 * 
AcceptedCmp20 + -0.09196288275429 * AcceptedCmp30 + 0.22693642674212 * AcceptedCmp40 + 
-0.22127877339648 * AcceptedCmp50 + 0.22787694199297 * Complain0 + -0.20447728360836 * 
HigherEducationBinary0 ;
1961783   +   H14  = H14  +     0.15760334306304 * AcceptedCmp10
1961784   +          +     0.25177195217647 * AcceptedCmp20  +     0.58646837477387 *
1961785   +        AcceptedCmp30  +     0.35808865186096 * AcceptedCmp40
1961786   +          +     0.24279152213079 * AcceptedCmp50  +    -0.03682926397711 *
1961787   +        Complain0  +    -0.42398917474831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15760334306304 * AcceptedCmp10 + 0.25177195217647 * 
AcceptedCmp20 + 0.58646837477387 * AcceptedCmp30 + 0.35808865186096 * AcceptedCmp40 + 
0.24279152213079 * AcceptedCmp50 + -0.03682926397711 * Complain0 + -0.42398917474831 * 
HigherEducationBinary0 ;
1961788   +   H15  = H15  +    -0.09968006776007 * AcceptedCmp10
1961789   +          +     0.09022158834293 * AcceptedCmp20  +    -0.10842101964798 *
1961790   +        AcceptedCmp30  +    -0.13099813140438 * AcceptedCmp40
1961791   +          +    -0.22167423223515 * AcceptedCmp50  +    -0.04428927537039 *
1961792   +        Complain0  +    -0.26182339546076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.09968006776007 * AcceptedCmp10 + 0.09022158834293 * 
AcceptedCmp20 + -0.10842101964798 * AcceptedCmp30 + -0.13099813140438 * AcceptedCmp40 + 
-0.22167423223515 * AcceptedCmp50 + -0.04428927537039 * Complain0 + -0.26182339546076 * 
HigherEducationBinary0 ;
1961793   +   H11  = H11  +    -0.01959847584448 * Education2n_Cycle
1961794   +          +    -0.23759194699722 * EducationBasic  +    -0.09694759635569 *
1961795   +        EducationGraduation  +     0.16905118469563 * EducationMaster
1961796   +          +     0.09920310143649 * Marital_StatusDivorced
1961797   +          +    -0.03469710828426 * Marital_StatusMarried
1961798   +          +     0.04524816569771 * Marital_StatusSingle
1961799   +          +    -0.00616333143464 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01959847584448 * Education2n_Cycle + -0.23759194699722 * 
EducationBasic + -0.09694759635569 * EducationGraduation + 0.16905118469563 * EducationMaster 
+ 0.09920310143649 * Marital_StatusDivorced + -0.03469710828426 * Marital_StatusMarried + 
0.04524816569771 * Marital_StatusSingle + -0.00616333143464 * Marital_StatusTogether ;
1961800   +   H12  = H12  +     0.05721184485318 * Education2n_Cycle
1961801   +          +    -0.04983755787599 * EducationBasic  +    -0.05003868555341 *
1961802   +        EducationGraduation  +     0.14755035027548 * EducationMaster
1961803   +          +     0.15544361606364 * Marital_StatusDivorced
1961804   +          +    -0.04549024479337 * Marital_StatusMarried
1961805   +          +    -0.22192209058914 * Marital_StatusSingle
1961806   +          +     0.27320991984549 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05721184485318 * Education2n_Cycle + -0.04983755787599 * 
EducationBasic + -0.05003868555341 * EducationGraduation + 0.14755035027548 * EducationMaster 
+ 0.15544361606364 * Marital_StatusDivorced + -0.04549024479337 * Marital_StatusMarried + 
-0.22192209058914 * Marital_StatusSingle + 0.27320991984549 * Marital_StatusTogether ;
1961807   +   H13  = H13  +     0.00075033011137 * Education2n_Cycle
1961808   +          +    -0.11503072939964 * EducationBasic  +     -0.4136153442156 *
1961809   +        EducationGraduation  +    -0.10472711185558 * EducationMaster
1961810   +          +     0.06080683366118 * Marital_StatusDivorced
1961811   +          +    -0.29971612034722 * Marital_StatusMarried
1961812   +          +    -0.28960939443613 * Marital_StatusSingle
1961813   +          +     0.03465872178588 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00075033011137 * Education2n_Cycle + -0.11503072939964 * 
EducationBasic + -0.4136153442156 * EducationGraduation + -0.10472711185558 * EducationMaster 
+ 0.06080683366118 * Marital_StatusDivorced + -0.29971612034722 * Marital_StatusMarried + 
-0.28960939443613 * Marital_StatusSingle + 0.03465872178588 * Marital_StatusTogether ;
1961814   +   H14  = H14  +      0.0962498664542 * Education2n_Cycle
1961815   +          +     0.07755075978175 * EducationBasic  +     0.06918862821828 *
1961816   +        EducationGraduation  +    -0.19451337075589 * EducationMaster
1961817   +          +    -0.27877133922419 * Marital_StatusDivorced
1961818   +          +     0.25867038797563 * Marital_StatusMarried
1961819   +          +    -0.17854477297284 * Marital_StatusSingle
1961820   +          +     0.35391632150142 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0962498664542 * Education2n_Cycle + 0.07755075978175 * 
EducationBasic + 0.06918862821828 * EducationGraduation + -0.19451337075589 * EducationMaster 
+ -0.27877133922419 * Marital_StatusDivorced + 0.25867038797563 * Marital_StatusMarried + 
-0.17854477297284 * Marital_StatusSingle + 0.35391632150142 * Marital_StatusTogether ;
1961821   +   H15  = H15  +     0.17326731400139 * Education2n_Cycle
1961822   +          +    -0.09586091586548 * EducationBasic  +     0.08664696951776 *
1961823   +        EducationGraduation  +    -0.05191600320717 * EducationMaster
1961824   +          +     0.30169513410559 * Marital_StatusDivorced
1961825   +          +    -0.33752566748869 * Marital_StatusMarried
1961826   +          +     0.43876556032036 * Marital_StatusSingle
1961827   +          +    -0.37953091676086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.17326731400139 * Education2n_Cycle + -0.09586091586548 * 
EducationBasic + 0.08664696951776 * EducationGraduation + -0.05191600320717 * EducationMaster 
+ 0.30169513410559 * Marital_StatusDivorced + -0.33752566748869 * Marital_StatusMarried + 
0.43876556032036 * Marital_StatusSingle + -0.37953091676086 * Marital_StatusTogether ;
1961828   +   H11  =     1.66971140546954 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.66971140546954 + H11 ;
1961829   +   H12  =    -2.00390550356371 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.00390550356371 + H12 ;
1961830   +   H13  =    -1.90761416182049 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.90761416182049 + H13 ;
1961831   +   H14  =     0.27067485542842 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.27067485542842 + H14 ;
1961832   +   H15  =       -0.78426510761 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.78426510761 + H15 ;
1961833   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1961834   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1961835   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1961836   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1961837   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1961838   +END;
MPRINT(EM_DIAGRAM):   END;
1961839   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1961840   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1961841   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1961842   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1961843   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1961844   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1961845   +END;
MPRINT(EM_DIAGRAM):   END;
1961846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961847   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1961848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961849   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1961850   +   P_DepVar1  =    -0.93198210671128 * H11  +    -0.73339280381433 * H12
1961851   +          +     0.55985350295663 * H13  +    -2.31937062548345 * H14
1961852   +          +     3.74909670300365 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.93198210671128 * H11 + -0.73339280381433 * H12 + 
0.55985350295663 * H13 + -2.31937062548345 * H14 + 3.74909670300365 * H15 ;
1961853   +   P_DepVar1  =    -1.27659529547813 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.27659529547813 + P_DepVar1 ;
1961854   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1961855   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1961856   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1961857   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1961858   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1961859   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1961860   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1961861   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1961862   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1961863   +END;
MPRINT(EM_DIAGRAM):   END;
1961864   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1961865   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1961866   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1961867   +END;
MPRINT(EM_DIAGRAM):   END;
1961868   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1961869   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1961870   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1961871   +END;
MPRINT(EM_DIAGRAM):   END;
1961872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961873   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1961874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1961875   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1961876   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1961877   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1961878   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1961879   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1961880   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1961881   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1961882   +END;
MPRINT(EM_DIAGRAM):   END;
1961883   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1961884   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1961885   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1961886   +drop
1961887   +H11
1961888   +H12
1961889   +H13
1961890   +H14
1961891   +H15
1961892   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1961893   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1961894    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1961895    quit;
1961896    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1961897    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1961898    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1961899    retain ID 2 Node "Neural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural7";
1961900    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1961901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961902    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1961903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1961905    proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
1961906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961909    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1961910    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1961911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961912    proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
1961913    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1961914    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1961915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961917    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961918    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1961919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961920    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961921    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1961922    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1961922  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1527 rows and 5 columns.

1961923    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961924    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1961925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1527 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1527 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961926    filename _pref
1961926  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1961927    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1961928    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1961929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1961930   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1961931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1961932   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1961933   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1961934   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1961935    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1961936    quit;
1961937    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1961938    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1961939    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1961940    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1961941    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1961942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961943    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1961944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961946    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1961947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961949    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961950    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1961951    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1961952    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961953    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1961954    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1961955    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1961956    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961958    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961959    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1961960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961961    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961962    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1961963    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1961963  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1961964    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961965    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1961966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961967    filename _pref
1961967  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1961968    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1961969    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1961970   +
1961971   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1961972   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1961972  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1961973   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1961974   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1961975   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1961976   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1961977   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1961978    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1961979    quit;
1961980    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1961981    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1961982    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1961983    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1961984    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1961985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961986    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1961987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961989    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1961990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1961991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1961993    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1961994    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1961995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1961996    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1961997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1961998    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1961999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1962002    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1962003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962004    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962005    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1962006    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1962006  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1962007    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962008    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1962009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962010    filename _pref
1962010  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1962011    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1962012    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1962013   +
1962014   +
1962015   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1962016   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1962017   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1962018   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1962019   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1962020   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962021   +
1962022   +
1962023   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1962024   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1962025   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1962026   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1962027   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1962028   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962029   +
1962030   +
1962031   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1962032   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1962033   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1962034   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1962035   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1962036   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962037   +
1962038   +
1962039   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1962040   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1962041   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1962042   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1962043   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1962044   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962045   +
1962046   +
1962047   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1962048   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1962049   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1962050   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1962051   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1962052   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962053   +
1962054   +
1962055   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1962056   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1962057   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1962058   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1962059   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1962060   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962061   +
1962062   +
1962063   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1962064   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1962065   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1962066   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1962067   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1962068   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962069   +
1962070   +
1962071   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1962072   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1962073   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1962074   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1962075   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1962076   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1962077   +if
1962078   +_FILTERNORM1 not in ( '.')
1962079   + and
1962080   +_FILTERNORM2 not in ( '.')
1962081   + and
1962082   +_FILTERNORM3 not in ( '.')
1962083   + and
1962084   +_FILTERNORM4 not in ( '.')
1962085   + and
1962086   +_FILTERNORM5 not in ( '.')
1962087   + and
1962088   +_FILTERNORM6 not in ( '.')
1962089   + and
1962090   +_FILTERNORM7 not in ( ' ')
1962091   + and
1962092   +_FILTERNORM8 not in ( ' ')
1962093   +and
1962094   +( Dt_Customer ne .)
1962095   +and ( Income ne . and (Income<=107000))
1962096   +and ( Kidhome ne .)
1962097   +and ( MntFishProducts ne .)
1962098   +and ( MntFruits ne .)
1962099   +and ( MntGoldProds ne .)
1962100   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1962101   +and ( MntSweetProducts ne .)
1962102   +and ( MntWines ne .)
1962103   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1962104   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1962105   +and ( NumStorePurchases ne .)
1962106   +and ( NumWebPurchases ne .)
1962107   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1962108   +and ( Recency ne .)
1962109   +and ( Teenhome ne .)
1962110   +and ( Year_Birth ne .)
1962111   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1962112   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1962113   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1962114   +end;
MPRINT(EM_DIAGRAM):   end;
1962115   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1962116   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1962117    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1962118    quit;
1962119    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1962120    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1962121    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1962122    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1962123    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1962124    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962125    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1962126    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962128    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1962129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962131    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1962132    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1962133    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1962134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962135    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1962136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962137    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1962138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962140    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1962141    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1962142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962143    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962144    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1962145    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1962145  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1962146    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962147    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1962148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1636 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962149    %macro varDept(fcmpdata=,id=);
1962150    %global nobs&id scoreFlag&id;
1962151    %let scoreFlag&id = 0;
1962152    %if &id=1 or ^&fcmpStart %then %do;
1962153    proc sort data=&fcmpdata out=_temp&id nodupkey;
1962154    by NAME;
1962155    where id=&id and LHS in( %let j=1;
1962156    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1962157    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1962158    "&var" %let j = %eval(&j+1);
1962159    %end;
1962160    );
1962161    run;
1962162    %let dsid = %sysfunc(open(_temp&id));
1962163    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1962164    %let dsid = %sysfunc(close(&dsid));
1962165    %if &&nobs&id %then %do;
1962166    %let scoreFlag&id = 1;
1962167    %let fcmpStart = 1;
1962168    %end;
1962169    %else %let fcmpStart = 0;
1962170    %end;
1962171    %else %do;
1962172    proc sort data=&fcmpdata out=_tempid;
1962173    where id=&id;
1962174    by LHS;
1962175    run;
1962176    %let dsid = %sysfunc(open(_tempid));
1962177    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1962178    %let dsid = %sysfunc(close(&dsid));
1962179    %if ^&&nobs&id %then %do;
1962180    proc datasets lib=work nolist;
1962181    delete _tempid;
1962182    run;
1962183    quit;
1962184    %end;
1962185    %else %do;
1962186    data _tempAll;
1962187    set %let j=%eval(&id-1);
1962188    %do x=1 %to &j;
1962189    %if &&nobs&x %then %do;
1962190    _temp&x %end;
1962191    %end;
1962192    ;
1962193    run;
1962194    proc sql;
1962195    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1962195  ! work._tempid p2 where p.name=p2.lhs;
1962196    quit;
1962197    data _temp&id;
1962198    set _temp&id;
1962199    where LHS ne '' and NAME ne '' and Node ne '';
1962200    run;
1962201    proc datasets lib=work nolist;
1962202    delete _tempAll;
1962203    run;
1962204    %let dsid = %sysfunc(open(_temp&id));
1962205    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1962206    %let dsid = %sysfunc(close(&dsid));
1962207    %if ^&&nobs&id %then %do;
1962208    proc datasets lib=work nolist;
1962209    delete _temp&id;
1962210    run;
1962211    quit;
1962212    %end;
1962213    %else %do;
1962214    %let scoreFlag&id = 1;
1962215    data _temp&id;
1962216    set _temp&id;
1962217    where LHS ne NAME and node ne '';
1962218    run;
1962219    %let dsid = %sysfunc(open(_temp&id));
1962220    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1962221    %let dsid = %sysfunc(close(&dsid));
1962222    %if ^&&nobs&id %then %do;
1962223    proc datasets lib=work nolist;
1962224    delete _temp&id;
1962225    run;
1962226    quit;
1962227    %end;
1962228    %else %do;
1962229    proc sort data=_temp&id nodupkey;
1962230    by LHS NAME;
1962231    run;
1962232    %end;
1962233    %end;
1962234    %end;
1962235    %end;
1962236    %mend varDept;
1962237    %macro optCode(outdata=fcmpdata);
1962238    %global fcmpStart;
1962239    %let fcmpStart = 0;
1962240    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1962241    %let NumNodes=9;
1962242    %do k=1 %to &NumNodes;
1962243    %vardept(fcmpdata=&outdata, id=&k);
1962244    %end;
1962245    %mend optCode;
1962246    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
The SAS System

MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1962247    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1962248    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1962249    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1962250    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962251    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1962252    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1962253    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1962254    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962255    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1962256    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1962256  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1962257    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962258    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1962259    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1962260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962261    filename _pref
1962261  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1962262    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1962263    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1962264   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1962265   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1962266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1962267   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1962268   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1962269   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1962270   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1962271   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1962272   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1962273   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1962274   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1962275   +LENGTH _WARN_ $4
1962276   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1962277   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1962278   +
1962279   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1962280   +
1962281   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1962282   +
1962283   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1962284   +
1962285   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1962286   +
1962287   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1962288   +
1962289   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1962290   +
1962291   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1962292   +
1962293   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1962294   +
1962295   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1962296   +
1962297   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1962298   +
1962299   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1962300   +
1962301   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1962302   +
1962303   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1962304   +
1962305   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1962306   +
1962307   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1962308   +
1962309   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1962310   +
1962311   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1962312   +
1962313   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1962314   +
1962315   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1962316   +
1962317   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1962318   +
1962319   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1962320   +
1962321   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1962322   +
1962323   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1962324   +
1962325   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1962326   +
1962327   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1962328   +
1962329   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1962330   +
1962331   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1962332   +
1962333   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1962334   +
1962335   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1962336   +
1962337   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1962338   +
1962339   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1962340   +
1962341   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1962342   +
1962343   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1962344   +
1962345   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1962346   +
1962347   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1962348   +
1962349   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1962350   +
1962351   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1962352   +
1962353   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1962354   +
1962355   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1962356   +
1962357   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1962358   +
1962359   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1962360   +
1962361   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1962362   +
1962363   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1962364   +
1962365   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1962366   +
1962367   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1962368   +
1962369   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1962370   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1962371   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1962372   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1962373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962375   +end;
MPRINT(EM_DIAGRAM):   end;
1962376   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962377   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962378   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1962379   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962380   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1962381   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1962382   +   end;
MPRINT(EM_DIAGRAM):   end;
1962383   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1962384   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1962385   +   end;
MPRINT(EM_DIAGRAM):   end;
1962386   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962387   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1962388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962390   +   end;
MPRINT(EM_DIAGRAM):   end;
1962391   +end;
MPRINT(EM_DIAGRAM):   end;
1962392   +
1962393   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1962394   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1962395   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1962396   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1962397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962399   +end;
MPRINT(EM_DIAGRAM):   end;
1962400   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962401   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962402   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1962403   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962404   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1962405   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1962406   +   end;
MPRINT(EM_DIAGRAM):   end;
1962407   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1962408   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1962409   +   end;
MPRINT(EM_DIAGRAM):   end;
1962410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962411   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1962412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962414   +   end;
MPRINT(EM_DIAGRAM):   end;
1962415   +end;
MPRINT(EM_DIAGRAM):   end;
1962416   +
1962417   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1962418   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1962419   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1962420   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1962421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962423   +end;
MPRINT(EM_DIAGRAM):   end;
1962424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962425   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962426   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1962427   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962428   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1962429   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1962430   +   end;
MPRINT(EM_DIAGRAM):   end;
1962431   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1962432   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1962433   +   end;
MPRINT(EM_DIAGRAM):   end;
1962434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962435   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1962436   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962437   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962438   +   end;
MPRINT(EM_DIAGRAM):   end;
1962439   +end;
MPRINT(EM_DIAGRAM):   end;
1962440   +
1962441   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1962442   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1962443   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1962444   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1962445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962447   +end;
MPRINT(EM_DIAGRAM):   end;
1962448   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962449   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962450   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1962451   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962452   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1962453   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1962454   +   end;
MPRINT(EM_DIAGRAM):   end;
1962455   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1962456   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1962457   +   end;
MPRINT(EM_DIAGRAM):   end;
1962458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962459   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1962460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962462   +   end;
MPRINT(EM_DIAGRAM):   end;
1962463   +end;
MPRINT(EM_DIAGRAM):   end;
1962464   +
1962465   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1962466   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1962467   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1962468   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1962469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962471   +end;
MPRINT(EM_DIAGRAM):   end;
1962472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962474   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1962475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1962477   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1962478   +   end;
MPRINT(EM_DIAGRAM):   end;
1962479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1962480   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1962481   +   end;
MPRINT(EM_DIAGRAM):   end;
1962482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962483   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1962484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962486   +   end;
MPRINT(EM_DIAGRAM):   end;
1962487   +end;
MPRINT(EM_DIAGRAM):   end;
1962488   +
1962489   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1962490   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1962491   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1962492   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1962493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962495   +end;
MPRINT(EM_DIAGRAM):   end;
1962496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962498   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1962499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1962501   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1962502   +   end;
MPRINT(EM_DIAGRAM):   end;
1962503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1962504   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1962505   +   end;
MPRINT(EM_DIAGRAM):   end;
1962506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962507   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1962508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962510   +   end;
MPRINT(EM_DIAGRAM):   end;
1962511   +end;
MPRINT(EM_DIAGRAM):   end;
1962512   +
1962513   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1962514   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1962515   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1962516   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1962517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962519   +end;
MPRINT(EM_DIAGRAM):   end;
1962520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1962522   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1962523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962524   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1962525   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1962526   +   end;
MPRINT(EM_DIAGRAM):   end;
1962527   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1962528   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1962529   +   end;
MPRINT(EM_DIAGRAM):   end;
1962530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962531   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1962532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962534   +   end;
MPRINT(EM_DIAGRAM):   end;
1962535   +end;
MPRINT(EM_DIAGRAM):   end;
1962536   +
1962537   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1962538   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1962539   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1962540   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1962541   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1962542   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1962543   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1962544   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1962545   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1962546   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1962547   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1962548   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1962549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962551   +end;
MPRINT(EM_DIAGRAM):   end;
1962552   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962553   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1962554   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1962555   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962556   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1962557   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1962558   +   end;
MPRINT(EM_DIAGRAM):   end;
1962559   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1962560   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1962561   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1962562   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1962563   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1962564   +   end;
MPRINT(EM_DIAGRAM):   end;
1962565   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1962566   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1962567   +   end;
MPRINT(EM_DIAGRAM):   end;
1962568   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1962569   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1962570   +   end;
MPRINT(EM_DIAGRAM):   end;
1962571   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1962572   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1962573   +   end;
MPRINT(EM_DIAGRAM):   end;
1962574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962575   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1962576   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1962577   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1962578   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1962579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962581   +   end;
MPRINT(EM_DIAGRAM):   end;
1962582   +end;
MPRINT(EM_DIAGRAM):   end;
1962583   +
1962584   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1962585   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1962586   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1962587   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1962588   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1962589   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1962590   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1962591   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1962592   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1962593   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1962594   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1962595   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1962596   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1962597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1962598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962599   +end;
MPRINT(EM_DIAGRAM):   end;
1962600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1962601   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1962602   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1962603   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1962604   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1962605   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1962606   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1962607   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1962608   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1962609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1962610   +         end;
MPRINT(EM_DIAGRAM):   end;
1962611   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1962612   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1962613   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1962614   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1962615   +            end;
MPRINT(EM_DIAGRAM):   end;
1962616   +         end;
MPRINT(EM_DIAGRAM):   end;
1962617   +      end;
MPRINT(EM_DIAGRAM):   end;
1962618   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1962619   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1962620   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1962621   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1962622   +         end;
MPRINT(EM_DIAGRAM):   end;
1962623   +      end;
MPRINT(EM_DIAGRAM):   end;
1962624   +   end;
MPRINT(EM_DIAGRAM):   end;
1962625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1962626   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1962627   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1962628   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1962629   +      end;
MPRINT(EM_DIAGRAM):   end;
1962630   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1962631   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1962632   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1962633   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1962634   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1962635   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1962636   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1962637   +         end;
MPRINT(EM_DIAGRAM):   end;
1962638   +      end;
MPRINT(EM_DIAGRAM):   end;
1962639   +   end;
MPRINT(EM_DIAGRAM):   end;
1962640   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1962641   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1962642   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1962643   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1962644   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1962645   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1962646   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962647   +   end;
MPRINT(EM_DIAGRAM):   end;
1962648   +end;
MPRINT(EM_DIAGRAM):   end;
1962649   +
1962650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962651   +*** Checking missing input Interval
1962652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1962653   +
1962654   +IF NMISS(
1962655   +   AcceptedCmpTotal ,
1962656   +   Age ,
1962657   +   Frq ,
1962658   +   Income ,
1962659   +   Kidhome ,
1962660   +   Mnt ,
1962661   +   MntFishProducts ,
1962662   +   MntFruits ,
1962663   +   MntGoldProds ,
1962664   +   MntMeatProducts ,
1962665   +   MntSweetProducts ,
1962666   +   MntWines ,
1962667   +   MonthsAsCustomer ,
1962668   +   NumCatalogPurchases ,
1962669   +   NumDealsPurchases ,
1962670   +   NumDistPurchases ,
1962671   +   NumStorePurchases ,
1962672   +   NumWebPurchases ,
1962673   +   NumWebVisitsMonth ,
1962674   +   RFMstat ,
1962675   +   RMntFrq ,
1962676   +   Recency ,
1962677   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1962678   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1962679   +
1962680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1962681   +END;
MPRINT(EM_DIAGRAM):   END;
1962682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962683   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1962684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962685   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1962686   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1962687   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1962688   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1962689   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1962690   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1962691   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1962692   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1962693   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1962694   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1962695   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1962696   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1962697   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1962698   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1962699   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1962700   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1962701   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1962702   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1962703   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1962704   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1962705   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1962706   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1962707   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1962708   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1962709   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1962710   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1962711   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1962712   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1962713   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1962714   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1962715   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1962716   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1962717   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1962718   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1962719   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1962720   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1962721   +END;
MPRINT(EM_DIAGRAM):   END;
1962722   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1962723   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1962724   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1962725   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1962726   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1962727   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1962728   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1962729   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1962730   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1962731   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1962732   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1962733   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1962734   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1962735   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1962736   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1962737   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1962738   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1962739   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1962740   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1962741   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1962742   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1962743   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1962744   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1962745   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1962746   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1962747   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1962748   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1962749   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1962750   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1962751   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1962752   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1962753   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1962754   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1962755   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1962756   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1962757   +   ELSE S_NumCatalogPurchases
1962758   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1962759   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1962760   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1962761   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1962762   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1962763   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1962764   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1962765   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1962766   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1962767   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1962768   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1962769   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1962770   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1962771   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1962772   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1962773   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1962774   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1962775   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1962776   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1962777   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1962778   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1962779   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1962780   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1962781   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1962782   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1962783   +END;
MPRINT(EM_DIAGRAM):   END;
1962784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962785   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1962786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962788   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1962789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962791   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1962792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962793   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1962794   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1962795   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1962796   +        S_Income  +     0.51123266106809 * S_Kidhome
1962797   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1962798   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1962799   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1962800   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1962801   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1962802   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1962803   +          +     1.34095732961105 * S_NumDealsPurchases
1962804   +          +     0.16605991333252 * S_NumDistPurchases
1962805   +          +    -0.61746267736536 * S_NumStorePurchases
1962806   +          +    -0.61812800689506 * S_NumWebPurchases
1962807   +          +     1.44649145055387 * S_NumWebVisitsMonth
1962808   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1962809   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1962810   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1962811   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1962812   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1962813   +        S_Income  +     0.52295323651199 * S_Kidhome
1962814   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1962815   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1962816   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1962817   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1962818   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1962819   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1962820   +          +    -0.72543332317832 * S_NumDealsPurchases
1962821   +          +    -0.05245472565117 * S_NumDistPurchases
1962822   +          +     1.00667431585298 * S_NumStorePurchases
1962823   +          +     1.02836701470962 * S_NumWebPurchases
1962824   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1962825   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1962826   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1962827   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1962828   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1962829   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1962830   +        S_Income  +     0.58025720116696 * S_Kidhome
1962831   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1962832   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1962833   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1962834   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1962835   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1962836   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1962837   +          +     0.12670438262487 * S_NumDealsPurchases
1962838   +          +    -0.46113523834333 * S_NumDistPurchases
1962839   +          +     0.07074818720567 * S_NumStorePurchases
1962840   +          +    -0.05066645783537 * S_NumWebPurchases
1962841   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1962842   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1962843   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1962844   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1962845   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1962846   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1962847   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1962848   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1962849   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
1962850   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1962851   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1962852   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1962853   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1962854   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
1962855   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1962856   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1962857   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1962858   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1962859   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
1962860   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1962861   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1962862   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1962863   +          +     0.12692950862511 * Marital_StatusDivorced
1962864   +          +     0.10026497666167 * Marital_StatusMarried
1962865   +          +    -0.19893864592813 * Marital_StatusSingle
1962866   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1962867   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1962868   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1962869   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1962870   +          +    -0.16785192490199 * Marital_StatusDivorced
1962871   +          +     0.13153695130362 * Marital_StatusMarried
1962872   +          +    -0.50411544587104 * Marital_StatusSingle
1962873   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1962874   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1962875   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1962876   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1962877   +          +    -0.62654958087044 * Marital_StatusDivorced
1962878   +          +     1.86250132393341 * Marital_StatusMarried
1962879   +          +    -1.37067556451928 * Marital_StatusSingle
1962880   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1962881   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1962882   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1962883   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1962884   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1962885   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1962886   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1962887   +END;
MPRINT(EM_DIAGRAM):   END;
1962888   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1962889   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1962890   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1962891   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1962892   +END;
MPRINT(EM_DIAGRAM):   END;
1962893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962894   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1962895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962896   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1962897   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1962898   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
1962899   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1962900   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1962901   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1962902   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1962903   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1962904   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1962905   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1962906   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1962907   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1962908   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1962909   +END;
MPRINT(EM_DIAGRAM):   END;
1962910   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1962911   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1962912   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1962913   +END;
MPRINT(EM_DIAGRAM):   END;
1962914   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1962915   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1962916   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1962917   +END;
MPRINT(EM_DIAGRAM):   END;
1962918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962919   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1962920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1962921   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1962922   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1962923   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1962924   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1962925   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1962926   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1962927   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1962928   +END;
MPRINT(EM_DIAGRAM):   END;
1962929   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1962930   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1962931   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1962932   +drop
1962933   +H11
1962934   +H12
1962935   +H13
1962936   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1962937   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1962938    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1962939    quit;
1962940    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1962941    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1962942    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1962943    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1962944    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1962945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962946    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1962947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962949    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1962950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962952    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1962953    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1962954    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1962955    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962956    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1962957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1962958    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1962959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962961    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1962962    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1962963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962964    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962965    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1962966    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1962966  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1962967    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962968    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1962969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962970    filename _pref
1962970  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1962971    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1962972    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1962973   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1962974   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1962975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1962976   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1962977   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1962978   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1962979    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1962980    quit;
1962981    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1962982    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1962983    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1962984    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1962985    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1962986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1962987    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1962988    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962990    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1962991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1962992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1962993    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1962994    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1962995    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1962996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962997    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1962998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1962999    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1963000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1963002    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963003    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1963004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963005    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963006    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1963007    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1963007  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1963008    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963009    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1963010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963011    filename _pref
1963011  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1963012    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1963013    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1963014   +
1963015   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1963016   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1963016  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1963017   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1963018   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1963019   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1963020   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1963021   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1963022    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1963023    quit;
1963024    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1963025    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1963026    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1963027    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1963028    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1963029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963030    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1963031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963033    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1963034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963037    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1963038    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1963039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963040    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1963041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963042    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1963043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963046    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1963047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963048    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1963050    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1963050  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1963051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963052    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1963053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963054    filename _pref
1963054  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1963055    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1963056    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1963057   +
1963058   +
1963059   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1963060   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1963061   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1963062   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1963063   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1963064   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963065   +
1963066   +
1963067   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1963068   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1963069   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1963070   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1963071   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1963072   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963073   +
1963074   +
1963075   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1963076   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1963077   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1963078   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1963079   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1963080   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963081   +
1963082   +
1963083   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1963084   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1963085   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1963086   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1963087   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1963088   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963089   +
1963090   +
1963091   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1963092   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1963093   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1963094   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1963095   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1963096   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963097   +
1963098   +
1963099   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1963100   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1963101   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1963102   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1963103   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1963104   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963105   +
1963106   +
1963107   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1963108   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1963109   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1963110   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1963111   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1963112   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963113   +
1963114   +
1963115   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1963116   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1963117   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1963118   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1963119   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1963120   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1963121   +if
1963122   +_FILTERNORM1 not in ( '.')
1963123   + and
1963124   +_FILTERNORM2 not in ( '.')
1963125   + and
1963126   +_FILTERNORM3 not in ( '.')
1963127   + and
1963128   +_FILTERNORM4 not in ( '.')
1963129   + and
1963130   +_FILTERNORM5 not in ( '.')
1963131   + and
1963132   +_FILTERNORM6 not in ( '.')
1963133   + and
1963134   +_FILTERNORM7 not in ( ' ')
1963135   + and
1963136   +_FILTERNORM8 not in ( ' ')
1963137   +and
1963138   +( Dt_Customer ne .)
1963139   +and ( Income ne . and (Income<=107000))
1963140   +and ( Kidhome ne .)
1963141   +and ( MntFishProducts ne .)
1963142   +and ( MntFruits ne .)
1963143   +and ( MntGoldProds ne .)
1963144   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1963145   +and ( MntSweetProducts ne .)
1963146   +and ( MntWines ne .)
1963147   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1963148   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1963149   +and ( NumStorePurchases ne .)
1963150   +and ( NumWebPurchases ne .)
1963151   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1963152   +and ( Recency ne .)
1963153   +and ( Teenhome ne .)
1963154   +and ( Year_Birth ne .)
1963155   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1963156   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1963157   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1963158   +end;
MPRINT(EM_DIAGRAM):   end;
1963159   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1963160   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1963161    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1963162    quit;
1963163    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1963164    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1963165    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1963166    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1963167    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1963168    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963169    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1963170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963172    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1963173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963175    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963176    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1963177    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1963178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963179    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1963180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1963181    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1963182    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963183    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963184    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963185    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1963186    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963187    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963188    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1963189    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1963189  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1963190    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963191    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1963192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963193    %macro varDept(fcmpdata=,id=);
1963194    %global nobs&id scoreFlag&id;
1963195    %let scoreFlag&id = 0;
1963196    %if &id=1 or ^&fcmpStart %then %do;
1963197    proc sort data=&fcmpdata out=_temp&id nodupkey;
1963198    by NAME;
1963199    where id=&id and LHS in( %let j=1;
1963200    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1963201    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1963202    "&var" %let j = %eval(&j+1);
1963203    %end;
1963204    );
1963205    run;
1963206    %let dsid = %sysfunc(open(_temp&id));
1963207    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1963208    %let dsid = %sysfunc(close(&dsid));
1963209    %if &&nobs&id %then %do;
1963210    %let scoreFlag&id = 1;
1963211    %let fcmpStart = 1;
1963212    %end;
1963213    %else %let fcmpStart = 0;
1963214    %end;
1963215    %else %do;
1963216    proc sort data=&fcmpdata out=_tempid;
1963217    where id=&id;
1963218    by LHS;
1963219    run;
1963220    %let dsid = %sysfunc(open(_tempid));
1963221    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1963222    %let dsid = %sysfunc(close(&dsid));
1963223    %if ^&&nobs&id %then %do;
1963224    proc datasets lib=work nolist;
1963225    delete _tempid;
1963226    run;
1963227    quit;
1963228    %end;
1963229    %else %do;
1963230    data _tempAll;
1963231    set %let j=%eval(&id-1);
1963232    %do x=1 %to &j;
1963233    %if &&nobs&x %then %do;
1963234    _temp&x %end;
1963235    %end;
1963236    ;
1963237    run;
1963238    proc sql;
1963239    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1963239  ! work._tempid p2 where p.name=p2.lhs;
1963240    quit;
1963241    data _temp&id;
1963242    set _temp&id;
1963243    where LHS ne '' and NAME ne '' and Node ne '';
1963244    run;
1963245    proc datasets lib=work nolist;
1963246    delete _tempAll;
1963247    run;
1963248    %let dsid = %sysfunc(open(_temp&id));
1963249    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1963250    %let dsid = %sysfunc(close(&dsid));
1963251    %if ^&&nobs&id %then %do;
1963252    proc datasets lib=work nolist;
1963253    delete _temp&id;
1963254    run;
1963255    quit;
1963256    %end;
1963257    %else %do;
1963258    %let scoreFlag&id = 1;
1963259    data _temp&id;
1963260    set _temp&id;
1963261    where LHS ne NAME and node ne '';
1963262    run;
1963263    %let dsid = %sysfunc(open(_temp&id));
1963264    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1963265    %let dsid = %sysfunc(close(&dsid));
1963266    %if ^&&nobs&id %then %do;
1963267    proc datasets lib=work nolist;
1963268    delete _temp&id;
1963269    run;
1963270    quit;
1963271    %end;
1963272    %else %do;
1963273    proc sort data=_temp&id nodupkey;
1963274    by LHS NAME;
1963275    run;
1963276    %end;
1963277    %end;
1963278    %end;
1963279    %end;
1963280    %mend varDept;
1963281    %macro optCode(outdata=fcmpdata);
1963282    %global fcmpStart;
1963283    %let fcmpStart = 0;
1963284    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1963285    %let NumNodes=9;
1963286    %do k=1 %to &NumNodes;
1963287    %vardept(fcmpdata=&outdata, id=&k);
1963288    %end;
1963289    %mend optCode;
1963290    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1963291    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1963292    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1963293    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1963294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963295    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1963296    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1963297    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1963298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963299    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1963300    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1963300  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1963301    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963302    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1963303    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1963304    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963305    filename _pref
1963305  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1963306    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1963307    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1963308   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1963309   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1963310   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1963311   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1963312   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1963313   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1963314   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1963315   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1963316   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1963317   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1963318   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1963319   +LENGTH _WARN_ $4
1963320   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1963321   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1963322   +
1963323   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1963324   +
1963325   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1963326   +
1963327   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1963328   +
1963329   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1963330   +
1963331   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1963332   +
1963333   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1963334   +
1963335   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1963336   +
1963337   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1963338   +
1963339   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1963340   +
1963341   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1963342   +
1963343   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1963344   +
1963345   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1963346   +
1963347   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1963348   +
1963349   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1963350   +
1963351   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1963352   +
1963353   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1963354   +
1963355   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1963356   +
1963357   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1963358   +
1963359   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1963360   +
1963361   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1963362   +
1963363   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1963364   +
1963365   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1963366   +
1963367   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1963368   +
1963369   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1963370   +
1963371   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1963372   +
1963373   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1963374   +
1963375   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1963376   +
1963377   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1963378   +
1963379   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1963380   +
1963381   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1963382   +
1963383   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1963384   +
1963385   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1963386   +
1963387   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1963388   +
1963389   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1963390   +
1963391   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1963392   +
1963393   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1963394   +
1963395   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1963396   +
1963397   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1963398   +
1963399   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1963400   +
1963401   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1963402   +
1963403   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1963404   +
1963405   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1963406   +
1963407   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1963408   +
1963409   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1963410   +
1963411   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1963412   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1963413   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1963414   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1963415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963417   +end;
MPRINT(EM_DIAGRAM):   end;
1963418   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963420   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1963421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1963423   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1963424   +   end;
MPRINT(EM_DIAGRAM):   end;
1963425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1963426   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1963427   +   end;
MPRINT(EM_DIAGRAM):   end;
1963428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963429   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1963430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963432   +   end;
MPRINT(EM_DIAGRAM):   end;
1963433   +end;
MPRINT(EM_DIAGRAM):   end;
1963434   +
1963435   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1963436   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1963437   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1963438   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1963439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963441   +end;
MPRINT(EM_DIAGRAM):   end;
1963442   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963444   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1963445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1963447   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1963448   +   end;
MPRINT(EM_DIAGRAM):   end;
1963449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1963450   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1963451   +   end;
MPRINT(EM_DIAGRAM):   end;
1963452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963453   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1963454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963456   +   end;
MPRINT(EM_DIAGRAM):   end;
1963457   +end;
MPRINT(EM_DIAGRAM):   end;
1963458   +
1963459   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1963460   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1963461   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1963462   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1963463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963465   +end;
MPRINT(EM_DIAGRAM):   end;
1963466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963468   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1963469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963470   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1963471   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1963472   +   end;
MPRINT(EM_DIAGRAM):   end;
1963473   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1963474   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1963475   +   end;
MPRINT(EM_DIAGRAM):   end;
1963476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963477   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1963478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963480   +   end;
MPRINT(EM_DIAGRAM):   end;
1963481   +end;
MPRINT(EM_DIAGRAM):   end;
1963482   +
1963483   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1963484   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1963485   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1963486   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1963487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963489   +end;
MPRINT(EM_DIAGRAM):   end;
1963490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963492   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1963493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963494   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1963495   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1963496   +   end;
MPRINT(EM_DIAGRAM):   end;
1963497   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1963498   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1963499   +   end;
MPRINT(EM_DIAGRAM):   end;
1963500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963501   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1963502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963504   +   end;
MPRINT(EM_DIAGRAM):   end;
1963505   +end;
MPRINT(EM_DIAGRAM):   end;
1963506   +
1963507   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1963508   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1963509   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1963510   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1963511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963513   +end;
MPRINT(EM_DIAGRAM):   end;
1963514   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963515   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963516   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1963517   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963518   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1963519   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1963520   +   end;
MPRINT(EM_DIAGRAM):   end;
1963521   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1963522   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1963523   +   end;
MPRINT(EM_DIAGRAM):   end;
1963524   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963525   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1963526   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963527   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963528   +   end;
MPRINT(EM_DIAGRAM):   end;
1963529   +end;
MPRINT(EM_DIAGRAM):   end;
1963530   +
1963531   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1963532   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1963533   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1963534   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1963535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963537   +end;
MPRINT(EM_DIAGRAM):   end;
1963538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963539   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963540   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1963541   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963542   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1963543   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1963544   +   end;
MPRINT(EM_DIAGRAM):   end;
1963545   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1963546   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1963547   +   end;
MPRINT(EM_DIAGRAM):   end;
1963548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963549   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1963550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963552   +   end;
MPRINT(EM_DIAGRAM):   end;
1963553   +end;
MPRINT(EM_DIAGRAM):   end;
1963554   +
1963555   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1963556   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1963557   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1963558   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1963559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963561   +end;
MPRINT(EM_DIAGRAM):   end;
1963562   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963563   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1963564   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1963565   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963566   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1963567   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1963568   +   end;
MPRINT(EM_DIAGRAM):   end;
1963569   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1963570   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1963571   +   end;
MPRINT(EM_DIAGRAM):   end;
1963572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963573   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1963574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963576   +   end;
MPRINT(EM_DIAGRAM):   end;
1963577   +end;
MPRINT(EM_DIAGRAM):   end;
1963578   +
1963579   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1963580   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1963581   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1963582   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1963583   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1963584   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1963585   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1963586   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1963587   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1963588   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1963589   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1963590   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1963591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963593   +end;
MPRINT(EM_DIAGRAM):   end;
1963594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963595   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1963596   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1963597   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963598   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1963599   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1963600   +   end;
MPRINT(EM_DIAGRAM):   end;
1963601   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1963602   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1963603   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1963604   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1963605   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1963606   +   end;
MPRINT(EM_DIAGRAM):   end;
1963607   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1963608   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1963609   +   end;
MPRINT(EM_DIAGRAM):   end;
1963610   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1963611   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1963612   +   end;
MPRINT(EM_DIAGRAM):   end;
1963613   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1963614   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1963615   +   end;
MPRINT(EM_DIAGRAM):   end;
1963616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963617   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1963618   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1963619   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1963620   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1963621   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963622   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963623   +   end;
MPRINT(EM_DIAGRAM):   end;
1963624   +end;
MPRINT(EM_DIAGRAM):   end;
1963625   +
1963626   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1963627   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1963628   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1963629   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1963630   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1963631   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1963632   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1963633   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1963634   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1963635   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1963636   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1963637   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1963638   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1963639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1963640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963641   +end;
MPRINT(EM_DIAGRAM):   end;
1963642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1963643   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1963644   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1963645   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1963646   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1963647   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1963648   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1963649   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1963650   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1963651   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1963652   +         end;
MPRINT(EM_DIAGRAM):   end;
1963653   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1963654   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1963655   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1963656   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1963657   +            end;
MPRINT(EM_DIAGRAM):   end;
1963658   +         end;
MPRINT(EM_DIAGRAM):   end;
1963659   +      end;
MPRINT(EM_DIAGRAM):   end;
1963660   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1963661   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1963662   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1963663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1963664   +         end;
MPRINT(EM_DIAGRAM):   end;
1963665   +      end;
MPRINT(EM_DIAGRAM):   end;
1963666   +   end;
MPRINT(EM_DIAGRAM):   end;
1963667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1963668   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1963669   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1963670   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1963671   +      end;
MPRINT(EM_DIAGRAM):   end;
1963672   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1963673   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1963674   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1963675   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1963676   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1963677   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1963678   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1963679   +         end;
MPRINT(EM_DIAGRAM):   end;
1963680   +      end;
MPRINT(EM_DIAGRAM):   end;
1963681   +   end;
MPRINT(EM_DIAGRAM):   end;
1963682   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1963683   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1963684   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1963685   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1963686   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1963687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1963688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963689   +   end;
MPRINT(EM_DIAGRAM):   end;
1963690   +end;
MPRINT(EM_DIAGRAM):   end;
1963691   +
1963692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963693   +*** Checking missing input Interval
1963694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1963695   +
1963696   +IF NMISS(
1963697   +   AcceptedCmpTotal ,
1963698   +   Age ,
1963699   +   Frq ,
1963700   +   Income ,
1963701   +   Kidhome ,
1963702   +   Mnt ,
1963703   +   MntFishProducts ,
1963704   +   MntFruits ,
1963705   +   MntGoldProds ,
1963706   +   MntMeatProducts ,
1963707   +   MntSweetProducts ,
1963708   +   MntWines ,
1963709   +   MonthsAsCustomer ,
1963710   +   NumCatalogPurchases ,
1963711   +   NumDealsPurchases ,
1963712   +   NumDistPurchases ,
1963713   +   NumStorePurchases ,
1963714   +   NumWebPurchases ,
1963715   +   NumWebVisitsMonth ,
1963716   +   RFMstat ,
1963717   +   RMntFrq ,
1963718   +   Recency ,
1963719   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1963720   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1963721   +
1963722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1963723   +END;
MPRINT(EM_DIAGRAM):   END;
1963724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963725   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1963726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963727   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1963728   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1963729   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1963730   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1963731   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1963732   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1963733   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1963734   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1963735   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1963736   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1963737   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1963738   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1963739   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1963740   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1963741   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1963742   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1963743   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1963744   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1963745   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1963746   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1963747   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1963748   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1963749   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1963750   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1963751   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1963752   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1963753   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1963754   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1963755   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1963756   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1963757   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1963758   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1963759   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1963760   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1963761   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1963762   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1963763   +END;
MPRINT(EM_DIAGRAM):   END;
1963764   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1963765   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1963766   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1963767   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1963768   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1963769   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1963770   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1963771   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1963772   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1963773   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1963774   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1963775   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1963776   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1963777   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1963778   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1963779   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1963780   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1963781   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1963782   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1963783   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1963784   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1963785   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1963786   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1963787   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1963788   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1963789   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1963790   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1963791   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1963792   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1963793   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1963794   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1963795   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1963796   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1963797   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1963798   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1963799   +   ELSE S_NumCatalogPurchases
1963800   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1963801   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1963802   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1963803   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1963804   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1963805   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1963806   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1963807   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1963808   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1963809   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1963810   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1963811   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1963812   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1963813   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1963814   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1963815   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1963816   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1963817   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1963818   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1963819   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1963820   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1963821   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1963822   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1963823   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1963824   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1963825   +END;
MPRINT(EM_DIAGRAM):   END;
1963826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963827   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1963828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963830   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1963831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963833   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1963834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1963836   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1963837   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1963838   +        S_Income  +    -1.07615700855274 * S_Kidhome
1963839   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1963840   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1963841   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1963842   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1963843   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1963844   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1963845   +          +      0.3429043319369 * S_NumDealsPurchases
1963846   +          +     0.71313309767469 * S_NumDistPurchases
1963847   +          +     0.06017757740083 * S_NumStorePurchases
1963848   +          +    -0.19817724925068 * S_NumWebPurchases
1963849   +          +     1.34164122205952 * S_NumWebVisitsMonth
1963850   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1963851   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1963852   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1963853   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1963854   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1963855   +        S_Income  +     -0.0027232441092 * S_Kidhome
1963856   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1963857   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1963858   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1963859   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1963860   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1963861   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1963862   +          +      0.4576973746858 * S_NumDealsPurchases
1963863   +          +     0.15590877272659 * S_NumDistPurchases
1963864   +          +    -0.33414539713736 * S_NumStorePurchases
1963865   +          +    -0.39370244666257 * S_NumWebPurchases
1963866   +          +     0.52596714886704 * S_NumWebVisitsMonth
1963867   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1963868   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1963869   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1963870   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1963871   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1963872   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1963873   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1963874   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
1963875   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1963876   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1963877   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1963878   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1963879   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
1963880   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1963881   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1963882   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1963883   +          +      0.4663802937397 * Marital_StatusDivorced
1963884   +          +    -1.27401898796099 * Marital_StatusMarried
1963885   +          +      1.3125969368079 * Marital_StatusSingle
1963886   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1963887   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1963888   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1963889   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1963890   +          +     0.07419179522004 * Marital_StatusDivorced
1963891   +          +     0.00234615813337 * Marital_StatusMarried
1963892   +          +    -0.00725460458412 * Marital_StatusSingle
1963893   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1963894   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1963895   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1963896   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1963897   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1963898   +END;
MPRINT(EM_DIAGRAM):   END;
1963899   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1963900   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1963901   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1963902   +END;
MPRINT(EM_DIAGRAM):   END;
1963903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963904   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1963905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963906   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1963907   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1963908   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1963909   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1963910   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1963911   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1963912   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1963913   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1963914   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1963915   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1963916   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1963917   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1963918   +END;
MPRINT(EM_DIAGRAM):   END;
1963919   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1963920   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1963921   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1963922   +END;
MPRINT(EM_DIAGRAM):   END;
1963923   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1963924   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1963925   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1963926   +END;
MPRINT(EM_DIAGRAM):   END;
1963927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963928   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1963929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1963930   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1963931   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1963932   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1963933   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1963934   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1963935   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1963936   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1963937   +END;
MPRINT(EM_DIAGRAM):   END;
1963938   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1963939   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1963940   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1963941   +drop
1963942   +H11
1963943   +H12
1963944   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1963945   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1963946    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1963947    quit;
1963948    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1963949    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1963950    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1963951    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1963952    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1963953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963954    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1963955    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963956    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963957    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1963958    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963960    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963961    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1963962    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1963963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963964    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1963965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963966    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1963967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963969    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1963970    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1963971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963972    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963973    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1963974    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1963974  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1963975    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1963976    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1963977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963978    filename _pref
1963978  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1963979    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1963980    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1963981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1963982   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1963983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1963984   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1963985   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1963986   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1963987    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1963988    quit;
1963989    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1963990    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1963991    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1963992    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1963993    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1963994    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963995    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1963996    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1963997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1963998    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1963999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964002    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1964003    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1964004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964005    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1964006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1964007    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1964008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964010    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964011    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1964012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964013    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964014    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1964015    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1964015  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1964016    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964017    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1964018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964019    filename _pref
1964019  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1964020    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1964021    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1964022   +
1964023   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1964024   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1964024  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1964025   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1964026   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1964027   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1964028   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1964029   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1964030    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1964031    quit;
1964032    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1964033    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1964034    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1964035    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1964036    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1964037    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964038    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1964039    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964041    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1964042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964044    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964045    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1964046    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1964047    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964048    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1964049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964050    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1964051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964053    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964054    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1964055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964056    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964057    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1964058    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1964058  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1964059    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964060    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1964061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964062    filename _pref
1964062  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1964063    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1964064    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1964065   +
1964066   +
1964067   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1964068   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1964069   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1964070   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1964071   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1964072   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964073   +
1964074   +
1964075   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1964076   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1964077   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1964078   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1964079   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1964080   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964081   +
1964082   +
1964083   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1964084   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1964085   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1964086   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1964087   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1964088   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964089   +
1964090   +
1964091   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1964092   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1964093   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1964094   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1964095   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1964096   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964097   +
1964098   +
1964099   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1964100   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1964101   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1964102   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1964103   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1964104   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964105   +
1964106   +
1964107   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1964108   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1964109   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1964110   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1964111   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1964112   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964113   +
1964114   +
1964115   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1964116   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1964117   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1964118   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1964119   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1964120   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964121   +
1964122   +
1964123   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1964124   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1964125   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1964126   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1964127   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1964128   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1964129   +if
1964130   +_FILTERNORM1 not in ( '.')
1964131   + and
1964132   +_FILTERNORM2 not in ( '.')
1964133   + and
1964134   +_FILTERNORM3 not in ( '.')
1964135   + and
1964136   +_FILTERNORM4 not in ( '.')
1964137   + and
1964138   +_FILTERNORM5 not in ( '.')
1964139   + and
1964140   +_FILTERNORM6 not in ( '.')
1964141   + and
1964142   +_FILTERNORM7 not in ( ' ')
1964143   + and
1964144   +_FILTERNORM8 not in ( ' ')
1964145   +and
1964146   +( Dt_Customer ne .)
1964147   +and ( Income ne . and (Income<=107000))
1964148   +and ( Kidhome ne .)
1964149   +and ( MntFishProducts ne .)
1964150   +and ( MntFruits ne .)
1964151   +and ( MntGoldProds ne .)
1964152   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1964153   +and ( MntSweetProducts ne .)
1964154   +and ( MntWines ne .)
1964155   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1964156   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1964157   +and ( NumStorePurchases ne .)
1964158   +and ( NumWebPurchases ne .)
1964159   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1964160   +and ( Recency ne .)
1964161   +and ( Teenhome ne .)
1964162   +and ( Year_Birth ne .)
1964163   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1964164   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1964165   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1964166   +end;
MPRINT(EM_DIAGRAM):   end;
1964167   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1964168   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1964169    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1964170    quit;
1964171    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1964172    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1964173    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1964174    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1964175    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1964176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964177    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1964178    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964179    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964180    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1964181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964183    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964184    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1964185    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1964186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964187    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1964188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1964189    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1964190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964191    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964192    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964193    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1964194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964195    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964196    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1964197    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1964197  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1964198    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964199    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1964200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964201    %macro varDept(fcmpdata=,id=);
1964202    %global nobs&id scoreFlag&id;
1964203    %let scoreFlag&id = 0;
1964204    %if &id=1 or ^&fcmpStart %then %do;
1964205    proc sort data=&fcmpdata out=_temp&id nodupkey;
1964206    by NAME;
1964207    where id=&id and LHS in( %let j=1;
1964208    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1964209    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1964210    "&var" %let j = %eval(&j+1);
1964211    %end;
1964212    );
1964213    run;
1964214    %let dsid = %sysfunc(open(_temp&id));
1964215    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1964216    %let dsid = %sysfunc(close(&dsid));
1964217    %if &&nobs&id %then %do;
1964218    %let scoreFlag&id = 1;
1964219    %let fcmpStart = 1;
1964220    %end;
1964221    %else %let fcmpStart = 0;
1964222    %end;
1964223    %else %do;
1964224    proc sort data=&fcmpdata out=_tempid;
1964225    where id=&id;
1964226    by LHS;
1964227    run;
1964228    %let dsid = %sysfunc(open(_tempid));
1964229    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1964230    %let dsid = %sysfunc(close(&dsid));
1964231    %if ^&&nobs&id %then %do;
1964232    proc datasets lib=work nolist;
1964233    delete _tempid;
1964234    run;
1964235    quit;
1964236    %end;
1964237    %else %do;
1964238    data _tempAll;
1964239    set %let j=%eval(&id-1);
1964240    %do x=1 %to &j;
1964241    %if &&nobs&x %then %do;
1964242    _temp&x %end;
1964243    %end;
1964244    ;
1964245    run;
1964246    proc sql;
1964247    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1964247  ! work._tempid p2 where p.name=p2.lhs;
1964248    quit;
1964249    data _temp&id;
1964250    set _temp&id;
1964251    where LHS ne '' and NAME ne '' and Node ne '';
1964252    run;
1964253    proc datasets lib=work nolist;
1964254    delete _tempAll;
1964255    run;
1964256    %let dsid = %sysfunc(open(_temp&id));
1964257    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1964258    %let dsid = %sysfunc(close(&dsid));
1964259    %if ^&&nobs&id %then %do;
1964260    proc datasets lib=work nolist;
1964261    delete _temp&id;
1964262    run;
1964263    quit;
1964264    %end;
1964265    %else %do;
1964266    %let scoreFlag&id = 1;
1964267    data _temp&id;
1964268    set _temp&id;
1964269    where LHS ne NAME and node ne '';
1964270    run;
1964271    %let dsid = %sysfunc(open(_temp&id));
1964272    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1964273    %let dsid = %sysfunc(close(&dsid));
1964274    %if ^&&nobs&id %then %do;
1964275    proc datasets lib=work nolist;
1964276    delete _temp&id;
1964277    run;
1964278    quit;
1964279    %end;
1964280    %else %do;
1964281    proc sort data=_temp&id nodupkey;
1964282    by LHS NAME;
1964283    run;
1964284    %end;
1964285    %end;
1964286    %end;
1964287    %end;
1964288    %mend varDept;
1964289    %macro optCode(outdata=fcmpdata);
1964290    %global fcmpStart;
1964291    %let fcmpStart = 0;
1964292    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1964293    %let NumNodes=9;
1964294    %do k=1 %to &NumNodes;
1964295    %vardept(fcmpdata=&outdata, id=&k);
1964296    %end;
1964297    %mend optCode;
1964298    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1964299    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1964300    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1964301    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1964302    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964303    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1964304    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1964305    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1964306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964307    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1964308    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1964308  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1964309    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964310    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1964311    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1964312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964313    filename _pref
1964313  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
1964314    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1964315    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas.
1964316   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1964317   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1964318   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1964319   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1964320   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1964321   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1964322   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1964323   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1964324   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1964325   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1964326   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1964327   +LENGTH _WARN_ $4
1964328   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1964329   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1964330   +
1964331   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1964332   +
1964333   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1964334   +
1964335   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1964336   +
1964337   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1964338   +
1964339   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1964340   +
1964341   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1964342   +
1964343   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1964344   +
1964345   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1964346   +
1964347   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1964348   +
1964349   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1964350   +
1964351   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1964352   +
1964353   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1964354   +
1964355   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1964356   +
1964357   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1964358   +
1964359   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1964360   +
1964361   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1964362   +
1964363   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1964364   +
1964365   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1964366   +
1964367   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1964368   +
1964369   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1964370   +
1964371   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1964372   +
1964373   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1964374   +
1964375   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1964376   +
1964377   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1964378   +
1964379   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1964380   +
1964381   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1964382   +
1964383   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1964384   +
1964385   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1964386   +
1964387   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1964388   +
1964389   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1964390   +
1964391   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1964392   +
1964393   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1964394   +
1964395   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1964396   +
1964397   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1964398   +
1964399   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1964400   +
1964401   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1964402   +
1964403   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1964404   +
1964405   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1964406   +
1964407   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1964408   +
1964409   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1964410   +
1964411   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1964412   +
1964413   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1964414   +
1964415   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1964416   +
1964417   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1964418   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1964419   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1964420   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1964421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964423   +end;
MPRINT(EM_DIAGRAM):   end;
1964424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964425   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964426   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1964427   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964428   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1964429   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1964430   +   end;
MPRINT(EM_DIAGRAM):   end;
1964431   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1964432   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1964433   +   end;
MPRINT(EM_DIAGRAM):   end;
1964434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964435   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1964436   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964437   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964438   +   end;
MPRINT(EM_DIAGRAM):   end;
1964439   +end;
MPRINT(EM_DIAGRAM):   end;
1964440   +
1964441   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1964442   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1964443   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1964444   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1964445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964447   +end;
MPRINT(EM_DIAGRAM):   end;
1964448   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964449   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964450   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1964451   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964452   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1964453   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1964454   +   end;
MPRINT(EM_DIAGRAM):   end;
1964455   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1964456   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1964457   +   end;
MPRINT(EM_DIAGRAM):   end;
1964458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964459   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1964460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964462   +   end;
MPRINT(EM_DIAGRAM):   end;
1964463   +end;
MPRINT(EM_DIAGRAM):   end;
1964464   +
1964465   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1964466   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1964467   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1964468   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1964469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964471   +end;
MPRINT(EM_DIAGRAM):   end;
1964472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964474   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1964475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1964477   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1964478   +   end;
MPRINT(EM_DIAGRAM):   end;
1964479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1964480   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1964481   +   end;
MPRINT(EM_DIAGRAM):   end;
1964482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964483   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1964484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964486   +   end;
MPRINT(EM_DIAGRAM):   end;
1964487   +end;
MPRINT(EM_DIAGRAM):   end;
1964488   +
1964489   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1964490   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1964491   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1964492   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1964493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964495   +end;
MPRINT(EM_DIAGRAM):   end;
1964496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964498   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1964499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1964501   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1964502   +   end;
MPRINT(EM_DIAGRAM):   end;
1964503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1964504   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1964505   +   end;
MPRINT(EM_DIAGRAM):   end;
1964506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964507   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1964508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964510   +   end;
MPRINT(EM_DIAGRAM):   end;
1964511   +end;
MPRINT(EM_DIAGRAM):   end;
1964512   +
1964513   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1964514   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1964515   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1964516   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1964517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964519   +end;
MPRINT(EM_DIAGRAM):   end;
1964520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964522   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1964523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1964525   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1964526   +   end;
MPRINT(EM_DIAGRAM):   end;
1964527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1964528   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1964529   +   end;
MPRINT(EM_DIAGRAM):   end;
1964530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964531   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1964532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964534   +   end;
MPRINT(EM_DIAGRAM):   end;
1964535   +end;
MPRINT(EM_DIAGRAM):   end;
1964536   +
1964537   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1964538   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1964539   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1964540   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1964541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964543   +end;
MPRINT(EM_DIAGRAM):   end;
1964544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964546   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1964547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1964549   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1964550   +   end;
MPRINT(EM_DIAGRAM):   end;
1964551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1964552   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1964553   +   end;
MPRINT(EM_DIAGRAM):   end;
1964554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964555   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1964556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964558   +   end;
MPRINT(EM_DIAGRAM):   end;
1964559   +end;
MPRINT(EM_DIAGRAM):   end;
1964560   +
1964561   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1964562   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1964563   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1964564   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1964565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964567   +end;
MPRINT(EM_DIAGRAM):   end;
1964568   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1964570   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1964571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964572   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1964573   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1964574   +   end;
MPRINT(EM_DIAGRAM):   end;
1964575   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1964576   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1964577   +   end;
MPRINT(EM_DIAGRAM):   end;
1964578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964579   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1964580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964582   +   end;
MPRINT(EM_DIAGRAM):   end;
1964583   +end;
MPRINT(EM_DIAGRAM):   end;
1964584   +
1964585   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1964586   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1964587   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1964588   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1964589   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1964590   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1964591   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1964592   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1964593   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1964594   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1964595   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1964596   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1964597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964599   +end;
MPRINT(EM_DIAGRAM):   end;
1964600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964601   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1964602   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1964603   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964604   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1964605   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1964606   +   end;
MPRINT(EM_DIAGRAM):   end;
1964607   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1964608   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1964609   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1964610   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1964611   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1964612   +   end;
MPRINT(EM_DIAGRAM):   end;
1964613   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1964614   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1964615   +   end;
MPRINT(EM_DIAGRAM):   end;
1964616   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1964617   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1964618   +   end;
MPRINT(EM_DIAGRAM):   end;
1964619   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1964620   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1964621   +   end;
MPRINT(EM_DIAGRAM):   end;
1964622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964623   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1964624   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1964625   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1964626   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1964627   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964628   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964629   +   end;
MPRINT(EM_DIAGRAM):   end;
1964630   +end;
MPRINT(EM_DIAGRAM):   end;
1964631   +
1964632   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1964633   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1964634   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1964635   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1964636   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1964637   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1964638   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1964639   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1964640   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1964641   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1964642   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1964643   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1964644   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1964645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1964646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964647   +end;
MPRINT(EM_DIAGRAM):   end;
1964648   +else do;
MPRINT(EM_DIAGRAM):   else do;
1964649   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1964650   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1964651   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1964652   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1964653   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1964654   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1964655   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1964656   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1964657   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1964658   +         end;
MPRINT(EM_DIAGRAM):   end;
1964659   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1964660   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1964661   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1964662   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1964663   +            end;
MPRINT(EM_DIAGRAM):   end;
1964664   +         end;
MPRINT(EM_DIAGRAM):   end;
1964665   +      end;
MPRINT(EM_DIAGRAM):   end;
1964666   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1964667   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1964668   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1964669   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1964670   +         end;
MPRINT(EM_DIAGRAM):   end;
1964671   +      end;
MPRINT(EM_DIAGRAM):   end;
1964672   +   end;
MPRINT(EM_DIAGRAM):   end;
1964673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1964674   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1964675   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1964676   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1964677   +      end;
MPRINT(EM_DIAGRAM):   end;
1964678   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1964679   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1964680   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1964681   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1964682   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1964683   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1964684   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1964685   +         end;
MPRINT(EM_DIAGRAM):   end;
1964686   +      end;
MPRINT(EM_DIAGRAM):   end;
1964687   +   end;
MPRINT(EM_DIAGRAM):   end;
1964688   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1964689   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1964690   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1964691   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1964692   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1964693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1964694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964695   +   end;
MPRINT(EM_DIAGRAM):   end;
1964696   +end;
MPRINT(EM_DIAGRAM):   end;
1964697   +
1964698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964699   +*** Checking missing input Interval
1964700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1964701   +
1964702   +IF NMISS(
1964703   +   AcceptedCmpTotal ,
1964704   +   Age ,
1964705   +   Frq ,
1964706   +   Income ,
1964707   +   Kidhome ,
1964708   +   Mnt ,
1964709   +   MntFishProducts ,
1964710   +   MntFruits ,
1964711   +   MntGoldProds ,
1964712   +   MntMeatProducts ,
1964713   +   MntSweetProducts ,
1964714   +   MntWines ,
1964715   +   MonthsAsCustomer ,
1964716   +   NumCatalogPurchases ,
1964717   +   NumDealsPurchases ,
1964718   +   NumDistPurchases ,
1964719   +   NumStorePurchases ,
1964720   +   NumWebPurchases ,
1964721   +   NumWebVisitsMonth ,
1964722   +   RFMstat ,
1964723   +   RMntFrq ,
1964724   +   Recency ,
1964725   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1964726   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1964727   +
1964728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1964729   +END;
MPRINT(EM_DIAGRAM):   END;
1964730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964731   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1964732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1964734   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1964735   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1964736   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1964737   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1964738   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1964739   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1964740   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1964741   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1964742   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1964743   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1964744   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1964745   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1964746   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1964747   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1964748   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1964749   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1964750   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1964751   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1964752   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1964753   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1964754   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1964755   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1964756   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1964757   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1964758   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1964759   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1964760   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1964761   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1964762   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1964763   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1964764   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1964765   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1964766   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1964767   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1964768   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1964769   +END;
MPRINT(EM_DIAGRAM):   END;
1964770   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1964771   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1964772   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1964773   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1964774   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1964775   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1964776   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1964777   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1964778   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1964779   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1964780   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1964781   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1964782   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1964783   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1964784   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1964785   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1964786   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1964787   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1964788   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1964789   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1964790   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1964791   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1964792   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1964793   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1964794   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1964795   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1964796   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1964797   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1964798   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1964799   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1964800   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1964801   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1964802   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1964803   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1964804   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1964805   +   ELSE S_NumCatalogPurchases
1964806   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1964807   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1964808   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1964809   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1964810   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1964811   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1964812   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1964813   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1964814   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1964815   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1964816   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1964817   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1964818   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1964819   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1964820   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1964821   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1964822   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1964823   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1964824   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1964825   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1964826   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1964827   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1964828   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1964829   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1964830   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1964831   +END;
MPRINT(EM_DIAGRAM):   END;
1964832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964833   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1964834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964836   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1964837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964839   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1964840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1964842   +   H11  =     0.21200891808959 * S_AcceptedCmpTotal  +     -0.0294266976166 *
1964843   +        S_Age  +    -0.16916645815546 * S_Frq  +     0.14504026791442 *
1964844   +        S_Income  +    -0.02671573431371 * S_Kidhome
1964845   +          +     0.00786762022906 * S_Mnt  +    -0.04771740067188 *
1964846   +        S_MntFishProducts  +    -0.04225362276447 * S_MntFruits
1964847   +          +     0.00800255816668 * S_MntGoldProds  +      0.2107523790232 *
1964848   +        S_MntMeatProducts  +     -0.0235222276585 * S_MntSweetProducts
1964849   +          +    -0.19316587677023 * S_MntWines  +    -0.02053398305898 *
1964850   +        S_MonthsAsCustomer  +     0.28123583383823 * S_NumCatalogPurchases
1964851   +          +     0.15209264570536 * S_NumDealsPurchases
1964852   +          +     0.06911391326046 * S_NumDistPurchases
1964853   +          +    -0.06311267460348 * S_NumStorePurchases
1964854   +          +    -0.10769250099266 * S_NumWebPurchases
1964855   +          +     0.30164996141574 * S_NumWebVisitsMonth
1964856   +          +     0.04874443897811 * S_RFMstat  +      0.0566600966077 *
1964857   +        S_RMntFrq  +    -0.33974896769357 * S_Recency
1964858   +          +    -0.07912190966726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21200891808959 * S_AcceptedCmpTotal + -0.0294266976166 * S_Age + 
-0.16916645815546 * S_Frq + 0.14504026791442 * S_Income + -0.02671573431371 * S_Kidhome + 
0.00786762022906 * S_Mnt + -0.04771740067188 * S_MntFishProducts + -0.04225362276447 * 
S_MntFruits + 0.00800255816668 * S_MntGoldProds + 0.2107523790232 * S_MntMeatProducts + 
-0.0235222276585 * S_MntSweetProducts + -0.19316587677023 * S_MntWines + -0.02053398305898 * 
S_MonthsAsCustomer + 0.28123583383823 * S_NumCatalogPurchases + 0.15209264570536 * 
S_NumDealsPurchases + 0.06911391326046 * S_NumDistPurchases + -0.06311267460348 * 
S_NumStorePurchases + -0.10769250099266 * S_NumWebPurchases + 0.30164996141574 * 
S_NumWebVisitsMonth + 0.04874443897811 * S_RFMstat + 0.0566600966077 * S_RMntFrq + 
-0.33974896769357 * S_Recency + -0.07912190966726 * S_Teenhome ;
1964859   +   H11  = H11  +    -0.00087097404949 * AcceptedCmp10
1964860   +          +     0.00352229851757 * AcceptedCmp20  +    -0.01949770623849 *
1964861   +        AcceptedCmp30  +      0.0152220267038 * AcceptedCmp40
1964862   +          +    -0.06776123706739 * AcceptedCmp50  +      0.0455648678007 *
1964863   +        Complain0  +    -0.02207743549319 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00087097404949 * AcceptedCmp10 + 0.00352229851757 * 
AcceptedCmp20 + -0.01949770623849 * AcceptedCmp30 + 0.0152220267038 * AcceptedCmp40 + 
-0.06776123706739 * AcceptedCmp50 + 0.0455648678007 * Complain0 + -0.02207743549319 * 
HigherEducationBinary0 ;
1964864   +   H11  = H11  +     0.02219619537454 * Education2n_Cycle
1964865   +          +    -0.04162935656009 * EducationBasic  +     0.02075327633983 *
1964866   +        EducationGraduation  +    -0.00120846175125 * EducationMaster
1964867   +          +     0.03223611494434 * Marital_StatusDivorced
1964868   +          +    -0.11925283937202 * Marital_StatusMarried
1964869   +          +     0.09076376580065 * Marital_StatusSingle
1964870   +          +    -0.12474639400352 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02219619537454 * Education2n_Cycle + -0.04162935656009 * 
EducationBasic + 0.02075327633983 * EducationGraduation + -0.00120846175125 * EducationMaster 
+ 0.03223611494434 * Marital_StatusDivorced + -0.11925283937202 * Marital_StatusMarried + 
0.09076376580065 * Marital_StatusSingle + -0.12474639400352 * Marital_StatusTogether ;
1964871   +   H11  =    -0.51521830302904 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.51521830302904 + H11 ;
1964872   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1964873   +END;
MPRINT(EM_DIAGRAM):   END;
1964874   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1964875   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1964876   +END;
MPRINT(EM_DIAGRAM):   END;
1964877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964878   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1964879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1964881   +   P_DepVar1  =     8.82365339154683 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82365339154683 * H11 ;
1964882   +   P_DepVar1  =    -0.59048702965933 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.59048702965933 + P_DepVar1 ;
1964883   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1964884   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1964885   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1964886   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1964887   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1964888   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1964889   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1964890   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1964891   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1964892   +END;
MPRINT(EM_DIAGRAM):   END;
1964893   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1964894   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1964895   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1964896   +END;
MPRINT(EM_DIAGRAM):   END;
1964897   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1964898   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1964899   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1964900   +END;
MPRINT(EM_DIAGRAM):   END;
1964901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964902   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1964903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1964904   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1964905   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1964906   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1964907   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1964908   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1964909   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1964910   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1964911   +END;
MPRINT(EM_DIAGRAM):   END;
1964912   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1964913   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1964914   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1964915   +drop
1964916   +H11
1964917   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1964918   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1964919    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1964920    quit;
1964921    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1964922    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1964923    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1964924    retain ID 2 Node "Neural";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural";
1964925    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1964926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2006 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2006 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964927    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1964928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2006 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2006 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964930    proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
1964931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964934    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1964935    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1964936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964937    proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
1964938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964939    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1964940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964942    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964943    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1964944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964945    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964946    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1964947    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1964947  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1271 rows and 5 columns.

1964948    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964949    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1964950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1271 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1271 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964951    filename _pref
1964951  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1964952    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1964953    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1964954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1964955   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1964956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1964957   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1964958   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1964959   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1964960    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1964961    quit;
1964962    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1964963    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1964964    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1964965    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1964966    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1964967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964968    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1964969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964971    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1964972    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964974    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964975    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1964976    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1964977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964978    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1964979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1964980    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1964981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964983    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1964984    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1964985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1964986    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964987    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1964988    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1964988  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1964989    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1964990    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1964991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1275 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1964992    filename _pref
1964992  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1964993    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1964994    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1964995   +
1964996   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1964997   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1964997  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1964998   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1964999   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1965000   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1965001   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1965002   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1965003    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1965004    quit;
1965005    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1965006    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1965007    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1965008    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1965009    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1965010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965011    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1965012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965014    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1965015    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965017    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1965018    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1965019    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1965020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965021    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1965022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965023    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1965024    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965026    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1965027    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1965028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965029    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965030    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1965031    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1965031  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1965032    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965033    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1965034    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1314 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965035    filename _pref
1965035  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1965036    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1965037    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1965038   +
1965039   +
1965040   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1965041   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1965042   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1965043   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1965044   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1965045   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965046   +
1965047   +
1965048   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1965049   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1965050   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1965051   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1965052   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1965053   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965054   +
1965055   +
1965056   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1965057   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1965058   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1965059   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1965060   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1965061   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965062   +
1965063   +
1965064   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1965065   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1965066   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1965067   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1965068   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1965069   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965070   +
1965071   +
1965072   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1965073   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1965074   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1965075   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1965076   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1965077   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965078   +
1965079   +
1965080   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1965081   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1965082   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1965083   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1965084   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1965085   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965086   +
1965087   +
1965088   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1965089   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1965090   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1965091   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1965092   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1965093   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965094   +
1965095   +
1965096   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1965097   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1965098   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1965099   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1965100   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1965101   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1965102   +if
1965103   +_FILTERNORM1 not in ( '.')
1965104   + and
1965105   +_FILTERNORM2 not in ( '.')
1965106   + and
1965107   +_FILTERNORM3 not in ( '.')
1965108   + and
1965109   +_FILTERNORM4 not in ( '.')
1965110   + and
1965111   +_FILTERNORM5 not in ( '.')
1965112   + and
1965113   +_FILTERNORM6 not in ( '.')
1965114   + and
1965115   +_FILTERNORM7 not in ( ' ')
1965116   + and
1965117   +_FILTERNORM8 not in ( ' ')
1965118   +and
1965119   +( Dt_Customer ne .)
1965120   +and ( Income ne . and (Income<=107000))
1965121   +and ( Kidhome ne .)
1965122   +and ( MntFishProducts ne .)
1965123   +and ( MntFruits ne .)
1965124   +and ( MntGoldProds ne .)
1965125   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1965126   +and ( MntSweetProducts ne .)
1965127   +and ( MntWines ne .)
1965128   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1965129   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1965130   +and ( NumStorePurchases ne .)
1965131   +and ( NumWebPurchases ne .)
1965132   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1965133   +and ( Recency ne .)
1965134   +and ( Teenhome ne .)
1965135   +and ( Year_Birth ne .)
1965136   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1965137   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1965138   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1965139   +end;
MPRINT(EM_DIAGRAM):   end;
1965140   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1965141   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1965142    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1965143    quit;
1965144    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1965145    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1965146    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1965147    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1965148    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1965149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965150    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1965151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965153    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1965154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965156    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1965157    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1965158    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1965159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965160    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1965161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965162    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1965163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965165    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1965166    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1965167    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1965168    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965169    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1965170    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1965170  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1965171    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965172    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1965173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1380 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965174    %macro varDept(fcmpdata=,id=);
1965175    %global nobs&id scoreFlag&id;
1965176    %let scoreFlag&id = 0;
1965177    %if &id=1 or ^&fcmpStart %then %do;
1965178    proc sort data=&fcmpdata out=_temp&id nodupkey;
1965179    by NAME;
1965180    where id=&id and LHS in( %let j=1;
1965181    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1965182    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1965183    "&var" %let j = %eval(&j+1);
1965184    %end;
1965185    );
1965186    run;
1965187    %let dsid = %sysfunc(open(_temp&id));
1965188    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1965189    %let dsid = %sysfunc(close(&dsid));
1965190    %if &&nobs&id %then %do;
1965191    %let scoreFlag&id = 1;
1965192    %let fcmpStart = 1;
1965193    %end;
1965194    %else %let fcmpStart = 0;
1965195    %end;
1965196    %else %do;
1965197    proc sort data=&fcmpdata out=_tempid;
1965198    where id=&id;
1965199    by LHS;
1965200    run;
1965201    %let dsid = %sysfunc(open(_tempid));
1965202    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1965203    %let dsid = %sysfunc(close(&dsid));
1965204    %if ^&&nobs&id %then %do;
1965205    proc datasets lib=work nolist;
1965206    delete _tempid;
1965207    run;
1965208    quit;
1965209    %end;
1965210    %else %do;
1965211    data _tempAll;
1965212    set %let j=%eval(&id-1);
1965213    %do x=1 %to &j;
1965214    %if &&nobs&x %then %do;
1965215    _temp&x %end;
1965216    %end;
1965217    ;
1965218    run;
1965219    proc sql;
1965220    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1965220  ! work._tempid p2 where p.name=p2.lhs;
1965221    quit;
1965222    data _temp&id;
1965223    set _temp&id;
1965224    where LHS ne '' and NAME ne '' and Node ne '';
1965225    run;
1965226    proc datasets lib=work nolist;
1965227    delete _tempAll;
1965228    run;
1965229    %let dsid = %sysfunc(open(_temp&id));
1965230    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1965231    %let dsid = %sysfunc(close(&dsid));
1965232    %if ^&&nobs&id %then %do;
1965233    proc datasets lib=work nolist;
1965234    delete _temp&id;
1965235    run;
1965236    quit;
1965237    %end;
1965238    %else %do;
1965239    %let scoreFlag&id = 1;
1965240    data _temp&id;
1965241    set _temp&id;
1965242    where LHS ne NAME and node ne '';
1965243    run;
1965244    %let dsid = %sysfunc(open(_temp&id));
1965245    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1965246    %let dsid = %sysfunc(close(&dsid));
1965247    %if ^&&nobs&id %then %do;
1965248    proc datasets lib=work nolist;
1965249    delete _temp&id;
1965250    run;
1965251    quit;
1965252    %end;
1965253    %else %do;
1965254    proc sort data=_temp&id nodupkey;
1965255    by LHS NAME;
1965256    run;
1965257    %end;
1965258    %end;
1965259    %end;
1965260    %end;
1965261    %mend varDept;
1965262    %macro optCode(outdata=fcmpdata);
1965263    %global fcmpStart;
1965264    %let fcmpStart = 0;
1965265    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1965266    %let NumNodes=9;
1965267    %do k=1 %to &NumNodes;
1965268    %vardept(fcmpdata=&outdata, id=&k);
1965269    %end;
1965270    %mend optCode;
1965271    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1965272    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1965273    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1965274    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1965275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965276    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1965277    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1965278    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1965279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965280    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1965281    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1965281  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1965282    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1965283    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1965284    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1965285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1965286    filename _pref
1965286  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1965287    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1965288    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1965289   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1965290   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1965291   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1965292   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1965293   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1965294   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1965295   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1965296   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1965297   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1965298   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1965299   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1965300   +LENGTH _WARN_ $4
1965301   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1965302   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1965303   +
1965304   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1965305   +
1965306   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1965307   +
1965308   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1965309   +
1965310   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1965311   +
1965312   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1965313   +
1965314   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1965315   +
1965316   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1965317   +
1965318   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1965319   +
1965320   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1965321   +
1965322   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1965323   +
1965324   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1965325   +
1965326   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1965327   +
1965328   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1965329   +
1965330   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1965331   +
1965332   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1965333   +
1965334   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1965335   +
1965336   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1965337   +
1965338   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1965339   +
1965340   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1965341   +
1965342   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1965343   +
1965344   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1965345   +
1965346   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1965347   +
1965348   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1965349   +
1965350   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1965351   +
1965352   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1965353   +
1965354   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1965355   +
1965356   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1965357   +
1965358   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1965359   +
1965360   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1965361   +
1965362   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1965363   +
1965364   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1965365   +
1965366   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1965367   +
1965368   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1965369   +
1965370   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1965371   +
1965372   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1965373   +
1965374   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1965375   +
1965376   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1965377   +
1965378   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1965379   +
1965380   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1965381   +
1965382   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1965383   +
1965384   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1965385   +
1965386   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1965387   +
1965388   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1965389   +
1965390   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1965391   +
1965392   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1965393   +
1965394   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1965395   +
1965396   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1965397   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1965398   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1965399   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1965400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965402   +end;
MPRINT(EM_DIAGRAM):   end;
1965403   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965404   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965405   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1965406   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965407   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1965408   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1965409   +   end;
MPRINT(EM_DIAGRAM):   end;
1965410   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1965411   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1965412   +   end;
MPRINT(EM_DIAGRAM):   end;
1965413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965414   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1965415   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965416   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965417   +   end;
MPRINT(EM_DIAGRAM):   end;
1965418   +end;
MPRINT(EM_DIAGRAM):   end;
1965419   +
1965420   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1965421   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1965422   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1965423   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1965424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965426   +end;
MPRINT(EM_DIAGRAM):   end;
1965427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965429   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1965430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965431   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1965432   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1965433   +   end;
MPRINT(EM_DIAGRAM):   end;
1965434   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1965435   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1965436   +   end;
MPRINT(EM_DIAGRAM):   end;
1965437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965438   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1965439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965441   +   end;
MPRINT(EM_DIAGRAM):   end;
1965442   +end;
MPRINT(EM_DIAGRAM):   end;
1965443   +
1965444   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1965445   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1965446   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1965447   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1965448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965450   +end;
MPRINT(EM_DIAGRAM):   end;
1965451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965453   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1965454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1965456   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1965457   +   end;
MPRINT(EM_DIAGRAM):   end;
1965458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1965459   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1965460   +   end;
MPRINT(EM_DIAGRAM):   end;
1965461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965462   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1965463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965465   +   end;
MPRINT(EM_DIAGRAM):   end;
1965466   +end;
MPRINT(EM_DIAGRAM):   end;
1965467   +
1965468   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1965469   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1965470   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1965471   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1965472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965474   +end;
MPRINT(EM_DIAGRAM):   end;
1965475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965477   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1965478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1965480   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1965481   +   end;
MPRINT(EM_DIAGRAM):   end;
1965482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1965483   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1965484   +   end;
MPRINT(EM_DIAGRAM):   end;
1965485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965486   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1965487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965489   +   end;
MPRINT(EM_DIAGRAM):   end;
1965490   +end;
MPRINT(EM_DIAGRAM):   end;
1965491   +
1965492   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1965493   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1965494   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1965495   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1965496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965498   +end;
MPRINT(EM_DIAGRAM):   end;
1965499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965501   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1965502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1965504   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1965505   +   end;
MPRINT(EM_DIAGRAM):   end;
1965506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1965507   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1965508   +   end;
MPRINT(EM_DIAGRAM):   end;
1965509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965510   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1965511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965513   +   end;
MPRINT(EM_DIAGRAM):   end;
1965514   +end;
MPRINT(EM_DIAGRAM):   end;
1965515   +
1965516   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1965517   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1965518   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1965519   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1965520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965522   +end;
MPRINT(EM_DIAGRAM):   end;
1965523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965525   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1965526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1965528   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1965529   +   end;
MPRINT(EM_DIAGRAM):   end;
1965530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1965531   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1965532   +   end;
MPRINT(EM_DIAGRAM):   end;
1965533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965534   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1965535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965537   +   end;
MPRINT(EM_DIAGRAM):   end;
1965538   +end;
MPRINT(EM_DIAGRAM):   end;
1965539   +
1965540   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1965541   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1965542   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1965543   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1965544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965546   +end;
MPRINT(EM_DIAGRAM):   end;
1965547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1965549   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1965550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965551   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1965552   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1965553   +   end;
MPRINT(EM_DIAGRAM):   end;
1965554   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1965555   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1965556   +   end;
MPRINT(EM_DIAGRAM):   end;
1965557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965558   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1965559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965561   +   end;
MPRINT(EM_DIAGRAM):   end;
1965562   +end;
MPRINT(EM_DIAGRAM):   end;
1965563   +
1965564   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1965565   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1965566   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1965567   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1965568   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1965569   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1965570   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1965571   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1965572   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1965573   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1965574   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1965575   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1965576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965578   +end;
MPRINT(EM_DIAGRAM):   end;
1965579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965580   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1965581   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1965582   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965583   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1965584   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1965585   +   end;
MPRINT(EM_DIAGRAM):   end;
1965586   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1965587   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1965588   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1965589   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1965590   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1965591   +   end;
MPRINT(EM_DIAGRAM):   end;
1965592   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1965593   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1965594   +   end;
MPRINT(EM_DIAGRAM):   end;
1965595   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1965596   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1965597   +   end;
MPRINT(EM_DIAGRAM):   end;
1965598   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1965599   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1965600   +   end;
MPRINT(EM_DIAGRAM):   end;
1965601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965602   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1965603   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1965604   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1965605   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1965606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965608   +   end;
MPRINT(EM_DIAGRAM):   end;
1965609   +end;
MPRINT(EM_DIAGRAM):   end;
1965610   +
1965611   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1965612   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1965613   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1965614   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1965615   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1965616   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1965617   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1965618   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1965619   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1965620   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1965621   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1965622   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1965623   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1965624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1965625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965626   +end;
MPRINT(EM_DIAGRAM):   end;
1965627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1965628   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1965629   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1965630   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1965631   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1965632   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1965633   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1965634   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1965635   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1965636   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1965637   +         end;
MPRINT(EM_DIAGRAM):   end;
1965638   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1965639   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1965640   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1965641   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1965642   +            end;
MPRINT(EM_DIAGRAM):   end;
1965643   +         end;
MPRINT(EM_DIAGRAM):   end;
1965644   +      end;
MPRINT(EM_DIAGRAM):   end;
1965645   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1965646   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1965647   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1965648   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1965649   +         end;
MPRINT(EM_DIAGRAM):   end;
1965650   +      end;
MPRINT(EM_DIAGRAM):   end;
1965651   +   end;
MPRINT(EM_DIAGRAM):   end;
1965652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1965653   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1965654   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1965655   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1965656   +      end;
MPRINT(EM_DIAGRAM):   end;
1965657   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1965658   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1965659   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1965660   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1965661   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1965662   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1965663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1965664   +         end;
MPRINT(EM_DIAGRAM):   end;
1965665   +      end;
MPRINT(EM_DIAGRAM):   end;
1965666   +   end;
MPRINT(EM_DIAGRAM):   end;
1965667   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1965668   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1965669   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1965670   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1965671   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1965672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1965673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965674   +   end;
MPRINT(EM_DIAGRAM):   end;
1965675   +end;
MPRINT(EM_DIAGRAM):   end;
1965676   +
1965677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965678   +*** Checking missing input Interval
1965679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1965680   +
1965681   +IF NMISS(
1965682   +   AcceptedCmpTotal ,
1965683   +   Age ,
1965684   +   Frq ,
1965685   +   Income ,
1965686   +   Kidhome ,
1965687   +   Mnt ,
1965688   +   MntFishProducts ,
1965689   +   MntFruits ,
1965690   +   MntGoldProds ,
1965691   +   MntMeatProducts ,
1965692   +   MntSweetProducts ,
1965693   +   MntWines ,
1965694   +   MonthsAsCustomer ,
1965695   +   NumCatalogPurchases ,
1965696   +   NumDealsPurchases ,
1965697   +   NumDistPurchases ,
1965698   +   NumStorePurchases ,
1965699   +   NumWebPurchases ,
1965700   +   NumWebVisitsMonth ,
1965701   +   RFMstat ,
1965702   +   RMntFrq ,
1965703   +   Recency ,
1965704   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1965705   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1965706   +
1965707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1965708   +END;
MPRINT(EM_DIAGRAM):   END;
1965709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965710   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1965711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1965713   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1965714   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1965715   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1965716   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1965717   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1965718   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1965719   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1965720   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1965721   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1965722   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1965723   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1965724   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1965725   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1965726   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1965727   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1965728   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1965729   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1965730   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1965731   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1965732   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1965733   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1965734   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1965735   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1965736   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1965737   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1965738   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1965739   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1965740   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1965741   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1965742   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1965743   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1965744   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1965745   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1965746   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1965747   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1965748   +END;
MPRINT(EM_DIAGRAM):   END;
1965749   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1965750   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1965751   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1965752   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1965753   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1965754   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1965755   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1965756   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1965757   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1965758   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1965759   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1965760   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1965761   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1965762   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1965763   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1965764   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1965765   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1965766   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1965767   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1965768   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1965769   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1965770   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1965771   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1965772   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1965773   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1965774   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1965775   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1965776   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1965777   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1965778   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1965779   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1965780   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1965781   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1965782   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1965783   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1965784   +   ELSE S_NumCatalogPurchases
1965785   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1965786   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1965787   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1965788   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1965789   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1965790   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1965791   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1965792   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1965793   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1965794   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1965795   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1965796   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1965797   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1965798   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1965799   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1965800   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1965801   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1965802   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1965803   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1965804   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1965805   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1965806   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1965807   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1965808   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1965809   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1965810   +END;
MPRINT(EM_DIAGRAM):   END;
1965811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965812   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1965813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965815   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1965816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965818   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1965819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1965821   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
1965822   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
1965823   +        S_Income  +    -0.27053363011695 * S_Kidhome
1965824   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
1965825   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
1965826   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
1965827   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
1965828   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
1965829   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
1965830   +          +    -1.35624485206227 * S_NumDealsPurchases
1965831   +          +    -0.54646115734684 * S_NumDistPurchases
1965832   +          +     1.29794225108321 * S_NumStorePurchases
1965833   +          +      1.8453064081809 * S_NumWebPurchases
1965834   +          +    -0.92747144824026 * S_NumWebVisitsMonth
1965835   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
1965836   +        S_RMntFrq  +     0.73207333681971 * S_Recency
1965837   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
1965838   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
1965839   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
1965840   +        S_Income  +    -0.79821220724157 * S_Kidhome
1965841   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
1965842   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
1965843   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
1965844   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
1965845   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
1965846   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
1965847   +          +     0.72513216556859 * S_NumDealsPurchases
1965848   +          +    -0.15566774650584 * S_NumDistPurchases
1965849   +          +     -0.8847675798982 * S_NumStorePurchases
1965850   +          +    -0.79405200318252 * S_NumWebPurchases
1965851   +          +     1.74003779802254 * S_NumWebVisitsMonth
1965852   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
1965853   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
1965854   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
1965855   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
1965856   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
1965857   +        S_Income  +    -0.58596240450544 * S_Kidhome
1965858   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
1965859   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
1965860   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
1965861   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
1965862   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
1965863   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
1965864   +          +     0.17466385502192 * S_NumDealsPurchases
1965865   +          +    -0.06219545947203 * S_NumDistPurchases
1965866   +          +     0.16637546838853 * S_NumStorePurchases
1965867   +          +    -0.06908729397635 * S_NumWebPurchases
1965868   +          +     1.44269772444244 * S_NumWebVisitsMonth
1965869   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
1965870   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
1965871   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
1965872   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
1965873   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
1965874   +        S_Income  +    -0.42454238091412 * S_Kidhome
1965875   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
1965876   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
1965877   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
1965878   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
1965879   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
1965880   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
1965881   +          +     0.77329078721398 * S_NumDealsPurchases
1965882   +          +     0.31693324305765 * S_NumDistPurchases
1965883   +          +    -1.08524196373091 * S_NumStorePurchases
1965884   +          +    -0.96945384922979 * S_NumWebPurchases
1965885   +          +     1.24659288571587 * S_NumWebVisitsMonth
1965886   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
1965887   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
1965888   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
1965889   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
1965890   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
1965891   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
1965892   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
1965893   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
1965894   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
1965895   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
1965896   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
1965897   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
1965898   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
1965899   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
1965900   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
1965901   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
1965902   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
1965903   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
1965904   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
1965905   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
1965906   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
1965907   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
1965908   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
1965909   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
1965910   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
1965911   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
1965912   +          +     0.36788499721115 * Marital_StatusDivorced
1965913   +          +    -0.16988636986433 * Marital_StatusMarried
1965914   +          +    -0.24560973256761 * Marital_StatusSingle
1965915   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
1965916   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
1965917   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
1965918   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
1965919   +          +     0.24497797058028 * Marital_StatusDivorced
1965920   +          +    -1.44410245434424 * Marital_StatusMarried
1965921   +          +     1.47441310087392 * Marital_StatusSingle
1965922   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
1965923   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
1965924   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
1965925   +        EducationGraduation  +     0.04653963359475 * EducationMaster
1965926   +          +     0.15823225296452 * Marital_StatusDivorced
1965927   +          +    -0.39129434667884 * Marital_StatusMarried
1965928   +          +     0.84414069966504 * Marital_StatusSingle
1965929   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
1965930   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
1965931   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
1965932   +        EducationGraduation  +     0.40030852414737 * EducationMaster
1965933   +          +     1.22039169814542 * Marital_StatusDivorced
1965934   +          +     0.91592976063128 * Marital_StatusMarried
1965935   +          +    -1.51267332883308 * Marital_StatusSingle
1965936   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
1965937   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
1965938   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
1965939   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
1965940   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
1965941   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1965942   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1965943   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1965944   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1965945   +END;
MPRINT(EM_DIAGRAM):   END;
1965946   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1965947   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1965948   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1965949   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1965950   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1965951   +END;
MPRINT(EM_DIAGRAM):   END;
1965952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965953   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1965954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965955   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1965956   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
1965957   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
1965958   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
1965959   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1965960   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1965961   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1965962   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1965963   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1965964   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1965965   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1965966   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1965967   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1965968   +END;
MPRINT(EM_DIAGRAM):   END;
1965969   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1965970   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1965971   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1965972   +END;
MPRINT(EM_DIAGRAM):   END;
1965973   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1965974   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1965975   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1965976   +END;
MPRINT(EM_DIAGRAM):   END;
1965977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965978   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1965979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1965980   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1965981   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1965982   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1965983   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1965984   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1965985   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1965986   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1965987   +END;
MPRINT(EM_DIAGRAM):   END;
1965988   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1965989   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1965990   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1965991   +drop
1965992   +H11
1965993   +H12
1965994   +H13
1965995   +H14
1965996   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1965997   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1965998    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1965999    quit;
1966000    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966001    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966002    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966003    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1966004    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966006    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966007    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966009    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1966010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966012    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966013    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966014    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966015    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966016    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1966017    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1966018    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966019    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1966021    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966022    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966023    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966024    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966025    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966026    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966026  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

1966027    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966028    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966030    filename _pref
1966030  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1966031    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966032    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1966033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1966034   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1966035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1966036   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1966037   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1966038   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966039    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966040    quit;
1966041    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966042    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966043    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966044    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1966045    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966047    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966048    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966050    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1966051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966053    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966054    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966055    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966056    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966057    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1966058    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1966059    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966060    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966062    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966063    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966065    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966066    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966067    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966067  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1966068    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966069    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966070    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966071    filename _pref
1966071  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1966072    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966073    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1966074   +
1966075   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1966076   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1966076  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1966077   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1966078   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1966079   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1966080   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1966081   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966082    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966083    quit;
1966084    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966085    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966086    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966087    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1966088    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966090    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966093    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1966094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966096    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966097    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966098    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966099    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966100    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1966101    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966102    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966103    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966105    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966106    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966108    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966109    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966110    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966110  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1966111    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966112    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966113    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966114    filename _pref
1966114  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1966115    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966116    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1966117   +
1966118   +
1966119   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1966120   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1966121   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1966122   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1966123   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1966124   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966125   +
1966126   +
1966127   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1966128   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1966129   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1966130   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1966131   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1966132   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966133   +
1966134   +
1966135   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1966136   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1966137   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1966138   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1966139   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1966140   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966141   +
1966142   +
1966143   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1966144   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1966145   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1966146   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1966147   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1966148   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966149   +
1966150   +
1966151   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1966152   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1966153   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1966154   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1966155   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1966156   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966157   +
1966158   +
1966159   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1966160   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1966161   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1966162   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1966163   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1966164   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966165   +
1966166   +
1966167   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1966168   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1966169   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1966170   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1966171   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1966172   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966173   +
1966174   +
1966175   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1966176   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1966177   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1966178   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1966179   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1966180   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966181   +if
1966182   +_FILTERNORM1 not in ( '.')
1966183   + and
1966184   +_FILTERNORM2 not in ( '.')
1966185   + and
1966186   +_FILTERNORM3 not in ( '.')
1966187   + and
1966188   +_FILTERNORM4 not in ( '.')
1966189   + and
1966190   +_FILTERNORM5 not in ( '.')
1966191   + and
1966192   +_FILTERNORM6 not in ( '.')
1966193   + and
1966194   +_FILTERNORM7 not in ( ' ')
1966195   + and
1966196   +_FILTERNORM8 not in ( ' ')
1966197   +and
1966198   +( Dt_Customer ne .)
1966199   +and ( Income ne . and (Income<=107000))
1966200   +and ( Kidhome ne .)
1966201   +and ( MntFishProducts ne .)
1966202   +and ( MntFruits ne .)
1966203   +and ( MntGoldProds ne .)
1966204   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1966205   +and ( MntSweetProducts ne .)
1966206   +and ( MntWines ne .)
1966207   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1966208   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1966209   +and ( NumStorePurchases ne .)
1966210   +and ( NumWebPurchases ne .)
1966211   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1966212   +and ( Recency ne .)
1966213   +and ( Teenhome ne .)
1966214   +and ( Year_Birth ne .)
1966215   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1966216   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1966217   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1966218   +end;
MPRINT(EM_DIAGRAM):   end;
1966219   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1966220   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966221    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
The SAS System

      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966222    quit;
1966223    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966224    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966225    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966226    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1966227    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966228    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966229    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966230    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966232    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1966233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966235    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966236    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966237    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966238    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966239    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1966240    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1966241    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966242    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966244    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966245    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966247    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966248    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966249    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966249  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1966250    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966251    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966252    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966253    %macro varDept(fcmpdata=,id=);
1966254    %global nobs&id scoreFlag&id;
1966255    %let scoreFlag&id = 0;
1966256    %if &id=1 or ^&fcmpStart %then %do;
1966257    proc sort data=&fcmpdata out=_temp&id nodupkey;
1966258    by NAME;
1966259    where id=&id and LHS in( %let j=1;
1966260    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1966261    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1966262    "&var" %let j = %eval(&j+1);
1966263    %end;
1966264    );
1966265    run;
1966266    %let dsid = %sysfunc(open(_temp&id));
1966267    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966268    %let dsid = %sysfunc(close(&dsid));
1966269    %if &&nobs&id %then %do;
1966270    %let scoreFlag&id = 1;
1966271    %let fcmpStart = 1;
1966272    %end;
1966273    %else %let fcmpStart = 0;
1966274    %end;
1966275    %else %do;
1966276    proc sort data=&fcmpdata out=_tempid;
1966277    where id=&id;
1966278    by LHS;
1966279    run;
1966280    %let dsid = %sysfunc(open(_tempid));
1966281    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966282    %let dsid = %sysfunc(close(&dsid));
1966283    %if ^&&nobs&id %then %do;
1966284    proc datasets lib=work nolist;
1966285    delete _tempid;
1966286    run;
1966287    quit;
1966288    %end;
1966289    %else %do;
1966290    data _tempAll;
1966291    set %let j=%eval(&id-1);
1966292    %do x=1 %to &j;
1966293    %if &&nobs&x %then %do;
1966294    _temp&x %end;
1966295    %end;
1966296    ;
1966297    run;
1966298    proc sql;
1966299    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1966299  ! work._tempid p2 where p.name=p2.lhs;
1966300    quit;
1966301    data _temp&id;
1966302    set _temp&id;
1966303    where LHS ne '' and NAME ne '' and Node ne '';
1966304    run;
1966305    proc datasets lib=work nolist;
1966306    delete _tempAll;
1966307    run;
1966308    %let dsid = %sysfunc(open(_temp&id));
1966309    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966310    %let dsid = %sysfunc(close(&dsid));
1966311    %if ^&&nobs&id %then %do;
1966312    proc datasets lib=work nolist;
1966313    delete _temp&id;
1966314    run;
1966315    quit;
1966316    %end;
1966317    %else %do;
1966318    %let scoreFlag&id = 1;
1966319    data _temp&id;
1966320    set _temp&id;
1966321    where LHS ne NAME and node ne '';
1966322    run;
1966323    %let dsid = %sysfunc(open(_temp&id));
1966324    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966325    %let dsid = %sysfunc(close(&dsid));
1966326    %if ^&&nobs&id %then %do;
1966327    proc datasets lib=work nolist;
1966328    delete _temp&id;
1966329    run;
1966330    quit;
1966331    %end;
1966332    %else %do;
1966333    proc sort data=_temp&id nodupkey;
1966334    by LHS NAME;
1966335    run;
1966336    %end;
1966337    %end;
1966338    %end;
1966339    %end;
1966340    %mend varDept;
1966341    %macro optCode(outdata=fcmpdata);
1966342    %global fcmpStart;
1966343    %let fcmpStart = 0;
1966344    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1966345    %let NumNodes=9;
1966346    %do k=1 %to &NumNodes;
1966347    %vardept(fcmpdata=&outdata, id=&k);
1966348    %end;
1966349    %mend optCode;
1966350    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1966351    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1966352    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1966353    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1966354    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966355    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1966356    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1966357    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1966358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966359    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966360    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1966360  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1966361    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966362    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1966363    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1966364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966365    filename _pref
1966365  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
1966366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas.
1966368   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1966369   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1966370   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1966371   +
1966372   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1966373   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1966374   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1966375   +
1966376   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1966377   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1966378   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1966379   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1966380   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1966381   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1966382   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1966383   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1966384   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1966385   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1966386   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1966387   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1966388   +
1966389   +
1966390   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1966391   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1966392   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1966393   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1966394   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1966395   +
1966396   +
1966397   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
1966398   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1966399   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1966400   +  IF  NOT MISSING(Recency ) AND
1966401   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1966402   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1966403   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1966404   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1966405   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1966406   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1966407   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1966408   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1966409   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1966410   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1966411   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1966412   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966413   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966414   +      END;
MPRINT(EM_DIAGRAM):   END;
1966415   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966416   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1966417   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1966418   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1966419   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1966420   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1966421   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1966422   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1966423   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1966424   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1966425   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1966426   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1966427   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966428   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966429   +        END;
MPRINT(EM_DIAGRAM):   END;
1966430   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966431   +        IF  NOT MISSING(NumStorePurchases ) AND
1966432   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1966433   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1966434   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1966435   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1966436   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1966437   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1966438   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1966439   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1966440   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1966441   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1966442   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1966443   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966444   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966445   +            END;
MPRINT(EM_DIAGRAM):   END;
1966446   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966447   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1966448   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1966449   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1966450   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1966451   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1966452   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1966453   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1966454   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1966455   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966456   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966457   +            END;
MPRINT(EM_DIAGRAM):   END;
1966458   +          END;
MPRINT(EM_DIAGRAM):   END;
1966459   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966460   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1966461   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1966462   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1966463   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1966464   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1966465   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1966466   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1966467   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1966468   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966469   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966470   +          END;
MPRINT(EM_DIAGRAM):   END;
1966471   +        END;
MPRINT(EM_DIAGRAM):   END;
1966472   +      END;
MPRINT(EM_DIAGRAM):   END;
1966473   +    END;
MPRINT(EM_DIAGRAM):   END;
1966474   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966475   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1966476   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1966477   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1966478   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1966479   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1966480   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1966481   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1966482   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1966483   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1966484   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1966485   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966486   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966487   +      END;
MPRINT(EM_DIAGRAM):   END;
1966488   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966489   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1966490   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1966491   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1966492   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1966493   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1966494   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1966495   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1966496   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1966497   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966498   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966499   +      END;
MPRINT(EM_DIAGRAM):   END;
1966500   +    END;
MPRINT(EM_DIAGRAM):   END;
1966501   +  END;
MPRINT(EM_DIAGRAM):   END;
1966502   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966503   +  IF  NOT MISSING(Recency ) AND
1966504   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1966505   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1966506   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1966507   +      IF  NOT MISSING(NumStorePurchases ) AND
1966508   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1966509   +        IF  NOT MISSING(RFMstat ) AND
1966510   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1966511   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1966512   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1966513   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1966514   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1966515   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1966516   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1966517   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1966518   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1966519   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966520   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966521   +          END;
MPRINT(EM_DIAGRAM):   END;
1966522   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966523   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1966524   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1966525   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1966526   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1966527   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1966528   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1966529   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1966530   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1966531   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966532   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966533   +          END;
MPRINT(EM_DIAGRAM):   END;
1966534   +        END;
MPRINT(EM_DIAGRAM):   END;
1966535   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966536   +        IF  NOT MISSING(MntFishProducts ) AND
1966537   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1966538   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1966539   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1966540   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1966541   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1966542   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1966543   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1966544   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1966545   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1966546   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966547   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966548   +          END;
MPRINT(EM_DIAGRAM):   END;
1966549   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966550   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1966551   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1966552   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1966553   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1966554   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1966555   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1966556   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1966557   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1966558   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966559   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966560   +          END;
MPRINT(EM_DIAGRAM):   END;
1966561   +        END;
MPRINT(EM_DIAGRAM):   END;
1966562   +      END;
MPRINT(EM_DIAGRAM):   END;
1966563   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966564   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1966565   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1966566   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1966567   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1966568   +          IF  NOT MISSING(Kidhome ) AND
1966569   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1966570   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1966571   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1966572   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1966573   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1966574   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1966575   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1966576   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1966577   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1966578   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966579   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966580   +            END;
MPRINT(EM_DIAGRAM):   END;
1966581   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966582   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1966583   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1966584   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1966585   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1966586   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1966587   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1966588   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1966589   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1966590   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1966591   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1966592   +            END;
MPRINT(EM_DIAGRAM):   END;
1966593   +          END;
MPRINT(EM_DIAGRAM):   END;
1966594   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966595   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1966596   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1966597   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1966598   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1966599   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1966600   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1966601   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1966602   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1966603   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966604   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966605   +          END;
MPRINT(EM_DIAGRAM):   END;
1966606   +        END;
MPRINT(EM_DIAGRAM):   END;
1966607   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966608   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1966609   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1966610   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1966611   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1966612   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1966613   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1966614   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1966615   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1966616   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966617   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966618   +        END;
MPRINT(EM_DIAGRAM):   END;
1966619   +      END;
MPRINT(EM_DIAGRAM):   END;
1966620   +    END;
MPRINT(EM_DIAGRAM):   END;
1966621   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1966622   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1966623   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1966624   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1966625   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1966626   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1966627   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1966628   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1966629   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1966630   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1966631   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1966632   +    END;
MPRINT(EM_DIAGRAM):   END;
1966633   +  END;
MPRINT(EM_DIAGRAM):   END;
1966634   +
1966635   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1966636   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1966637   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1966638   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966639    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966640    quit;
1966641    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966642    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966643    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966644    retain ID 2 Node "Tree";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree";
1966645    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966647    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966648    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966649    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966650    proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
1966651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966653    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966654    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966655    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966657    proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
1966658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1966659    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966660    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966662    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966663    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966664    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966665    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966666    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966667    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966667  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 93 rows and 5 columns.

1966668    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966669    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 93 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 93 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966671    filename _pref
1966671  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1966672    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966673    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1966674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1966675   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1966676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1966677   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1966678   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1966679   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966680    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966681    quit;
1966682    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966683    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966684    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966685    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1966686    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966688    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966690    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966691    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1966692    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966694    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966695    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966696    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966698    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1966699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966700    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966701    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966703    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966704    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966706    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966707    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966708    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966708  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1966709    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966710    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966711    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 97 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966712    filename _pref
1966712  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1966713    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966714    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1966715   +
1966716   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1966717   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1966717  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1966718   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1966719   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1966720   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1966721   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1966722   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966723    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966724    quit;
1966725    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966726    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966727    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966728    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1966729    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966731    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966732    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966734    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1966735    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966737    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966738    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966739    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966741    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1966742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966743    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966746    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966747    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966749    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966750    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966751    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966751  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1966752    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966753    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 136 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966755    filename _pref
1966755  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1966756    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966757    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1966758   +
1966759   +
1966760   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1966761   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1966762   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1966763   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1966764   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1966765   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966766   +
1966767   +
1966768   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1966769   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1966770   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1966771   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1966772   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1966773   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966774   +
1966775   +
1966776   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1966777   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1966778   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1966779   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1966780   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1966781   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966782   +
1966783   +
1966784   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1966785   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1966786   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1966787   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1966788   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1966789   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966790   +
1966791   +
1966792   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1966793   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1966794   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1966795   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1966796   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1966797   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966798   +
1966799   +
1966800   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1966801   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1966802   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1966803   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1966804   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1966805   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966806   +
1966807   +
1966808   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1966809   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1966810   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1966811   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1966812   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1966813   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966814   +
1966815   +
1966816   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1966817   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1966818   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1966819   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1966820   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1966821   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1966822   +if
1966823   +_FILTERNORM1 not in ( '.')
1966824   + and
1966825   +_FILTERNORM2 not in ( '.')
1966826   + and
1966827   +_FILTERNORM3 not in ( '.')
1966828   + and
1966829   +_FILTERNORM4 not in ( '.')
1966830   + and
1966831   +_FILTERNORM5 not in ( '.')
1966832   + and
1966833   +_FILTERNORM6 not in ( '.')
1966834   + and
1966835   +_FILTERNORM7 not in ( ' ')
1966836   + and
1966837   +_FILTERNORM8 not in ( ' ')
1966838   +and
1966839   +( Dt_Customer ne .)
1966840   +and ( Income ne . and (Income<=107000))
1966841   +and ( Kidhome ne .)
1966842   +and ( MntFishProducts ne .)
1966843   +and ( MntFruits ne .)
1966844   +and ( MntGoldProds ne .)
1966845   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1966846   +and ( MntSweetProducts ne .)
1966847   +and ( MntWines ne .)
1966848   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1966849   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1966850   +and ( NumStorePurchases ne .)
1966851   +and ( NumWebPurchases ne .)
1966852   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1966853   +and ( Recency ne .)
1966854   +and ( Teenhome ne .)
1966855   +and ( Year_Birth ne .)
1966856   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1966857   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1966858   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1966859   +end;
MPRINT(EM_DIAGRAM):   end;
1966860   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1966861   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1966862    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1966863    quit;
1966864    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1966865    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1966866    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1966867    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1966868    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1966869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966870    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1966871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966872    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966873    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1966874    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966876    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966877    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1966878    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1966879    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966880    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1966881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1966882    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1966883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966885    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1966886    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1966887    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1966888    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1966889    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1966890    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1966890  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1966891    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966892    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1966893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1966894    %macro varDept(fcmpdata=,id=);
1966895    %global nobs&id scoreFlag&id;
1966896    %let scoreFlag&id = 0;
1966897    %if &id=1 or ^&fcmpStart %then %do;
1966898    proc sort data=&fcmpdata out=_temp&id nodupkey;
1966899    by NAME;
1966900    where id=&id and LHS in( %let j=1;
1966901    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1966902    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1966903    "&var" %let j = %eval(&j+1);
1966904    %end;
1966905    );
1966906    run;
1966907    %let dsid = %sysfunc(open(_temp&id));
1966908    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966909    %let dsid = %sysfunc(close(&dsid));
1966910    %if &&nobs&id %then %do;
1966911    %let scoreFlag&id = 1;
1966912    %let fcmpStart = 1;
1966913    %end;
1966914    %else %let fcmpStart = 0;
1966915    %end;
1966916    %else %do;
1966917    proc sort data=&fcmpdata out=_tempid;
1966918    where id=&id;
1966919    by LHS;
1966920    run;
1966921    %let dsid = %sysfunc(open(_tempid));
1966922    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966923    %let dsid = %sysfunc(close(&dsid));
1966924    %if ^&&nobs&id %then %do;
1966925    proc datasets lib=work nolist;
1966926    delete _tempid;
1966927    run;
1966928    quit;
1966929    %end;
1966930    %else %do;
1966931    data _tempAll;
1966932    set %let j=%eval(&id-1);
1966933    %do x=1 %to &j;
1966934    %if &&nobs&x %then %do;
1966935    _temp&x %end;
1966936    %end;
1966937    ;
1966938    run;
1966939    proc sql;
1966940    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1966940  ! work._tempid p2 where p.name=p2.lhs;
1966941    quit;
1966942    data _temp&id;
1966943    set _temp&id;
1966944    where LHS ne '' and NAME ne '' and Node ne '';
1966945    run;
1966946    proc datasets lib=work nolist;
1966947    delete _tempAll;
1966948    run;
1966949    %let dsid = %sysfunc(open(_temp&id));
1966950    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966951    %let dsid = %sysfunc(close(&dsid));
1966952    %if ^&&nobs&id %then %do;
1966953    proc datasets lib=work nolist;
1966954    delete _temp&id;
1966955    run;
1966956    quit;
1966957    %end;
1966958    %else %do;
1966959    %let scoreFlag&id = 1;
1966960    data _temp&id;
1966961    set _temp&id;
1966962    where LHS ne NAME and node ne '';
1966963    run;
1966964    %let dsid = %sysfunc(open(_temp&id));
1966965    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1966966    %let dsid = %sysfunc(close(&dsid));
1966967    %if ^&&nobs&id %then %do;
1966968    proc datasets lib=work nolist;
1966969    delete _temp&id;
1966970    run;
1966971    quit;
1966972    %end;
1966973    %else %do;
1966974    proc sort data=_temp&id nodupkey;
1966975    by LHS NAME;
1966976    run;
1966977    %end;
1966978    %end;
1966979    %end;
1966980    %end;
1966981    %mend varDept;
1966982    %macro optCode(outdata=fcmpdata);
1966983    %global fcmpStart;
1966984    %let fcmpStart = 0;
1966985    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1966986    %let NumNodes=9;
1966987    %do k=1 %to &NumNodes;
1966988    %vardept(fcmpdata=&outdata, id=&k);
1966989    %end;
1966990    %mend optCode;
1966991    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 18 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 9 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 17 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1966992    filename _pref
1966992  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1966993    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1966994    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1966995   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1966996   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1966997   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1966998   +
1966999   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1967000   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1967001   +
1967002   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1967003   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1967004   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1967005   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1967006   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1967007   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1967008   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1967009   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1967010   +
1967011   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1967012   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1967013   +
1967014   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1967015   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1967016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967018   +end;
MPRINT(EM_DIAGRAM):   end;
1967019   +
1967020   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1967021   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1967022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967024   +end;
MPRINT(EM_DIAGRAM):   end;
1967025   +
1967026   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1967027   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1967028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967030   +end;
MPRINT(EM_DIAGRAM):   end;
1967031   +
1967032   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1967033   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1967034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967036   +end;
MPRINT(EM_DIAGRAM):   end;
1967037   +
1967038   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1967039   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1967040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967042   +end;
MPRINT(EM_DIAGRAM):   end;
1967043   +
1967044   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1967045   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1967046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967048   +end;
MPRINT(EM_DIAGRAM):   end;
1967049   +
1967050   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1967051   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1967052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967054   +end;
MPRINT(EM_DIAGRAM):   end;
1967055   +
1967056   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1967057   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1967058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967060   +end;
MPRINT(EM_DIAGRAM):   end;
1967061   +
1967062   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1967063   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1967064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967066   +end;
MPRINT(EM_DIAGRAM):   end;
1967067   +
1967068   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1967069   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1967070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967072   +end;
MPRINT(EM_DIAGRAM):   end;
1967073   +
1967074   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1967075   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1967076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967078   +end;
MPRINT(EM_DIAGRAM):   end;
1967079   +
1967080   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1967081   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1967082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967084   +end;
MPRINT(EM_DIAGRAM):   end;
1967085   +
1967086   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1967087   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1967088   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967090   +end;
MPRINT(EM_DIAGRAM):   end;
1967091   +
1967092   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1967093   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1967094   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1967095   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1967096   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1967097   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1967098   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1967099   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1967100   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1967101   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1967102   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1967103   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1967104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967106   +end;
MPRINT(EM_DIAGRAM):   end;
1967107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1967108   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1967109   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1967110   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1967111   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1967112   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1967113   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1967114   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1967115   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1967116   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967117   +         end;
MPRINT(EM_DIAGRAM):   end;
1967118   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1967119   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1967120   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1967121   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967122   +            end;
MPRINT(EM_DIAGRAM):   end;
1967123   +         end;
MPRINT(EM_DIAGRAM):   end;
1967124   +      end;
MPRINT(EM_DIAGRAM):   end;
1967125   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1967126   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1967127   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1967128   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967129   +         end;
MPRINT(EM_DIAGRAM):   end;
1967130   +      end;
MPRINT(EM_DIAGRAM):   end;
1967131   +   end;
MPRINT(EM_DIAGRAM):   end;
1967132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1967133   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1967134   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1967135   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967136   +      end;
MPRINT(EM_DIAGRAM):   end;
1967137   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1967138   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1967139   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1967140   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1967141   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1967142   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1967143   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967144   +         end;
MPRINT(EM_DIAGRAM):   end;
1967145   +      end;
MPRINT(EM_DIAGRAM):   end;
1967146   +   end;
MPRINT(EM_DIAGRAM):   end;
1967147   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1967148   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1967149   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1967150   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1967151   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1967152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1967153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967154   +   end;
MPRINT(EM_DIAGRAM):   end;
1967155   +end;
MPRINT(EM_DIAGRAM):   end;
1967156   +
1967157   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1967158   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1967159   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1967160   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1967161   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1967162   +end;
MPRINT(EM_DIAGRAM):   end;
1967163   +
1967164   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1967165   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1967166   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1967167   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1967168   +
1967169   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1967170   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1967171   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1967172   +
1967173   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1967174   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1967175   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1967176   +
1967177   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1967178   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1967179   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1967180   +
1967181   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1967182   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1967183   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1967184   +
1967185   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1967186   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1967187   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1967188   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1967189   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1967190   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1967191   +
1967192   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1967193   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1967194   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1967195   +
1967196   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1967197   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1967198   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1967199   +
1967200   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1967201   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1967202   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1967203   +
1967204   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1967205   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1967206   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1967207   +
1967208   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1967209   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1967210   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1967211   +
1967212   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1967213   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1967214   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1967215   +
1967216   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1967217   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1967218   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1967219   +
1967220   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1967221   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1967222   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1967223   +
1967224   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1967225   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1967226   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1967227   +
1967228   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1967229   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1967230   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1967231   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1967232   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1967233   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1967234   +end;
MPRINT(EM_DIAGRAM):   end;
1967235   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1967236   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1967237   +
1967238   +REGDR1:
1967239   +
1967240   +
1967241   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1967242   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1967243   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1967244   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1967245   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1967246   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1967247   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1967248   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1967249   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1967250   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1967251   +end;
MPRINT(EM_DIAGRAM):   end;
1967252   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1967253   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1967254   +
1967255   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1967256   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1967257   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967258    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967259    quit;
1967260    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967261    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967262    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967263    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1967264    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967266    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967269    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1967270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967272    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967273    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967274    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967276    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1967277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967278    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967281    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967282    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967283    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967284    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967285    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967286    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967286  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

1967287    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967288    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967290    filename _pref
1967290  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1967291    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967292    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1967293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1967294   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1967295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1967296   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1967297   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1967298   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967299    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967300    quit;
1967301    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967302    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967303    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967304    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1967305    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967307    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967308    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967310    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1967311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967314    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967315    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967316    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967317    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1967318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967319    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967322    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967323    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967325    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967326    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967327    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967327  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1967328    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967329    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967330    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967331    filename _pref
1967331  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1967332    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967333    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1967334   +
1967335   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1967336   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1967336  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1967337   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1967338   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1967339   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1967340   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1967341   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967342    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967343    quit;
1967344    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967345    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967346    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967347    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1967348    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967350    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967353    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1967354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967357    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967358    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967359    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967360    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1967361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967362    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967363    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967365    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967366    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967367    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967368    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967369    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967370    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967370  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1967371    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967372    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967374    filename _pref
1967374  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1967375    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967376    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1967377   +
1967378   +
1967379   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1967380   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1967381   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1967382   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1967383   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1967384   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967385   +
1967386   +
1967387   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1967388   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1967389   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1967390   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1967391   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1967392   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967393   +
1967394   +
1967395   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1967396   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1967397   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1967398   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1967399   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1967400   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967401   +
1967402   +
1967403   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1967404   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1967405   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1967406   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1967407   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1967408   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967409   +
1967410   +
1967411   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1967412   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1967413   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1967414   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1967415   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1967416   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967417   +
1967418   +
1967419   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1967420   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1967421   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1967422   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1967423   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1967424   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967425   +
1967426   +
1967427   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1967428   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1967429   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1967430   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1967431   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1967432   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967433   +
1967434   +
1967435   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1967436   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1967437   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1967438   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1967439   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1967440   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967441   +if
1967442   +_FILTERNORM1 not in ( '.')
1967443   + and
1967444   +_FILTERNORM2 not in ( '.')
1967445   + and
1967446   +_FILTERNORM3 not in ( '.')
1967447   + and
1967448   +_FILTERNORM4 not in ( '.')
1967449   + and
1967450   +_FILTERNORM5 not in ( '.')
1967451   + and
1967452   +_FILTERNORM6 not in ( '.')
1967453   + and
1967454   +_FILTERNORM7 not in ( ' ')
1967455   + and
1967456   +_FILTERNORM8 not in ( ' ')
1967457   +and
1967458   +( Dt_Customer ne .)
1967459   +and ( Income ne . and (Income<=107000))
1967460   +and ( Kidhome ne .)
1967461   +and ( MntFishProducts ne .)
1967462   +and ( MntFruits ne .)
1967463   +and ( MntGoldProds ne .)
1967464   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1967465   +and ( MntSweetProducts ne .)
1967466   +and ( MntWines ne .)
1967467   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1967468   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1967469   +and ( NumStorePurchases ne .)
1967470   +and ( NumWebPurchases ne .)
1967471   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1967472   +and ( Recency ne .)
1967473   +and ( Teenhome ne .)
1967474   +and ( Year_Birth ne .)
1967475   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1967476   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1967477   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1967478   +end;
MPRINT(EM_DIAGRAM):   end;
1967479   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1967480   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967481    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967482    quit;
1967483    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967484    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967485    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967486    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1967487    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967489    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967490    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967492    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1967493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967495    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967496    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967497    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967499    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1967500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1967501    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967503    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967504    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967505    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967507    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1967508    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967509    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967509  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1967510    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967511    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967513    %macro varDept(fcmpdata=,id=);
1967514    %global nobs&id scoreFlag&id;
1967515    %let scoreFlag&id = 0;
1967516    %if &id=1 or ^&fcmpStart %then %do;
1967517    proc sort data=&fcmpdata out=_temp&id nodupkey;
1967518    by NAME;
1967519    where id=&id and LHS in( %let j=1;
1967520    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1967521    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1967522    "&var" %let j = %eval(&j+1);
1967523    %end;
1967524    );
1967525    run;
1967526    %let dsid = %sysfunc(open(_temp&id));
1967527    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1967528    %let dsid = %sysfunc(close(&dsid));
1967529    %if &&nobs&id %then %do;
1967530    %let scoreFlag&id = 1;
1967531    %let fcmpStart = 1;
1967532    %end;
1967533    %else %let fcmpStart = 0;
1967534    %end;
1967535    %else %do;
1967536    proc sort data=&fcmpdata out=_tempid;
1967537    where id=&id;
1967538    by LHS;
1967539    run;
1967540    %let dsid = %sysfunc(open(_tempid));
1967541    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1967542    %let dsid = %sysfunc(close(&dsid));
1967543    %if ^&&nobs&id %then %do;
1967544    proc datasets lib=work nolist;
1967545    delete _tempid;
1967546    run;
1967547    quit;
1967548    %end;
1967549    %else %do;
1967550    data _tempAll;
1967551    set %let j=%eval(&id-1);
1967552    %do x=1 %to &j;
1967553    %if &&nobs&x %then %do;
1967554    _temp&x %end;
1967555    %end;
1967556    ;
1967557    run;
1967558    proc sql;
1967559    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1967559  ! work._tempid p2 where p.name=p2.lhs;
1967560    quit;
1967561    data _temp&id;
1967562    set _temp&id;
1967563    where LHS ne '' and NAME ne '' and Node ne '';
1967564    run;
1967565    proc datasets lib=work nolist;
1967566    delete _tempAll;
1967567    run;
1967568    %let dsid = %sysfunc(open(_temp&id));
1967569    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1967570    %let dsid = %sysfunc(close(&dsid));
1967571    %if ^&&nobs&id %then %do;
1967572    proc datasets lib=work nolist;
1967573    delete _temp&id;
1967574    run;
1967575    quit;
1967576    %end;
1967577    %else %do;
1967578    %let scoreFlag&id = 1;
1967579    data _temp&id;
1967580    set _temp&id;
1967581    where LHS ne NAME and node ne '';
1967582    run;
1967583    %let dsid = %sysfunc(open(_temp&id));
1967584    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1967585    %let dsid = %sysfunc(close(&dsid));
1967586    %if ^&&nobs&id %then %do;
1967587    proc datasets lib=work nolist;
1967588    delete _temp&id;
1967589    run;
1967590    quit;
1967591    %end;
1967592    %else %do;
1967593    proc sort data=_temp&id nodupkey;
1967594    by LHS NAME;
1967595    run;
1967596    %end;
1967597    %end;
1967598    %end;
1967599    %end;
1967600    %mend varDept;
1967601    %macro optCode(outdata=fcmpdata);
1967602    %global fcmpStart;
1967603    %let fcmpStart = 0;
1967604    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1967605    %let NumNodes=9;
1967606    %do k=1 %to &NumNodes;
1967607    %vardept(fcmpdata=&outdata, id=&k);
1967608    %end;
1967609    %mend optCode;
1967610    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1967611    filename _pref
1967611  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1967612    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967613    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1967614   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1967615   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1967616   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1967617   +
1967618   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1967619   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1967620   +
1967621   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1967622   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1967623   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1967624   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1967625   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1967626   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1967627   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1967628   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1967629   +
1967630   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1967631   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1967632   +
1967633   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1967634   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1967635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967637   +end;
MPRINT(EM_DIAGRAM):   end;
1967638   +
1967639   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1967640   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1967641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967643   +end;
MPRINT(EM_DIAGRAM):   end;
1967644   +
1967645   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1967646   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1967647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967649   +end;
MPRINT(EM_DIAGRAM):   end;
1967650   +
1967651   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1967652   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1967653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967655   +end;
MPRINT(EM_DIAGRAM):   end;
1967656   +
1967657   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1967658   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1967659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967661   +end;
MPRINT(EM_DIAGRAM):   end;
1967662   +
1967663   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1967664   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1967665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967667   +end;
MPRINT(EM_DIAGRAM):   end;
1967668   +
1967669   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1967670   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1967671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967673   +end;
MPRINT(EM_DIAGRAM):   end;
1967674   +
1967675   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1967676   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1967677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967679   +end;
MPRINT(EM_DIAGRAM):   end;
1967680   +
1967681   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1967682   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1967683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967685   +end;
MPRINT(EM_DIAGRAM):   end;
1967686   +
1967687   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1967688   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1967689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967691   +end;
MPRINT(EM_DIAGRAM):   end;
1967692   +
1967693   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1967694   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1967695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967697   +end;
MPRINT(EM_DIAGRAM):   end;
1967698   +
1967699   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1967700   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1967701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967703   +end;
MPRINT(EM_DIAGRAM):   end;
1967704   +
1967705   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1967706   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1967707   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1967708   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1967709   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1967710   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1967711   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1967712   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1967713   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1967714   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1967715   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1967716   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1967717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1967718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967719   +end;
MPRINT(EM_DIAGRAM):   end;
1967720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1967721   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1967722   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1967723   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1967724   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1967725   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1967726   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1967727   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1967728   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1967729   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967730   +         end;
MPRINT(EM_DIAGRAM):   end;
1967731   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1967732   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1967733   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1967734   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967735   +            end;
MPRINT(EM_DIAGRAM):   end;
1967736   +         end;
MPRINT(EM_DIAGRAM):   end;
1967737   +      end;
MPRINT(EM_DIAGRAM):   end;
1967738   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1967739   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1967740   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1967741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967742   +         end;
MPRINT(EM_DIAGRAM):   end;
1967743   +      end;
MPRINT(EM_DIAGRAM):   end;
1967744   +   end;
MPRINT(EM_DIAGRAM):   end;
1967745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1967746   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1967747   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1967748   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967749   +      end;
MPRINT(EM_DIAGRAM):   end;
1967750   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1967751   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1967752   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1967753   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1967754   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1967755   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1967756   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1967757   +         end;
MPRINT(EM_DIAGRAM):   end;
1967758   +      end;
MPRINT(EM_DIAGRAM):   end;
1967759   +   end;
MPRINT(EM_DIAGRAM):   end;
1967760   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1967761   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1967762   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1967763   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1967764   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1967765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1967766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1967767   +   end;
MPRINT(EM_DIAGRAM):   end;
1967768   +end;
MPRINT(EM_DIAGRAM):   end;
1967769   +
1967770   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1967771   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1967772   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1967773   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1967774   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1967775   +end;
MPRINT(EM_DIAGRAM):   end;
1967776   +
1967777   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1967778   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1967779   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1967780   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1967781   +
1967782   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1967783   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1967784   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1967785   +
1967786   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1967787   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1967788   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1967789   +
1967790   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1967791   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1967792   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1967793   +
1967794   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1967795   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1967796   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1967797   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1967798   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1967799   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1967800   +
1967801   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1967802   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1967803   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1967804   +
1967805   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1967806   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1967807   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1967808   +
1967809   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1967810   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1967811   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1967812   +
1967813   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1967814   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1967815   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1967816   +
1967817   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1967818   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1967819   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1967820   +
1967821   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1967822   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1967823   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1967824   +
1967825   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1967826   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1967827   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1967828   +
1967829   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1967830   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1967831   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1967832   +
1967833   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1967834   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1967835   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1967836   +
1967837   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1967838   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1967839   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1967840   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1967841   +
1967842   +REG5DR1:
1967843   +
1967844   +
1967845   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1967846   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1967847   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1967848   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1967849   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1967850   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1967851   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1967852   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1967853   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1967854   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1967855   +end;
MPRINT(EM_DIAGRAM):   end;
1967856   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1967857   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1967858   +
1967859   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1967860   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1967861   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967862    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967863    quit;
1967864    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967865    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967866    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967867    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1967868    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967870    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967872    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967873    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1967874    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967876    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967877    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967878    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967879    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967880    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1967881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967882    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967885    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967886    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967887    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967888    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967889    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967890    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967890  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

1967891    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1967892    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967894    filename _pref
1967894  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1967895    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967896    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1967897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1967898   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1967899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1967900   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1967901   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1967902   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967903    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967904    quit;
1967905    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967906    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967907    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967908    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1967909    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967911    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967912    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967913    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967914    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1967915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967917    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967918    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967919    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967921    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1967922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1967923    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967926    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967927    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967929    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967930    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967931    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967931  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1967932    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967933    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967935    filename _pref
1967935  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1967936    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967937    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1967938   +
1967939   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1967940   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1967940  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1967941   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1967942   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1967943   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1967944   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1967945   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1967946    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1967947    quit;
1967948    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1967949    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1967950    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1967951    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1967952    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1967953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967954    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1967955    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967956    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967957    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1967958    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967960    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967961    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1967962    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1967963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967964    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1967965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967966    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1967967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967969    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1967970    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1967971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1967972    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1967973    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1967974    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1967974  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1967975    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967976    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1967977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1967978    filename _pref
1967978  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1967979    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1967980    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1967981   +
1967982   +
1967983   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1967984   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1967985   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1967986   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1967987   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1967988   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967989   +
1967990   +
1967991   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1967992   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1967993   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1967994   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1967995   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1967996   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1967997   +
1967998   +
1967999   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1968000   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1968001   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1968002   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1968003   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1968004   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1968005   +
1968006   +
1968007   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1968008   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1968009   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1968010   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1968011   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1968012   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1968013   +
1968014   +
1968015   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1968016   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1968017   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1968018   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1968019   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1968020   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1968021   +
1968022   +
1968023   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1968024   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1968025   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1968026   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1968027   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1968028   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1968029   +
1968030   +
1968031   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1968032   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1968033   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1968034   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1968035   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1968036   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1968037   +
1968038   +
1968039   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1968040   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1968041   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1968042   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1968043   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1968044   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1968045   +if
1968046   +_FILTERNORM1 not in ( '.')
1968047   + and
1968048   +_FILTERNORM2 not in ( '.')
1968049   + and
1968050   +_FILTERNORM3 not in ( '.')
1968051   + and
1968052   +_FILTERNORM4 not in ( '.')
1968053   + and
1968054   +_FILTERNORM5 not in ( '.')
1968055   + and
1968056   +_FILTERNORM6 not in ( '.')
1968057   + and
1968058   +_FILTERNORM7 not in ( ' ')
1968059   + and
1968060   +_FILTERNORM8 not in ( ' ')
1968061   +and
1968062   +( Dt_Customer ne .)
1968063   +and ( Income ne . and (Income<=107000))
1968064   +and ( Kidhome ne .)
1968065   +and ( MntFishProducts ne .)
1968066   +and ( MntFruits ne .)
1968067   +and ( MntGoldProds ne .)
1968068   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1968069   +and ( MntSweetProducts ne .)
1968070   +and ( MntWines ne .)
1968071   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1968072   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1968073   +and ( NumStorePurchases ne .)
1968074   +and ( NumWebPurchases ne .)
1968075   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1968076   +and ( Recency ne .)
1968077   +and ( Teenhome ne .)
1968078   +and ( Year_Birth ne .)
1968079   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1968080   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1968081   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1968082   +end;
MPRINT(EM_DIAGRAM):   end;
1968083   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1968084   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1968085    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1968086    quit;
1968087    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1968088    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1968089    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1968090    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1968091    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1968092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1968093    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1968094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1968095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968096    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1968097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1968098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968099    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1968100    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1968101    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1968102    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968103    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1968104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1968105    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1968106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1968107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968108    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1968109    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1968110    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1968111    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968112    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1968113    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1968113  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1968114    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1968115    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1968116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968117    %macro varDept(fcmpdata=,id=);
1968118    %global nobs&id scoreFlag&id;
1968119    %let scoreFlag&id = 0;
1968120    %if &id=1 or ^&fcmpStart %then %do;
1968121    proc sort data=&fcmpdata out=_temp&id nodupkey;
1968122    by NAME;
1968123    where id=&id and LHS in( %let j=1;
1968124    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1968125    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1968126    "&var" %let j = %eval(&j+1);
1968127    %end;
1968128    );
1968129    run;
1968130    %let dsid = %sysfunc(open(_temp&id));
1968131    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1968132    %let dsid = %sysfunc(close(&dsid));
1968133    %if &&nobs&id %then %do;
1968134    %let scoreFlag&id = 1;
1968135    %let fcmpStart = 1;
1968136    %end;
1968137    %else %let fcmpStart = 0;
1968138    %end;
1968139    %else %do;
1968140    proc sort data=&fcmpdata out=_tempid;
1968141    where id=&id;
1968142    by LHS;
1968143    run;
1968144    %let dsid = %sysfunc(open(_tempid));
1968145    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1968146    %let dsid = %sysfunc(close(&dsid));
1968147    %if ^&&nobs&id %then %do;
1968148    proc datasets lib=work nolist;
1968149    delete _tempid;
1968150    run;
1968151    quit;
1968152    %end;
1968153    %else %do;
1968154    data _tempAll;
1968155    set %let j=%eval(&id-1);
1968156    %do x=1 %to &j;
1968157    %if &&nobs&x %then %do;
1968158    _temp&x %end;
1968159    %end;
1968160    ;
1968161    run;
1968162    proc sql;
1968163    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1968163  ! work._tempid p2 where p.name=p2.lhs;
1968164    quit;
1968165    data _temp&id;
1968166    set _temp&id;
1968167    where LHS ne '' and NAME ne '' and Node ne '';
1968168    run;
1968169    proc datasets lib=work nolist;
1968170    delete _tempAll;
1968171    run;
1968172    %let dsid = %sysfunc(open(_temp&id));
1968173    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1968174    %let dsid = %sysfunc(close(&dsid));
1968175    %if ^&&nobs&id %then %do;
1968176    proc datasets lib=work nolist;
1968177    delete _temp&id;
1968178    run;
1968179    quit;
1968180    %end;
1968181    %else %do;
1968182    %let scoreFlag&id = 1;
1968183    data _temp&id;
1968184    set _temp&id;
1968185    where LHS ne NAME and node ne '';
1968186    run;
1968187    %let dsid = %sysfunc(open(_temp&id));
1968188    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1968189    %let dsid = %sysfunc(close(&dsid));
1968190    %if ^&&nobs&id %then %do;
1968191    proc datasets lib=work nolist;
1968192    delete _temp&id;
1968193    run;
1968194    quit;
1968195    %end;
1968196    %else %do;
1968197    proc sort data=_temp&id nodupkey;
1968198    by LHS NAME;
1968199    run;
1968200    %end;
1968201    %end;
1968202    %end;
1968203    %end;
1968204    %mend varDept;
1968205    %macro optCode(outdata=fcmpdata);
1968206    %global fcmpStart;
1968207    %let fcmpStart = 0;
1968208    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1968209    %let NumNodes=9;
1968210    %do k=1 %to &NumNodes;
1968211    %vardept(fcmpdata=&outdata, id=&k);
1968212    %end;
1968213    %mend optCode;
1968214    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.26 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1968215    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1968216    * Ensmbl29: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing metadata for TRAIN data;
1968217    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL29_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl29_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl29_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl29_TRAIN out=WORK.M1WRDL00 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1WRDL00;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1WRDL00(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1WRDL00;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1WRDL00;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2Q_J4GU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13950P6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Q_J4GU;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl29";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl29";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1968537    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1968538    set EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl29_EMINFO;
1968539    where DATA='Ensmbl29' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl29' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1968540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_EMINFO.
      WHERE (DATA='Ensmbl29') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968541    data EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl29_EMINFO;
1968542    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1968543    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1968544    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL29_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1968548    run;
1968549    data EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMINFO;
1968550    set EMWS8.Ensmbl29_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl29_EMINFO WORK.MODELTEMP_INFO;
1968551    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL29_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL29_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1968552    proc sort data = EMWS8.Ensmbl29_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl29_EMINFO NOTHREADS;
1968553    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1968554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL29_EMINFO.
NOTE: The data set EMWS8.ENSMBL29_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968555    proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1968556    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1968557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968558    proc sort data = EMWS8.Ensmbl29_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl29_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1968559    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1968560    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL29_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968561    data EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMINFO;
1968562    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1968563    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1968564    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL29_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1968565    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1968566    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1968567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1968568    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL29_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL29_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
