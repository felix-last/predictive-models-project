MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1X6VRCN 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1X6VRCN new;
MPRINT(EM_DIAGRAM):   run;
1471657    filename emflow
1471657  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471658    *------------------------------------------------------------*;
1471659    * Ensmbl29: Scoring REG5_TRAIN data;
1471660    *------------------------------------------------------------*;
1471661    data EMWS8.Ensmbl29_TRAIN
1471662    / view=EMWS8.Ensmbl29_TRAIN
1471663    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_TRAIN / view=EMWS8.Ensmbl29_TRAIN ;
1471664    set EMWS8.Reg5_TRAIN
1471665    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1471666    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas.
1471667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471668   +* Ensmbl29: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Combine model for DepVar;
1471669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471670   +* Ensmbl29: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 1 of 10;
1471671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471673   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1471674   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1471675   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1471676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471678   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1471679   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1471680   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1471681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471683   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1471684   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1471685   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1471686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471688   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1471689   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1471690   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1471691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471692   +
1471693   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1471694   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1471694  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1471695   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1471696   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1471697   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1471698   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1471699   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1471700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471701   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1471702   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1471703   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1471704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471706   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1471707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471708   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1471709   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1471710   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1471711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471712   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1471713   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1471714   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1471715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471717   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1471718   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1471719   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1471720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471722   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1471723   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1471724   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1471725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1471726   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1471727   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1471728   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1471729   +
1471730   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1471731   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1471732   +
1471733   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1471734   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1471735   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1471736   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1471737   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1471738   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1471739   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1471740   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1471741   +
1471742   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1471743   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1471744   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1471745   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1471746   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1471747   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1471748   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1471749   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1471750   +end;
MPRINT(EM_DIAGRAM):   end;
1471751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1471752   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1471753   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1471754   +   end;
MPRINT(EM_DIAGRAM):   end;
1471755   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1471756   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1471757   +   end;
MPRINT(EM_DIAGRAM):   end;
1471758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1471759   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1471760   +   end;
MPRINT(EM_DIAGRAM):   end;
1471761   +end;
MPRINT(EM_DIAGRAM):   end;
1471762   +
1471763   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1471764   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1471765   +
1471766   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1471767   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1471768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471770   +end;
MPRINT(EM_DIAGRAM):   end;
1471771   +
1471772   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1471773   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1471774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471776   +end;
MPRINT(EM_DIAGRAM):   end;
1471777   +
1471778   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1471779   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1471780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471782   +end;
MPRINT(EM_DIAGRAM):   end;
1471783   +
1471784   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1471785   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1471786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471788   +end;
MPRINT(EM_DIAGRAM):   end;
1471789   +
1471790   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1471791   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1471792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471794   +end;
MPRINT(EM_DIAGRAM):   end;
1471795   +
1471796   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1471797   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1471798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471800   +end;
MPRINT(EM_DIAGRAM):   end;
1471801   +
1471802   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1471803   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1471804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471806   +end;
MPRINT(EM_DIAGRAM):   end;
1471807   +
1471808   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1471809   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1471810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471812   +end;
MPRINT(EM_DIAGRAM):   end;
1471813   +
1471814   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1471815   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1471816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471818   +end;
MPRINT(EM_DIAGRAM):   end;
1471819   +
1471820   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1471821   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1471822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471824   +end;
MPRINT(EM_DIAGRAM):   end;
1471825   +
1471826   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1471827   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1471828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471830   +end;
MPRINT(EM_DIAGRAM):   end;
1471831   +
1471832   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1471833   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1471834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471836   +end;
MPRINT(EM_DIAGRAM):   end;
1471837   +
1471838   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1471839   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1471840   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1471841   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1471842   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1471843   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1471844   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1471845   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1471846   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1471847   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1471848   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1471849   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1471850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1471851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471852   +end;
MPRINT(EM_DIAGRAM):   end;
1471853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1471854   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1471855   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1471856   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1471857   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1471858   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1471859   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1471860   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1471861   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1471862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1471863   +         end;
MPRINT(EM_DIAGRAM):   end;
1471864   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1471865   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1471866   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1471867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1471868   +            end;
MPRINT(EM_DIAGRAM):   end;
1471869   +         end;
MPRINT(EM_DIAGRAM):   end;
1471870   +      end;
MPRINT(EM_DIAGRAM):   end;
1471871   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1471872   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1471873   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1471874   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1471875   +         end;
MPRINT(EM_DIAGRAM):   end;
1471876   +      end;
MPRINT(EM_DIAGRAM):   end;
1471877   +   end;
MPRINT(EM_DIAGRAM):   end;
1471878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1471879   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1471880   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1471881   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1471882   +      end;
MPRINT(EM_DIAGRAM):   end;
1471883   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1471884   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1471885   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1471886   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1471887   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1471888   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1471889   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1471890   +         end;
MPRINT(EM_DIAGRAM):   end;
1471891   +      end;
MPRINT(EM_DIAGRAM):   end;
1471892   +   end;
MPRINT(EM_DIAGRAM):   end;
1471893   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1471894   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1471895   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1471896   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1471897   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1471898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1471899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1471900   +   end;
MPRINT(EM_DIAGRAM):   end;
1471901   +end;
MPRINT(EM_DIAGRAM):   end;
1471902   +
1471903   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1471904   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1471905   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1471906   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1471907   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1471908   +end;
MPRINT(EM_DIAGRAM):   end;
1471909   +
1471910   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1471911   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1471912   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1471913   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1471914   +
1471915   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1471916   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1471917   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1471918   +
1471919   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1471920   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1471921   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1471922   +
1471923   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1471924   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1471925   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1471926   +
1471927   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1471928   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1471929   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1471930   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1471931   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1471932   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1471933   +
1471934   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1471935   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1471936   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1471937   +
1471938   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1471939   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1471940   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1471941   +
1471942   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1471943   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1471944   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1471945   +
1471946   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1471947   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1471948   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1471949   +
1471950   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1471951   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1471952   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1471953   +
1471954   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1471955   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1471956   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1471957   +
1471958   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1471959   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1471960   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1471961   +
1471962   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1471963   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1471964   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1471965   +
1471966   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1471967   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1471968   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1471969   +
1471970   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1471971   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1471972   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1471973   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1471974   +
1471975   +REG5DR1:
1471976   +
1471977   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1471978   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1471979   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1471980   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1471981   +end;
MPRINT(EM_DIAGRAM):   end;
1471982   +else do;
MPRINT(EM_DIAGRAM):   else do;
1471983   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1471984   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1471985   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1471986   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1471987   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1471988   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1471989   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1471990   +   end;
MPRINT(EM_DIAGRAM):   end;
1471991   +end;
MPRINT(EM_DIAGRAM):   end;
1471992   +
1471993   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1471994   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1471995   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1471996   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1471997   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1471998   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1471999   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1472000   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1472001   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1472002   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1472003   +end;
MPRINT(EM_DIAGRAM):   end;
1472004   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1472005   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1472006   +
1472007   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1472008   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1472009   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1472010   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1472011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472012   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1472013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472014   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1472015   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1472016   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1472017   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1472018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472019   +* Renaming Into variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg5;
1472020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472021   +length Reg5_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg5_I_DepVar $32;
1472022   +drop Reg5_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg5_I_DepVar;
1472023   +Reg5_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg5_I_DepVar = I_DepVar;
1472024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472025   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1472026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472027   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1472028   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1472029   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1472030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472031   +* Ensmbl29: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 2 of 10;
1472032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472034   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1472035   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1472036   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1472037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472038   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1472039   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1472040   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1472041   +
1472042   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1472043   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1472044   +
1472045   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1472046   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1472047   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1472048   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1472049   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1472050   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1472051   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1472052   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1472053   +
1472054   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1472055   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1472056   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1472057   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1472058   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1472059   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472060   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1472061   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1472062   +end;
MPRINT(EM_DIAGRAM):   end;
1472063   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472064   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1472065   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1472066   +   end;
MPRINT(EM_DIAGRAM):   end;
1472067   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1472068   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1472069   +   end;
MPRINT(EM_DIAGRAM):   end;
1472070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472071   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1472072   +   end;
MPRINT(EM_DIAGRAM):   end;
1472073   +end;
MPRINT(EM_DIAGRAM):   end;
1472074   +
1472075   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1472076   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1472077   +
1472078   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1472079   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1472080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472082   +end;
MPRINT(EM_DIAGRAM):   end;
1472083   +
1472084   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1472085   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1472086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472088   +end;
MPRINT(EM_DIAGRAM):   end;
1472089   +
1472090   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1472091   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1472092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472094   +end;
MPRINT(EM_DIAGRAM):   end;
1472095   +
1472096   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1472097   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1472098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472100   +end;
MPRINT(EM_DIAGRAM):   end;
1472101   +
1472102   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1472103   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1472104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472106   +end;
MPRINT(EM_DIAGRAM):   end;
1472107   +
1472108   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1472109   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1472110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472112   +end;
MPRINT(EM_DIAGRAM):   end;
1472113   +
1472114   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1472115   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1472116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472118   +end;
MPRINT(EM_DIAGRAM):   end;
1472119   +
1472120   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1472121   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1472122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472124   +end;
MPRINT(EM_DIAGRAM):   end;
1472125   +
1472126   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1472127   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1472128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472130   +end;
MPRINT(EM_DIAGRAM):   end;
1472131   +
1472132   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1472133   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1472134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472136   +end;
MPRINT(EM_DIAGRAM):   end;
1472137   +
1472138   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1472139   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1472140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472142   +end;
MPRINT(EM_DIAGRAM):   end;
1472143   +
1472144   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1472145   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1472146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472148   +end;
MPRINT(EM_DIAGRAM):   end;
1472149   +
1472150   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1472151   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1472152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472154   +end;
MPRINT(EM_DIAGRAM):   end;
1472155   +
1472156   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1472157   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1472158   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1472159   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1472160   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1472161   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1472162   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1472163   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1472164   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1472165   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1472166   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1472167   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1472168   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472170   +end;
MPRINT(EM_DIAGRAM):   end;
1472171   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472172   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1472173   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1472174   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472175   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1472176   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1472177   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1472178   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1472179   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1472180   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1472181   +         end;
MPRINT(EM_DIAGRAM):   end;
1472182   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1472183   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1472184   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1472185   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1472186   +            end;
MPRINT(EM_DIAGRAM):   end;
1472187   +         end;
MPRINT(EM_DIAGRAM):   end;
1472188   +      end;
MPRINT(EM_DIAGRAM):   end;
1472189   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1472190   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1472191   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1472192   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1472193   +         end;
MPRINT(EM_DIAGRAM):   end;
1472194   +      end;
MPRINT(EM_DIAGRAM):   end;
1472195   +   end;
MPRINT(EM_DIAGRAM):   end;
1472196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472197   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1472198   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1472199   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1472200   +      end;
MPRINT(EM_DIAGRAM):   end;
1472201   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1472202   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1472203   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1472204   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1472205   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1472206   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1472207   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1472208   +         end;
MPRINT(EM_DIAGRAM):   end;
1472209   +      end;
MPRINT(EM_DIAGRAM):   end;
1472210   +   end;
MPRINT(EM_DIAGRAM):   end;
1472211   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1472212   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1472213   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1472214   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1472215   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1472216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472218   +   end;
MPRINT(EM_DIAGRAM):   end;
1472219   +end;
MPRINT(EM_DIAGRAM):   end;
1472220   +
1472221   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1472222   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1472223   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1472224   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1472225   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1472226   +end;
MPRINT(EM_DIAGRAM):   end;
1472227   +
1472228   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1472229   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1472230   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1472231   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1472232   +
1472233   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1472234   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1472235   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1472236   +
1472237   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1472238   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1472239   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1472240   +
1472241   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1472242   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1472243   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1472244   +
1472245   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1472246   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1472247   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1472248   +
1472249   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1472250   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1472251   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1472252   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1472253   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1472254   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1472255   +
1472256   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1472257   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1472258   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1472259   +
1472260   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1472261   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1472262   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1472263   +
1472264   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1472265   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1472266   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1472267   +
1472268   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1472269   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1472270   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1472271   +
1472272   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1472273   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1472274   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1472275   +
1472276   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1472277   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1472278   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1472279   +
1472280   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1472281   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1472282   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1472283   +
1472284   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1472285   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1472286   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1472287   +
1472288   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1472289   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1472290   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1472291   +
1472292   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1472293   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1472294   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1472295   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1472296   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1472297   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1472298   +end;
MPRINT(EM_DIAGRAM):   end;
1472299   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1472300   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1472301   +
1472302   +REGDR1:
1472303   +
1472304   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1472305   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1472306   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1472307   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1472308   +end;
MPRINT(EM_DIAGRAM):   end;
1472309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472310   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1472311   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1472312   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1472313   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1472314   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1472315   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1472316   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1472317   +   end;
MPRINT(EM_DIAGRAM):   end;
1472318   +end;
MPRINT(EM_DIAGRAM):   end;
1472319   +
1472320   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1472321   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1472322   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1472323   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1472324   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1472325   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1472326   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1472327   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1472328   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1472329   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1472330   +end;
MPRINT(EM_DIAGRAM):   end;
1472331   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1472332   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1472333   +
1472334   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1472335   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1472336   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1472337   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1472338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472339   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1472340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472341   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1472342   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1472343   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1472344   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1472345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472346   +* Renaming Into variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg;
1472347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472348   +length Reg_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg_I_DepVar $32;
1472349   +drop Reg_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg_I_DepVar;
1472350   +Reg_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg_I_DepVar = I_DepVar;
1472351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472352   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1472353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472354   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1472355   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1472356   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1472357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472358   +* Ensmbl29: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 3 of 10;
1472359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472361   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1472362   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1472363   +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
1472364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472365   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1472366   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1472367   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1472368   +
1472369   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1472370   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1472371   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1472372   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1472373   +
1472374   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1472375   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1472376   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1472377   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1472378   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1472379   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1472380   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1472381   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1472382   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1472383   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1472384   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1472385   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1472386   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1472387   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1472388   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1472389   +
1472390   +
1472391   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1472392   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1472393   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1472394   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1472395   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1472396   +
1472397   +
1472398   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1472399   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1472400   +
1472401   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1472402   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1472403   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1472404   +  IF  NOT MISSING(Recency ) AND
1472405   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1472406   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1472407   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1472408   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1472409   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1472410   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1472411   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1472412   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1472413   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1472414   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1472415   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1472416   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472417   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472418   +      END;
MPRINT(EM_DIAGRAM):   END;
1472419   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472420   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1472421   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1472422   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1472423   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1472424   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1472425   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1472426   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1472427   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1472428   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1472429   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1472430   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1472431   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472432   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472433   +        END;
MPRINT(EM_DIAGRAM):   END;
1472434   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472435   +        IF  NOT MISSING(NumStorePurchases ) AND
1472436   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1472437   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1472438   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1472439   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1472440   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1472441   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1472442   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1472443   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1472444   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1472445   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1472446   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1472447   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472448   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472449   +            END;
MPRINT(EM_DIAGRAM):   END;
1472450   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472451   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1472452   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1472453   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1472454   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1472455   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1472456   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1472457   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1472458   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1472459   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472460   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472461   +            END;
MPRINT(EM_DIAGRAM):   END;
1472462   +          END;
MPRINT(EM_DIAGRAM):   END;
1472463   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472464   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1472465   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1472466   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1472467   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1472468   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1472469   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1472470   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1472471   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1472472   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472473   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472474   +          END;
MPRINT(EM_DIAGRAM):   END;
1472475   +        END;
MPRINT(EM_DIAGRAM):   END;
1472476   +      END;
MPRINT(EM_DIAGRAM):   END;
1472477   +    END;
MPRINT(EM_DIAGRAM):   END;
1472478   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472479   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1472480   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1472481   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1472482   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1472483   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1472484   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1472485   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1472486   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1472487   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1472488   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1472489   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472490   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472491   +      END;
MPRINT(EM_DIAGRAM):   END;
1472492   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472493   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1472494   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1472495   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1472496   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1472497   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1472498   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1472499   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1472500   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1472501   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472502   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472503   +      END;
MPRINT(EM_DIAGRAM):   END;
1472504   +    END;
MPRINT(EM_DIAGRAM):   END;
1472505   +  END;
MPRINT(EM_DIAGRAM):   END;
1472506   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472507   +  IF  NOT MISSING(Recency ) AND
1472508   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1472509   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1472510   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1472511   +      IF  NOT MISSING(NumStorePurchases ) AND
1472512   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1472513   +        IF  NOT MISSING(RFMstat ) AND
1472514   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1472515   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1472516   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1472517   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1472518   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1472519   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1472520   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1472521   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1472522   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1472523   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472524   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472525   +          END;
MPRINT(EM_DIAGRAM):   END;
1472526   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472527   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1472528   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1472529   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1472530   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1472531   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1472532   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1472533   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1472534   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1472535   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472536   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472537   +          END;
MPRINT(EM_DIAGRAM):   END;
1472538   +        END;
MPRINT(EM_DIAGRAM):   END;
1472539   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472540   +        IF  NOT MISSING(MntFishProducts ) AND
1472541   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1472542   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1472543   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1472544   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1472545   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1472546   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1472547   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1472548   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1472549   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1472550   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472551   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472552   +          END;
MPRINT(EM_DIAGRAM):   END;
1472553   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472554   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1472555   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1472556   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1472557   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1472558   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1472559   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1472560   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1472561   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1472562   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472563   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472564   +          END;
MPRINT(EM_DIAGRAM):   END;
1472565   +        END;
MPRINT(EM_DIAGRAM):   END;
1472566   +      END;
MPRINT(EM_DIAGRAM):   END;
1472567   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472568   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1472569   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1472570   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1472571   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1472572   +          IF  NOT MISSING(Kidhome ) AND
1472573   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1472574   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1472575   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1472576   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1472577   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1472578   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1472579   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1472580   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1472581   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1472582   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472583   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472584   +            END;
MPRINT(EM_DIAGRAM):   END;
1472585   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472586   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1472587   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1472588   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1472589   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1472590   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1472591   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1472592   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1472593   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1472594   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1472595   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1472596   +            END;
MPRINT(EM_DIAGRAM):   END;
1472597   +          END;
MPRINT(EM_DIAGRAM):   END;
1472598   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472599   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1472600   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1472601   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1472602   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1472603   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1472604   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1472605   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1472606   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1472607   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472608   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472609   +          END;
MPRINT(EM_DIAGRAM):   END;
1472610   +        END;
MPRINT(EM_DIAGRAM):   END;
1472611   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472612   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1472613   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1472614   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1472615   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1472616   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1472617   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1472618   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1472619   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1472620   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472621   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472622   +        END;
MPRINT(EM_DIAGRAM):   END;
1472623   +      END;
MPRINT(EM_DIAGRAM):   END;
1472624   +    END;
MPRINT(EM_DIAGRAM):   END;
1472625   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472626   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1472627   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1472628   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1472629   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1472630   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1472631   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1472632   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1472633   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1472634   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1472635   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1472636   +    END;
MPRINT(EM_DIAGRAM):   END;
1472637   +  END;
MPRINT(EM_DIAGRAM):   END;
1472638   +
1472639   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1472640   +IF  F_DepVar  NE '0'
1472641   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1472642   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1472643   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1472644   + END;
MPRINT(EM_DIAGRAM):   END;
1472645   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1472646   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1472647   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1472648   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1472649   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1472650   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1472651   +       END;
MPRINT(EM_DIAGRAM):   END;
1472652   + END;
MPRINT(EM_DIAGRAM):   END;
1472653   +
1472654   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1472655   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1472656   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1472657   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1472658   +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
1472659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472660   +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
1472661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472662   +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
1472663   +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
1472664   +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
1472665   +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
1472666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472667   +* Renaming Into variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Tree;
1472668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472669   +length Tree_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Tree_I_DepVar $32;
1472670   +drop Tree_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Tree_I_DepVar;
1472671   +Tree_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Tree_I_DepVar = I_DepVar;
1472672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472673   +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
1472674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472675   +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
1472676   +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
1472677   +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
1472678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472679   +* Ensmbl29: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 4 of 10;
1472680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472682   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1472683   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1472684   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1472685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1472686   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1472687   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1472688   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1472689   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1472690   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1472691   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1472692   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1472693   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1472694   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1472695   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1472696   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1472697   +LENGTH _WARN_ $4
1472698   +      F_DepVar  $ 12
1472699   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1472700   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1472701   +
1472702   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1472703   +
1472704   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1472705   +
1472706   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1472707   +
1472708   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1472709   +
1472710   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1472711   +
1472712   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1472713   +
1472714   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1472715   +
1472716   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1472717   +
1472718   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1472719   +
1472720   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1472721   +
1472722   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1472723   +
1472724   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1472725   +
1472726   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1472727   +
1472728   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1472729   +
1472730   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1472731   +
1472732   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1472733   +
1472734   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1472735   +
1472736   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1472737   +
1472738   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1472739   +
1472740   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1472741   +
1472742   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1472743   +
1472744   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1472745   +
1472746   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1472747   +
1472748   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1472749   +
1472750   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1472751   +
1472752   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1472753   +
1472754   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1472755   +
1472756   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1472757   +
1472758   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1472759   +
1472760   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1472761   +
1472762   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1472763   +
1472764   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1472765   +
1472766   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1472767   +
1472768   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1472769   +
1472770   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1472771   +
1472772   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1472773   +
1472774   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1472775   +
1472776   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1472777   +
1472778   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1472779   +
1472780   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1472781   +
1472782   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1472783   +
1472784   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1472785   +
1472786   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1472787   +
1472788   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1472789   +
1472790   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1472791   +
1472792   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1472793   +
1472794   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1472795   +
1472796   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1472797   +
1472798   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1472799   +
1472800   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1472801   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1472802   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1472803   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1472804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472806   +end;
MPRINT(EM_DIAGRAM):   end;
1472807   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472808   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472809   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1472810   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472811   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1472812   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1472813   +   end;
MPRINT(EM_DIAGRAM):   end;
1472814   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1472815   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1472816   +   end;
MPRINT(EM_DIAGRAM):   end;
1472817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472818   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1472819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472821   +   end;
MPRINT(EM_DIAGRAM):   end;
1472822   +end;
MPRINT(EM_DIAGRAM):   end;
1472823   +
1472824   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1472825   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1472826   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1472827   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1472828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472830   +end;
MPRINT(EM_DIAGRAM):   end;
1472831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472832   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472833   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1472834   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472835   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1472836   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1472837   +   end;
MPRINT(EM_DIAGRAM):   end;
1472838   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1472839   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1472840   +   end;
MPRINT(EM_DIAGRAM):   end;
1472841   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472842   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1472843   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472844   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472845   +   end;
MPRINT(EM_DIAGRAM):   end;
1472846   +end;
MPRINT(EM_DIAGRAM):   end;
1472847   +
1472848   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1472849   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1472850   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1472851   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1472852   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472854   +end;
MPRINT(EM_DIAGRAM):   end;
1472855   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472856   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472857   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1472858   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472859   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1472860   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1472861   +   end;
MPRINT(EM_DIAGRAM):   end;
1472862   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1472863   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1472864   +   end;
MPRINT(EM_DIAGRAM):   end;
1472865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472866   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1472867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472869   +   end;
MPRINT(EM_DIAGRAM):   end;
1472870   +end;
MPRINT(EM_DIAGRAM):   end;
1472871   +
1472872   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1472873   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1472874   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1472875   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1472876   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472877   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472878   +end;
MPRINT(EM_DIAGRAM):   end;
1472879   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472880   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472881   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1472882   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472883   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1472884   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1472885   +   end;
MPRINT(EM_DIAGRAM):   end;
1472886   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1472887   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1472888   +   end;
MPRINT(EM_DIAGRAM):   end;
1472889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472890   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1472891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472893   +   end;
MPRINT(EM_DIAGRAM):   end;
1472894   +end;
MPRINT(EM_DIAGRAM):   end;
1472895   +
1472896   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1472897   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1472898   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1472899   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1472900   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472901   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472902   +end;
MPRINT(EM_DIAGRAM):   end;
1472903   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472904   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472905   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1472906   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472907   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1472908   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1472909   +   end;
MPRINT(EM_DIAGRAM):   end;
1472910   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1472911   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1472912   +   end;
MPRINT(EM_DIAGRAM):   end;
1472913   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472914   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1472915   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472916   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472917   +   end;
MPRINT(EM_DIAGRAM):   end;
1472918   +end;
MPRINT(EM_DIAGRAM):   end;
1472919   +
1472920   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1472921   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1472922   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1472923   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1472924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472926   +end;
MPRINT(EM_DIAGRAM):   end;
1472927   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472928   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472929   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1472930   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472931   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1472932   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1472933   +   end;
MPRINT(EM_DIAGRAM):   end;
1472934   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1472935   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1472936   +   end;
MPRINT(EM_DIAGRAM):   end;
1472937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472938   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1472939   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472940   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472941   +   end;
MPRINT(EM_DIAGRAM):   end;
1472942   +end;
MPRINT(EM_DIAGRAM):   end;
1472943   +
1472944   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1472945   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1472946   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1472947   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1472948   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472950   +end;
MPRINT(EM_DIAGRAM):   end;
1472951   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472952   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1472953   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1472954   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472955   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1472956   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1472957   +   end;
MPRINT(EM_DIAGRAM):   end;
1472958   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1472959   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1472960   +   end;
MPRINT(EM_DIAGRAM):   end;
1472961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1472962   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1472963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1472964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472965   +   end;
MPRINT(EM_DIAGRAM):   end;
1472966   +end;
MPRINT(EM_DIAGRAM):   end;
1472967   +
1472968   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1472969   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1472970   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1472971   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1472972   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1472973   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1472974   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1472975   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1472976   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1472977   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1472978   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1472979   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1472980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1472981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1472982   +end;
MPRINT(EM_DIAGRAM):   end;
1472983   +else do;
MPRINT(EM_DIAGRAM):   else do;
1472984   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1472985   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1472986   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1472987   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1472988   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1472989   +   end;
MPRINT(EM_DIAGRAM):   end;
1472990   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1472991   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1472992   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1472993   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1472994   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1472995   +   end;
MPRINT(EM_DIAGRAM):   end;
1472996   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1472997   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1472998   +   end;
MPRINT(EM_DIAGRAM):   end;
1472999   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1473000   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1473001   +   end;
MPRINT(EM_DIAGRAM):   end;
1473002   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1473003   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1473004   +   end;
MPRINT(EM_DIAGRAM):   end;
1473005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473006   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1473007   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1473008   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1473009   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1473010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473012   +   end;
MPRINT(EM_DIAGRAM):   end;
1473013   +end;
MPRINT(EM_DIAGRAM):   end;
1473014   +
1473015   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1473016   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1473017   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1473018   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1473019   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1473020   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1473021   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1473022   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1473023   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1473024   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1473025   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1473026   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1473027   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1473028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473030   +end;
MPRINT(EM_DIAGRAM):   end;
1473031   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473032   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1473033   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1473034   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473035   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1473036   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1473037   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1473038   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1473039   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1473040   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473041   +         end;
MPRINT(EM_DIAGRAM):   end;
1473042   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1473043   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1473044   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1473045   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473046   +            end;
MPRINT(EM_DIAGRAM):   end;
1473047   +         end;
MPRINT(EM_DIAGRAM):   end;
1473048   +      end;
MPRINT(EM_DIAGRAM):   end;
1473049   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1473050   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1473051   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1473052   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473053   +         end;
MPRINT(EM_DIAGRAM):   end;
1473054   +      end;
MPRINT(EM_DIAGRAM):   end;
1473055   +   end;
MPRINT(EM_DIAGRAM):   end;
1473056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473057   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1473058   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1473059   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473060   +      end;
MPRINT(EM_DIAGRAM):   end;
1473061   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1473062   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1473063   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1473064   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1473065   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1473066   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1473067   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473068   +         end;
MPRINT(EM_DIAGRAM):   end;
1473069   +      end;
MPRINT(EM_DIAGRAM):   end;
1473070   +   end;
MPRINT(EM_DIAGRAM):   end;
1473071   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1473072   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1473073   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1473074   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1473075   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1473076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473078   +   end;
MPRINT(EM_DIAGRAM):   end;
1473079   +end;
MPRINT(EM_DIAGRAM):   end;
1473080   +
1473081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473082   +*** Checking missing input Interval
1473083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1473084   +
1473085   +IF NMISS(
1473086   +   AcceptedCmpTotal ,
1473087   +   Age ,
1473088   +   Frq ,
1473089   +   Income ,
1473090   +   Kidhome ,
1473091   +   Mnt ,
1473092   +   MntFishProducts ,
1473093   +   MntFruits ,
1473094   +   MntGoldProds ,
1473095   +   MntMeatProducts ,
1473096   +   MntSweetProducts ,
1473097   +   MntWines ,
1473098   +   MonthsAsCustomer ,
1473099   +   NumCatalogPurchases ,
1473100   +   NumDealsPurchases ,
1473101   +   NumDistPurchases ,
1473102   +   NumStorePurchases ,
1473103   +   NumWebPurchases ,
1473104   +   NumWebVisitsMonth ,
1473105   +   RFMstat ,
1473106   +   RMntFrq ,
1473107   +   Recency ,
1473108   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1473109   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1473110   +
1473111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473112   +END;
MPRINT(EM_DIAGRAM):   END;
1473113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473114   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1473115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473116   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1473117   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1473118   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1473119   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1473120   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1473121   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1473122   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1473123   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1473124   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1473125   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1473126   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1473127   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1473128   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1473129   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1473130   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1473131   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1473132   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1473133   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1473134   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1473135   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1473136   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1473137   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1473138   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1473139   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1473140   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1473141   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1473142   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1473143   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1473144   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1473145   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1473146   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1473147   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1473148   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1473149   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1473150   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1473151   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1473152   +END;
MPRINT(EM_DIAGRAM):   END;
1473153   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1473154   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1473155   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1473156   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1473157   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1473158   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1473159   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1473160   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1473161   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1473162   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1473163   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1473164   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1473165   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1473166   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1473167   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1473168   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1473169   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1473170   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1473171   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1473172   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1473173   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1473174   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1473175   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1473176   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1473177   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1473178   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1473179   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1473180   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1473181   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1473182   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1473183   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1473184   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1473185   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1473186   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1473187   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1473188   +   ELSE S_NumCatalogPurchases
1473189   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1473190   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1473191   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1473192   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1473193   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1473194   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1473195   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1473196   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1473197   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1473198   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1473199   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1473200   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1473201   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1473202   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1473203   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1473204   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1473205   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1473206   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1473207   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1473208   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1473209   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1473210   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1473211   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1473212   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1473213   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1473214   +END;
MPRINT(EM_DIAGRAM):   END;
1473215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473216   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1473217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473219   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1473220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473222   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1473223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473224   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1473225   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1473226   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1473227   +        S_Income  +    -0.76740176580734 * S_Kidhome
1473228   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1473229   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1473230   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1473231   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1473232   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1473233   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1473234   +          +    -1.00050516074089 * S_NumDealsPurchases
1473235   +          +    -0.89322788176916 * S_NumDistPurchases
1473236   +          +     1.21914397196653 * S_NumStorePurchases
1473237   +          +     1.50867172673665 * S_NumWebPurchases
1473238   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1473239   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1473240   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1473241   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1473242   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1473243   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1473244   +        S_Income  +    -0.76288911429735 * S_Kidhome
1473245   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1473246   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1473247   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1473248   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1473249   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1473250   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1473251   +          +     0.79497206561332 * S_NumDealsPurchases
1473252   +          +    -0.13658888199464 * S_NumDistPurchases
1473253   +          +    -0.86436416316417 * S_NumStorePurchases
1473254   +          +    -0.85206550087617 * S_NumWebPurchases
1473255   +          +     1.72745004688732 * S_NumWebVisitsMonth
1473256   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1473257   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1473258   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1473259   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1473260   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1473261   +        S_Income  +    -0.48841499166688 * S_Kidhome
1473262   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1473263   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1473264   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1473265   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1473266   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1473267   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1473268   +          +    -0.00010125986409 * S_NumDealsPurchases
1473269   +          +    -0.00873530900019 * S_NumDistPurchases
1473270   +          +    -0.13188135131414 * S_NumStorePurchases
1473271   +          +    -0.10710067608125 * S_NumWebPurchases
1473272   +          +     0.99164053465149 * S_NumWebVisitsMonth
1473273   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1473274   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1473275   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1473276   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1473277   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1473278   +        S_Income  +    -0.57026847797175 * S_Kidhome
1473279   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1473280   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1473281   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1473282   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1473283   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1473284   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1473285   +          +     0.83618651452015 * S_NumDealsPurchases
1473286   +          +     0.22469306589917 * S_NumDistPurchases
1473287   +          +    -0.95889459414769 * S_NumStorePurchases
1473288   +          +    -0.95695646799114 * S_NumWebPurchases
1473289   +          +     0.96738689790948 * S_NumWebVisitsMonth
1473290   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1473291   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1473292   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1473293   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1473294   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1473295   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1473296   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1473297   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
1473298   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1473299   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1473300   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1473301   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1473302   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
1473303   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1473304   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1473305   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1473306   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1473307   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
1473308   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1473309   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1473310   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1473311   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1473312   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
1473313   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1473314   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1473315   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1473316   +          +     0.80885454992674 * Marital_StatusDivorced
1473317   +          +     -0.5568630572283 * Marital_StatusMarried
1473318   +          +    -0.03099047176508 * Marital_StatusSingle
1473319   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1473320   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1473321   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1473322   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1473323   +          +     0.13911597069393 * Marital_StatusDivorced
1473324   +          +    -1.50081060732787 * Marital_StatusMarried
1473325   +          +     1.41717012231539 * Marital_StatusSingle
1473326   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1473327   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1473328   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1473329   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1473330   +          +    -0.26412736340464 * Marital_StatusDivorced
1473331   +          +    -0.27049992388629 * Marital_StatusMarried
1473332   +          +     0.67476795725099 * Marital_StatusSingle
1473333   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1473334   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1473335   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1473336   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1473337   +          +      0.8954230457499 * Marital_StatusDivorced
1473338   +          +     0.73706556068242 * Marital_StatusMarried
1473339   +          +    -1.29073720538893 * Marital_StatusSingle
1473340   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1473341   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1473342   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1473343   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1473344   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1473345   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1473346   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1473347   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1473348   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1473349   +END;
MPRINT(EM_DIAGRAM):   END;
1473350   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1473351   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1473352   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1473353   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1473354   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1473355   +END;
MPRINT(EM_DIAGRAM):   END;
1473356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473357   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1473358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473359   +
1473360   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1473361   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1473362   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1473363   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1473364   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1473365   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473366   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1473367   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1473368   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1473369   +end;
MPRINT(EM_DIAGRAM):   end;
1473370   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473371   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1473372   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1473373   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1473374   +   end;
MPRINT(EM_DIAGRAM):   end;
1473375   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1473376   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1473377   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1473378   +   end;
MPRINT(EM_DIAGRAM):   end;
1473379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473380   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1473381   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1473382   +   end;
MPRINT(EM_DIAGRAM):   end;
1473383   +end;
MPRINT(EM_DIAGRAM):   end;
1473384   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1473385   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1473386   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1473387   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1473388   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1473389   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1473390   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1473391   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1473392   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1473393   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1473394   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1473395   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1473396   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1473397   +END;
MPRINT(EM_DIAGRAM):   END;
1473398   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1473399   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1473400   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1473401   +END;
MPRINT(EM_DIAGRAM):   END;
1473402   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1473403   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1473404   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1473405   +END;
MPRINT(EM_DIAGRAM):   END;
1473406   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1473407   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1473408   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1473409   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1473410   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1473411   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1473412   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1473413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473414   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1473415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473416   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1473417   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1473418   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1473419   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1473420   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1473421   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1473422   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1473423   +END;
MPRINT(EM_DIAGRAM):   END;
1473424   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1473425   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1473426   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1473427   +drop
1473428   +H11
1473429   +H12
1473430   +H13
1473431   +H14
1473432   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1473433   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1473434   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1473435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473436   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1473437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473438   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1473439   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1473440   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1473441   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1473442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473443   +* Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
1473444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473445   +length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
1473446   +drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
1473447   +Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
1473448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473449   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1473450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473451   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1473452   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1473453   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1473454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473455   +* Ensmbl29: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 5 of 10;
1473456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473458   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1473459   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1473460   +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
1473461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1473462   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1473463   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1473464   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1473465   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1473466   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1473467   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1473468   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1473469   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1473470   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1473471   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1473472   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1473473   +LENGTH _WARN_ $4
1473474   +      F_DepVar  $ 12
1473475   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1473476   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1473477   +
1473478   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1473479   +
1473480   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1473481   +
1473482   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1473483   +
1473484   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1473485   +
1473486   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1473487   +
1473488   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1473489   +
1473490   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1473491   +
1473492   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1473493   +
1473494   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1473495   +
1473496   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1473497   +
1473498   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1473499   +
1473500   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1473501   +
1473502   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1473503   +
1473504   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1473505   +
1473506   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1473507   +
1473508   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1473509   +
1473510   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1473511   +
1473512   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1473513   +
1473514   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1473515   +
1473516   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1473517   +
1473518   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1473519   +
1473520   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1473521   +
1473522   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1473523   +
1473524   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1473525   +
1473526   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1473527   +
1473528   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1473529   +
1473530   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1473531   +
1473532   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1473533   +
1473534   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1473535   +
1473536   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1473537   +
1473538   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1473539   +
1473540   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1473541   +
1473542   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1473543   +
1473544   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1473545   +
1473546   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1473547   +
1473548   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1473549   +
1473550   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1473551   +
1473552   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1473553   +
1473554   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1473555   +
1473556   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1473557   +
1473558   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1473559   +
1473560   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1473561   +
1473562   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1473563   +
1473564   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1473565   +
1473566   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1473567   +
1473568   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1473569   +
1473570   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1473571   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1473572   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1473573   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1473574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473576   +end;
MPRINT(EM_DIAGRAM):   end;
1473577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473579   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1473580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1473582   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1473583   +   end;
MPRINT(EM_DIAGRAM):   end;
1473584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1473585   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1473586   +   end;
MPRINT(EM_DIAGRAM):   end;
1473587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473588   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1473589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473591   +   end;
MPRINT(EM_DIAGRAM):   end;
1473592   +end;
MPRINT(EM_DIAGRAM):   end;
1473593   +
1473594   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1473595   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1473596   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1473597   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1473598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473600   +end;
MPRINT(EM_DIAGRAM):   end;
1473601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473603   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1473604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1473606   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1473607   +   end;
MPRINT(EM_DIAGRAM):   end;
1473608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1473609   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1473610   +   end;
MPRINT(EM_DIAGRAM):   end;
1473611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473612   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1473613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473615   +   end;
MPRINT(EM_DIAGRAM):   end;
1473616   +end;
MPRINT(EM_DIAGRAM):   end;
1473617   +
1473618   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1473619   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1473620   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1473621   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1473622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473624   +end;
MPRINT(EM_DIAGRAM):   end;
1473625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473627   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1473628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1473630   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1473631   +   end;
MPRINT(EM_DIAGRAM):   end;
1473632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1473633   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1473634   +   end;
MPRINT(EM_DIAGRAM):   end;
1473635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473636   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1473637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473639   +   end;
MPRINT(EM_DIAGRAM):   end;
1473640   +end;
MPRINT(EM_DIAGRAM):   end;
1473641   +
1473642   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1473643   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1473644   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1473645   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1473646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473648   +end;
MPRINT(EM_DIAGRAM):   end;
1473649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473651   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1473652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1473654   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1473655   +   end;
MPRINT(EM_DIAGRAM):   end;
1473656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1473657   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1473658   +   end;
MPRINT(EM_DIAGRAM):   end;
1473659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473660   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1473661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473663   +   end;
MPRINT(EM_DIAGRAM):   end;
1473664   +end;
MPRINT(EM_DIAGRAM):   end;
1473665   +
1473666   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1473667   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1473668   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1473669   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1473670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473672   +end;
MPRINT(EM_DIAGRAM):   end;
1473673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473675   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1473676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1473678   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1473679   +   end;
MPRINT(EM_DIAGRAM):   end;
1473680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1473681   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1473682   +   end;
MPRINT(EM_DIAGRAM):   end;
1473683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473684   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1473685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473687   +   end;
MPRINT(EM_DIAGRAM):   end;
1473688   +end;
MPRINT(EM_DIAGRAM):   end;
1473689   +
1473690   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1473691   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1473692   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1473693   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1473694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473696   +end;
MPRINT(EM_DIAGRAM):   end;
1473697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473699   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1473700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1473702   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1473703   +   end;
MPRINT(EM_DIAGRAM):   end;
1473704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1473705   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1473706   +   end;
MPRINT(EM_DIAGRAM):   end;
1473707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473708   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1473709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473711   +   end;
MPRINT(EM_DIAGRAM):   end;
1473712   +end;
MPRINT(EM_DIAGRAM):   end;
1473713   +
1473714   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1473715   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1473716   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1473717   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1473718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473720   +end;
MPRINT(EM_DIAGRAM):   end;
1473721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1473723   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1473724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473725   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1473726   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1473727   +   end;
MPRINT(EM_DIAGRAM):   end;
1473728   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1473729   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1473730   +   end;
MPRINT(EM_DIAGRAM):   end;
1473731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473732   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1473733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473735   +   end;
MPRINT(EM_DIAGRAM):   end;
1473736   +end;
MPRINT(EM_DIAGRAM):   end;
1473737   +
1473738   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1473739   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1473740   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1473741   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1473742   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1473743   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1473744   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1473745   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1473746   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1473747   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1473748   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1473749   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1473750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473752   +end;
MPRINT(EM_DIAGRAM):   end;
1473753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473754   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1473755   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1473756   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473757   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1473758   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1473759   +   end;
MPRINT(EM_DIAGRAM):   end;
1473760   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1473761   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1473762   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1473763   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1473764   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1473765   +   end;
MPRINT(EM_DIAGRAM):   end;
1473766   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1473767   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1473768   +   end;
MPRINT(EM_DIAGRAM):   end;
1473769   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1473770   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1473771   +   end;
MPRINT(EM_DIAGRAM):   end;
1473772   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1473773   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1473774   +   end;
MPRINT(EM_DIAGRAM):   end;
1473775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473776   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1473777   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1473778   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1473779   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1473780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473782   +   end;
MPRINT(EM_DIAGRAM):   end;
1473783   +end;
MPRINT(EM_DIAGRAM):   end;
1473784   +
1473785   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1473786   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1473787   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1473788   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1473789   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1473790   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1473791   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1473792   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1473793   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1473794   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1473795   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1473796   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1473797   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1473798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1473799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473800   +end;
MPRINT(EM_DIAGRAM):   end;
1473801   +else do;
MPRINT(EM_DIAGRAM):   else do;
1473802   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1473803   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1473804   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1473805   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1473806   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1473807   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1473808   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1473809   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1473810   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473811   +         end;
MPRINT(EM_DIAGRAM):   end;
1473812   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1473813   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1473814   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1473815   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473816   +            end;
MPRINT(EM_DIAGRAM):   end;
1473817   +         end;
MPRINT(EM_DIAGRAM):   end;
1473818   +      end;
MPRINT(EM_DIAGRAM):   end;
1473819   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1473820   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1473821   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1473822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473823   +         end;
MPRINT(EM_DIAGRAM):   end;
1473824   +      end;
MPRINT(EM_DIAGRAM):   end;
1473825   +   end;
MPRINT(EM_DIAGRAM):   end;
1473826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1473827   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1473828   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1473829   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473830   +      end;
MPRINT(EM_DIAGRAM):   end;
1473831   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1473832   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1473833   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1473834   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1473835   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1473836   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1473837   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1473838   +         end;
MPRINT(EM_DIAGRAM):   end;
1473839   +      end;
MPRINT(EM_DIAGRAM):   end;
1473840   +   end;
MPRINT(EM_DIAGRAM):   end;
1473841   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1473842   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1473843   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1473844   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1473845   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1473846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1473847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473848   +   end;
MPRINT(EM_DIAGRAM):   end;
1473849   +end;
MPRINT(EM_DIAGRAM):   end;
1473850   +
1473851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473852   +*** Checking missing input Interval
1473853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1473854   +
1473855   +IF NMISS(
1473856   +   AcceptedCmpTotal ,
1473857   +   Age ,
1473858   +   Frq ,
1473859   +   Income ,
1473860   +   Kidhome ,
1473861   +   Mnt ,
1473862   +   MntFishProducts ,
1473863   +   MntFruits ,
1473864   +   MntGoldProds ,
1473865   +   MntMeatProducts ,
1473866   +   MntSweetProducts ,
1473867   +   MntWines ,
1473868   +   MonthsAsCustomer ,
1473869   +   NumCatalogPurchases ,
1473870   +   NumDealsPurchases ,
1473871   +   NumDistPurchases ,
1473872   +   NumStorePurchases ,
1473873   +   NumWebPurchases ,
1473874   +   NumWebVisitsMonth ,
1473875   +   RFMstat ,
1473876   +   RMntFrq ,
1473877   +   Recency ,
1473878   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1473879   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1473880   +
1473881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1473882   +END;
MPRINT(EM_DIAGRAM):   END;
1473883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473884   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1473885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473886   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1473887   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1473888   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1473889   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1473890   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1473891   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1473892   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1473893   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1473894   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1473895   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1473896   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1473897   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1473898   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1473899   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1473900   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1473901   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1473902   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1473903   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1473904   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1473905   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1473906   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1473907   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1473908   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1473909   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1473910   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1473911   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1473912   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1473913   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1473914   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1473915   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1473916   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1473917   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1473918   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1473919   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1473920   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1473921   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1473922   +END;
MPRINT(EM_DIAGRAM):   END;
1473923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1473924   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1473925   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1473926   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1473927   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1473928   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1473929   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1473930   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1473931   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1473932   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1473933   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1473934   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1473935   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1473936   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1473937   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1473938   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1473939   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1473940   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1473941   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1473942   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1473943   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1473944   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1473945   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1473946   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1473947   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1473948   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1473949   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1473950   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1473951   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1473952   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1473953   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1473954   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1473955   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1473956   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1473957   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1473958   +   ELSE S_NumCatalogPurchases
1473959   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1473960   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1473961   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1473962   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1473963   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1473964   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1473965   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1473966   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1473967   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1473968   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1473969   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1473970   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1473971   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1473972   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1473973   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1473974   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1473975   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1473976   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1473977   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1473978   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1473979   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1473980   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1473981   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1473982   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1473983   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1473984   +END;
MPRINT(EM_DIAGRAM):   END;
1473985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473986   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1473987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473989   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1473990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473992   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1473993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1473994   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1473995   +   H11  =     0.21199836063704 * S_AcceptedCmpTotal  +    -0.02945581506424 *
1473996   +        S_Age  +    -0.16919262213625 * S_Frq  +     0.14512005996462 *
1473997   +        S_Income  +    -0.02666790507068 * S_Kidhome
1473998   +          +     0.00783799563972 * S_Mnt  +    -0.04773263250677 *
1473999   +        S_MntFishProducts  +     -0.0422809135011 * S_MntFruits
1474000   +          +      0.0079708708989 * S_MntGoldProds  +      0.2106873504387 *
1474001   +        S_MntMeatProducts  +    -0.02356644979368 * S_MntSweetProducts
1474002   +          +    -0.19316118342366 * S_MntWines  +    -0.01997288256292 *
1474003   +        S_MonthsAsCustomer  +     0.28114494721724 * S_NumCatalogPurchases
1474004   +          +     0.15201388307546 * S_NumDealsPurchases
1474005   +          +      0.0691064780948 * S_NumDistPurchases
1474006   +          +    -0.06316014736289 * S_NumStorePurchases
1474007   +          +    -0.10762176869863 * S_NumWebPurchases
1474008   +          +     0.30130792444288 * S_NumWebVisitsMonth
1474009   +          +      0.0486829682523 * S_RFMstat  +     0.05664601410311 *
1474010   +        S_RMntFrq  +    -0.33967860548156 * S_Recency
1474011   +          +    -0.07910434348734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21199836063704 * S_AcceptedCmpTotal + -0.02945581506424 * S_Age 
+ -0.16919262213625 * S_Frq + 0.14512005996462 * S_Income + -0.02666790507068 * S_Kidhome + 
0.00783799563972 * S_Mnt + -0.04773263250677 * S_MntFishProducts + -0.0422809135011 * 
S_MntFruits + 0.0079708708989 * S_MntGoldProds + 0.2106873504387 * S_MntMeatProducts + 
-0.02356644979368 * S_MntSweetProducts + -0.19316118342366 * S_MntWines + -0.01997288256292 * 
S_MonthsAsCustomer + 0.28114494721724 * S_NumCatalogPurchases + 0.15201388307546 * 
S_NumDealsPurchases + 0.0691064780948 * S_NumDistPurchases + -0.06316014736289 * 
S_NumStorePurchases + -0.10762176869863 * S_NumWebPurchases + 0.30130792444288 * 
S_NumWebVisitsMonth + 0.0486829682523 * S_RFMstat + 0.05664601410311 * S_RMntFrq + 
-0.33967860548156 * S_Recency + -0.07910434348734 * S_Teenhome ;
1474012   +   H11  = H11  +    -0.00073768107162 * AcceptedCmp10
1474013   +          +     0.00345057378593 * AcceptedCmp20  +    -0.01951840681321 *
1474014   +        AcceptedCmp30  +     0.01519043635856 * AcceptedCmp40
1474015   +          +    -0.06774838806782 * AcceptedCmp50  +      0.0455181994272 *
1474016   +        Complain0  +    -0.02208676447134 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00073768107162 * AcceptedCmp10 + 0.00345057378593 * 
AcceptedCmp20 + -0.01951840681321 * AcceptedCmp30 + 0.01519043635856 * AcceptedCmp40 + 
-0.06774838806782 * AcceptedCmp50 + 0.0455181994272 * Complain0 + -0.02208676447134 * 
HigherEducationBinary0 ;
1474017   +   H11  = H11  +     0.02211753777429 * Education2n_Cycle
1474018   +          +     -0.0415173136677 * EducationBasic  +     0.02078484520297 *
1474019   +        EducationGraduation  +    -0.00122029917596 * EducationMaster
1474020   +          +     0.03231417790779 * Marital_StatusDivorced
1474021   +          +    -0.11917982892952 * Marital_StatusMarried
1474022   +          +     0.09076044687834 * Marital_StatusSingle
1474023   +          +     -0.1248189936875 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02211753777429 * Education2n_Cycle + -0.0415173136677 * 
EducationBasic + 0.02078484520297 * EducationGraduation + -0.00122029917596 * EducationMaster 
+ 0.03231417790779 * Marital_StatusDivorced + -0.11917982892952 * Marital_StatusMarried + 
0.09076044687834 * Marital_StatusSingle + -0.1248189936875 * Marital_StatusTogether ;
1474024   +   H11  =     -0.5152185206902 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.5152185206902 + H11 ;
1474025   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1474026   +END;
MPRINT(EM_DIAGRAM):   END;
1474027   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1474028   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1474029   +END;
MPRINT(EM_DIAGRAM):   END;
1474030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474031   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1474032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474033   +
1474034   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1474035   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1474036   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1474037   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1474038   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1474039   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474040   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1474041   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1474042   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1474043   +end;
MPRINT(EM_DIAGRAM):   end;
1474044   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474045   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1474046   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1474047   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1474048   +   end;
MPRINT(EM_DIAGRAM):   end;
1474049   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1474050   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1474051   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1474052   +   end;
MPRINT(EM_DIAGRAM):   end;
1474053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474054   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1474055   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1474056   +   end;
MPRINT(EM_DIAGRAM):   end;
1474057   +end;
MPRINT(EM_DIAGRAM):   end;
1474058   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1474059   +   P_DepVar1  =     8.82361756901136 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82361756901136 * H11 ;
1474060   +   P_DepVar1  =      -0.589740369134 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.589740369134 + P_DepVar1 ;
1474061   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1474062   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1474063   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1474064   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1474065   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1474066   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1474067   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1474068   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1474069   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1474070   +END;
MPRINT(EM_DIAGRAM):   END;
1474071   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1474072   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1474073   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1474074   +END;
MPRINT(EM_DIAGRAM):   END;
1474075   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1474076   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1474077   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1474078   +END;
MPRINT(EM_DIAGRAM):   END;
1474079   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1474080   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1474081   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1474082   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1474083   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1474084   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1474085   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1474086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474087   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1474088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474089   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1474090   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1474091   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1474092   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1474093   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1474094   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1474095   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1474096   +END;
MPRINT(EM_DIAGRAM):   END;
1474097   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1474098   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1474099   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1474100   +drop
1474101   +H11
1474102   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1474103   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1474104   +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
1474105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474106   +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
1474107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474108   +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
1474109   +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
1474110   +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
1474111   +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
1474112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474113   +* Renaming Into variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural;
1474114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474115   +length Neural_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural_I_DepVar $32;
1474116   +drop Neural_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural_I_DepVar;
1474117   +Neural_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural_I_DepVar = I_DepVar;
1474118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474119   +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
1474120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474121   +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
1474122   +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
1474123   +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
1474124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474125   +* Ensmbl29: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 6 of 10;
1474126   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474128   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1474129   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1474130   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1474131   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474132   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1474133   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1474134   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1474135   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1474136   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1474137   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1474138   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1474139   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1474140   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1474141   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1474142   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1474143   +LENGTH _WARN_ $4
1474144   +      F_DepVar  $ 12
1474145   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1474146   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1474147   +
1474148   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1474149   +
1474150   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1474151   +
1474152   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1474153   +
1474154   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1474155   +
1474156   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1474157   +
1474158   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1474159   +
1474160   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1474161   +
1474162   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1474163   +
1474164   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1474165   +
1474166   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1474167   +
1474168   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1474169   +
1474170   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1474171   +
1474172   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1474173   +
1474174   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1474175   +
1474176   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1474177   +
1474178   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1474179   +
1474180   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1474181   +
1474182   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1474183   +
1474184   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1474185   +
1474186   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1474187   +
1474188   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1474189   +
1474190   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1474191   +
1474192   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1474193   +
1474194   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1474195   +
1474196   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1474197   +
1474198   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1474199   +
1474200   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1474201   +
1474202   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1474203   +
1474204   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1474205   +
1474206   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1474207   +
1474208   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1474209   +
1474210   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1474211   +
1474212   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1474213   +
1474214   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1474215   +
1474216   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1474217   +
1474218   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1474219   +
1474220   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1474221   +
1474222   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1474223   +
1474224   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1474225   +
1474226   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1474227   +
1474228   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1474229   +
1474230   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1474231   +
1474232   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1474233   +
1474234   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1474235   +
1474236   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1474237   +
1474238   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1474239   +
1474240   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1474241   +
1474242   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1474243   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1474244   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1474245   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1474246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474248   +end;
MPRINT(EM_DIAGRAM):   end;
1474249   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474250   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474251   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1474252   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474253   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474254   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1474255   +   end;
MPRINT(EM_DIAGRAM):   end;
1474256   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474257   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1474258   +   end;
MPRINT(EM_DIAGRAM):   end;
1474259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474260   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1474261   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474262   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474263   +   end;
MPRINT(EM_DIAGRAM):   end;
1474264   +end;
MPRINT(EM_DIAGRAM):   end;
1474265   +
1474266   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1474267   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1474268   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1474269   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1474270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474272   +end;
MPRINT(EM_DIAGRAM):   end;
1474273   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474274   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474275   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1474276   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474277   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474278   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1474279   +   end;
MPRINT(EM_DIAGRAM):   end;
1474280   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474281   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1474282   +   end;
MPRINT(EM_DIAGRAM):   end;
1474283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474284   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1474285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474287   +   end;
MPRINT(EM_DIAGRAM):   end;
1474288   +end;
MPRINT(EM_DIAGRAM):   end;
1474289   +
1474290   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1474291   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1474292   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1474293   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1474294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474296   +end;
MPRINT(EM_DIAGRAM):   end;
1474297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474298   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474299   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1474300   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474301   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474302   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1474303   +   end;
MPRINT(EM_DIAGRAM):   end;
1474304   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474305   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1474306   +   end;
MPRINT(EM_DIAGRAM):   end;
1474307   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474308   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1474309   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474310   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474311   +   end;
MPRINT(EM_DIAGRAM):   end;
1474312   +end;
MPRINT(EM_DIAGRAM):   end;
1474313   +
1474314   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1474315   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1474316   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1474317   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1474318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474320   +end;
MPRINT(EM_DIAGRAM):   end;
1474321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474323   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1474324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474325   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474326   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1474327   +   end;
MPRINT(EM_DIAGRAM):   end;
1474328   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474329   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1474330   +   end;
MPRINT(EM_DIAGRAM):   end;
1474331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474332   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1474333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474335   +   end;
MPRINT(EM_DIAGRAM):   end;
1474336   +end;
MPRINT(EM_DIAGRAM):   end;
1474337   +
1474338   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1474339   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1474340   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1474341   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1474342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474344   +end;
MPRINT(EM_DIAGRAM):   end;
1474345   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474347   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1474348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474349   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474350   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1474351   +   end;
MPRINT(EM_DIAGRAM):   end;
1474352   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474353   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1474354   +   end;
MPRINT(EM_DIAGRAM):   end;
1474355   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474356   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1474357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474359   +   end;
MPRINT(EM_DIAGRAM):   end;
1474360   +end;
MPRINT(EM_DIAGRAM):   end;
1474361   +
1474362   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1474363   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1474364   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1474365   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1474366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474368   +end;
MPRINT(EM_DIAGRAM):   end;
1474369   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474370   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474371   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1474372   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474373   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474374   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1474375   +   end;
MPRINT(EM_DIAGRAM):   end;
1474376   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474377   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1474378   +   end;
MPRINT(EM_DIAGRAM):   end;
1474379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474380   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1474381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474383   +   end;
MPRINT(EM_DIAGRAM):   end;
1474384   +end;
MPRINT(EM_DIAGRAM):   end;
1474385   +
1474386   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1474387   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1474388   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1474389   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1474390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474392   +end;
MPRINT(EM_DIAGRAM):   end;
1474393   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474394   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474395   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1474396   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474397   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1474398   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1474399   +   end;
MPRINT(EM_DIAGRAM):   end;
1474400   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1474401   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1474402   +   end;
MPRINT(EM_DIAGRAM):   end;
1474403   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474404   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1474405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474407   +   end;
MPRINT(EM_DIAGRAM):   end;
1474408   +end;
MPRINT(EM_DIAGRAM):   end;
1474409   +
1474410   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1474411   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1474412   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1474413   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1474414   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1474415   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1474416   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1474417   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1474418   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1474419   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1474420   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1474421   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1474422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474424   +end;
MPRINT(EM_DIAGRAM):   end;
1474425   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474426   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1474427   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1474428   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474429   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1474430   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1474431   +   end;
MPRINT(EM_DIAGRAM):   end;
1474432   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1474433   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1474434   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1474435   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1474436   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1474437   +   end;
MPRINT(EM_DIAGRAM):   end;
1474438   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1474439   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1474440   +   end;
MPRINT(EM_DIAGRAM):   end;
1474441   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1474442   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1474443   +   end;
MPRINT(EM_DIAGRAM):   end;
1474444   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1474445   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1474446   +   end;
MPRINT(EM_DIAGRAM):   end;
1474447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474448   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1474449   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1474450   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1474451   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1474452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474454   +   end;
MPRINT(EM_DIAGRAM):   end;
1474455   +end;
MPRINT(EM_DIAGRAM):   end;
1474456   +
1474457   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1474458   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1474459   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1474460   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1474461   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1474462   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1474463   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1474464   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1474465   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1474466   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1474467   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1474468   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1474469   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1474470   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474472   +end;
MPRINT(EM_DIAGRAM):   end;
1474473   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474474   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1474475   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1474476   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474477   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1474478   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1474479   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1474480   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1474481   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1474482   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1474483   +         end;
MPRINT(EM_DIAGRAM):   end;
1474484   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1474485   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1474486   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1474487   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1474488   +            end;
MPRINT(EM_DIAGRAM):   end;
1474489   +         end;
MPRINT(EM_DIAGRAM):   end;
1474490   +      end;
MPRINT(EM_DIAGRAM):   end;
1474491   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1474492   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1474493   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1474494   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1474495   +         end;
MPRINT(EM_DIAGRAM):   end;
1474496   +      end;
MPRINT(EM_DIAGRAM):   end;
1474497   +   end;
MPRINT(EM_DIAGRAM):   end;
1474498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474499   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1474500   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1474501   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1474502   +      end;
MPRINT(EM_DIAGRAM):   end;
1474503   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1474504   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1474505   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1474506   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1474507   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1474508   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1474509   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1474510   +         end;
MPRINT(EM_DIAGRAM):   end;
1474511   +      end;
MPRINT(EM_DIAGRAM):   end;
1474512   +   end;
MPRINT(EM_DIAGRAM):   end;
1474513   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1474514   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1474515   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1474516   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1474517   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1474518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474520   +   end;
MPRINT(EM_DIAGRAM):   end;
1474521   +end;
MPRINT(EM_DIAGRAM):   end;
1474522   +
1474523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474524   +*** Checking missing input Interval
1474525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1474526   +
1474527   +IF NMISS(
1474528   +   AcceptedCmpTotal ,
1474529   +   Age ,
1474530   +   Frq ,
1474531   +   Income ,
1474532   +   Kidhome ,
1474533   +   Mnt ,
1474534   +   MntFishProducts ,
1474535   +   MntFruits ,
1474536   +   MntGoldProds ,
1474537   +   MntMeatProducts ,
1474538   +   MntSweetProducts ,
1474539   +   MntWines ,
1474540   +   MonthsAsCustomer ,
1474541   +   NumCatalogPurchases ,
1474542   +   NumDealsPurchases ,
1474543   +   NumDistPurchases ,
1474544   +   NumStorePurchases ,
1474545   +   NumWebPurchases ,
1474546   +   NumWebVisitsMonth ,
1474547   +   RFMstat ,
1474548   +   RMntFrq ,
1474549   +   Recency ,
1474550   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1474551   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1474552   +
1474553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474554   +END;
MPRINT(EM_DIAGRAM):   END;
1474555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474556   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1474557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474558   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1474559   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1474560   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1474561   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1474562   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1474563   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1474564   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1474565   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1474566   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1474567   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1474568   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1474569   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1474570   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1474571   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1474572   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1474573   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1474574   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1474575   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1474576   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1474577   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1474578   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1474579   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1474580   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1474581   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1474582   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1474583   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1474584   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1474585   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1474586   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1474587   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1474588   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1474589   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1474590   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1474591   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1474592   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1474593   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1474594   +END;
MPRINT(EM_DIAGRAM):   END;
1474595   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1474596   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1474597   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1474598   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1474599   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1474600   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1474601   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1474602   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1474603   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1474604   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1474605   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1474606   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1474607   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1474608   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1474609   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1474610   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1474611   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1474612   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1474613   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1474614   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1474615   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1474616   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1474617   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1474618   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1474619   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1474620   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1474621   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1474622   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1474623   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1474624   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1474625   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1474626   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1474627   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1474628   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1474629   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1474630   +   ELSE S_NumCatalogPurchases
1474631   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1474632   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1474633   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1474634   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1474635   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1474636   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1474637   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1474638   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1474639   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1474640   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1474641   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1474642   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1474643   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1474644   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1474645   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1474646   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1474647   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1474648   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1474649   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1474650   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1474651   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1474652   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1474653   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1474654   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1474655   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1474656   +END;
MPRINT(EM_DIAGRAM):   END;
1474657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474658   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1474659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474661   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1474662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474664   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1474665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474666   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1474667   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1474668   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1474669   +        S_Income  +    -1.07733254688396 * S_Kidhome
1474670   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1474671   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1474672   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1474673   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1474674   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1474675   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1474676   +          +     0.34431711603003 * S_NumDealsPurchases
1474677   +          +      0.7134923732819 * S_NumDistPurchases
1474678   +          +     0.05901777448936 * S_NumStorePurchases
1474679   +          +    -0.19803026616936 * S_NumWebPurchases
1474680   +          +     1.34202846183228 * S_NumWebVisitsMonth
1474681   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1474682   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1474683   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age + 
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome + 
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 * 
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts + 
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 * 
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 * 
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 * 
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 * 
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq + 
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1474684   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1474685   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1474686   +        S_Income  +    -0.00255151514163 * S_Kidhome
1474687   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1474688   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1474689   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1474690   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1474691   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1474692   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1474693   +          +     0.45752917132477 * S_NumDealsPurchases
1474694   +          +      0.1559495599293 * S_NumDistPurchases
1474695   +          +    -0.33402213718695 * S_NumStorePurchases
1474696   +          +    -0.39372662704902 * S_NumWebPurchases
1474697   +          +     0.52518189694069 * S_NumWebVisitsMonth
1474698   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1474699   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1474700   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age 
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome + 
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 * 
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts + 
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 * 
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 * 
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 * 
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 * 
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq + 
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1474701   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1474702   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1474703   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1474704   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1474705   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 * 
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 + 
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 * 
HigherEducationBinary0 ;
1474706   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1474707   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1474708   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1474709   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1474710   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 * 
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 + 
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 * 
HigherEducationBinary0 ;
1474711   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1474712   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1474713   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1474714   +          +     0.46710555357393 * Marital_StatusDivorced
1474715   +          +    -1.27560428667174 * Marital_StatusMarried
1474716   +          +      1.3147344073121 * Marital_StatusSingle
1474717   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 * 
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster 
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried + 
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1474718   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1474719   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1474720   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1474721   +          +     0.07422027097612 * Marital_StatusDivorced
1474722   +          +     0.00271855575037 * Marital_StatusMarried
1474723   +          +    -0.00749566028051 * Marital_StatusSingle
1474724   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 * 
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster + 
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried + 
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1474725   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1474726   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1474727   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1474728   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1474729   +END;
MPRINT(EM_DIAGRAM):   END;
1474730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1474731   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1474732   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1474733   +END;
MPRINT(EM_DIAGRAM):   END;
1474734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474735   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1474736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474737   +
1474738   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1474739   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1474740   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1474741   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1474742   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1474743   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474744   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1474745   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1474746   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1474747   +end;
MPRINT(EM_DIAGRAM):   end;
1474748   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474749   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1474750   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1474751   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1474752   +   end;
MPRINT(EM_DIAGRAM):   end;
1474753   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1474754   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1474755   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1474756   +   end;
MPRINT(EM_DIAGRAM):   end;
1474757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474758   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1474759   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1474760   +   end;
MPRINT(EM_DIAGRAM):   end;
1474761   +end;
MPRINT(EM_DIAGRAM):   end;
1474762   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1474763   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1474764   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1474765   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1474766   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1474767   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1474768   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1474769   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1474770   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1474771   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1474772   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1474773   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1474774   +END;
MPRINT(EM_DIAGRAM):   END;
1474775   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1474776   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1474777   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1474778   +END;
MPRINT(EM_DIAGRAM):   END;
1474779   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1474780   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1474781   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1474782   +END;
MPRINT(EM_DIAGRAM):   END;
1474783   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1474784   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1474785   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1474786   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1474787   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1474788   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1474789   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1474790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474791   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1474792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1474793   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1474794   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1474795   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1474796   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1474797   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1474798   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1474799   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1474800   +END;
MPRINT(EM_DIAGRAM):   END;
1474801   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1474802   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1474803   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1474804   +drop
1474805   +H11
1474806   +H12
1474807   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1474808   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1474809   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1474810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474811   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1474812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474813   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1474814   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1474815   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1474816   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1474817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474818   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1474819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474820   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1474821   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1474822   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1474823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474824   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1474825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474826   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1474827   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1474828   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1474829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474830   +* Ensmbl29: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 7 of 10;
1474831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474833   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1474834   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1474835   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1474836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1474837   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1474838   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1474839   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1474840   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1474841   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1474842   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1474843   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1474844   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1474845   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1474846   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1474847   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1474848   +LENGTH _WARN_ $4
1474849   +      F_DepVar  $ 12
1474850   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1474851   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1474852   +
1474853   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1474854   +
1474855   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1474856   +
1474857   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1474858   +
1474859   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1474860   +
1474861   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1474862   +
1474863   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1474864   +
1474865   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1474866   +
1474867   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1474868   +
1474869   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1474870   +
1474871   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1474872   +
1474873   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1474874   +
1474875   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1474876   +
1474877   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1474878   +
1474879   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1474880   +
1474881   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1474882   +
1474883   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1474884   +
1474885   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1474886   +
1474887   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1474888   +
1474889   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1474890   +
1474891   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1474892   +
1474893   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1474894   +
1474895   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1474896   +
1474897   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1474898   +
1474899   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1474900   +
1474901   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1474902   +
1474903   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1474904   +
1474905   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1474906   +
1474907   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1474908   +
1474909   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1474910   +
1474911   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1474912   +
1474913   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1474914   +
1474915   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1474916   +
1474917   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1474918   +
1474919   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1474920   +
1474921   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1474922   +
1474923   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1474924   +
1474925   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1474926   +
1474927   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1474928   +
1474929   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1474930   +
1474931   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1474932   +
1474933   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1474934   +
1474935   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1474936   +
1474937   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1474938   +
1474939   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1474940   +
1474941   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1474942   +
1474943   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1474944   +
1474945   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1474946   +
1474947   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1474948   +
1474949   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1474950   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1474951   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1474952   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1474953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474955   +end;
MPRINT(EM_DIAGRAM):   end;
1474956   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474957   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474958   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1474959   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474960   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474961   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1474962   +   end;
MPRINT(EM_DIAGRAM):   end;
1474963   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474964   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1474965   +   end;
MPRINT(EM_DIAGRAM):   end;
1474966   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474967   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1474968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474970   +   end;
MPRINT(EM_DIAGRAM):   end;
1474971   +end;
MPRINT(EM_DIAGRAM):   end;
1474972   +
1474973   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1474974   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1474975   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1474976   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1474977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1474978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474979   +end;
MPRINT(EM_DIAGRAM):   end;
1474980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1474981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1474982   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1474983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1474984   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1474985   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1474986   +   end;
MPRINT(EM_DIAGRAM):   end;
1474987   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1474988   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1474989   +   end;
MPRINT(EM_DIAGRAM):   end;
1474990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1474991   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1474992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1474993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1474994   +   end;
MPRINT(EM_DIAGRAM):   end;
1474995   +end;
MPRINT(EM_DIAGRAM):   end;
1474996   +
1474997   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1474998   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1474999   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1475000   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1475001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475003   +end;
MPRINT(EM_DIAGRAM):   end;
1475004   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475006   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1475007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475009   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1475010   +   end;
MPRINT(EM_DIAGRAM):   end;
1475011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475012   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1475013   +   end;
MPRINT(EM_DIAGRAM):   end;
1475014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475015   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1475016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475018   +   end;
MPRINT(EM_DIAGRAM):   end;
1475019   +end;
MPRINT(EM_DIAGRAM):   end;
1475020   +
1475021   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1475022   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1475023   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1475024   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1475025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475027   +end;
MPRINT(EM_DIAGRAM):   end;
1475028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475030   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1475031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475032   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475033   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1475034   +   end;
MPRINT(EM_DIAGRAM):   end;
1475035   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475036   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1475037   +   end;
MPRINT(EM_DIAGRAM):   end;
1475038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475039   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1475040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475042   +   end;
MPRINT(EM_DIAGRAM):   end;
1475043   +end;
MPRINT(EM_DIAGRAM):   end;
1475044   +
1475045   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1475046   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1475047   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1475048   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1475049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475051   +end;
MPRINT(EM_DIAGRAM):   end;
1475052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475054   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1475055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475057   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1475058   +   end;
MPRINT(EM_DIAGRAM):   end;
1475059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475060   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1475061   +   end;
MPRINT(EM_DIAGRAM):   end;
1475062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475063   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1475064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475066   +   end;
MPRINT(EM_DIAGRAM):   end;
1475067   +end;
MPRINT(EM_DIAGRAM):   end;
1475068   +
1475069   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1475070   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1475071   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1475072   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1475073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475075   +end;
MPRINT(EM_DIAGRAM):   end;
1475076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475078   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1475079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475081   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1475082   +   end;
MPRINT(EM_DIAGRAM):   end;
1475083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475084   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1475085   +   end;
MPRINT(EM_DIAGRAM):   end;
1475086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475087   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1475088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475090   +   end;
MPRINT(EM_DIAGRAM):   end;
1475091   +end;
MPRINT(EM_DIAGRAM):   end;
1475092   +
1475093   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1475094   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1475095   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1475096   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1475097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475099   +end;
MPRINT(EM_DIAGRAM):   end;
1475100   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475102   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1475103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475104   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1475105   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1475106   +   end;
MPRINT(EM_DIAGRAM):   end;
1475107   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1475108   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1475109   +   end;
MPRINT(EM_DIAGRAM):   end;
1475110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475111   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1475112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475114   +   end;
MPRINT(EM_DIAGRAM):   end;
1475115   +end;
MPRINT(EM_DIAGRAM):   end;
1475116   +
1475117   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1475118   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1475119   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1475120   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1475121   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1475122   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1475123   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1475124   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1475125   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1475126   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1475127   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1475128   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1475129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475131   +end;
MPRINT(EM_DIAGRAM):   end;
1475132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475133   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1475134   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1475135   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475136   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1475137   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1475138   +   end;
MPRINT(EM_DIAGRAM):   end;
1475139   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1475140   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1475141   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1475142   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1475143   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1475144   +   end;
MPRINT(EM_DIAGRAM):   end;
1475145   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1475146   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1475147   +   end;
MPRINT(EM_DIAGRAM):   end;
1475148   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1475149   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1475150   +   end;
MPRINT(EM_DIAGRAM):   end;
1475151   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1475152   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1475153   +   end;
MPRINT(EM_DIAGRAM):   end;
1475154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475155   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1475156   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1475157   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1475158   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1475159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475161   +   end;
MPRINT(EM_DIAGRAM):   end;
1475162   +end;
MPRINT(EM_DIAGRAM):   end;
1475163   +
1475164   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1475165   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1475166   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1475167   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1475168   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1475169   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1475170   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1475171   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1475172   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1475173   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1475174   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1475175   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1475176   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1475177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475179   +end;
MPRINT(EM_DIAGRAM):   end;
1475180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475181   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1475182   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1475183   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475184   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1475185   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1475186   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1475187   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1475188   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1475189   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475190   +         end;
MPRINT(EM_DIAGRAM):   end;
1475191   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1475192   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1475193   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1475194   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475195   +            end;
MPRINT(EM_DIAGRAM):   end;
1475196   +         end;
MPRINT(EM_DIAGRAM):   end;
1475197   +      end;
MPRINT(EM_DIAGRAM):   end;
1475198   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1475199   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1475200   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1475201   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475202   +         end;
MPRINT(EM_DIAGRAM):   end;
1475203   +      end;
MPRINT(EM_DIAGRAM):   end;
1475204   +   end;
MPRINT(EM_DIAGRAM):   end;
1475205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475206   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1475207   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1475208   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475209   +      end;
MPRINT(EM_DIAGRAM):   end;
1475210   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1475211   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1475212   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1475213   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1475214   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1475215   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1475216   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475217   +         end;
MPRINT(EM_DIAGRAM):   end;
1475218   +      end;
MPRINT(EM_DIAGRAM):   end;
1475219   +   end;
MPRINT(EM_DIAGRAM):   end;
1475220   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1475221   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1475222   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1475223   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1475224   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1475225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475227   +   end;
MPRINT(EM_DIAGRAM):   end;
1475228   +end;
MPRINT(EM_DIAGRAM):   end;
1475229   +
1475230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475231   +*** Checking missing input Interval
1475232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1475233   +
1475234   +IF NMISS(
1475235   +   AcceptedCmpTotal ,
1475236   +   Age ,
1475237   +   Frq ,
1475238   +   Income ,
1475239   +   Kidhome ,
1475240   +   Mnt ,
1475241   +   MntFishProducts ,
1475242   +   MntFruits ,
1475243   +   MntGoldProds ,
1475244   +   MntMeatProducts ,
1475245   +   MntSweetProducts ,
1475246   +   MntWines ,
1475247   +   MonthsAsCustomer ,
1475248   +   NumCatalogPurchases ,
1475249   +   NumDealsPurchases ,
1475250   +   NumDistPurchases ,
1475251   +   NumStorePurchases ,
1475252   +   NumWebPurchases ,
1475253   +   NumWebVisitsMonth ,
1475254   +   RFMstat ,
1475255   +   RMntFrq ,
1475256   +   Recency ,
1475257   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1475258   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1475259   +
1475260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475261   +END;
MPRINT(EM_DIAGRAM):   END;
1475262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475263   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1475264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475265   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1475266   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1475267   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1475268   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1475269   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1475270   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1475271   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1475272   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1475273   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1475274   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1475275   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1475276   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1475277   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1475278   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1475279   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1475280   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1475281   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1475282   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1475283   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1475284   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1475285   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1475286   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1475287   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1475288   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1475289   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1475290   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1475291   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1475292   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1475293   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1475294   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1475295   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1475296   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1475297   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1475298   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1475299   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1475300   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1475301   +END;
MPRINT(EM_DIAGRAM):   END;
1475302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1475303   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1475304   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1475305   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1475306   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1475307   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1475308   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1475309   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1475310   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1475311   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1475312   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1475313   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1475314   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1475315   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1475316   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1475317   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1475318   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1475319   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1475320   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1475321   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1475322   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1475323   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1475324   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1475325   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1475326   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1475327   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1475328   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1475329   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1475330   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1475331   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1475332   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1475333   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1475334   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1475335   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1475336   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1475337   +   ELSE S_NumCatalogPurchases
1475338   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1475339   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1475340   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1475341   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1475342   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1475343   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1475344   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1475345   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1475346   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1475347   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1475348   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1475349   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1475350   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1475351   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1475352   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1475353   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1475354   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1475355   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1475356   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1475357   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1475358   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1475359   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1475360   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1475361   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1475362   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1475363   +END;
MPRINT(EM_DIAGRAM):   END;
1475364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475365   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1475366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475368   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1475369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475371   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1475372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475373   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1475374   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1475375   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1475376   +        S_Income  +     0.49557647195287 * S_Kidhome
1475377   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1475378   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1475379   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1475380   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1475381   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1475382   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1475383   +          +     1.29965538748336 * S_NumDealsPurchases
1475384   +          +     0.16818868463142 * S_NumDistPurchases
1475385   +          +    -0.64507792847411 * S_NumStorePurchases
1475386   +          +    -0.52243329275268 * S_NumWebPurchases
1475387   +          +     1.48521107923182 * S_NumWebVisitsMonth
1475388   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1475389   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1475390   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1475391   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1475392   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1475393   +        S_Income  +       0.536631748871 * S_Kidhome
1475394   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1475395   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1475396   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1475397   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1475398   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1475399   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1475400   +          +    -0.63220849663702 * S_NumDealsPurchases
1475401   +          +    -0.03517440588176 * S_NumDistPurchases
1475402   +          +     0.90435516280473 * S_NumStorePurchases
1475403   +          +     1.02540776095101 * S_NumWebPurchases
1475404   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1475405   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1475406   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1475407   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1475408   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1475409   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1475410   +        S_Income  +     0.45173611630992 * S_Kidhome
1475411   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1475412   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1475413   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1475414   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1475415   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1475416   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1475417   +          +     0.00572910064772 * S_NumDealsPurchases
1475418   +          +    -0.43545754325176 * S_NumDistPurchases
1475419   +          +     0.12831980635185 * S_NumStorePurchases
1475420   +          +     0.02223697618186 * S_NumWebPurchases
1475421   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1475422   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1475423   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1475424   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1475425   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1475426   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1475427   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1475428   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1475429   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
1475430   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1475431   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1475432   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1475433   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1475434   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
1475435   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1475436   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1475437   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1475438   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1475439   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
1475440   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1475441   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1475442   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1475443   +          +     0.14010081581672 * Marital_StatusDivorced
1475444   +          +     0.03574033044092 * Marital_StatusMarried
1475445   +          +    -0.14272769898675 * Marital_StatusSingle
1475446   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1475447   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1475448   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1475449   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1475450   +          +    -0.14878433798537 * Marital_StatusDivorced
1475451   +          +     0.14990226067603 * Marital_StatusMarried
1475452   +          +    -0.50903755449357 * Marital_StatusSingle
1475453   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1475454   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1475455   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1475456   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1475457   +          +    -0.52568922939912 * Marital_StatusDivorced
1475458   +          +     1.74121506979092 * Marital_StatusMarried
1475459   +          +    -1.16029880777095 * Marital_StatusSingle
1475460   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1475461   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1475462   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1475463   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1475464   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1475465   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1475466   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1475467   +END;
MPRINT(EM_DIAGRAM):   END;
1475468   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1475469   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1475470   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1475471   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1475472   +END;
MPRINT(EM_DIAGRAM):   END;
1475473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475474   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1475475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475476   +
1475477   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1475478   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1475479   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1475480   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1475481   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1475482   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475483   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1475484   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1475485   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1475486   +end;
MPRINT(EM_DIAGRAM):   end;
1475487   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475488   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1475489   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1475490   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1475491   +   end;
MPRINT(EM_DIAGRAM):   end;
1475492   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1475493   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1475494   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1475495   +   end;
MPRINT(EM_DIAGRAM):   end;
1475496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475497   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1475498   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1475499   +   end;
MPRINT(EM_DIAGRAM):   end;
1475500   +end;
MPRINT(EM_DIAGRAM):   end;
1475501   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1475502   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1475503   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
1475504   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1475505   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1475506   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1475507   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1475508   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1475509   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1475510   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1475511   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1475512   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1475513   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1475514   +END;
MPRINT(EM_DIAGRAM):   END;
1475515   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1475516   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1475517   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1475518   +END;
MPRINT(EM_DIAGRAM):   END;
1475519   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1475520   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1475521   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1475522   +END;
MPRINT(EM_DIAGRAM):   END;
1475523   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1475524   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1475525   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1475526   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1475527   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1475528   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1475529   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1475530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475531   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1475532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475533   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1475534   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1475535   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1475536   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1475537   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1475538   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1475539   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1475540   +END;
MPRINT(EM_DIAGRAM):   END;
1475541   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1475542   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1475543   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1475544   +drop
1475545   +H11
1475546   +H12
1475547   +H13
1475548   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1475549   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1475550   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1475551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475552   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1475553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475554   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1475555   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1475556   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1475557   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1475558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475559   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1475560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475561   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1475562   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1475563   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1475564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475565   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1475566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475567   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1475568   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1475569   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1475570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475571   +* Ensmbl29: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 8 of 10;
1475572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475574   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1475575   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1475576   +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
1475577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1475578   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1475579   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1475580   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1475581   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1475582   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1475583   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1475584   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1475585   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1475586   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1475587   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1475588   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1475589   +LENGTH _WARN_ $4
1475590   +      F_DepVar  $ 12
1475591   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1475592   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1475593   +
1475594   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1475595   +
1475596   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1475597   +
1475598   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1475599   +
1475600   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1475601   +
1475602   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1475603   +
1475604   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1475605   +
1475606   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1475607   +
1475608   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1475609   +
1475610   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1475611   +
1475612   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1475613   +
1475614   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1475615   +
1475616   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1475617   +
1475618   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1475619   +
1475620   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1475621   +
1475622   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1475623   +
1475624   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1475625   +
1475626   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1475627   +
1475628   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1475629   +
1475630   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1475631   +
1475632   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1475633   +
1475634   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1475635   +
1475636   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1475637   +
1475638   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1475639   +
1475640   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1475641   +
1475642   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1475643   +
1475644   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1475645   +
1475646   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1475647   +
1475648   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1475649   +
1475650   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1475651   +
1475652   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1475653   +
1475654   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1475655   +
1475656   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1475657   +
1475658   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1475659   +
1475660   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1475661   +
1475662   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1475663   +
1475664   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1475665   +
1475666   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1475667   +
1475668   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1475669   +
1475670   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1475671   +
1475672   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1475673   +
1475674   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1475675   +
1475676   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1475677   +
1475678   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1475679   +
1475680   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1475681   +
1475682   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1475683   +
1475684   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1475685   +
1475686   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1475687   +
1475688   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1475689   +
1475690   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1475691   +
1475692   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1475693   +
1475694   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1475695   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1475696   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1475697   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1475698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475700   +end;
MPRINT(EM_DIAGRAM):   end;
1475701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475703   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1475704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475706   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1475707   +   end;
MPRINT(EM_DIAGRAM):   end;
1475708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475709   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1475710   +   end;
MPRINT(EM_DIAGRAM):   end;
1475711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475712   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1475713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475715   +   end;
MPRINT(EM_DIAGRAM):   end;
1475716   +end;
MPRINT(EM_DIAGRAM):   end;
1475717   +
1475718   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1475719   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1475720   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1475721   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1475722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475724   +end;
MPRINT(EM_DIAGRAM):   end;
1475725   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475727   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1475728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475730   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1475731   +   end;
MPRINT(EM_DIAGRAM):   end;
1475732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475733   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1475734   +   end;
MPRINT(EM_DIAGRAM):   end;
1475735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475736   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1475737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475739   +   end;
MPRINT(EM_DIAGRAM):   end;
1475740   +end;
MPRINT(EM_DIAGRAM):   end;
1475741   +
1475742   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1475743   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1475744   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1475745   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1475746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475748   +end;
MPRINT(EM_DIAGRAM):   end;
1475749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475751   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1475752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475754   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1475755   +   end;
MPRINT(EM_DIAGRAM):   end;
1475756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475757   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1475758   +   end;
MPRINT(EM_DIAGRAM):   end;
1475759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475760   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1475761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475763   +   end;
MPRINT(EM_DIAGRAM):   end;
1475764   +end;
MPRINT(EM_DIAGRAM):   end;
1475765   +
1475766   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1475767   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1475768   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1475769   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1475770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475772   +end;
MPRINT(EM_DIAGRAM):   end;
1475773   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475775   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1475776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475777   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475778   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1475779   +   end;
MPRINT(EM_DIAGRAM):   end;
1475780   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475781   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1475782   +   end;
MPRINT(EM_DIAGRAM):   end;
1475783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475784   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1475785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475787   +   end;
MPRINT(EM_DIAGRAM):   end;
1475788   +end;
MPRINT(EM_DIAGRAM):   end;
1475789   +
1475790   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1475791   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1475792   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1475793   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1475794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475796   +end;
MPRINT(EM_DIAGRAM):   end;
1475797   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475799   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1475800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475801   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475802   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1475803   +   end;
MPRINT(EM_DIAGRAM):   end;
1475804   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475805   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1475806   +   end;
MPRINT(EM_DIAGRAM):   end;
1475807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475808   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1475809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475811   +   end;
MPRINT(EM_DIAGRAM):   end;
1475812   +end;
MPRINT(EM_DIAGRAM):   end;
1475813   +
1475814   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1475815   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1475816   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1475817   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1475818   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475820   +end;
MPRINT(EM_DIAGRAM):   end;
1475821   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475822   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475823   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1475824   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475825   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1475826   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1475827   +   end;
MPRINT(EM_DIAGRAM):   end;
1475828   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1475829   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1475830   +   end;
MPRINT(EM_DIAGRAM):   end;
1475831   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475832   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1475833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475835   +   end;
MPRINT(EM_DIAGRAM):   end;
1475836   +end;
MPRINT(EM_DIAGRAM):   end;
1475837   +
1475838   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1475839   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1475840   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1475841   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1475842   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475843   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475844   +end;
MPRINT(EM_DIAGRAM):   end;
1475845   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475846   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1475847   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1475848   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475849   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1475850   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1475851   +   end;
MPRINT(EM_DIAGRAM):   end;
1475852   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1475853   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1475854   +   end;
MPRINT(EM_DIAGRAM):   end;
1475855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475856   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1475857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475859   +   end;
MPRINT(EM_DIAGRAM):   end;
1475860   +end;
MPRINT(EM_DIAGRAM):   end;
1475861   +
1475862   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1475863   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1475864   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1475865   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1475866   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1475867   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1475868   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1475869   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1475870   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1475871   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1475872   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1475873   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1475874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475876   +end;
MPRINT(EM_DIAGRAM):   end;
1475877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475878   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1475879   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1475880   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475881   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1475882   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1475883   +   end;
MPRINT(EM_DIAGRAM):   end;
1475884   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1475885   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1475886   +      EducationBasic = -1;
The SAS System

MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1475887   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1475888   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1475889   +   end;
MPRINT(EM_DIAGRAM):   end;
1475890   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1475891   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1475892   +   end;
MPRINT(EM_DIAGRAM):   end;
1475893   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1475894   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1475895   +   end;
MPRINT(EM_DIAGRAM):   end;
1475896   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1475897   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1475898   +   end;
MPRINT(EM_DIAGRAM):   end;
1475899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475900   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1475901   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1475902   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1475903   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1475904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475906   +   end;
MPRINT(EM_DIAGRAM):   end;
1475907   +end;
MPRINT(EM_DIAGRAM):   end;
1475908   +
1475909   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1475910   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1475911   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1475912   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1475913   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1475914   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1475915   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1475916   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1475917   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1475918   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1475919   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1475920   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1475921   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1475922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1475923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475924   +end;
MPRINT(EM_DIAGRAM):   end;
1475925   +else do;
MPRINT(EM_DIAGRAM):   else do;
1475926   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1475927   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1475928   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1475929   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1475930   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1475931   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1475932   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1475933   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1475934   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475935   +         end;
MPRINT(EM_DIAGRAM):   end;
1475936   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1475937   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1475938   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1475939   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475940   +            end;
MPRINT(EM_DIAGRAM):   end;
1475941   +         end;
MPRINT(EM_DIAGRAM):   end;
1475942   +      end;
MPRINT(EM_DIAGRAM):   end;
1475943   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1475944   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1475945   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1475946   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475947   +         end;
MPRINT(EM_DIAGRAM):   end;
1475948   +      end;
MPRINT(EM_DIAGRAM):   end;
1475949   +   end;
MPRINT(EM_DIAGRAM):   end;
1475950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1475951   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1475952   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1475953   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475954   +      end;
MPRINT(EM_DIAGRAM):   end;
1475955   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1475956   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1475957   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1475958   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1475959   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1475960   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1475961   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1475962   +         end;
MPRINT(EM_DIAGRAM):   end;
1475963   +      end;
MPRINT(EM_DIAGRAM):   end;
1475964   +   end;
MPRINT(EM_DIAGRAM):   end;
1475965   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1475966   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1475967   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1475968   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1475969   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1475970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1475971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1475972   +   end;
MPRINT(EM_DIAGRAM):   end;
1475973   +end;
MPRINT(EM_DIAGRAM):   end;
1475974   +
1475975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1475976   +*** Checking missing input Interval
1475977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1475978   +
1475979   +IF NMISS(
1475980   +   AcceptedCmpTotal ,
1475981   +   Age ,
1475982   +   Frq ,
1475983   +   Income ,
1475984   +   Kidhome ,
1475985   +   Mnt ,
1475986   +   MntFishProducts ,
1475987   +   MntFruits ,
1475988   +   MntGoldProds ,
1475989   +   MntMeatProducts ,
1475990   +   MntSweetProducts ,
1475991   +   MntWines ,
1475992   +   MonthsAsCustomer ,
1475993   +   NumCatalogPurchases ,
1475994   +   NumDealsPurchases ,
1475995   +   NumDistPurchases ,
1475996   +   NumStorePurchases ,
1475997   +   NumWebPurchases ,
1475998   +   NumWebVisitsMonth ,
1475999   +   RFMstat ,
1476000   +   RMntFrq ,
1476001   +   Recency ,
1476002   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1476003   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1476004   +
1476005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476006   +END;
MPRINT(EM_DIAGRAM):   END;
1476007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476008   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1476009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476010   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1476011   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1476012   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1476013   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1476014   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1476015   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1476016   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1476017   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1476018   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1476019   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1476020   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1476021   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1476022   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1476023   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1476024   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1476025   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1476026   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1476027   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1476028   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1476029   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1476030   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1476031   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1476032   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1476033   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1476034   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1476035   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1476036   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1476037   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1476038   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1476039   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1476040   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1476041   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1476042   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1476043   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1476044   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1476045   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1476046   +END;
MPRINT(EM_DIAGRAM):   END;
1476047   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1476048   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1476049   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1476050   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1476051   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1476052   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1476053   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1476054   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1476055   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1476056   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1476057   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1476058   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1476059   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1476060   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1476061   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1476062   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1476063   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1476064   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1476065   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1476066   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1476067   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1476068   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1476069   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1476070   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1476071   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1476072   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1476073   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1476074   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1476075   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1476076   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1476077   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1476078   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1476079   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1476080   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1476081   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1476082   +   ELSE S_NumCatalogPurchases
1476083   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1476084   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1476085   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1476086   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1476087   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1476088   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1476089   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1476090   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1476091   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1476092   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1476093   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1476094   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1476095   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1476096   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1476097   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1476098   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1476099   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1476100   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1476101   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1476102   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1476103   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1476104   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1476105   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1476106   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1476107   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1476108   +END;
MPRINT(EM_DIAGRAM):   END;
1476109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476110   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1476111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476113   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1476114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476116   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1476117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476118   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1476119   +   H11  =    -0.49268542152723 * S_AcceptedCmpTotal  +     -0.0481397514569 *
1476120   +        S_Age  +    -0.30437636824683 * S_Frq  +    -1.15179334457144 *
1476121   +        S_Income  +     0.52341833722719 * S_Kidhome
1476122   +          +    -0.21261714885662 * S_Mnt  +    -0.10196325382831 *
1476123   +        S_MntFishProducts  +     0.18788251887399 * S_MntFruits
1476124   +          +     0.07877248271808 * S_MntGoldProds  +     -0.3554186123772 *
1476125   +        S_MntMeatProducts  +     0.26810834903306 * S_MntSweetProducts
1476126   +          +      0.7572736068799 * S_MntWines  +    -0.11619352540399 *
1476127   +        S_MonthsAsCustomer  +    -0.46080176244829 * S_NumCatalogPurchases
1476128   +          +    -0.07601319156416 * S_NumDealsPurchases
1476129   +          +    -0.37691059923172 * S_NumDistPurchases
1476130   +          +     0.14479416923691 * S_NumStorePurchases
1476131   +          +     0.22886116861382 * S_NumWebPurchases
1476132   +          +    -1.05452266604504 * S_NumWebVisitsMonth
1476133   +          +     0.11426625648846 * S_RFMstat  +    -0.46845377036873 *
1476134   +        S_RMntFrq  +     1.39805990084367 * S_Recency
1476135   +          +     0.91325795567367 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.49268542152723 * S_AcceptedCmpTotal + -0.0481397514569 * S_Age 
+ -0.30437636824683 * S_Frq + -1.15179334457144 * S_Income + 0.52341833722719 * S_Kidhome + 
-0.21261714885662 * S_Mnt + -0.10196325382831 * S_MntFishProducts + 0.18788251887399 * 
S_MntFruits + 0.07877248271808 * S_MntGoldProds + -0.3554186123772 * S_MntMeatProducts + 
0.26810834903306 * S_MntSweetProducts + 0.7572736068799 * S_MntWines + -0.11619352540399 * 
S_MonthsAsCustomer + -0.46080176244829 * S_NumCatalogPurchases + -0.07601319156416 * 
S_NumDealsPurchases + -0.37691059923172 * S_NumDistPurchases + 0.14479416923691 * 
S_NumStorePurchases + 0.22886116861382 * S_NumWebPurchases + -1.05452266604504 * 
S_NumWebVisitsMonth + 0.11426625648846 * S_RFMstat + -0.46845377036873 * S_RMntFrq + 
1.39805990084367 * S_Recency + 0.91325795567367 * S_Teenhome ;
1476136   +   H12  =     0.48640474281615 * S_AcceptedCmpTotal  +     0.03168788563965 *
1476137   +        S_Age  +    -0.02802128226737 * S_Frq  +     0.52993214073901 *
1476138   +        S_Income  +     0.24958351789577 * S_Kidhome
1476139   +          +     0.25221072579725 * S_Mnt  +    -0.54431466149526 *
1476140   +        S_MntFishProducts  +    -0.09969634201392 * S_MntFruits
1476141   +          +     0.22251888175317 * S_MntGoldProds  +     2.21720479300716 *
1476142   +        S_MntMeatProducts  +     0.08411214394291 * S_MntSweetProducts
1476143   +          +    -0.83482542959891 * S_MntWines  +     0.06928323386075 *
1476144   +        S_MonthsAsCustomer  +     1.61603076533547 * S_NumCatalogPurchases
1476145   +          +     0.79919814392328 * S_NumDealsPurchases
1476146   +          +     0.30394718497487 * S_NumDistPurchases
1476147   +          +      -0.727130739278 * S_NumStorePurchases
1476148   +          +    -0.92337052372179 * S_NumWebPurchases
1476149   +          +     0.22125703025242 * S_NumWebVisitsMonth
1476150   +          +     0.51615035692083 * S_RFMstat  +     0.09759485646525 *
1476151   +        S_RMntFrq  +    -0.21632393786918 * S_Recency
1476152   +          +    -0.09817720742254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.48640474281615 * S_AcceptedCmpTotal + 0.03168788563965 * S_Age + 
-0.02802128226737 * S_Frq + 0.52993214073901 * S_Income + 0.24958351789577 * S_Kidhome + 
0.25221072579725 * S_Mnt + -0.54431466149526 * S_MntFishProducts + -0.09969634201392 * 
S_MntFruits + 0.22251888175317 * S_MntGoldProds + 2.21720479300716 * S_MntMeatProducts + 
0.08411214394291 * S_MntSweetProducts + -0.83482542959891 * S_MntWines + 0.06928323386075 * 
S_MonthsAsCustomer + 1.61603076533547 * S_NumCatalogPurchases + 0.79919814392328 * 
S_NumDealsPurchases + 0.30394718497487 * S_NumDistPurchases + -0.727130739278 * 
S_NumStorePurchases + -0.92337052372179 * S_NumWebPurchases + 0.22125703025242 * 
S_NumWebVisitsMonth + 0.51615035692083 * S_RFMstat + 0.09759485646525 * S_RMntFrq + 
-0.21632393786918 * S_Recency + -0.09817720742254 * S_Teenhome ;
1476153   +   H13  =    -0.14277955421105 * S_AcceptedCmpTotal  +     0.01891543541262 *
1476154   +        S_Age  +    -0.09449326498218 * S_Frq  +    -0.03060296052615 *
1476155   +        S_Income  +    -0.02210730279852 * S_Kidhome
1476156   +          +     0.15705631910101 * S_Mnt  +     0.08573647183827 *
1476157   +        S_MntFishProducts  +    -0.07727594473101 * S_MntFruits
1476158   +          +     0.10800565745981 * S_MntGoldProds  +     0.16136844354024 *
1476159   +        S_MntMeatProducts  +    -0.27592138838926 * S_MntSweetProducts
1476160   +          +    -0.28884862043521 * S_MntWines  +    -0.26221449264568 *
1476161   +        S_MonthsAsCustomer  +    -0.12893818317268 * S_NumCatalogPurchases
1476162   +          +    -0.07260787713046 * S_NumDealsPurchases
1476163   +          +    -0.11357594278299 * S_NumDistPurchases
1476164   +          +    -0.12187788759653 * S_NumStorePurchases
1476165   +          +    -0.12854188822638 * S_NumWebPurchases
1476166   +          +     0.19328484993193 * S_NumWebVisitsMonth
1476167   +          +     0.29126701299369 * S_RFMstat  +       0.295572030551 *
1476168   +        S_RMntFrq  +    -0.17474693596234 * S_Recency
1476169   +          +    -0.15767296223747 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14277955421105 * S_AcceptedCmpTotal + 0.01891543541262 * S_Age 
+ -0.09449326498218 * S_Frq + -0.03060296052615 * S_Income + -0.02210730279852 * S_Kidhome + 
0.15705631910101 * S_Mnt + 0.08573647183827 * S_MntFishProducts + -0.07727594473101 * 
S_MntFruits + 0.10800565745981 * S_MntGoldProds + 0.16136844354024 * S_MntMeatProducts + 
-0.27592138838926 * S_MntSweetProducts + -0.28884862043521 * S_MntWines + -0.26221449264568 * 
S_MonthsAsCustomer + -0.12893818317268 * S_NumCatalogPurchases + -0.07260787713046 * 
S_NumDealsPurchases + -0.11357594278299 * S_NumDistPurchases + -0.12187788759653 * 
S_NumStorePurchases + -0.12854188822638 * S_NumWebPurchases + 0.19328484993193 * 
S_NumWebVisitsMonth + 0.29126701299369 * S_RFMstat + 0.295572030551 * S_RMntFrq + 
-0.17474693596234 * S_Recency + -0.15767296223747 * S_Teenhome ;
1476170   +   H14  =     0.02882140654096 * S_AcceptedCmpTotal  +     0.22754549790851 *
1476171   +        S_Age  +     0.62237954814905 * S_Frq  +     0.32094678094502 *
1476172   +        S_Income  +     -0.5159289111115 * S_Kidhome
1476173   +          +    -0.06660708376246 * S_Mnt  +     0.23505454155784 *
1476174   +        S_MntFishProducts  +     -0.1751094914934 * S_MntFruits
1476175   +          +     0.28529181082906 * S_MntGoldProds  +    -0.86064239437512 *
1476176   +        S_MntMeatProducts  +    -0.11869244038768 * S_MntSweetProducts
1476177   +          +     0.54178192135459 * S_MntWines  +     0.01320164526542 *
1476178   +        S_MonthsAsCustomer  +     -0.8775343676818 * S_NumCatalogPurchases
1476179   +          +    -0.76643907891635 * S_NumDealsPurchases
1476180   +          +     0.28173289049322 * S_NumDistPurchases
1476181   +          +     0.65522454520442 * S_NumStorePurchases
1476182   +          +     0.68112901460293 * S_NumWebPurchases
1476183   +          +    -0.49101731268641 * S_NumWebVisitsMonth
1476184   +          +    -0.19434806570231 * S_RFMstat  +    -0.00086194515061 *
1476185   +        S_RMntFrq  +     0.47432332222746 * S_Recency
1476186   +          +    -0.05016870847242 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02882140654096 * S_AcceptedCmpTotal + 0.22754549790851 * S_Age + 
0.62237954814905 * S_Frq + 0.32094678094502 * S_Income + -0.5159289111115 * S_Kidhome + 
-0.06660708376246 * S_Mnt + 0.23505454155784 * S_MntFishProducts + -0.1751094914934 * 
S_MntFruits + 0.28529181082906 * S_MntGoldProds + -0.86064239437512 * S_MntMeatProducts + 
-0.11869244038768 * S_MntSweetProducts + 0.54178192135459 * S_MntWines + 0.01320164526542 * 
S_MonthsAsCustomer + -0.8775343676818 * S_NumCatalogPurchases + -0.76643907891635 * 
S_NumDealsPurchases + 0.28173289049322 * S_NumDistPurchases + 0.65522454520442 * 
S_NumStorePurchases + 0.68112901460293 * S_NumWebPurchases + -0.49101731268641 * 
S_NumWebVisitsMonth + -0.19434806570231 * S_RFMstat + -0.00086194515061 * S_RMntFrq + 
0.47432332222746 * S_Recency + -0.05016870847242 * S_Teenhome ;
1476187   +   H15  =    -0.53993167927046 * S_AcceptedCmpTotal  +    -0.01376485869661 *
1476188   +        S_Age  +     0.13417021721762 * S_Frq  +    -0.46098316120524 *
1476189   +        S_Income  +     0.79883165437194 * S_Kidhome
1476190   +          +    -0.08868062204795 * S_Mnt  +     0.27921118443695 *
1476191   +        S_MntFishProducts  +     0.07333408727108 * S_MntFruits
1476192   +          +    -0.12699517331566 * S_MntGoldProds  +    -0.83076183794341 *
1476193   +        S_MntMeatProducts  +     0.07046050445165 * S_MntSweetProducts
1476194   +          +     0.39887580122915 * S_MntWines  +     0.22266979348172 *
1476195   +        S_MonthsAsCustomer  +    -0.63148593968536 * S_NumCatalogPurchases
1476196   +          +    -0.54240596184474 * S_NumDealsPurchases
1476197   +          +     0.07214067132859 * S_NumDistPurchases
1476198   +          +     0.63136920851698 * S_NumStorePurchases
1476199   +          +     0.67036298761526 * S_NumWebPurchases
1476200   +          +     -1.5590147163003 * S_NumWebVisitsMonth
1476201   +          +    -0.14672746638498 * S_RFMstat  +     0.45614757001513 *
1476202   +        S_RMntFrq  +     1.43166375146019 * S_Recency
1476203   +          +     0.33608033306213 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.53993167927046 * S_AcceptedCmpTotal + -0.01376485869661 * S_Age 
+ 0.13417021721762 * S_Frq + -0.46098316120524 * S_Income + 0.79883165437194 * S_Kidhome + 
-0.08868062204795 * S_Mnt + 0.27921118443695 * S_MntFishProducts + 0.07333408727108 * 
S_MntFruits + -0.12699517331566 * S_MntGoldProds + -0.83076183794341 * S_MntMeatProducts + 
0.07046050445165 * S_MntSweetProducts + 0.39887580122915 * S_MntWines + 0.22266979348172 * 
S_MonthsAsCustomer + -0.63148593968536 * S_NumCatalogPurchases + -0.54240596184474 * 
S_NumDealsPurchases + 0.07214067132859 * S_NumDistPurchases + 0.63136920851698 * 
S_NumStorePurchases + 0.67036298761526 * S_NumWebPurchases + -1.5590147163003 * 
S_NumWebVisitsMonth + -0.14672746638498 * S_RFMstat + 0.45614757001513 * S_RMntFrq + 
1.43166375146019 * S_Recency + 0.33608033306213 * S_Teenhome ;
1476204   +   H11  = H11  +     0.00378267229722 * AcceptedCmp10
1476205   +          +     0.35869089787338 * AcceptedCmp20  +     0.34289379925327 *
1476206   +        AcceptedCmp30  +     0.52644241458012 * AcceptedCmp40
1476207   +          +    -0.13608418232323 * AcceptedCmp50  +      0.0959964311844 *
1476208   +        Complain0  +    -0.33986310453812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00378267229722 * AcceptedCmp10 + 0.35869089787338 * 
AcceptedCmp20 + 0.34289379925327 * AcceptedCmp30 + 0.52644241458012 * AcceptedCmp40 + 
-0.13608418232323 * AcceptedCmp50 + 0.0959964311844 * Complain0 + -0.33986310453812 * 
HigherEducationBinary0 ;
1476209   +   H12  = H12  +    -0.20844623079893 * AcceptedCmp10
1476210   +          +      0.2510523434536 * AcceptedCmp20  +     0.23001544402014 *
1476211   +        AcceptedCmp30  +     0.31575100635625 * AcceptedCmp40
1476212   +          +    -0.27770609908664 * AcceptedCmp50  +     0.23396693724368 *
1476213   +        Complain0  +    -0.14587691179074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20844623079893 * AcceptedCmp10 + 0.2510523434536 * 
AcceptedCmp20 + 0.23001544402014 * AcceptedCmp30 + 0.31575100635625 * AcceptedCmp40 + 
-0.27770609908664 * AcceptedCmp50 + 0.23396693724368 * Complain0 + -0.14587691179074 * 
HigherEducationBinary0 ;
1476214   +   H13  = H13  +    -0.01749375115567 * AcceptedCmp10
1476215   +          +     0.03272810660889 * AcceptedCmp20  +     0.05919744501073 *
1476216   +        AcceptedCmp30  +    -0.05281709288559 * AcceptedCmp40
1476217   +          +     0.17878522964245 * AcceptedCmp50  +    -0.15875476707826 *
1476218   +        Complain0  +     0.12807090869788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01749375115567 * AcceptedCmp10 + 0.03272810660889 * 
AcceptedCmp20 + 0.05919744501073 * AcceptedCmp30 + -0.05281709288559 * AcceptedCmp40 + 
0.17878522964245 * AcceptedCmp50 + -0.15875476707826 * Complain0 + 0.12807090869788 * 
HigherEducationBinary0 ;
1476219   +   H14  = H14  +     0.09851664636541 * AcceptedCmp10
1476220   +          +     0.31377564249189 * AcceptedCmp20  +     0.52269532116349 *
1476221   +        AcceptedCmp30  +     0.02591777861146 * AcceptedCmp40
1476222   +          +     0.32944924737684 * AcceptedCmp50  +     0.47187246513641 *
1476223   +        Complain0  +     0.20705632210077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09851664636541 * AcceptedCmp10 + 0.31377564249189 * 
AcceptedCmp20 + 0.52269532116349 * AcceptedCmp30 + 0.02591777861146 * AcceptedCmp40 + 
0.32944924737684 * AcceptedCmp50 + 0.47187246513641 * Complain0 + 0.20705632210077 * 
HigherEducationBinary0 ;
1476224   +   H15  = H15  +     0.25267160740134 * AcceptedCmp10
1476225   +          +     0.37928521134817 * AcceptedCmp20  +     0.14104403552359 *
1476226   +        AcceptedCmp30  +     0.11544762492946 * AcceptedCmp40
1476227   +          +     0.50603978517673 * AcceptedCmp50  +    -0.00034162341159 *
1476228   +        Complain0  +    -0.00425270701284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.25267160740134 * AcceptedCmp10 + 0.37928521134817 * 
AcceptedCmp20 + 0.14104403552359 * AcceptedCmp30 + 0.11544762492946 * AcceptedCmp40 + 
0.50603978517673 * AcceptedCmp50 + -0.00034162341159 * Complain0 + -0.00425270701284 * 
HigherEducationBinary0 ;
1476229   +   H11  = H11  +     0.21764897070728 * Education2n_Cycle
1476230   +          +    -0.08901311303506 * EducationBasic  +      0.0272878010337 *
1476231   +        EducationGraduation  +     0.05103320060897 * EducationMaster
1476232   +          +    -0.43880138896132 * Marital_StatusDivorced
1476233   +          +     1.07801970957052 * Marital_StatusMarried
1476234   +          +    -1.01564319756795 * Marital_StatusSingle
1476235   +          +     1.06803078970545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21764897070728 * Education2n_Cycle + -0.08901311303506 * 
EducationBasic + 0.0272878010337 * EducationGraduation + 0.05103320060897 * EducationMaster + 
-0.43880138896132 * Marital_StatusDivorced + 1.07801970957052 * Marital_StatusMarried + 
-1.01564319756795 * Marital_StatusSingle + 1.06803078970545 * Marital_StatusTogether ;
1476236   +   H12  = H12  +     0.20450416319293 * Education2n_Cycle
1476237   +          +    -0.09602008725654 * EducationBasic  +     0.01841737017681 *
1476238   +        EducationGraduation  +     0.06732737733154 * EducationMaster
1476239   +          +    -0.26753605060913 * Marital_StatusDivorced
1476240   +          +     0.38107608670301 * Marital_StatusMarried
1476241   +          +     -0.1436641790467 * Marital_StatusSingle
1476242   +          +     0.51604025961093 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20450416319293 * Education2n_Cycle + -0.09602008725654 * 
EducationBasic + 0.01841737017681 * EducationGraduation + 0.06732737733154 * EducationMaster + 
-0.26753605060913 * Marital_StatusDivorced + 0.38107608670301 * Marital_StatusMarried + 
-0.1436641790467 * Marital_StatusSingle + 0.51604025961093 * Marital_StatusTogether ;
1476243   +   H13  = H13  +     0.06208521737633 * Education2n_Cycle
1476244   +          +    -0.33631443686566 * EducationBasic  +     0.16608152113657 *
1476245   +        EducationGraduation  +     0.12802026359779 * EducationMaster
1476246   +          +    -0.08001329849816 * Marital_StatusDivorced
1476247   +          +      0.0371075570789 * Marital_StatusMarried
1476248   +          +     0.00370467546319 * Marital_StatusSingle
1476249   +          +    -0.00676233309382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06208521737633 * Education2n_Cycle + -0.33631443686566 * 
EducationBasic + 0.16608152113657 * EducationGraduation + 0.12802026359779 * EducationMaster + 
-0.08001329849816 * Marital_StatusDivorced + 0.0371075570789 * Marital_StatusMarried + 
0.00370467546319 * Marital_StatusSingle + -0.00676233309382 * Marital_StatusTogether ;
1476250   +   H14  = H14  +     0.23121044223136 * Education2n_Cycle
1476251   +          +     0.20063897603031 * EducationBasic  +    -0.03690411024016 *
1476252   +        EducationGraduation  +    -0.05893576310907 * EducationMaster
1476253   +          +     0.13587543683769 * Marital_StatusDivorced
1476254   +          +    -0.45903453868087 * Marital_StatusMarried
1476255   +          +      0.3498299821692 * Marital_StatusSingle
1476256   +          +    -0.24987552246214 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23121044223136 * Education2n_Cycle + 0.20063897603031 * 
EducationBasic + -0.03690411024016 * EducationGraduation + -0.05893576310907 * EducationMaster 
+ 0.13587543683769 * Marital_StatusDivorced + -0.45903453868087 * Marital_StatusMarried + 
0.3498299821692 * Marital_StatusSingle + -0.24987552246214 * Marital_StatusTogether ;
1476257   +   H15  = H15  +    -0.25453618071143 * Education2n_Cycle
1476258   +          +     0.10531942203707 * EducationBasic  +    -0.11067812258079 *
1476259   +        EducationGraduation  +     0.22861584696672 * EducationMaster
1476260   +          +    -0.23512394203797 * Marital_StatusDivorced
1476261   +          +       0.710701930681 * Marital_StatusMarried
1476262   +          +    -0.56116525410203 * Marital_StatusSingle
1476263   +          +     0.87274230285244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25453618071143 * Education2n_Cycle + 0.10531942203707 * 
EducationBasic + -0.11067812258079 * EducationGraduation + 0.22861584696672 * EducationMaster 
+ -0.23512394203797 * Marital_StatusDivorced + 0.710701930681 * Marital_StatusMarried + 
-0.56116525410203 * Marital_StatusSingle + 0.87274230285244 * Marital_StatusTogether ;
1476264   +   H11  =     1.97354382834855 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.97354382834855 + H11 ;
1476265   +   H12  =     0.19040674177137 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19040674177137 + H12 ;
1476266   +   H13  =    -2.95812486901971 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95812486901971 + H13 ;
1476267   +   H14  =     0.68206105329025 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.68206105329025 + H14 ;
1476268   +   H15  =    -0.15880184648294 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15880184648294 + H15 ;
1476269   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1476270   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1476271   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1476272   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1476273   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1476274   +END;
MPRINT(EM_DIAGRAM):   END;
1476275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1476276   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1476277   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1476278   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1476279   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1476280   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1476281   +END;
MPRINT(EM_DIAGRAM):   END;
1476282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476283   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1476284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476285   +
1476286   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1476287   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1476288   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1476289   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1476290   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1476291   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476292   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1476293   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1476294   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1476295   +end;
MPRINT(EM_DIAGRAM):   end;
1476296   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476297   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1476298   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1476299   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1476300   +   end;
MPRINT(EM_DIAGRAM):   end;
1476301   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1476302   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1476303   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1476304   +   end;
MPRINT(EM_DIAGRAM):   end;
1476305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476306   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1476307   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1476308   +   end;
MPRINT(EM_DIAGRAM):   end;
1476309   +end;
MPRINT(EM_DIAGRAM):   end;
1476310   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1476311   +   P_DepVar1  =    -3.25756779032103 * H11  +     3.11613473869222 * H12
1476312   +          +     0.05860782492357 * H13  +    -2.24562119342825 * H14
1476313   +          +    -3.55426417229617 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.25756779032103 * H11 + 3.11613473869222 * H12 + 
0.05860782492357 * H13 + -2.24562119342825 * H14 + -3.55426417229617 * H15 ;
1476314   +   P_DepVar1  =    -1.11502795304759 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11502795304759 + P_DepVar1 ;
1476315   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1476316   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1476317   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1476318   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1476319   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1476320   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1476321   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1476322   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1476323   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1476324   +END;
MPRINT(EM_DIAGRAM):   END;
1476325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1476326   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1476327   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1476328   +END;
MPRINT(EM_DIAGRAM):   END;
1476329   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1476330   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1476331   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1476332   +END;
MPRINT(EM_DIAGRAM):   END;
1476333   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1476334   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1476335   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1476336   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1476337   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1476338   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1476339   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1476340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476341   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1476342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476343   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1476344   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1476345   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1476346   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1476347   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1476348   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1476349   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1476350   +END;
MPRINT(EM_DIAGRAM):   END;
1476351   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1476352   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1476353   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1476354   +drop
1476355   +H11
1476356   +H12
1476357   +H13
1476358   +H14
1476359   +H15
1476360   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1476361   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1476362   +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
1476363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476364   +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
1476365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476366   +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
1476367   +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
1476368   +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
1476369   +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
1476370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476371   +* Renaming Into variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural7;
1476372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476373   +length Neural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural7_I_DepVar $32;
1476374   +drop Neural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural7_I_DepVar;
1476375   +Neural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural7_I_DepVar = I_DepVar;
1476376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476377   +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
1476378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476379   +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
1476380   +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
1476381   +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
1476382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476383   +* Ensmbl29: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 9 of 10;
1476384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476386   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1476387   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1476388   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1476389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1476390   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1476391   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1476392   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1476393   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1476394   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1476395   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1476396   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1476397   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1476398   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1476399   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1476400   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1476401   +LENGTH _WARN_ $4
1476402   +      F_DepVar  $ 12
1476403   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1476404   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1476405   +
1476406   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1476407   +
1476408   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1476409   +
1476410   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1476411   +
1476412   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1476413   +
1476414   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1476415   +
1476416   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1476417   +
1476418   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1476419   +
1476420   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1476421   +
1476422   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1476423   +
1476424   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1476425   +
1476426   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1476427   +
1476428   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1476429   +
1476430   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1476431   +
1476432   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1476433   +
1476434   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1476435   +
1476436   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1476437   +
1476438   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1476439   +
1476440   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1476441   +
1476442   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1476443   +
1476444   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1476445   +
1476446   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1476447   +
1476448   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1476449   +
1476450   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1476451   +
1476452   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1476453   +
1476454   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1476455   +
1476456   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1476457   +
1476458   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1476459   +
1476460   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1476461   +
1476462   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1476463   +
1476464   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1476465   +
1476466   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1476467   +
1476468   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1476469   +
1476470   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1476471   +
1476472   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1476473   +
1476474   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1476475   +
1476476   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1476477   +
1476478   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1476479   +
1476480   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1476481   +
1476482   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1476483   +
1476484   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1476485   +
1476486   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1476487   +
1476488   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1476489   +
1476490   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1476491   +
1476492   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1476493   +
1476494   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1476495   +
1476496   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1476497   +
1476498   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1476499   +
1476500   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1476501   +
1476502   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1476503   +
1476504   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1476505   +
1476506   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1476507   +
1476508   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1476509   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1476510   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1476511   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1476512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476514   +end;
MPRINT(EM_DIAGRAM):   end;
1476515   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476516   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476517   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1476518   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476519   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1476520   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1476521   +   end;
MPRINT(EM_DIAGRAM):   end;
1476522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1476523   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1476524   +   end;
MPRINT(EM_DIAGRAM):   end;
1476525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476526   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1476527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476529   +   end;
MPRINT(EM_DIAGRAM):   end;
1476530   +end;
MPRINT(EM_DIAGRAM):   end;
1476531   +
1476532   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1476533   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1476534   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1476535   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1476536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476538   +end;
MPRINT(EM_DIAGRAM):   end;
1476539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476541   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1476542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476543   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1476544   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1476545   +   end;
MPRINT(EM_DIAGRAM):   end;
1476546   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1476547   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1476548   +   end;
MPRINT(EM_DIAGRAM):   end;
1476549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476550   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1476551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476553   +   end;
MPRINT(EM_DIAGRAM):   end;
1476554   +end;
MPRINT(EM_DIAGRAM):   end;
1476555   +
1476556   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1476557   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1476558   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1476559   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1476560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476562   +end;
MPRINT(EM_DIAGRAM):   end;
1476563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476564   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476565   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1476566   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476567   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1476568   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1476569   +   end;
MPRINT(EM_DIAGRAM):   end;
1476570   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1476571   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1476572   +   end;
MPRINT(EM_DIAGRAM):   end;
1476573   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476574   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1476575   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476576   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476577   +   end;
MPRINT(EM_DIAGRAM):   end;
1476578   +end;
MPRINT(EM_DIAGRAM):   end;
1476579   +
1476580   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1476581   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1476582   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1476583   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1476584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476586   +end;
MPRINT(EM_DIAGRAM):   end;
1476587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476589   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1476590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476591   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1476592   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1476593   +   end;
MPRINT(EM_DIAGRAM):   end;
1476594   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1476595   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1476596   +   end;
MPRINT(EM_DIAGRAM):   end;
1476597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476598   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1476599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476601   +   end;
MPRINT(EM_DIAGRAM):   end;
1476602   +end;
MPRINT(EM_DIAGRAM):   end;
1476603   +
1476604   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1476605   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1476606   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1476607   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1476608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476610   +end;
MPRINT(EM_DIAGRAM):   end;
1476611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476613   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1476614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1476616   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1476617   +   end;
MPRINT(EM_DIAGRAM):   end;
1476618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1476619   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1476620   +   end;
MPRINT(EM_DIAGRAM):   end;
1476621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476622   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1476623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476625   +   end;
MPRINT(EM_DIAGRAM):   end;
1476626   +end;
MPRINT(EM_DIAGRAM):   end;
1476627   +
1476628   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1476629   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1476630   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1476631   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1476632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476634   +end;
MPRINT(EM_DIAGRAM):   end;
1476635   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476637   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1476638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476639   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1476640   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1476641   +   end;
MPRINT(EM_DIAGRAM):   end;
1476642   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1476643   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1476644   +   end;
MPRINT(EM_DIAGRAM):   end;
1476645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476646   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1476647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476649   +   end;
MPRINT(EM_DIAGRAM):   end;
1476650   +end;
MPRINT(EM_DIAGRAM):   end;
1476651   +
1476652   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1476653   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1476654   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1476655   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1476656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476658   +end;
MPRINT(EM_DIAGRAM):   end;
1476659   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1476661   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1476662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476663   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1476664   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1476665   +   end;
MPRINT(EM_DIAGRAM):   end;
1476666   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1476667   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1476668   +   end;
MPRINT(EM_DIAGRAM):   end;
1476669   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476670   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1476671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476673   +   end;
MPRINT(EM_DIAGRAM):   end;
1476674   +end;
MPRINT(EM_DIAGRAM):   end;
1476675   +
1476676   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1476677   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1476678   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1476679   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1476680   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1476681   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1476682   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1476683   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1476684   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1476685   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1476686   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1476687   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1476688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476690   +end;
MPRINT(EM_DIAGRAM):   end;
1476691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476692   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1476693   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1476694   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476695   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1476696   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1476697   +   end;
MPRINT(EM_DIAGRAM):   end;
1476698   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1476699   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1476700   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1476701   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1476702   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1476703   +   end;
MPRINT(EM_DIAGRAM):   end;
1476704   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1476705   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1476706   +   end;
MPRINT(EM_DIAGRAM):   end;
1476707   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1476708   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1476709   +   end;
MPRINT(EM_DIAGRAM):   end;
1476710   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1476711   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1476712   +   end;
MPRINT(EM_DIAGRAM):   end;
1476713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476714   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1476715   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1476716   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1476717   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1476718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476720   +   end;
MPRINT(EM_DIAGRAM):   end;
1476721   +end;
MPRINT(EM_DIAGRAM):   end;
1476722   +
1476723   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1476724   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1476725   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1476726   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1476727   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1476728   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1476729   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1476730   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1476731   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1476732   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1476733   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1476734   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1476735   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1476736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1476737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476738   +end;
MPRINT(EM_DIAGRAM):   end;
1476739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1476740   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1476741   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1476742   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1476743   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1476744   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1476745   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1476746   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1476747   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1476748   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1476749   +         end;
MPRINT(EM_DIAGRAM):   end;
1476750   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1476751   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1476752   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1476753   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1476754   +            end;
MPRINT(EM_DIAGRAM):   end;
1476755   +         end;
MPRINT(EM_DIAGRAM):   end;
1476756   +      end;
MPRINT(EM_DIAGRAM):   end;
1476757   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1476758   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1476759   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1476760   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1476761   +         end;
MPRINT(EM_DIAGRAM):   end;
1476762   +      end;
MPRINT(EM_DIAGRAM):   end;
1476763   +   end;
MPRINT(EM_DIAGRAM):   end;
1476764   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1476765   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1476766   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1476767   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1476768   +      end;
MPRINT(EM_DIAGRAM):   end;
1476769   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1476770   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1476771   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1476772   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1476773   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1476774   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1476775   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1476776   +         end;
MPRINT(EM_DIAGRAM):   end;
1476777   +      end;
MPRINT(EM_DIAGRAM):   end;
1476778   +   end;
MPRINT(EM_DIAGRAM):   end;
1476779   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1476780   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1476781   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1476782   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1476783   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1476784   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1476785   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476786   +   end;
MPRINT(EM_DIAGRAM):   end;
1476787   +end;
MPRINT(EM_DIAGRAM):   end;
1476788   +
1476789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476790   +*** Checking missing input Interval
1476791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1476792   +
1476793   +IF NMISS(
1476794   +   AcceptedCmpTotal ,
1476795   +   Age ,
1476796   +   Frq ,
1476797   +   Income ,
1476798   +   Kidhome ,
1476799   +   Mnt ,
1476800   +   MntFishProducts ,
1476801   +   MntFruits ,
1476802   +   MntGoldProds ,
1476803   +   MntMeatProducts ,
1476804   +   MntSweetProducts ,
1476805   +   MntWines ,
1476806   +   MonthsAsCustomer ,
1476807   +   NumCatalogPurchases ,
1476808   +   NumDealsPurchases ,
1476809   +   NumDistPurchases ,
1476810   +   NumStorePurchases ,
1476811   +   NumWebPurchases ,
1476812   +   NumWebVisitsMonth ,
1476813   +   RFMstat ,
1476814   +   RMntFrq ,
1476815   +   Recency ,
1476816   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1476817   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1476818   +
1476819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1476820   +END;
MPRINT(EM_DIAGRAM):   END;
1476821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476822   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1476823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476824   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1476825   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1476826   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1476827   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1476828   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1476829   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1476830   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1476831   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1476832   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1476833   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1476834   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1476835   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1476836   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1476837   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1476838   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1476839   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1476840   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1476841   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1476842   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1476843   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1476844   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1476845   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1476846   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1476847   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1476848   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1476849   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1476850   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1476851   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1476852   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1476853   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1476854   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1476855   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1476856   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1476857   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1476858   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1476859   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1476860   +END;
MPRINT(EM_DIAGRAM):   END;
1476861   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1476862   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1476863   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1476864   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1476865   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1476866   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1476867   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1476868   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1476869   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1476870   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1476871   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1476872   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1476873   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1476874   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1476875   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1476876   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1476877   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1476878   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1476879   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1476880   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1476881   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1476882   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1476883   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1476884   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1476885   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1476886   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1476887   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1476888   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1476889   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1476890   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1476891   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1476892   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1476893   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1476894   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1476895   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1476896   +   ELSE S_NumCatalogPurchases
1476897   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1476898   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1476899   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1476900   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1476901   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1476902   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1476903   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1476904   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1476905   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1476906   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1476907   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1476908   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1476909   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1476910   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1476911   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1476912   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1476913   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1476914   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1476915   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1476916   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1476917   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1476918   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1476919   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1476920   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1476921   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1476922   +END;
MPRINT(EM_DIAGRAM):   END;
1476923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476924   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1476925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476927   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1476928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476930   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1476931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1476932   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1476933   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1476934   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1476935   +        S_Income  +    -0.09693130155866 * S_Kidhome
1476936   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1476937   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1476938   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1476939   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1476940   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1476941   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1476942   +          +     0.87256063855463 * S_NumDealsPurchases
1476943   +          +     0.24228318068596 * S_NumDistPurchases
1476944   +          +    -0.65575177240856 * S_NumStorePurchases
1476945   +          +    -0.94105747825406 * S_NumWebPurchases
1476946   +          +     0.88098930350141 * S_NumWebVisitsMonth
1476947   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1476948   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1476949   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age 
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome + 
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 * 
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts + 
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 * 
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 * 
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 * 
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 * 
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq + 
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1476950   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1476951   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1476952   +        S_Income  +    -0.48351377369429 * S_Kidhome
1476953   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1476954   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1476955   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1476956   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1476957   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1476958   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1476959   +          +     0.19198092320653 * S_NumDealsPurchases
1476960   +          +    -0.01877290175933 * S_NumDistPurchases
1476961   +          +    -0.61698509852352 * S_NumStorePurchases
1476962   +          +    -0.36114842161331 * S_NumWebPurchases
1476963   +          +     0.87653599441887 * S_NumWebVisitsMonth
1476964   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1476965   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1476966   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age + 
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome + 
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 * 
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts + 
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 * 
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 * 
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 * 
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 * 
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq + 
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1476967   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1476968   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1476969   +        S_Income  +    -0.03117320792997 * S_Kidhome
1476970   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1476971   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1476972   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1476973   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1476974   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1476975   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1476976   +          +    -0.17772008430544 * S_NumDealsPurchases
1476977   +          +    -0.24320624261016 * S_NumDistPurchases
1476978   +          +     0.42056923271106 * S_NumStorePurchases
1476979   +          +    -0.28718554863857 * S_NumWebPurchases
1476980   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1476981   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1476982   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1476983   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age + 
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome + 
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 * 
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts + 
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 * 
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 * 
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 * 
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 * 
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq + 
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1476984   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1476985   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1476986   +        S_Income  +     -0.0433863245185 * S_Kidhome
1476987   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1476988   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1476989   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1476990   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1476991   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1476992   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1476993   +          +    -0.43652501997552 * S_NumDealsPurchases
1476994   +          +     0.17317052107867 * S_NumDistPurchases
1476995   +          +     0.23672921935551 * S_NumStorePurchases
1476996   +          +     0.49273989445476 * S_NumWebPurchases
1476997   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1476998   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1476999   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1477000   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age + 
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome + 
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 * 
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts + 
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 * 
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 * 
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 * 
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 * 
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq + 
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1477001   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1477002   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1477003   +        S_Income  +     0.59347379159371 * S_Kidhome
1477004   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1477005   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1477006   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1477007   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1477008   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1477009   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1477010   +          +     0.06887104992711 * S_NumDealsPurchases
1477011   +          +    -0.03976087278251 * S_NumDistPurchases
1477012   +          +     -0.0289014951041 * S_NumStorePurchases
1477013   +          +    -0.08062500939119 * S_NumWebPurchases
1477014   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1477015   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1477016   +        S_RMntFrq  +       0.940313744576 * S_Recency
1477017   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age 
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome + 
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 * 
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts + 
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 * 
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 * 
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 * 
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 * 
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq + 
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1477018   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1477019   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1477020   +        S_Income  +    -0.55245961592835 * S_Kidhome
1477021   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1477022   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1477023   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1477024   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1477025   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1477026   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1477027   +          +    -0.50731731808528 * S_NumDealsPurchases
1477028   +          +     -0.4854662155502 * S_NumDistPurchases
1477029   +          +     0.21175181231244 * S_NumStorePurchases
1477030   +          +     0.04923223410585 * S_NumWebPurchases
1477031   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1477032   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1477033   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1477034   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age 
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome + 
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 * 
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts + 
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 * 
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 * 
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 * 
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 * 
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq + 
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1477035   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1477036   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1477037   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1477038   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1477039   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 * 
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 + 
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 * 
HigherEducationBinary0 ;
1477040   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1477041   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1477042   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1477043   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1477044   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 * 
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 + 
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 * 
HigherEducationBinary0 ;
1477045   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1477046   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1477047   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1477048   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1477049   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 * 
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 + 
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 * 
HigherEducationBinary0 ;
1477050   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1477051   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1477052   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1477053   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1477054   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 * 
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 + 
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 * 
HigherEducationBinary0 ;
1477055   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1477056   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1477057   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1477058   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1477059   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 * 
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 + 
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 * 
HigherEducationBinary0 ;
1477060   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1477061   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1477062   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1477063   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1477064   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 * 
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 + 
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 * 
HigherEducationBinary0 ;
1477065   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1477066   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1477067   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1477068   +          +     0.13102231169849 * Marital_StatusDivorced
1477069   +          +     0.13221932247035 * Marital_StatusMarried
1477070   +          +    -0.28666963919866 * Marital_StatusSingle
1477071   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 * 
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster + 
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried + 
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1477072   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1477073   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1477074   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1477075   +          +     0.36873255525654 * Marital_StatusDivorced
1477076   +          +    -0.54422050380085 * Marital_StatusMarried
1477077   +          +     0.58130553469516 * Marital_StatusSingle
1477078   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 * 
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster 
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried + 
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1477079   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1477080   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1477081   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1477082   +          +    -0.07480235993304 * Marital_StatusDivorced
1477083   +          +     0.31705972445069 * Marital_StatusMarried
1477084   +          +    -0.08626328185895 * Marital_StatusSingle
1477085   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 * 
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster 
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried + 
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1477086   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1477087   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1477088   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1477089   +          +    -0.06733679615115 * Marital_StatusDivorced
1477090   +          +     0.23111557732379 * Marital_StatusMarried
1477091   +          +    -0.34379469870478 * Marital_StatusSingle
1477092   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 * 
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster 
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried + 
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1477093   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1477094   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1477095   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1477096   +          +    -0.07108588070668 * Marital_StatusDivorced
1477097   +          +     1.10060875265784 * Marital_StatusMarried
1477098   +          +    -0.74271327534863 * Marital_StatusSingle
1477099   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 * 
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster + 
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried + 
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1477100   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1477101   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1477102   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1477103   +          +    -0.19461023827362 * Marital_StatusDivorced
1477104   +          +     -0.4165676037681 * Marital_StatusMarried
1477105   +          +     0.43379324993555 * Marital_StatusSingle
1477106   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 * 
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster 
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried + 
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1477107   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1477108   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1477109   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1477110   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1477111   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1477112   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1477113   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1477114   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1477115   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1477116   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1477117   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1477118   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1477119   +END;
MPRINT(EM_DIAGRAM):   END;
1477120   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1477121   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1477122   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1477123   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1477124   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1477125   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1477126   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1477127   +END;
MPRINT(EM_DIAGRAM):   END;
1477128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477129   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1477130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477131   +
1477132   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1477133   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1477134   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1477135   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1477136   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1477137   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477138   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1477139   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1477140   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1477141   +end;
MPRINT(EM_DIAGRAM):   end;
1477142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477143   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1477144   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1477145   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1477146   +   end;
MPRINT(EM_DIAGRAM):   end;
1477147   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1477148   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1477149   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1477150   +   end;
MPRINT(EM_DIAGRAM):   end;
1477151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477152   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1477153   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1477154   +   end;
MPRINT(EM_DIAGRAM):   end;
1477155   +end;
MPRINT(EM_DIAGRAM):   end;
1477156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1477157   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1477158   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1477159   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 + 
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 + 
-2.08728996739757 * H16 ;
1477160   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1477161   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1477162   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1477163   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1477164   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1477165   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1477166   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1477167   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1477168   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1477169   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1477170   +END;
MPRINT(EM_DIAGRAM):   END;
1477171   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1477172   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1477173   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1477174   +END;
MPRINT(EM_DIAGRAM):   END;
1477175   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1477176   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1477177   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1477178   +END;
MPRINT(EM_DIAGRAM):   END;
1477179   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1477180   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1477181   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1477182   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1477183   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1477184   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1477185   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1477186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477187   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1477188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477189   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1477190   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1477191   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1477192   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1477193   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1477194   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1477195   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1477196   +END;
MPRINT(EM_DIAGRAM):   END;
1477197   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1477198   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1477199   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1477200   +drop
1477201   +H11
1477202   +H12
1477203   +H13
1477204   +H14
1477205   +H15
1477206   +H16
1477207   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1477208   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1477209   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1477210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477211   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1477212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477213   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1477214   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1477215   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1477216   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1477217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477218   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1477219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477220   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1477221   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1477222   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1477223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477224   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1477225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477226   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1477227   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1477228   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1477229   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477230   +* Ensmbl29: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 10 of 10;
1477231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477233   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1477234   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1477235   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1477236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1477237   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1477238   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1477239   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1477240   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1477241   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1477242   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1477243   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1477244   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1477245   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1477246   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1477247   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1477248   +LENGTH _WARN_ $4
1477249   +      F_DepVar  $ 12
1477250   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1477251   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1477252   +
1477253   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1477254   +
1477255   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1477256   +
1477257   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1477258   +
1477259   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1477260   +
1477261   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1477262   +
1477263   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1477264   +
1477265   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1477266   +
1477267   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1477268   +
1477269   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1477270   +
1477271   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1477272   +
1477273   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1477274   +
1477275   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1477276   +
1477277   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1477278   +
1477279   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1477280   +
1477281   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1477282   +
1477283   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1477284   +
1477285   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1477286   +
1477287   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1477288   +
1477289   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1477290   +
1477291   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1477292   +
1477293   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1477294   +
1477295   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1477296   +
1477297   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1477298   +
1477299   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1477300   +
1477301   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1477302   +
1477303   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1477304   +
1477305   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1477306   +
1477307   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1477308   +
1477309   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1477310   +
1477311   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1477312   +
1477313   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1477314   +
1477315   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1477316   +
1477317   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1477318   +
1477319   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1477320   +
1477321   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1477322   +
1477323   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1477324   +
1477325   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1477326   +
1477327   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1477328   +
1477329   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1477330   +
1477331   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1477332   +
1477333   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1477334   +
1477335   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1477336   +
1477337   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1477338   +
1477339   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1477340   +
1477341   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1477342   +
1477343   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1477344   +
1477345   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1477346   +
1477347   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1477348   +
1477349   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1477350   +
1477351   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1477352   +
1477353   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1477354   +
1477355   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1477356   +
1477357   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1477358   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1477359   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1477360   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1477361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477363   +end;
MPRINT(EM_DIAGRAM):   end;
1477364   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477366   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1477367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477368   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1477369   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1477370   +   end;
MPRINT(EM_DIAGRAM):   end;
1477371   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1477372   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1477373   +   end;
MPRINT(EM_DIAGRAM):   end;
1477374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477375   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1477376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477378   +   end;
MPRINT(EM_DIAGRAM):   end;
1477379   +end;
MPRINT(EM_DIAGRAM):   end;
1477380   +
1477381   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1477382   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1477383   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1477384   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1477385   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477387   +end;
MPRINT(EM_DIAGRAM):   end;
1477388   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477389   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477390   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1477391   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477392   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1477393   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1477394   +   end;
MPRINT(EM_DIAGRAM):   end;
1477395   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1477396   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1477397   +   end;
MPRINT(EM_DIAGRAM):   end;
1477398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477399   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1477400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477402   +   end;
MPRINT(EM_DIAGRAM):   end;
1477403   +end;
MPRINT(EM_DIAGRAM):   end;
1477404   +
1477405   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1477406   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1477407   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1477408   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1477409   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477410   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477411   +end;
MPRINT(EM_DIAGRAM):   end;
1477412   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477413   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477414   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1477415   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477416   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1477417   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1477418   +   end;
MPRINT(EM_DIAGRAM):   end;
1477419   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1477420   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1477421   +   end;
MPRINT(EM_DIAGRAM):   end;
1477422   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477423   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1477424   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477425   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477426   +   end;
MPRINT(EM_DIAGRAM):   end;
1477427   +end;
MPRINT(EM_DIAGRAM):   end;
1477428   +
1477429   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1477430   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1477431   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1477432   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1477433   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477434   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477435   +end;
MPRINT(EM_DIAGRAM):   end;
1477436   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477437   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477438   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1477439   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477440   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1477441   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1477442   +   end;
MPRINT(EM_DIAGRAM):   end;
1477443   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1477444   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1477445   +   end;
MPRINT(EM_DIAGRAM):   end;
1477446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477447   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1477448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477450   +   end;
MPRINT(EM_DIAGRAM):   end;
1477451   +end;
MPRINT(EM_DIAGRAM):   end;
1477452   +
1477453   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1477454   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1477455   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1477456   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1477457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477459   +end;
MPRINT(EM_DIAGRAM):   end;
1477460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477462   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1477463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477464   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1477465   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1477466   +   end;
MPRINT(EM_DIAGRAM):   end;
1477467   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1477468   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1477469   +   end;
MPRINT(EM_DIAGRAM):   end;
1477470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477471   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1477472   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477473   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477474   +   end;
MPRINT(EM_DIAGRAM):   end;
1477475   +end;
MPRINT(EM_DIAGRAM):   end;
1477476   +
1477477   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1477478   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1477479   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1477480   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1477481   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477482   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477483   +end;
MPRINT(EM_DIAGRAM):   end;
1477484   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477485   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477486   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1477487   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477488   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1477489   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1477490   +   end;
MPRINT(EM_DIAGRAM):   end;
1477491   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1477492   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1477493   +   end;
MPRINT(EM_DIAGRAM):   end;
1477494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477495   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1477496   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477497   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477498   +   end;
MPRINT(EM_DIAGRAM):   end;
1477499   +end;
MPRINT(EM_DIAGRAM):   end;
1477500   +
1477501   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1477502   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1477503   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1477504   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1477505   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477507   +end;
MPRINT(EM_DIAGRAM):   end;
1477508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477509   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1477510   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1477511   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477512   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1477513   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1477514   +   end;
MPRINT(EM_DIAGRAM):   end;
1477515   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1477516   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1477517   +   end;
MPRINT(EM_DIAGRAM):   end;
1477518   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477519   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1477520   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477521   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477522   +   end;
MPRINT(EM_DIAGRAM):   end;
1477523   +end;
MPRINT(EM_DIAGRAM):   end;
1477524   +
1477525   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1477526   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1477527   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1477528   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1477529   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1477530   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1477531   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1477532   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1477533   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1477534   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1477535   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1477536   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1477537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477539   +end;
MPRINT(EM_DIAGRAM):   end;
1477540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477541   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1477542   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1477543   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477544   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1477545   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1477546   +   end;
MPRINT(EM_DIAGRAM):   end;
1477547   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1477548   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1477549   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1477550   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1477551   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1477552   +   end;
MPRINT(EM_DIAGRAM):   end;
1477553   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1477554   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1477555   +   end;
MPRINT(EM_DIAGRAM):   end;
1477556   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1477557   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1477558   +   end;
MPRINT(EM_DIAGRAM):   end;
1477559   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1477560   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1477561   +   end;
MPRINT(EM_DIAGRAM):   end;
1477562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477563   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1477564   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1477565   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1477566   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1477567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477569   +   end;
MPRINT(EM_DIAGRAM):   end;
1477570   +end;
MPRINT(EM_DIAGRAM):   end;
1477571   +
1477572   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1477573   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1477574   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1477575   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1477576   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1477577   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1477578   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1477579   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1477580   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1477581   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1477582   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1477583   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1477584   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1477585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1477586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477587   +end;
MPRINT(EM_DIAGRAM):   end;
1477588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1477589   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1477590   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1477591   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1477592   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1477593   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1477594   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1477595   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1477596   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1477597   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1477598   +         end;
MPRINT(EM_DIAGRAM):   end;
1477599   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1477600   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1477601   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1477602   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1477603   +            end;
MPRINT(EM_DIAGRAM):   end;
1477604   +         end;
MPRINT(EM_DIAGRAM):   end;
1477605   +      end;
MPRINT(EM_DIAGRAM):   end;
1477606   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1477607   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1477608   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1477609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1477610   +         end;
MPRINT(EM_DIAGRAM):   end;
1477611   +      end;
MPRINT(EM_DIAGRAM):   end;
1477612   +   end;
MPRINT(EM_DIAGRAM):   end;
1477613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1477614   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1477615   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1477616   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1477617   +      end;
MPRINT(EM_DIAGRAM):   end;
1477618   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1477619   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1477620   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1477621   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1477622   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1477623   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1477624   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1477625   +         end;
MPRINT(EM_DIAGRAM):   end;
1477626   +      end;
MPRINT(EM_DIAGRAM):   end;
1477627   +   end;
MPRINT(EM_DIAGRAM):   end;
1477628   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1477629   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1477630   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1477631   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1477632   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1477633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1477634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477635   +   end;
MPRINT(EM_DIAGRAM):   end;
1477636   +end;
MPRINT(EM_DIAGRAM):   end;
1477637   +
1477638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477639   +*** Checking missing input Interval
1477640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1477641   +
1477642   +IF NMISS(
1477643   +   AcceptedCmpTotal ,
1477644   +   Age ,
1477645   +   Frq ,
1477646   +   Income ,
1477647   +   Kidhome ,
1477648   +   Mnt ,
1477649   +   MntFishProducts ,
1477650   +   MntFruits ,
1477651   +   MntGoldProds ,
1477652   +   MntMeatProducts ,
1477653   +   MntSweetProducts ,
1477654   +   MntWines ,
1477655   +   MonthsAsCustomer ,
1477656   +   NumCatalogPurchases ,
1477657   +   NumDealsPurchases ,
1477658   +   NumDistPurchases ,
1477659   +   NumStorePurchases ,
1477660   +   NumWebPurchases ,
1477661   +   NumWebVisitsMonth ,
1477662   +   RFMstat ,
1477663   +   RMntFrq ,
1477664   +   Recency ,
1477665   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1477666   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1477667   +
1477668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1477669   +END;
MPRINT(EM_DIAGRAM):   END;
1477670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477671   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1477672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477673   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1477674   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1477675   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1477676   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1477677   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1477678   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1477679   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1477680   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1477681   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1477682   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1477683   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1477684   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1477685   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1477686   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1477687   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1477688   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1477689   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1477690   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1477691   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1477692   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1477693   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1477694   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1477695   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1477696   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1477697   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1477698   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1477699   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1477700   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1477701   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1477702   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1477703   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1477704   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1477705   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1477706   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1477707   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1477708   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1477709   +END;
MPRINT(EM_DIAGRAM):   END;
1477710   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1477711   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1477712   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1477713   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1477714   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1477715   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1477716   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1477717   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1477718   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1477719   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1477720   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1477721   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1477722   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1477723   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1477724   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1477725   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1477726   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1477727   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1477728   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1477729   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1477730   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1477731   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1477732   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1477733   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1477734   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1477735   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1477736   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1477737   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1477738   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1477739   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1477740   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1477741   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1477742   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1477743   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1477744   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1477745   +   ELSE S_NumCatalogPurchases
1477746   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1477747   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1477748   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1477749   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1477750   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1477751   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1477752   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1477753   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1477754   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1477755   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1477756   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1477757   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1477758   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1477759   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1477760   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1477761   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1477762   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1477763   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1477764   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1477765   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1477766   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1477767   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1477768   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1477769   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1477770   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1477771   +END;
MPRINT(EM_DIAGRAM):   END;
1477772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477773   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1477774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477776   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1477777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477779   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1477780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1477781   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1477782   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1477783   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1477784   +        S_Income  +    -0.48552270697514 * S_Kidhome
1477785   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1477786   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1477787   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1477788   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1477789   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1477790   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1477791   +          +    -0.23083265836869 * S_NumDealsPurchases
1477792   +          +     0.18257445063797 * S_NumDistPurchases
1477793   +          +     0.38040778765927 * S_NumStorePurchases
1477794   +          +     0.25798779223068 * S_NumWebPurchases
1477795   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1477796   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1477797   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1477798   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age 
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome + 
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 * 
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts + 
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 * 
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 * 
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 * 
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 * 
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq + 
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1477799   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1477800   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1477801   +        S_Income  +     0.23694585796773 * S_Kidhome
1477802   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1477803   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1477804   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1477805   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1477806   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1477807   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1477808   +          +    -0.07783411363525 * S_NumDealsPurchases
1477809   +          +     0.41281579441285 * S_NumDistPurchases
1477810   +          +     0.22243606867939 * S_NumStorePurchases
1477811   +          +     0.27174952755013 * S_NumWebPurchases
1477812   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1477813   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1477814   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1477815   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age 
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome + 
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 * 
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts + 
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 * 
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 * 
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 * 
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 * 
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq + 
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1477816   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1477817   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1477818   +        S_Income  +     0.20802765248799 * S_Kidhome
1477819   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1477820   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1477821   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1477822   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1477823   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1477824   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1477825   +          +     0.09455783738093 * S_NumDealsPurchases
1477826   +          +    -0.06039304909585 * S_NumDistPurchases
1477827   +          +    -0.10306611685636 * S_NumStorePurchases
1477828   +          +    -0.00323837049664 * S_NumWebPurchases
1477829   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1477830   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1477831   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1477832   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age 
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome + 
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 * 
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts + 
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 * 
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 * 
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 * 
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 * 
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq + 
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1477833   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1477834   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1477835   +        S_Income  +     0.26381864865425 * S_Kidhome
1477836   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1477837   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1477838   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1477839   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1477840   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1477841   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1477842   +          +      0.8306613243419 * S_NumDealsPurchases
1477843   +          +     0.31439474207278 * S_NumDistPurchases
1477844   +          +    -0.62131474975756 * S_NumStorePurchases
1477845   +          +    -1.04845843654047 * S_NumWebPurchases
1477846   +          +     0.13255915506164 * S_NumWebVisitsMonth
1477847   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1477848   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1477849   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age + 
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome + 
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 * 
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts + 
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 * 
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 * 
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 * 
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 * 
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq + 
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1477850   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1477851   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1477852   +        S_Income  +    -0.71599192201946 * S_Kidhome
1477853   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1477854   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1477855   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1477856   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1477857   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1477858   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1477859   +          +     0.63537278643623 * S_NumDealsPurchases
1477860   +          +     0.00410348485264 * S_NumDistPurchases
1477861   +          +    -0.78287523583925 * S_NumStorePurchases
1477862   +          +    -0.73614491225189 * S_NumWebPurchases
1477863   +          +      1.5997596522354 * S_NumWebVisitsMonth
1477864   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1477865   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1477866   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age 
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome + 
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 * 
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts + 
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 * 
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 * 
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 * 
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 * 
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq + 
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1477867   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1477868   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1477869   +        S_Income  +    -0.23853377939411 * S_Kidhome
1477870   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1477871   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1477872   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1477873   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1477874   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1477875   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1477876   +          +    -0.30899603957269 * S_NumDealsPurchases
1477877   +          +     0.11839581082877 * S_NumDistPurchases
1477878   +          +     0.20149797391098 * S_NumStorePurchases
1477879   +          +      0.1616654107491 * S_NumWebPurchases
1477880   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1477881   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1477882   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1477883   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age 
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome + 
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 * 
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts + 
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 * 
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 * 
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 * 
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 * 
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq + 
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1477884   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1477885   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1477886   +        S_Income  +    -0.48650790963695 * S_Kidhome
1477887   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1477888   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1477889   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1477890   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1477891   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1477892   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1477893   +          +    -0.18889005468777 * S_NumDealsPurchases
1477894   +          +     0.17240918361456 * S_NumDistPurchases
1477895   +          +     0.11704610685994 * S_NumStorePurchases
1477896   +          +     0.23031393640508 * S_NumWebPurchases
1477897   +          +     0.66002859819524 * S_NumWebVisitsMonth
1477898   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1477899   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1477900   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age 
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome + 
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 * 
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts + 
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 * 
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 * 
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 * 
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 * 
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq + 
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1477901   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1477902   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1477903   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1477904   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1477905   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 * 
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 + 
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 * 
HigherEducationBinary0 ;
1477906   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1477907   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1477908   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1477909   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1477910   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 * 
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 + 
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 * 
HigherEducationBinary0 ;
1477911   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1477912   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1477913   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1477914   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1477915   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 * 
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 + 
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 * 
HigherEducationBinary0 ;
1477916   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1477917   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1477918   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1477919   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1477920   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 * 
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 + 
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 * 
HigherEducationBinary0 ;
1477921   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1477922   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1477923   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1477924   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1477925   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 * 
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 + 
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 * 
HigherEducationBinary0 ;
1477926   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1477927   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1477928   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1477929   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1477930   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 * 
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 + 
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 * 
HigherEducationBinary0 ;
1477931   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1477932   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1477933   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1477934   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1477935   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 * 
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 + 
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 * 
HigherEducationBinary0 ;
1477936   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1477937   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1477938   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1477939   +          +     0.43452164349556 * Marital_StatusDivorced
1477940   +          +    -0.46042593279944 * Marital_StatusMarried
1477941   +          +     0.45533323427801 * Marital_StatusSingle
1477942   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 * 
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster + 
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried + 
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1477943   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1477944   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1477945   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1477946   +          +     0.11002244687305 * Marital_StatusDivorced
1477947   +          +     0.52424349905683 * Marital_StatusMarried
1477948   +          +     -0.3969250366321 * Marital_StatusSingle
1477949   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 * 
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster 
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried + 
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1477950   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1477951   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1477952   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1477953   +          +    -0.05300704180744 * Marital_StatusDivorced
1477954   +          +     0.07805487103106 * Marital_StatusMarried
1477955   +          +     0.20033339442958 * Marital_StatusSingle
1477956   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 * 
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster + 
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried + 
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1477957   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1477958   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1477959   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1477960   +          +    -0.42379596543146 * Marital_StatusDivorced
1477961   +          +     0.66738351478416 * Marital_StatusMarried
1477962   +          +    -0.37324277578462 * Marital_StatusSingle
1477963   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 * 
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster + 
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried + 
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1477964   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1477965   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1477966   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1477967   +          +     0.88761025578489 * Marital_StatusDivorced
1477968   +          +    -0.85905539883385 * Marital_StatusMarried
1477969   +          +     0.73467737758558 * Marital_StatusSingle
1477970   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 * 
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster 
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried + 
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1477971   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1477972   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1477973   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1477974   +          +    -0.11980818075461 * Marital_StatusDivorced
1477975   +          +    -0.16572953052582 * Marital_StatusMarried
1477976   +          +     0.34617421331983 * Marital_StatusSingle
1477977   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 * 
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster 
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried + 
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1477978   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1477979   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1477980   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1477981   +          +     0.14874886057777 * Marital_StatusDivorced
1477982   +          +     -1.0463076915992 * Marital_StatusMarried
1477983   +          +     0.72937563672763 * Marital_StatusSingle
1477984   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 * 
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster 
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried + 
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1477985   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1477986   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1477987   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1477988   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1477989   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1477990   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1477991   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1477992   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1477993   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1477994   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1477995   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1477996   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1477997   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1477998   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1477999   +END;
MPRINT(EM_DIAGRAM):   END;
1478000   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1478001   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1478002   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1478003   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1478004   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1478005   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1478006   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1478007   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1478008   +END;
MPRINT(EM_DIAGRAM):   END;
1478009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1478010   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1478011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1478012   +
1478013   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1478014   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1478015   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1478016   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1478017   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1478018   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1478019   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1478020   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1478021   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1478022   +end;
MPRINT(EM_DIAGRAM):   end;
1478023   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478024   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1478025   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1478026   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1478027   +   end;
MPRINT(EM_DIAGRAM):   end;
1478028   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1478029   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1478030   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1478031   +   end;
MPRINT(EM_DIAGRAM):   end;
1478032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1478033   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1478034   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1478035   +   end;
MPRINT(EM_DIAGRAM):   end;
1478036   +end;
MPRINT(EM_DIAGRAM):   end;
1478037   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1478038   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1478039   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1478040   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1478041   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 + 
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 * 
H16 + 2.19267705077374 * H17 ;
1478042   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1478043   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1478044   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1478045   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1478046   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1478047   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1478048   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1478049   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1478050   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1478051   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1478052   +END;
MPRINT(EM_DIAGRAM):   END;
1478053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1478054   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1478055   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1478056   +END;
MPRINT(EM_DIAGRAM):   END;
1478057   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1478058   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1478059   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1478060   +END;
MPRINT(EM_DIAGRAM):   END;
1478061   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1478062   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1478063   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1478064   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1478065   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1478066   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1478067   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1478068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1478069   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1478070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1478071   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1478072   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1478073   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1478074   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1478075   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1478076   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1478077   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1478078   +END;
MPRINT(EM_DIAGRAM):   END;
1478079   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1478080   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1478081   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1478082   +drop
1478083   +H11
1478084   +H12
1478085   +H13
1478086   +H14
1478087   +H15
1478088   +H16
1478089   +H17
1478090   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1478091   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1478092   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1478093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478094   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1478095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478096   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1478097   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1478098   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1478099   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1478100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478101   +* Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
1478102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478103   +length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
1478104   +drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
1478105   +Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
1478106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478107   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1478108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478109   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1478110   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1478111   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1478112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478113   +* Ensmbl29: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Voting to produce predicted target;
1478114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478115   +array Ensmbl29_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_post{2} _temporary_;
1478116   +array Ensmbl29_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_count{2} _temporary_;
1478117   +array Ensmbl29_level{2} $32 _temporary_ (
1478118   +"1"
1478119   +"0"
1478120   +);
MPRINT(EM_DIAGRAM):   array Ensmbl29_level{2} $32 _temporary_ ( "1" "0" );
1478121   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1478122   +Ensmbl29_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{i} = 0;
1478123   +Ensmbl29_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{i} = 0;
1478124   +end;
MPRINT(EM_DIAGRAM):   end;
1478125   +if Reg5_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{1} then do;
1478126   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478127   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
1478128   +end;
MPRINT(EM_DIAGRAM):   end;
1478129   +if Reg_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{1} then do;
1478130   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478131   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
1478132   +end;
MPRINT(EM_DIAGRAM):   end;
1478133   +if Tree_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{1} then do;
1478134   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478135   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
1478136   +end;
MPRINT(EM_DIAGRAM):   end;
1478137   +if Neural4_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{1} then do;
1478138   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478139   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
1478140   +end;
MPRINT(EM_DIAGRAM):   end;
1478141   +if Neural_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{1} then do;
1478142   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478143   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
1478144   +end;
MPRINT(EM_DIAGRAM):   end;
1478145   +if Neural2_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{1} then do;
1478146   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478147   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
1478148   +end;
MPRINT(EM_DIAGRAM):   end;
1478149   +if Neural3_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{1} then do;
1478150   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478151   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
1478152   +end;
MPRINT(EM_DIAGRAM):   end;
1478153   +if Neural7_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{1} then do;
1478154   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478155   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
1478156   +end;
MPRINT(EM_DIAGRAM):   end;
1478157   +if Neural9_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{1} then do;
1478158   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478159   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
1478160   +end;
MPRINT(EM_DIAGRAM):   end;
1478161   +if Neural10_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{1} then do;
1478162   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1478163   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
1478164   +end;
MPRINT(EM_DIAGRAM):   end;
1478165   +if Reg5_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{2} then do;
1478166   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478167   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
1478168   +end;
MPRINT(EM_DIAGRAM):   end;
1478169   +if Reg_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{2} then do;
1478170   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478171   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
1478172   +end;
MPRINT(EM_DIAGRAM):   end;
1478173   +if Tree_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{2} then do;
1478174   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478175   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
1478176   +end;
MPRINT(EM_DIAGRAM):   end;
1478177   +if Neural4_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{2} then do;
1478178   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478179   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
1478180   +end;
MPRINT(EM_DIAGRAM):   end;
1478181   +if Neural_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{2} then do;
1478182   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478183   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
1478184   +end;
MPRINT(EM_DIAGRAM):   end;
1478185   +if Neural2_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{2} then do;
1478186   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478187   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
1478188   +end;
MPRINT(EM_DIAGRAM):   end;
1478189   +if Neural3_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{2} then do;
1478190   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478191   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
1478192   +end;
MPRINT(EM_DIAGRAM):   end;
1478193   +if Neural7_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{2} then do;
1478194   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478195   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
1478196   +end;
MPRINT(EM_DIAGRAM):   end;
1478197   +if Neural9_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{2} then do;
1478198   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478199   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
1478200   +end;
MPRINT(EM_DIAGRAM):   end;
1478201   +if Neural10_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{2} then do;
1478202   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1478203   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
1478204   +end;
MPRINT(EM_DIAGRAM):   end;
1478205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478206   +* Ensmbl29: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Determine Into Variable;
1478207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478208   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1478209   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1478210   +vote_count = max(
1478211   +Ensmbl29_count{1} ,
1478212   +Ensmbl29_count{2}
1478213   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl29_count{1} , Ensmbl29_count{2} );
1478214   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1478215   +if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
1478216   +I_DepVar = Ensmbl29_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl29_level{i};
1478217   +vote_post = Ensmbl29_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl29_count{i};
1478218   +end;
MPRINT(EM_DIAGRAM):   end;
1478219   +end;
MPRINT(EM_DIAGRAM):   end;
1478220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478221   +* Ensmbl29: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Compute posterior vars using models predicting the chosen 
level;
1478222   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478223   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1478224   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1478225   +if I_DepVar = Reg5_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg5_I_DepVar then do;
1478226   +P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
1478227   +P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
1478228   +end;
MPRINT(EM_DIAGRAM):   end;
1478229   +if I_DepVar = Reg_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg_I_DepVar then do;
1478230   +P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
1478231   +P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
1478232   +end;
MPRINT(EM_DIAGRAM):   end;
1478233   +if I_DepVar = Tree_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Tree_I_DepVar then do;
1478234   +P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
1478235   +P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
1478236   +end;
MPRINT(EM_DIAGRAM):   end;
1478237   +if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
1478238   +P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
1478239   +P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
1478240   +end;
MPRINT(EM_DIAGRAM):   end;
1478241   +if I_DepVar = Neural_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural_I_DepVar then do;
1478242   +P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
1478243   +P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
1478244   +end;
MPRINT(EM_DIAGRAM):   end;
1478245   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1478246   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1478247   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1478248   +end;
MPRINT(EM_DIAGRAM):   end;
1478249   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1478250   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1478251   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1478252   +end;
MPRINT(EM_DIAGRAM):   end;
1478253   +if I_DepVar = Neural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural7_I_DepVar then do;
1478254   +P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
1478255   +P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
1478256   +end;
MPRINT(EM_DIAGRAM):   end;
1478257   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1478258   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1478259   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1478260   +end;
MPRINT(EM_DIAGRAM):   end;
1478261   +if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
1478262   +P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
1478263   +P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
1478264   +end;
MPRINT(EM_DIAGRAM):   end;
1478265   +* Ensmbl29: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Averaging posterior;
1478266   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1478267   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1478268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478269   +* Ensmbl29: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Producing Unformatted variable;
1478270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478271   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1478272   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1478273   +else
1478274   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1478275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478276   +* Ensmbl29: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing _WARN_ Variable;
1478277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478278   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1478279   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1478280   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1478281   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1478282   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1478283   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1478284   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1478285   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1478286   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1478287   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1478288   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1478289   +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1478290   +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1478291   +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1478292   +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1478293   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1478294   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1478295   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1478296   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1478297   +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1478298   +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1478299   +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1478300   +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1478301   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1478302   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1478303   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1478304   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1478305   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1478306   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1478307   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1478308   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1478309   +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1478310   +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1478311   +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1478312   +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1478313   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1478314   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1478315   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1478316   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1478317   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1478317  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1478318   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1478318  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1478319   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1478319  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1478320   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1478320  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1478321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478322   +* Ensmbl29: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing Residual Vars;
1478323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478324   +if
1478325   +F_DepVar NE '1'
1478326   +AND F_DepVar NE '0'
1478327   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1478328   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1478329   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1478330   +end;
MPRINT(EM_DIAGRAM):   end;
1478331   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478332   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1478333   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1478334   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1478335   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1478336   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1478337   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1478338   +END;
MPRINT(EM_DIAGRAM):   END;
1478339   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1478340    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL29_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1478341    quit;
1478342    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1478343    filename emflow
1478343  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478344    *------------------------------------------------------------*;
1478345    * Ensmbl29: Scoring REG5_VALIDATE data;
1478346    *------------------------------------------------------------*;
1478347    data EMWS8.Ensmbl29_VALIDATE
1478348    / view=EMWS8.Ensmbl29_VALIDATE
1478349    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_VALIDATE / view=EMWS8.Ensmbl29_VALIDATE ;
1478350    set EMWS8.Reg5_VALIDATE
1478351    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1478352    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\EMFLOWSCORE.sas.
1478353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478354   +* Ensmbl29: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Combine model for DepVar;
1478355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478356   +* Ensmbl29: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 1 of 10;
1478357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478359   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1478360   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1478361   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1478362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478364   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1478365   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1478366   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1478367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478369   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1478370   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1478371   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1478372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478374   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1478375   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1478376   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1478377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478378   +
1478379   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1478380   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1478380  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1478381   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1478382   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1478383   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1478384   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1478385   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1478386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478387   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1478388   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1478389   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1478390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478392   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1478393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478394   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1478395   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1478396   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1478397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478398   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1478399   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1478400   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1478401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478403   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1478404   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1478405   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1478406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478408   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1478409   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1478410   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1478411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478412   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1478413   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1478414   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1478415   +
1478416   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1478417   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1478418   +
1478419   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1478420   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1478421   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1478422   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1478423   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1478424   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1478425   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1478426   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1478427   +
1478428   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1478429   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1478430   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1478431   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1478432   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1478433   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1478434   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1478435   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1478436   +end;
MPRINT(EM_DIAGRAM):   end;
1478437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478438   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1478439   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1478440   +   end;
MPRINT(EM_DIAGRAM):   end;
1478441   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1478442   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1478443   +   end;
MPRINT(EM_DIAGRAM):   end;
1478444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1478445   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1478446   +   end;
MPRINT(EM_DIAGRAM):   end;
1478447   +end;
MPRINT(EM_DIAGRAM):   end;
1478448   +
1478449   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1478450   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1478451   +
1478452   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1478453   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1478454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478456   +end;
MPRINT(EM_DIAGRAM):   end;
1478457   +
1478458   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1478459   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1478460   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478461   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478462   +end;
MPRINT(EM_DIAGRAM):   end;
1478463   +
1478464   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1478465   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1478466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478468   +end;
MPRINT(EM_DIAGRAM):   end;
1478469   +
1478470   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1478471   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1478472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478474   +end;
MPRINT(EM_DIAGRAM):   end;
1478475   +
1478476   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1478477   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1478478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478480   +end;
MPRINT(EM_DIAGRAM):   end;
1478481   +
1478482   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1478483   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1478484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478486   +end;
MPRINT(EM_DIAGRAM):   end;
1478487   +
1478488   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1478489   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1478490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478492   +end;
MPRINT(EM_DIAGRAM):   end;
1478493   +
1478494   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1478495   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1478496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478498   +end;
MPRINT(EM_DIAGRAM):   end;
1478499   +
1478500   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1478501   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1478502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478504   +end;
MPRINT(EM_DIAGRAM):   end;
1478505   +
1478506   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1478507   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1478508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478510   +end;
MPRINT(EM_DIAGRAM):   end;
1478511   +
1478512   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1478513   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1478514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478516   +end;
MPRINT(EM_DIAGRAM):   end;
1478517   +
1478518   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1478519   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1478520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478522   +end;
MPRINT(EM_DIAGRAM):   end;
1478523   +
1478524   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1478525   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1478526   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1478527   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1478528   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1478529   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1478530   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1478531   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1478532   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1478533   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1478534   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1478535   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1478536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478538   +end;
MPRINT(EM_DIAGRAM):   end;
1478539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478540   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1478541   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1478542   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1478543   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1478544   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1478545   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1478546   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1478547   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1478548   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478549   +         end;
MPRINT(EM_DIAGRAM):   end;
1478550   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1478551   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1478552   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1478553   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478554   +            end;
MPRINT(EM_DIAGRAM):   end;
1478555   +         end;
MPRINT(EM_DIAGRAM):   end;
1478556   +      end;
MPRINT(EM_DIAGRAM):   end;
1478557   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1478558   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1478559   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1478560   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478561   +         end;
MPRINT(EM_DIAGRAM):   end;
1478562   +      end;
MPRINT(EM_DIAGRAM):   end;
1478563   +   end;
MPRINT(EM_DIAGRAM):   end;
1478564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1478565   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1478566   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1478567   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478568   +      end;
MPRINT(EM_DIAGRAM):   end;
1478569   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1478570   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1478571   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1478572   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1478573   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1478574   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1478575   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478576   +         end;
MPRINT(EM_DIAGRAM):   end;
1478577   +      end;
MPRINT(EM_DIAGRAM):   end;
1478578   +   end;
MPRINT(EM_DIAGRAM):   end;
1478579   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1478580   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1478581   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1478582   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1478583   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1478584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1478585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478586   +   end;
MPRINT(EM_DIAGRAM):   end;
1478587   +end;
MPRINT(EM_DIAGRAM):   end;
1478588   +
1478589   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1478590   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1478591   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1478592   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1478593   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1478594   +end;
MPRINT(EM_DIAGRAM):   end;
1478595   +
1478596   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1478597   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1478598   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1478599   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1478600   +
1478601   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1478602   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1478603   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1478604   +
1478605   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1478606   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1478607   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1478608   +
1478609   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1478610   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1478611   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1478612   +
1478613   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1478614   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1478615   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1478616   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1478617   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1478618   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1478619   +
1478620   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1478621   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1478622   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1478623   +
1478624   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1478625   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1478626   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1478627   +
1478628   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1478629   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1478630   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1478631   +
1478632   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1478633   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1478634   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1478635   +
1478636   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1478637   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1478638   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1478639   +
1478640   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1478641   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1478642   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1478643   +
1478644   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1478645   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1478646   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1478647   +
1478648   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1478649   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1478650   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1478651   +
1478652   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1478653   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1478654   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1478655   +
1478656   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1478657   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1478658   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1478659   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1478660   +
1478661   +REG5DR1:
1478662   +
1478663   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1478664   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1478665   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1478666   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1478667   +end;
MPRINT(EM_DIAGRAM):   end;
1478668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478669   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1478670   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1478671   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1478672   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1478673   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1478674   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1478675   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1478676   +   end;
MPRINT(EM_DIAGRAM):   end;
1478677   +end;
MPRINT(EM_DIAGRAM):   end;
1478678   +
1478679   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1478680   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1478681   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1478682   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1478683   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1478684   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1478685   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1478686   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1478687   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1478688   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1478689   +end;
MPRINT(EM_DIAGRAM):   end;
1478690   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1478691   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1478692   +
1478693   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1478694   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1478695   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1478696   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1478697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478698   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1478699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478700   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1478701   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1478702   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1478703   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1478704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478705   +* Renaming Into variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg5;
1478706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478707   +length Reg5_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg5_I_DepVar $32;
1478708   +drop Reg5_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg5_I_DepVar;
1478709   +Reg5_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg5_I_DepVar = I_DepVar;
1478710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478711   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1478712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478713   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1478714   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1478715   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1478716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478717   +* Ensmbl29: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 2 of 10;
1478718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478720   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1478721   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1478722   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1478723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1478724   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1478725   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1478726   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1478727   +
1478728   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1478729   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1478730   +
1478731   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1478732   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1478733   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1478734   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1478735   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1478736   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1478737   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1478738   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1478739   +
1478740   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1478741   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1478742   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1478743   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1478744   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1478745   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1478746   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1478747   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1478748   +end;
MPRINT(EM_DIAGRAM):   end;
1478749   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478750   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1478751   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1478752   +   end;
MPRINT(EM_DIAGRAM):   end;
1478753   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1478754   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1478755   +   end;
MPRINT(EM_DIAGRAM):   end;
1478756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1478757   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1478758   +   end;
MPRINT(EM_DIAGRAM):   end;
1478759   +end;
MPRINT(EM_DIAGRAM):   end;
1478760   +
1478761   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1478762   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1478763   +
1478764   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1478765   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1478766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478768   +end;
MPRINT(EM_DIAGRAM):   end;
1478769   +
1478770   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1478771   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1478772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478774   +end;
MPRINT(EM_DIAGRAM):   end;
1478775   +
1478776   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1478777   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1478778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478780   +end;
MPRINT(EM_DIAGRAM):   end;
1478781   +
1478782   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1478783   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1478784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478786   +end;
MPRINT(EM_DIAGRAM):   end;
1478787   +
1478788   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1478789   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1478790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478792   +end;
MPRINT(EM_DIAGRAM):   end;
1478793   +
1478794   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1478795   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1478796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478798   +end;
MPRINT(EM_DIAGRAM):   end;
1478799   +
1478800   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1478801   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1478802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478804   +end;
MPRINT(EM_DIAGRAM):   end;
1478805   +
1478806   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1478807   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1478808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478810   +end;
MPRINT(EM_DIAGRAM):   end;
1478811   +
1478812   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1478813   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1478814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478816   +end;
MPRINT(EM_DIAGRAM):   end;
1478817   +
1478818   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1478819   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1478820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478822   +end;
MPRINT(EM_DIAGRAM):   end;
1478823   +
1478824   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1478825   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1478826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478828   +end;
MPRINT(EM_DIAGRAM):   end;
1478829   +
1478830   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1478831   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1478832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478834   +end;
MPRINT(EM_DIAGRAM):   end;
1478835   +
1478836   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1478837   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1478838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478840   +end;
MPRINT(EM_DIAGRAM):   end;
1478841   +
1478842   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1478843   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1478844   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1478845   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1478846   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1478847   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1478848   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1478849   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1478850   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1478851   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1478852   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1478853   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1478854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1478855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478856   +end;
MPRINT(EM_DIAGRAM):   end;
1478857   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478858   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1478859   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1478860   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1478861   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1478862   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1478863   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1478864   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1478865   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1478866   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478867   +         end;
MPRINT(EM_DIAGRAM):   end;
1478868   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1478869   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1478870   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1478871   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478872   +            end;
MPRINT(EM_DIAGRAM):   end;
1478873   +         end;
MPRINT(EM_DIAGRAM):   end;
1478874   +      end;
MPRINT(EM_DIAGRAM):   end;
1478875   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1478876   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1478877   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1478878   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478879   +         end;
MPRINT(EM_DIAGRAM):   end;
1478880   +      end;
MPRINT(EM_DIAGRAM):   end;
1478881   +   end;
MPRINT(EM_DIAGRAM):   end;
1478882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1478883   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1478884   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1478885   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478886   +      end;
MPRINT(EM_DIAGRAM):   end;
1478887   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1478888   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1478889   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1478890   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1478891   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1478892   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1478893   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1478894   +         end;
MPRINT(EM_DIAGRAM):   end;
1478895   +      end;
MPRINT(EM_DIAGRAM):   end;
1478896   +   end;
MPRINT(EM_DIAGRAM):   end;
1478897   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1478898   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1478899   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1478900   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1478901   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1478902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1478903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1478904   +   end;
MPRINT(EM_DIAGRAM):   end;
1478905   +end;
MPRINT(EM_DIAGRAM):   end;
1478906   +
1478907   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1478908   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1478909   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1478910   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1478911   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1478912   +end;
MPRINT(EM_DIAGRAM):   end;
1478913   +
1478914   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1478915   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1478916   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1478917   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1478918   +
1478919   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1478920   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1478921   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1478922   +
1478923   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1478924   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1478925   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1478926   +
1478927   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1478928   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1478929   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1478930   +
1478931   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1478932   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1478933   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1478934   +
1478935   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1478936   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1478937   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1478938   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1478939   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1478940   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1478941   +
1478942   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1478943   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1478944   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1478945   +
1478946   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1478947   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1478948   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1478949   +
1478950   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1478951   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1478952   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1478953   +
1478954   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1478955   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1478956   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1478957   +
1478958   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1478959   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1478960   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1478961   +
1478962   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1478963   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1478964   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1478965   +
1478966   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1478967   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1478968   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1478969   +
1478970   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1478971   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1478972   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1478973   +
1478974   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1478975   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1478976   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1478977   +
1478978   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1478979   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1478980   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1478981   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1478982   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1478983   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1478984   +end;
MPRINT(EM_DIAGRAM):   end;
1478985   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1478986   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1478987   +
1478988   +REGDR1:
1478989   +
1478990   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1478991   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1478992   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1478993   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1478994   +end;
MPRINT(EM_DIAGRAM):   end;
1478995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1478996   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1478997   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1478998   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1478999   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1479000   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1479001   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1479002   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1479003   +   end;
MPRINT(EM_DIAGRAM):   end;
1479004   +end;
MPRINT(EM_DIAGRAM):   end;
1479005   +
1479006   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1479007   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1479008   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1479009   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1479010   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1479011   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1479012   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1479013   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1479014   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1479015   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1479016   +end;
MPRINT(EM_DIAGRAM):   end;
1479017   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1479018   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1479019   +
1479020   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1479021   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1479022   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1479023   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1479024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479025   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1479026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479027   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1479028   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1479029   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1479030   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1479031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479032   +* Renaming Into variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Reg;
1479033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479034   +length Reg_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Reg_I_DepVar $32;
1479035   +drop Reg_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Reg_I_DepVar;
1479036   +Reg_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Reg_I_DepVar = I_DepVar;
1479037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479038   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1479039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479040   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1479041   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1479042   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1479043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479044   +* Ensmbl29: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 3 of 10;
1479045   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479047   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1479048   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1479049   +* NODE: Tree;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
1479050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479051   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1479052   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1479053   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1479054   +
1479055   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1479056   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1479057   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1479058   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1479059   +
1479060   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1479061   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1479062   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1479063   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1479064   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1479065   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1479066   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1479067   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1479068   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1479069   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1479070   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1479071   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1479072   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1479073   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1479074   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1479075   +
1479076   +
1479077   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1479078   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1479079   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1479080   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1479081   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1479082   +
1479083   +
1479084   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1479085   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1479086   +
1479087   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1479088   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1479089   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1479090   +  IF  NOT MISSING(Recency ) AND
1479091   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1479092   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1479093   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1479094   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1479095   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1479096   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1479097   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1479098   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1479099   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1479100   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1479101   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1479102   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479103   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479104   +      END;
MPRINT(EM_DIAGRAM):   END;
1479105   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479106   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1479107   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1479108   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1479109   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1479110   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1479111   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1479112   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1479113   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1479114   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1479115   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1479116   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1479117   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479118   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479119   +        END;
MPRINT(EM_DIAGRAM):   END;
1479120   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479121   +        IF  NOT MISSING(NumStorePurchases ) AND
1479122   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1479123   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1479124   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1479125   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1479126   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1479127   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1479128   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1479129   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1479130   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1479131   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1479132   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1479133   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479134   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479135   +            END;
MPRINT(EM_DIAGRAM):   END;
1479136   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479137   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1479138   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1479139   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1479140   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1479141   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1479142   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1479143   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1479144   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1479145   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479146   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479147   +            END;
MPRINT(EM_DIAGRAM):   END;
1479148   +          END;
MPRINT(EM_DIAGRAM):   END;
1479149   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479150   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1479151   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1479152   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1479153   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1479154   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1479155   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1479156   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1479157   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1479158   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479159   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479160   +          END;
MPRINT(EM_DIAGRAM):   END;
1479161   +        END;
MPRINT(EM_DIAGRAM):   END;
1479162   +      END;
MPRINT(EM_DIAGRAM):   END;
1479163   +    END;
MPRINT(EM_DIAGRAM):   END;
1479164   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479165   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1479166   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1479167   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1479168   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1479169   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1479170   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1479171   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1479172   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1479173   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1479174   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1479175   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479176   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479177   +      END;
MPRINT(EM_DIAGRAM):   END;
1479178   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479179   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1479180   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1479181   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1479182   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1479183   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1479184   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1479185   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1479186   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1479187   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479188   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479189   +      END;
MPRINT(EM_DIAGRAM):   END;
1479190   +    END;
MPRINT(EM_DIAGRAM):   END;
1479191   +  END;
MPRINT(EM_DIAGRAM):   END;
1479192   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479193   +  IF  NOT MISSING(Recency ) AND
1479194   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1479195   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1479196   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1479197   +      IF  NOT MISSING(NumStorePurchases ) AND
1479198   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1479199   +        IF  NOT MISSING(RFMstat ) AND
1479200   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1479201   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1479202   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1479203   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1479204   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1479205   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1479206   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1479207   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1479208   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1479209   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479210   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479211   +          END;
MPRINT(EM_DIAGRAM):   END;
1479212   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479213   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1479214   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1479215   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1479216   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1479217   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1479218   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1479219   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1479220   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1479221   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479222   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479223   +          END;
MPRINT(EM_DIAGRAM):   END;
1479224   +        END;
MPRINT(EM_DIAGRAM):   END;
1479225   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479226   +        IF  NOT MISSING(MntFishProducts ) AND
1479227   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1479228   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1479229   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1479230   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1479231   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1479232   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1479233   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1479234   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1479235   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1479236   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479237   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479238   +          END;
MPRINT(EM_DIAGRAM):   END;
1479239   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479240   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1479241   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1479242   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1479243   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1479244   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1479245   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1479246   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1479247   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1479248   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479249   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479250   +          END;
MPRINT(EM_DIAGRAM):   END;
1479251   +        END;
MPRINT(EM_DIAGRAM):   END;
1479252   +      END;
MPRINT(EM_DIAGRAM):   END;
1479253   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479254   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1479255   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1479256   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1479257   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1479258   +          IF  NOT MISSING(Kidhome ) AND
1479259   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1479260   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1479261   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1479262   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1479263   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1479264   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1479265   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1479266   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1479267   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1479268   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479269   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479270   +            END;
MPRINT(EM_DIAGRAM):   END;
1479271   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479272   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1479273   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1479274   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1479275   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1479276   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1479277   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1479278   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1479279   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1479280   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1479281   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1479282   +            END;
MPRINT(EM_DIAGRAM):   END;
1479283   +          END;
MPRINT(EM_DIAGRAM):   END;
1479284   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479285   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1479286   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1479287   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1479288   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1479289   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1479290   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1479291   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1479292   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1479293   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479294   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479295   +          END;
MPRINT(EM_DIAGRAM):   END;
1479296   +        END;
MPRINT(EM_DIAGRAM):   END;
1479297   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479298   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1479299   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1479300   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1479301   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1479302   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1479303   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1479304   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1479305   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1479306   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479307   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479308   +        END;
MPRINT(EM_DIAGRAM):   END;
1479309   +      END;
MPRINT(EM_DIAGRAM):   END;
1479310   +    END;
MPRINT(EM_DIAGRAM):   END;
1479311   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479312   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1479313   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1479314   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1479315   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1479316   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1479317   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1479318   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1479319   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1479320   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1479321   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1479322   +    END;
MPRINT(EM_DIAGRAM):   END;
1479323   +  END;
MPRINT(EM_DIAGRAM):   END;
1479324   +
1479325   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1479326   +IF  F_DepVar  NE '0'
1479327   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1479328   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1479329   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1479330   + END;
MPRINT(EM_DIAGRAM):   END;
1479331   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479332   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1479333   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1479334   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1479335   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1479336   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1479337   +       END;
MPRINT(EM_DIAGRAM):   END;
1479338   + END;
MPRINT(EM_DIAGRAM):   END;
1479339   +
1479340   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1479341   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1479342   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1479343   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1479344   +* Renaming variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree;
1479345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479346   +* Renaming Posterior variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree;
1479347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479348   +drop Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar1;
1479349   +Tree_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar1 = P_DepVar1;
1479350   +drop Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree_P_DepVar0;
1479351   +Tree_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree_P_DepVar0 = P_DepVar0;
1479352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479353   +* Renaming Into variables for Tree;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Tree;
1479354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479355   +length Tree_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Tree_I_DepVar $32;
1479356   +drop Tree_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Tree_I_DepVar;
1479357   +Tree_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Tree_I_DepVar = I_DepVar;
1479358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479359   +* Renaming _WARN_ variable for Tree;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree;
1479360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479361   +length Tree_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree_WARN_ $4;
1479362   +drop Tree_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree_WARN_;
1479363   +Tree_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree_WARN_ = _WARN_;
1479364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479365   +* Ensmbl29: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 4 of 10;
1479366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479368   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1479369   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1479370   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1479371   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1479372   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1479373   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1479374   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1479375   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1479376   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1479377   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1479378   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1479379   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1479380   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1479381   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1479382   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1479383   +LENGTH _WARN_ $4
1479384   +      F_DepVar  $ 12
1479385   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1479386   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1479387   +
1479388   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1479389   +
1479390   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1479391   +
1479392   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1479393   +
1479394   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1479395   +
1479396   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1479397   +
1479398   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1479399   +
1479400   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1479401   +
1479402   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1479403   +
1479404   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1479405   +
1479406   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1479407   +
1479408   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1479409   +
1479410   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1479411   +
1479412   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1479413   +
1479414   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1479415   +
1479416   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1479417   +
1479418   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1479419   +
1479420   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1479421   +
1479422   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1479423   +
1479424   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1479425   +
1479426   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1479427   +
1479428   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1479429   +
1479430   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1479431   +
1479432   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1479433   +
1479434   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1479435   +
1479436   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1479437   +
1479438   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1479439   +
1479440   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1479441   +
1479442   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1479443   +
1479444   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1479445   +
1479446   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1479447   +
1479448   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1479449   +
1479450   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1479451   +
1479452   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1479453   +
1479454   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1479455   +
1479456   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1479457   +
1479458   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1479459   +
1479460   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1479461   +
1479462   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1479463   +
1479464   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1479465   +
1479466   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1479467   +
1479468   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1479469   +
1479470   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1479471   +
1479472   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1479473   +
1479474   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1479475   +
1479476   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1479477   +
1479478   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1479479   +
1479480   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1479481   +
1479482   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1479483   +
1479484   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1479485   +
1479486   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1479487   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1479488   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1479489   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1479490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479492   +end;
MPRINT(EM_DIAGRAM):   end;
1479493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479495   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1479496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1479498   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1479499   +   end;
MPRINT(EM_DIAGRAM):   end;
1479500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1479501   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1479502   +   end;
MPRINT(EM_DIAGRAM):   end;
1479503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479504   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1479505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479507   +   end;
MPRINT(EM_DIAGRAM):   end;
1479508   +end;
MPRINT(EM_DIAGRAM):   end;
1479509   +
1479510   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1479511   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1479512   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1479513   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1479514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479516   +end;
MPRINT(EM_DIAGRAM):   end;
1479517   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479518   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479519   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1479520   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479521   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1479522   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1479523   +   end;
MPRINT(EM_DIAGRAM):   end;
1479524   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1479525   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1479526   +   end;
MPRINT(EM_DIAGRAM):   end;
1479527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479528   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1479529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479531   +   end;
MPRINT(EM_DIAGRAM):   end;
1479532   +end;
MPRINT(EM_DIAGRAM):   end;
1479533   +
1479534   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1479535   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1479536   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1479537   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1479538   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479539   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479540   +end;
MPRINT(EM_DIAGRAM):   end;
1479541   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479542   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479543   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1479544   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479545   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1479546   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1479547   +   end;
MPRINT(EM_DIAGRAM):   end;
1479548   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1479549   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1479550   +   end;
MPRINT(EM_DIAGRAM):   end;
1479551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479552   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1479553   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479554   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479555   +   end;
MPRINT(EM_DIAGRAM):   end;
1479556   +end;
MPRINT(EM_DIAGRAM):   end;
1479557   +
1479558   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1479559   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1479560   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1479561   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1479562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479564   +end;
MPRINT(EM_DIAGRAM):   end;
1479565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479566   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479567   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1479568   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479569   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1479570   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1479571   +   end;
MPRINT(EM_DIAGRAM):   end;
1479572   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1479573   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1479574   +   end;
MPRINT(EM_DIAGRAM):   end;
1479575   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479576   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1479577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479579   +   end;
MPRINT(EM_DIAGRAM):   end;
1479580   +end;
MPRINT(EM_DIAGRAM):   end;
1479581   +
1479582   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1479583   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1479584   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1479585   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1479586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479588   +end;
MPRINT(EM_DIAGRAM):   end;
1479589   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479591   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1479592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479593   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1479594   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1479595   +   end;
MPRINT(EM_DIAGRAM):   end;
1479596   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1479597   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1479598   +   end;
MPRINT(EM_DIAGRAM):   end;
1479599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479600   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1479601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479603   +   end;
MPRINT(EM_DIAGRAM):   end;
1479604   +end;
MPRINT(EM_DIAGRAM):   end;
1479605   +
1479606   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1479607   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1479608   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1479609   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1479610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479612   +end;
MPRINT(EM_DIAGRAM):   end;
1479613   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479615   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1479616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479617   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1479618   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1479619   +   end;
MPRINT(EM_DIAGRAM):   end;
1479620   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1479621   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1479622   +   end;
MPRINT(EM_DIAGRAM):   end;
1479623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479624   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1479625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479627   +   end;
MPRINT(EM_DIAGRAM):   end;
1479628   +end;
MPRINT(EM_DIAGRAM):   end;
1479629   +
1479630   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1479631   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1479632   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1479633   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1479634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479636   +end;
MPRINT(EM_DIAGRAM):   end;
1479637   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1479639   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1479640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479641   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1479642   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1479643   +   end;
MPRINT(EM_DIAGRAM):   end;
1479644   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1479645   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1479646   +   end;
MPRINT(EM_DIAGRAM):   end;
1479647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479648   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1479649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479651   +   end;
MPRINT(EM_DIAGRAM):   end;
1479652   +end;
MPRINT(EM_DIAGRAM):   end;
1479653   +
1479654   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1479655   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1479656   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1479657   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1479658   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1479659   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1479660   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1479661   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1479662   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1479663   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1479664   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1479665   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1479666   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479667   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479668   +end;
MPRINT(EM_DIAGRAM):   end;
1479669   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479670   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1479671   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1479672   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479673   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1479674   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1479675   +   end;
MPRINT(EM_DIAGRAM):   end;
1479676   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1479677   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1479678   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1479679   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1479680   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1479681   +   end;
MPRINT(EM_DIAGRAM):   end;
1479682   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1479683   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1479684   +   end;
MPRINT(EM_DIAGRAM):   end;
1479685   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1479686   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1479687   +   end;
MPRINT(EM_DIAGRAM):   end;
1479688   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1479689   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1479690   +   end;
MPRINT(EM_DIAGRAM):   end;
1479691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479692   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1479693   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1479694   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1479695   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1479696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479698   +   end;
MPRINT(EM_DIAGRAM):   end;
1479699   +end;
MPRINT(EM_DIAGRAM):   end;
1479700   +
1479701   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1479702   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1479703   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1479704   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1479705   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1479706   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1479707   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1479708   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1479709   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1479710   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1479711   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1479712   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1479713   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1479714   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1479715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479716   +end;
MPRINT(EM_DIAGRAM):   end;
1479717   +else do;
MPRINT(EM_DIAGRAM):   else do;
1479718   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1479719   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1479720   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1479721   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1479722   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1479723   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1479724   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1479725   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1479726   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1479727   +         end;
MPRINT(EM_DIAGRAM):   end;
1479728   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1479729   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1479730   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1479731   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1479732   +            end;
MPRINT(EM_DIAGRAM):   end;
1479733   +         end;
MPRINT(EM_DIAGRAM):   end;
1479734   +      end;
MPRINT(EM_DIAGRAM):   end;
1479735   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1479736   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1479737   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1479738   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1479739   +         end;
MPRINT(EM_DIAGRAM):   end;
1479740   +      end;
MPRINT(EM_DIAGRAM):   end;
1479741   +   end;
MPRINT(EM_DIAGRAM):   end;
1479742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1479743   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1479744   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1479745   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1479746   +      end;
MPRINT(EM_DIAGRAM):   end;
1479747   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1479748   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1479749   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1479750   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1479751   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1479752   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1479753   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1479754   +         end;
MPRINT(EM_DIAGRAM):   end;
1479755   +      end;
MPRINT(EM_DIAGRAM):   end;
1479756   +   end;
MPRINT(EM_DIAGRAM):   end;
1479757   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1479758   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1479759   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1479760   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1479761   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1479762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1479763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479764   +   end;
MPRINT(EM_DIAGRAM):   end;
1479765   +end;
MPRINT(EM_DIAGRAM):   end;
1479766   +
1479767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479768   +*** Checking missing input Interval
1479769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1479770   +
1479771   +IF NMISS(
1479772   +   AcceptedCmpTotal ,
1479773   +   Age ,
1479774   +   Frq ,
1479775   +   Income ,
1479776   +   Kidhome ,
1479777   +   Mnt ,
1479778   +   MntFishProducts ,
1479779   +   MntFruits ,
1479780   +   MntGoldProds ,
1479781   +   MntMeatProducts ,
1479782   +   MntSweetProducts ,
1479783   +   MntWines ,
1479784   +   MonthsAsCustomer ,
1479785   +   NumCatalogPurchases ,
1479786   +   NumDealsPurchases ,
1479787   +   NumDistPurchases ,
1479788   +   NumStorePurchases ,
1479789   +   NumWebPurchases ,
1479790   +   NumWebVisitsMonth ,
1479791   +   RFMstat ,
1479792   +   RMntFrq ,
1479793   +   Recency ,
1479794   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1479795   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1479796   +
1479797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1479798   +END;
MPRINT(EM_DIAGRAM):   END;
1479799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479800   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1479801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479802   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1479803   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1479804   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1479805   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1479806   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1479807   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1479808   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1479809   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1479810   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1479811   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1479812   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1479813   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1479814   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1479815   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1479816   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1479817   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1479818   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1479819   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1479820   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1479821   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1479822   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1479823   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1479824   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1479825   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1479826   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1479827   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1479828   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1479829   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1479830   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1479831   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1479832   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1479833   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1479834   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1479835   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1479836   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1479837   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1479838   +END;
MPRINT(EM_DIAGRAM):   END;
1479839   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1479840   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1479841   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1479842   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1479843   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1479844   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1479845   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1479846   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1479847   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1479848   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1479849   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1479850   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1479851   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1479852   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1479853   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1479854   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1479855   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1479856   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1479857   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1479858   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1479859   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1479860   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1479861   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1479862   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1479863   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1479864   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1479865   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1479866   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1479867   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1479868   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1479869   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1479870   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1479871   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1479872   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1479873   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1479874   +   ELSE S_NumCatalogPurchases
1479875   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1479876   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1479877   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1479878   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1479879   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1479880   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1479881   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1479882   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1479883   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1479884   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1479885   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1479886   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1479887   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1479888   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1479889   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1479890   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1479891   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1479892   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1479893   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1479894   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1479895   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1479896   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1479897   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1479898   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1479899   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1479900   +END;
MPRINT(EM_DIAGRAM):   END;
1479901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479902   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1479903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479905   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1479906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479908   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1479909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1479910   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1479911   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1479912   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1479913   +        S_Income  +    -0.76740176580734 * S_Kidhome
1479914   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1479915   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1479916   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1479917   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1479918   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1479919   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1479920   +          +    -1.00050516074089 * S_NumDealsPurchases
1479921   +          +    -0.89322788176916 * S_NumDistPurchases
1479922   +          +     1.21914397196653 * S_NumStorePurchases
1479923   +          +     1.50867172673665 * S_NumWebPurchases
1479924   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1479925   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1479926   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1479927   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1479928   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1479929   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1479930   +        S_Income  +    -0.76288911429735 * S_Kidhome
1479931   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1479932   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1479933   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1479934   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1479935   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1479936   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1479937   +          +     0.79497206561332 * S_NumDealsPurchases
1479938   +          +    -0.13658888199464 * S_NumDistPurchases
1479939   +          +    -0.86436416316417 * S_NumStorePurchases
1479940   +          +    -0.85206550087617 * S_NumWebPurchases
1479941   +          +     1.72745004688732 * S_NumWebVisitsMonth
1479942   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1479943   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1479944   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1479945   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1479946   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1479947   +        S_Income  +    -0.48841499166688 * S_Kidhome
1479948   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1479949   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1479950   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1479951   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1479952   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1479953   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1479954   +          +    -0.00010125986409 * S_NumDealsPurchases
1479955   +          +    -0.00873530900019 * S_NumDistPurchases
1479956   +          +    -0.13188135131414 * S_NumStorePurchases
1479957   +          +    -0.10710067608125 * S_NumWebPurchases
1479958   +          +     0.99164053465149 * S_NumWebVisitsMonth
1479959   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1479960   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1479961   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1479962   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1479963   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1479964   +        S_Income  +    -0.57026847797175 * S_Kidhome
1479965   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1479966   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1479967   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1479968   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1479969   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1479970   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1479971   +          +     0.83618651452015 * S_NumDealsPurchases
1479972   +          +     0.22469306589917 * S_NumDistPurchases
1479973   +          +    -0.95889459414769 * S_NumStorePurchases
1479974   +          +    -0.95695646799114 * S_NumWebPurchases
1479975   +          +     0.96738689790948 * S_NumWebVisitsMonth
1479976   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1479977   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1479978   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1479979   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1479980   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1479981   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1479982   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1479983   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
1479984   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1479985   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1479986   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1479987   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1479988   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
1479989   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1479990   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1479991   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1479992   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1479993   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
1479994   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1479995   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1479996   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1479997   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1479998   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
1479999   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1480000   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1480001   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1480002   +          +     0.80885454992674 * Marital_StatusDivorced
1480003   +          +     -0.5568630572283 * Marital_StatusMarried
1480004   +          +    -0.03099047176508 * Marital_StatusSingle
1480005   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1480006   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1480007   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1480008   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1480009   +          +     0.13911597069393 * Marital_StatusDivorced
1480010   +          +    -1.50081060732787 * Marital_StatusMarried
1480011   +          +     1.41717012231539 * Marital_StatusSingle
1480012   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1480013   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1480014   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1480015   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1480016   +          +    -0.26412736340464 * Marital_StatusDivorced
1480017   +          +    -0.27049992388629 * Marital_StatusMarried
1480018   +          +     0.67476795725099 * Marital_StatusSingle
1480019   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1480020   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1480021   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1480022   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1480023   +          +      0.8954230457499 * Marital_StatusDivorced
1480024   +          +     0.73706556068242 * Marital_StatusMarried
1480025   +          +    -1.29073720538893 * Marital_StatusSingle
1480026   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1480027   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1480028   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1480029   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1480030   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1480031   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1480032   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1480033   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1480034   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1480035   +END;
MPRINT(EM_DIAGRAM):   END;
1480036   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1480037   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1480038   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1480039   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1480040   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1480041   +END;
MPRINT(EM_DIAGRAM):   END;
1480042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480043   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1480044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480045   +
1480046   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1480047   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1480048   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1480049   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1480050   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1480051   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480052   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1480053   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1480054   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1480055   +end;
MPRINT(EM_DIAGRAM):   end;
1480056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480057   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1480058   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1480059   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1480060   +   end;
MPRINT(EM_DIAGRAM):   end;
1480061   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1480062   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1480063   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1480064   +   end;
MPRINT(EM_DIAGRAM):   end;
1480065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480066   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1480067   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1480068   +   end;
MPRINT(EM_DIAGRAM):   end;
1480069   +end;
MPRINT(EM_DIAGRAM):   end;
1480070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1480071   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1480072   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1480073   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1480074   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1480075   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1480076   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1480077   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1480078   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1480079   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1480080   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1480081   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1480082   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1480083   +END;
MPRINT(EM_DIAGRAM):   END;
1480084   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1480085   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1480086   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1480087   +END;
MPRINT(EM_DIAGRAM):   END;
1480088   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1480089   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1480090   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1480091   +END;
MPRINT(EM_DIAGRAM):   END;
1480092   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1480093   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1480094   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1480095   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1480096   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1480097   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1480098   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1480099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480100   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1480101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480102   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1480103   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1480104   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1480105   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1480106   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1480107   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1480108   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1480109   +END;
MPRINT(EM_DIAGRAM):   END;
1480110   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1480111   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1480112   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1480113   +drop
1480114   +H11
1480115   +H12
1480116   +H13
1480117   +H14
1480118   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1480119   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1480120   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1480121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480122   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1480123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480124   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1480125   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1480126   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1480127   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1480128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480129   +* Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
1480130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480131   +length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
1480132   +drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
1480133   +Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
1480134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480135   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1480136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480137   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1480138   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1480139   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1480140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480141   +* Ensmbl29: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 5 of 10;
1480142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480144   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1480145   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1480146   +* NODE: Neural;
MPRINT(EM_DIAGRAM):   * NODE: Neural;
1480147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480148   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1480149   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1480150   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1480151   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1480152   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1480153   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1480154   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1480155   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1480156   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1480157   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1480158   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1480159   +LENGTH _WARN_ $4
1480160   +      F_DepVar  $ 12
1480161   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1480162   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1480163   +
1480164   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1480165   +
1480166   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1480167   +
1480168   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1480169   +
1480170   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1480171   +
1480172   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1480173   +
1480174   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1480175   +
1480176   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1480177   +
1480178   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1480179   +
1480180   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1480181   +
1480182   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1480183   +
1480184   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1480185   +
1480186   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1480187   +
1480188   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1480189   +
1480190   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1480191   +
1480192   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1480193   +
1480194   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1480195   +
1480196   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1480197   +
1480198   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1480199   +
1480200   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1480201   +
1480202   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1480203   +
1480204   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1480205   +
1480206   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1480207   +
1480208   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1480209   +
1480210   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1480211   +
1480212   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1480213   +
1480214   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1480215   +
1480216   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1480217   +
1480218   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1480219   +
1480220   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1480221   +
1480222   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1480223   +
1480224   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1480225   +
1480226   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1480227   +
1480228   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1480229   +
1480230   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1480231   +
1480232   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1480233   +
1480234   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1480235   +
1480236   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1480237   +
1480238   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1480239   +
1480240   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1480241   +
1480242   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1480243   +
1480244   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1480245   +
1480246   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1480247   +
1480248   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1480249   +
1480250   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1480251   +
1480252   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1480253   +
1480254   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1480255   +
1480256   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1480257   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1480258   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1480259   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1480260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480262   +end;
MPRINT(EM_DIAGRAM):   end;
1480263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480265   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1480266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480268   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1480269   +   end;
MPRINT(EM_DIAGRAM):   end;
1480270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480271   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1480272   +   end;
MPRINT(EM_DIAGRAM):   end;
1480273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480274   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1480275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480277   +   end;
MPRINT(EM_DIAGRAM):   end;
1480278   +end;
MPRINT(EM_DIAGRAM):   end;
1480279   +
1480280   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1480281   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1480282   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1480283   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1480284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480286   +end;
MPRINT(EM_DIAGRAM):   end;
1480287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480289   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1480290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480291   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480292   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1480293   +   end;
MPRINT(EM_DIAGRAM):   end;
1480294   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480295   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1480296   +   end;
MPRINT(EM_DIAGRAM):   end;
1480297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480298   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1480299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480301   +   end;
MPRINT(EM_DIAGRAM):   end;
1480302   +end;
MPRINT(EM_DIAGRAM):   end;
1480303   +
1480304   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1480305   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1480306   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1480307   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1480308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480310   +end;
MPRINT(EM_DIAGRAM):   end;
1480311   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480312   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480313   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1480314   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480315   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480316   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1480317   +   end;
MPRINT(EM_DIAGRAM):   end;
1480318   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480319   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1480320   +   end;
MPRINT(EM_DIAGRAM):   end;
1480321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480322   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1480323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480325   +   end;
MPRINT(EM_DIAGRAM):   end;
1480326   +end;
MPRINT(EM_DIAGRAM):   end;
1480327   +
1480328   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1480329   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1480330   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1480331   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1480332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480334   +end;
MPRINT(EM_DIAGRAM):   end;
1480335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480336   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480337   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1480338   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480339   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480340   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1480341   +   end;
MPRINT(EM_DIAGRAM):   end;
1480342   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480343   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1480344   +   end;
MPRINT(EM_DIAGRAM):   end;
1480345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480346   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1480347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480349   +   end;
MPRINT(EM_DIAGRAM):   end;
1480350   +end;
MPRINT(EM_DIAGRAM):   end;
1480351   +
1480352   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1480353   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1480354   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1480355   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1480356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480358   +end;
MPRINT(EM_DIAGRAM):   end;
1480359   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480360   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480361   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1480362   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480363   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480364   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1480365   +   end;
MPRINT(EM_DIAGRAM):   end;
1480366   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480367   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1480368   +   end;
MPRINT(EM_DIAGRAM):   end;
1480369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480370   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1480371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480373   +   end;
MPRINT(EM_DIAGRAM):   end;
1480374   +end;
MPRINT(EM_DIAGRAM):   end;
1480375   +
1480376   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1480377   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1480378   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1480379   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1480380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480382   +end;
MPRINT(EM_DIAGRAM):   end;
1480383   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480385   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1480386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480388   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1480389   +   end;
MPRINT(EM_DIAGRAM):   end;
1480390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480391   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1480392   +   end;
MPRINT(EM_DIAGRAM):   end;
1480393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480394   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1480395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480397   +   end;
MPRINT(EM_DIAGRAM):   end;
1480398   +end;
MPRINT(EM_DIAGRAM):   end;
1480399   +
1480400   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1480401   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1480402   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1480403   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1480404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480406   +end;
MPRINT(EM_DIAGRAM):   end;
1480407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480409   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1480410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480411   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1480412   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1480413   +   end;
MPRINT(EM_DIAGRAM):   end;
1480414   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1480415   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1480416   +   end;
MPRINT(EM_DIAGRAM):   end;
1480417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480418   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1480419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480421   +   end;
MPRINT(EM_DIAGRAM):   end;
1480422   +end;
MPRINT(EM_DIAGRAM):   end;
1480423   +
1480424   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1480425   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1480426   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1480427   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1480428   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1480429   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1480430   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1480431   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1480432   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1480433   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1480434   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1480435   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1480436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480438   +end;
MPRINT(EM_DIAGRAM):   end;
1480439   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480440   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1480441   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1480442   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480443   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1480444   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1480445   +   end;
MPRINT(EM_DIAGRAM):   end;
1480446   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1480447   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1480448   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1480449   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1480450   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1480451   +   end;
MPRINT(EM_DIAGRAM):   end;
1480452   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1480453   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1480454   +   end;
MPRINT(EM_DIAGRAM):   end;
1480455   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1480456   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1480457   +   end;
MPRINT(EM_DIAGRAM):   end;
1480458   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1480459   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1480460   +   end;
MPRINT(EM_DIAGRAM):   end;
1480461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480462   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1480463   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1480464   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1480465   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1480466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480468   +   end;
MPRINT(EM_DIAGRAM):   end;
1480469   +end;
MPRINT(EM_DIAGRAM):   end;
1480470   +
1480471   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1480472   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1480473   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1480474   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1480475   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1480476   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1480477   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1480478   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1480479   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1480480   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1480481   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1480482   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1480483   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1480484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480486   +end;
MPRINT(EM_DIAGRAM):   end;
1480487   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480488   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1480489   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1480490   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480491   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1480492   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1480493   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1480494   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1480495   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1480496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1480497   +         end;
MPRINT(EM_DIAGRAM):   end;
1480498   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1480499   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1480500   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1480501   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1480502   +            end;
MPRINT(EM_DIAGRAM):   end;
1480503   +         end;
MPRINT(EM_DIAGRAM):   end;
1480504   +      end;
MPRINT(EM_DIAGRAM):   end;
1480505   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1480506   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1480507   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1480508   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1480509   +         end;
MPRINT(EM_DIAGRAM):   end;
1480510   +      end;
MPRINT(EM_DIAGRAM):   end;
1480511   +   end;
MPRINT(EM_DIAGRAM):   end;
1480512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480513   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1480514   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1480515   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1480516   +      end;
MPRINT(EM_DIAGRAM):   end;
1480517   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1480518   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1480519   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1480520   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1480521   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1480522   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1480523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1480524   +         end;
MPRINT(EM_DIAGRAM):   end;
1480525   +      end;
MPRINT(EM_DIAGRAM):   end;
1480526   +   end;
MPRINT(EM_DIAGRAM):   end;
1480527   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1480528   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1480529   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1480530   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1480531   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1480532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480534   +   end;
MPRINT(EM_DIAGRAM):   end;
1480535   +end;
MPRINT(EM_DIAGRAM):   end;
1480536   +
1480537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480538   +*** Checking missing input Interval
1480539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1480540   +
1480541   +IF NMISS(
1480542   +   AcceptedCmpTotal ,
1480543   +   Age ,
1480544   +   Frq ,
1480545   +   Income ,
1480546   +   Kidhome ,
1480547   +   Mnt ,
1480548   +   MntFishProducts ,
1480549   +   MntFruits ,
1480550   +   MntGoldProds ,
1480551   +   MntMeatProducts ,
1480552   +   MntSweetProducts ,
1480553   +   MntWines ,
1480554   +   MonthsAsCustomer ,
1480555   +   NumCatalogPurchases ,
1480556   +   NumDealsPurchases ,
1480557   +   NumDistPurchases ,
1480558   +   NumStorePurchases ,
1480559   +   NumWebPurchases ,
1480560   +   NumWebVisitsMonth ,
1480561   +   RFMstat ,
1480562   +   RMntFrq ,
1480563   +   Recency ,
1480564   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1480565   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1480566   +
1480567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480568   +END;
MPRINT(EM_DIAGRAM):   END;
1480569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480570   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1480571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480572   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1480573   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1480574   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1480575   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1480576   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1480577   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1480578   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1480579   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1480580   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1480581   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1480582   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1480583   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1480584   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1480585   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1480586   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1480587   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1480588   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1480589   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1480590   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1480591   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1480592   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1480593   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1480594   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1480595   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1480596   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1480597   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1480598   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1480599   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1480600   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1480601   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1480602   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1480603   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1480604   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1480605   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1480606   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1480607   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1480608   +END;
MPRINT(EM_DIAGRAM):   END;
1480609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1480610   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1480611   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1480612   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1480613   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1480614   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1480615   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1480616   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1480617   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1480618   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1480619   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1480620   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1480621   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1480622   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1480623   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1480624   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1480625   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1480626   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1480627   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1480628   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1480629   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1480630   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1480631   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1480632   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1480633   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1480634   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1480635   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1480636   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1480637   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1480638   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1480639   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1480640   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1480641   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1480642   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1480643   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1480644   +   ELSE S_NumCatalogPurchases
1480645   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1480646   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1480647   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1480648   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1480649   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1480650   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1480651   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1480652   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1480653   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1480654   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1480655   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1480656   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1480657   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1480658   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1480659   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1480660   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1480661   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1480662   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1480663   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1480664   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1480665   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1480666   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1480667   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1480668   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1480669   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1480670   +END;
MPRINT(EM_DIAGRAM):   END;
1480671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480672   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1480673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480675   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1480676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480678   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1480679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480680   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1480681   +   H11  =     0.21199836063704 * S_AcceptedCmpTotal  +    -0.02945581506424 *
1480682   +        S_Age  +    -0.16919262213625 * S_Frq  +     0.14512005996462 *
1480683   +        S_Income  +    -0.02666790507068 * S_Kidhome
1480684   +          +     0.00783799563972 * S_Mnt  +    -0.04773263250677 *
1480685   +        S_MntFishProducts  +     -0.0422809135011 * S_MntFruits
1480686   +          +      0.0079708708989 * S_MntGoldProds  +      0.2106873504387 *
1480687   +        S_MntMeatProducts  +    -0.02356644979368 * S_MntSweetProducts
1480688   +          +    -0.19316118342366 * S_MntWines  +    -0.01997288256292 *
1480689   +        S_MonthsAsCustomer  +     0.28114494721724 * S_NumCatalogPurchases
1480690   +          +     0.15201388307546 * S_NumDealsPurchases
1480691   +          +      0.0691064780948 * S_NumDistPurchases
1480692   +          +    -0.06316014736289 * S_NumStorePurchases
1480693   +          +    -0.10762176869863 * S_NumWebPurchases
1480694   +          +     0.30130792444288 * S_NumWebVisitsMonth
1480695   +          +      0.0486829682523 * S_RFMstat  +     0.05664601410311 *
1480696   +        S_RMntFrq  +    -0.33967860548156 * S_Recency
1480697   +          +    -0.07910434348734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21199836063704 * S_AcceptedCmpTotal + -0.02945581506424 * S_Age 
+ -0.16919262213625 * S_Frq + 0.14512005996462 * S_Income + -0.02666790507068 * S_Kidhome + 
0.00783799563972 * S_Mnt + -0.04773263250677 * S_MntFishProducts + -0.0422809135011 * 
S_MntFruits + 0.0079708708989 * S_MntGoldProds + 0.2106873504387 * S_MntMeatProducts + 
-0.02356644979368 * S_MntSweetProducts + -0.19316118342366 * S_MntWines + -0.01997288256292 * 
S_MonthsAsCustomer + 0.28114494721724 * S_NumCatalogPurchases + 0.15201388307546 * 
S_NumDealsPurchases + 0.0691064780948 * S_NumDistPurchases + -0.06316014736289 * 
S_NumStorePurchases + -0.10762176869863 * S_NumWebPurchases + 0.30130792444288 * 
S_NumWebVisitsMonth + 0.0486829682523 * S_RFMstat + 0.05664601410311 * S_RMntFrq + 
-0.33967860548156 * S_Recency + -0.07910434348734 * S_Teenhome ;
1480698   +   H11  = H11  +    -0.00073768107162 * AcceptedCmp10
1480699   +          +     0.00345057378593 * AcceptedCmp20  +    -0.01951840681321 *
1480700   +        AcceptedCmp30  +     0.01519043635856 * AcceptedCmp40
1480701   +          +    -0.06774838806782 * AcceptedCmp50  +      0.0455181994272 *
1480702   +        Complain0  +    -0.02208676447134 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00073768107162 * AcceptedCmp10 + 0.00345057378593 * 
AcceptedCmp20 + -0.01951840681321 * AcceptedCmp30 + 0.01519043635856 * AcceptedCmp40 + 
-0.06774838806782 * AcceptedCmp50 + 0.0455181994272 * Complain0 + -0.02208676447134 * 
HigherEducationBinary0 ;
1480703   +   H11  = H11  +     0.02211753777429 * Education2n_Cycle
1480704   +          +     -0.0415173136677 * EducationBasic  +     0.02078484520297 *
1480705   +        EducationGraduation  +    -0.00122029917596 * EducationMaster
1480706   +          +     0.03231417790779 * Marital_StatusDivorced
1480707   +          +    -0.11917982892952 * Marital_StatusMarried
1480708   +          +     0.09076044687834 * Marital_StatusSingle
1480709   +          +     -0.1248189936875 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02211753777429 * Education2n_Cycle + -0.0415173136677 * 
EducationBasic + 0.02078484520297 * EducationGraduation + -0.00122029917596 * EducationMaster 
+ 0.03231417790779 * Marital_StatusDivorced + -0.11917982892952 * Marital_StatusMarried + 
0.09076044687834 * Marital_StatusSingle + -0.1248189936875 * Marital_StatusTogether ;
1480710   +   H11  =     -0.5152185206902 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.5152185206902 + H11 ;
1480711   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1480712   +END;
MPRINT(EM_DIAGRAM):   END;
1480713   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1480714   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1480715   +END;
MPRINT(EM_DIAGRAM):   END;
1480716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480717   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1480718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480719   +
1480720   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1480721   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1480722   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1480723   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1480724   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1480725   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480726   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1480727   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1480728   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1480729   +end;
MPRINT(EM_DIAGRAM):   end;
1480730   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480731   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1480732   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1480733   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1480734   +   end;
MPRINT(EM_DIAGRAM):   end;
1480735   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1480736   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1480737   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1480738   +   end;
MPRINT(EM_DIAGRAM):   end;
1480739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480740   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1480741   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1480742   +   end;
MPRINT(EM_DIAGRAM):   end;
1480743   +end;
MPRINT(EM_DIAGRAM):   end;
1480744   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1480745   +   P_DepVar1  =     8.82361756901136 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82361756901136 * H11 ;
1480746   +   P_DepVar1  =      -0.589740369134 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.589740369134 + P_DepVar1 ;
1480747   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1480748   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1480749   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1480750   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1480751   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1480752   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1480753   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1480754   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1480755   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1480756   +END;
MPRINT(EM_DIAGRAM):   END;
1480757   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1480758   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1480759   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1480760   +END;
MPRINT(EM_DIAGRAM):   END;
1480761   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1480762   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1480763   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1480764   +END;
MPRINT(EM_DIAGRAM):   END;
1480765   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1480766   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1480767   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1480768   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1480769   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1480770   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1480771   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1480772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480773   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1480774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1480775   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1480776   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1480777   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1480778   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1480779   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1480780   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1480781   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1480782   +END;
MPRINT(EM_DIAGRAM):   END;
1480783   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1480784   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1480785   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1480786   +drop
1480787   +H11
1480788   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1480789   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1480790   +* Renaming variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural;
1480791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480792   +* Renaming Posterior variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural;
1480793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480794   +drop Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar1;
1480795   +Neural_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar1 = P_DepVar1;
1480796   +drop Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural_P_DepVar0;
1480797   +Neural_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural_P_DepVar0 = P_DepVar0;
1480798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480799   +* Renaming Into variables for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural;
1480800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480801   +length Neural_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural_I_DepVar $32;
1480802   +drop Neural_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural_I_DepVar;
1480803   +Neural_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural_I_DepVar = I_DepVar;
1480804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480805   +* Renaming _WARN_ variable for Neural;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural;
1480806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480807   +length Neural_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural_WARN_ $4;
1480808   +drop Neural_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural_WARN_;
1480809   +Neural_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural_WARN_ = _WARN_;
1480810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480811   +* Ensmbl29: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 6 of 10;
1480812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480814   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1480815   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1480816   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1480817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1480818   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1480819   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1480820   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1480821   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1480822   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1480823   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1480824   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1480825   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1480826   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1480827   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1480828   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1480829   +LENGTH _WARN_ $4
1480830   +      F_DepVar  $ 12
1480831   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1480832   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1480833   +
1480834   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1480835   +
1480836   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1480837   +
1480838   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1480839   +
1480840   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1480841   +
1480842   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1480843   +
1480844   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1480845   +
1480846   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1480847   +
1480848   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1480849   +
1480850   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1480851   +
1480852   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1480853   +
1480854   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1480855   +
1480856   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1480857   +
1480858   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1480859   +
1480860   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1480861   +
1480862   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1480863   +
1480864   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1480865   +
1480866   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1480867   +
1480868   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1480869   +
1480870   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1480871   +
1480872   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1480873   +
1480874   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1480875   +
1480876   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1480877   +
1480878   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1480879   +
1480880   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1480881   +
1480882   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1480883   +
1480884   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1480885   +
1480886   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1480887   +
1480888   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1480889   +
1480890   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1480891   +
1480892   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1480893   +
1480894   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1480895   +
1480896   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1480897   +
1480898   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1480899   +
1480900   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1480901   +
1480902   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1480903   +
1480904   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1480905   +
1480906   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1480907   +
1480908   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1480909   +
1480910   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1480911   +
1480912   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1480913   +
1480914   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1480915   +
1480916   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1480917   +
1480918   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1480919   +
1480920   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1480921   +
1480922   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1480923   +
1480924   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1480925   +
1480926   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1480927   +
1480928   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1480929   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1480930   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1480931   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1480932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480934   +end;
MPRINT(EM_DIAGRAM):   end;
1480935   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480937   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1480938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480939   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480940   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1480941   +   end;
MPRINT(EM_DIAGRAM):   end;
1480942   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480943   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1480944   +   end;
MPRINT(EM_DIAGRAM):   end;
1480945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480946   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1480947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480949   +   end;
MPRINT(EM_DIAGRAM):   end;
1480950   +end;
MPRINT(EM_DIAGRAM):   end;
1480951   +
1480952   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1480953   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1480954   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1480955   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1480956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480958   +end;
MPRINT(EM_DIAGRAM):   end;
1480959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480960   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480961   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1480962   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480963   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480964   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1480965   +   end;
MPRINT(EM_DIAGRAM):   end;
1480966   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480967   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1480968   +   end;
MPRINT(EM_DIAGRAM):   end;
1480969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480970   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1480971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480973   +   end;
MPRINT(EM_DIAGRAM):   end;
1480974   +end;
MPRINT(EM_DIAGRAM):   end;
1480975   +
1480976   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1480977   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1480978   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1480979   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1480980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1480981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480982   +end;
MPRINT(EM_DIAGRAM):   end;
1480983   +else do;
MPRINT(EM_DIAGRAM):   else do;
1480984   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1480985   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1480986   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1480987   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1480988   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1480989   +   end;
MPRINT(EM_DIAGRAM):   end;
1480990   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1480991   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1480992   +   end;
MPRINT(EM_DIAGRAM):   end;
1480993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1480994   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1480995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1480996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1480997   +   end;
MPRINT(EM_DIAGRAM):   end;
1480998   +end;
MPRINT(EM_DIAGRAM):   end;
1480999   +
1481000   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1481001   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1481002   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1481003   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1481004   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481006   +end;
MPRINT(EM_DIAGRAM):   end;
1481007   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481008   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481009   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1481010   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481011   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481012   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1481013   +   end;
MPRINT(EM_DIAGRAM):   end;
1481014   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481015   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1481016   +   end;
MPRINT(EM_DIAGRAM):   end;
1481017   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481018   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1481019   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481020   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481021   +   end;
MPRINT(EM_DIAGRAM):   end;
1481022   +end;
MPRINT(EM_DIAGRAM):   end;
1481023   +
1481024   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1481025   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1481026   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1481027   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1481028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481030   +end;
MPRINT(EM_DIAGRAM):   end;
1481031   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481032   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481033   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1481034   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481035   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481036   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1481037   +   end;
MPRINT(EM_DIAGRAM):   end;
1481038   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481039   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1481040   +   end;
MPRINT(EM_DIAGRAM):   end;
1481041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481042   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1481043   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481044   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481045   +   end;
MPRINT(EM_DIAGRAM):   end;
1481046   +end;
MPRINT(EM_DIAGRAM):   end;
1481047   +
1481048   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1481049   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1481050   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1481051   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1481052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481054   +end;
MPRINT(EM_DIAGRAM):   end;
1481055   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481056   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481057   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1481058   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481059   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481060   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1481061   +   end;
MPRINT(EM_DIAGRAM):   end;
1481062   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481063   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1481064   +   end;
MPRINT(EM_DIAGRAM):   end;
1481065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481066   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1481067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481069   +   end;
MPRINT(EM_DIAGRAM):   end;
1481070   +end;
MPRINT(EM_DIAGRAM):   end;
1481071   +
1481072   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1481073   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1481074   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1481075   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1481076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481078   +end;
MPRINT(EM_DIAGRAM):   end;
1481079   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481080   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481081   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1481082   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481083   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1481084   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1481085   +   end;
MPRINT(EM_DIAGRAM):   end;
1481086   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1481087   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1481088   +   end;
MPRINT(EM_DIAGRAM):   end;
1481089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481090   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1481091   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481092   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481093   +   end;
MPRINT(EM_DIAGRAM):   end;
1481094   +end;
MPRINT(EM_DIAGRAM):   end;
1481095   +
1481096   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1481097   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1481098   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1481099   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1481100   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1481101   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1481102   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1481103   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1481104   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1481105   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1481106   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1481107   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1481108   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481109   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481110   +end;
MPRINT(EM_DIAGRAM):   end;
1481111   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481112   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1481113   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1481114   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481115   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1481116   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1481117   +   end;
MPRINT(EM_DIAGRAM):   end;
1481118   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1481119   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1481120   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1481121   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1481122   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1481123   +   end;
MPRINT(EM_DIAGRAM):   end;
1481124   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1481125   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1481126   +   end;
MPRINT(EM_DIAGRAM):   end;
1481127   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1481128   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1481129   +   end;
MPRINT(EM_DIAGRAM):   end;
1481130   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1481131   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1481132   +   end;
MPRINT(EM_DIAGRAM):   end;
1481133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481134   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1481135   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1481136   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1481137   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1481138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481140   +   end;
MPRINT(EM_DIAGRAM):   end;
1481141   +end;
MPRINT(EM_DIAGRAM):   end;
1481142   +
1481143   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1481144   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1481145   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1481146   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1481147   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1481148   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1481149   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1481150   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1481151   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1481152   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1481153   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1481154   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1481155   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1481156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481158   +end;
MPRINT(EM_DIAGRAM):   end;
1481159   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481160   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1481161   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1481162   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481163   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1481164   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1481165   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1481166   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1481167   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1481168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481169   +         end;
MPRINT(EM_DIAGRAM):   end;
1481170   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1481171   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1481172   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1481173   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481174   +            end;
MPRINT(EM_DIAGRAM):   end;
1481175   +         end;
MPRINT(EM_DIAGRAM):   end;
1481176   +      end;
MPRINT(EM_DIAGRAM):   end;
1481177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1481178   +         if _dm8 = 'SINGLE'  then do;
The SAS System

MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1481179   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1481180   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481181   +         end;
MPRINT(EM_DIAGRAM):   end;
1481182   +      end;
MPRINT(EM_DIAGRAM):   end;
1481183   +   end;
MPRINT(EM_DIAGRAM):   end;
1481184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481185   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1481186   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1481187   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481188   +      end;
MPRINT(EM_DIAGRAM):   end;
1481189   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1481190   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1481191   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1481192   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1481193   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1481194   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1481195   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481196   +         end;
MPRINT(EM_DIAGRAM):   end;
1481197   +      end;
MPRINT(EM_DIAGRAM):   end;
1481198   +   end;
MPRINT(EM_DIAGRAM):   end;
1481199   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1481200   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1481201   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1481202   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1481203   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1481204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481206   +   end;
MPRINT(EM_DIAGRAM):   end;
1481207   +end;
MPRINT(EM_DIAGRAM):   end;
1481208   +
1481209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481210   +*** Checking missing input Interval
1481211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1481212   +
1481213   +IF NMISS(
1481214   +   AcceptedCmpTotal ,
1481215   +   Age ,
1481216   +   Frq ,
1481217   +   Income ,
1481218   +   Kidhome ,
1481219   +   Mnt ,
1481220   +   MntFishProducts ,
1481221   +   MntFruits ,
1481222   +   MntGoldProds ,
1481223   +   MntMeatProducts ,
1481224   +   MntSweetProducts ,
1481225   +   MntWines ,
1481226   +   MonthsAsCustomer ,
1481227   +   NumCatalogPurchases ,
1481228   +   NumDealsPurchases ,
1481229   +   NumDistPurchases ,
1481230   +   NumStorePurchases ,
1481231   +   NumWebPurchases ,
1481232   +   NumWebVisitsMonth ,
1481233   +   RFMstat ,
1481234   +   RMntFrq ,
1481235   +   Recency ,
1481236   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1481237   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1481238   +
1481239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481240   +END;
MPRINT(EM_DIAGRAM):   END;
1481241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481242   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1481243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481244   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1481245   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1481246   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1481247   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1481248   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1481249   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1481250   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1481251   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1481252   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1481253   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1481254   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1481255   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1481256   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1481257   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1481258   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1481259   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1481260   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1481261   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1481262   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1481263   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1481264   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1481265   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1481266   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1481267   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1481268   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1481269   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1481270   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1481271   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1481272   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1481273   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1481274   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1481275   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1481276   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1481277   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1481278   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1481279   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1481280   +END;
MPRINT(EM_DIAGRAM):   END;
1481281   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1481282   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1481283   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1481284   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1481285   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1481286   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1481287   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1481288   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1481289   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1481290   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1481291   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1481292   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1481293   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1481294   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1481295   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1481296   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1481297   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1481298   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1481299   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1481300   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1481301   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1481302   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1481303   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1481304   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1481305   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1481306   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1481307   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1481308   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1481309   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1481310   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1481311   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1481312   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1481313   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1481314   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1481315   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1481316   +   ELSE S_NumCatalogPurchases
1481317   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1481318   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1481319   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1481320   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1481321   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1481322   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1481323   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1481324   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1481325   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1481326   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1481327   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1481328   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1481329   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1481330   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1481331   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1481332   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1481333   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1481334   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1481335   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1481336   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1481337   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1481338   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1481339   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1481340   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1481341   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1481342   +END;
MPRINT(EM_DIAGRAM):   END;
1481343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481344   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1481345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481347   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1481348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481350   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1481351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481352   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1481353   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1481354   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1481355   +        S_Income  +    -1.07733254688396 * S_Kidhome
1481356   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1481357   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1481358   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1481359   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1481360   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1481361   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1481362   +          +     0.34431711603003 * S_NumDealsPurchases
1481363   +          +      0.7134923732819 * S_NumDistPurchases
1481364   +          +     0.05901777448936 * S_NumStorePurchases
1481365   +          +    -0.19803026616936 * S_NumWebPurchases
1481366   +          +     1.34202846183228 * S_NumWebVisitsMonth
1481367   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1481368   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1481369   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age + 
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome + 
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 * 
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts + 
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 * 
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 * 
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 * 
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 * 
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq + 
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1481370   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1481371   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1481372   +        S_Income  +    -0.00255151514163 * S_Kidhome
1481373   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1481374   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1481375   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1481376   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1481377   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1481378   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1481379   +          +     0.45752917132477 * S_NumDealsPurchases
1481380   +          +      0.1559495599293 * S_NumDistPurchases
1481381   +          +    -0.33402213718695 * S_NumStorePurchases
1481382   +          +    -0.39372662704902 * S_NumWebPurchases
1481383   +          +     0.52518189694069 * S_NumWebVisitsMonth
1481384   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1481385   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1481386   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age 
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome + 
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 * 
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts + 
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 * 
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 * 
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 * 
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 * 
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq + 
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1481387   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1481388   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1481389   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1481390   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1481391   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 * 
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 + 
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 * 
HigherEducationBinary0 ;
1481392   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1481393   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1481394   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1481395   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1481396   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 * 
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 + 
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 * 
HigherEducationBinary0 ;
1481397   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1481398   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1481399   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1481400   +          +     0.46710555357393 * Marital_StatusDivorced
1481401   +          +    -1.27560428667174 * Marital_StatusMarried
1481402   +          +      1.3147344073121 * Marital_StatusSingle
1481403   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 * 
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster 
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried + 
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1481404   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1481405   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1481406   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1481407   +          +     0.07422027097612 * Marital_StatusDivorced
1481408   +          +     0.00271855575037 * Marital_StatusMarried
1481409   +          +    -0.00749566028051 * Marital_StatusSingle
1481410   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 * 
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster + 
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried + 
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1481411   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1481412   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1481413   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1481414   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1481415   +END;
MPRINT(EM_DIAGRAM):   END;
1481416   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1481417   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1481418   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1481419   +END;
MPRINT(EM_DIAGRAM):   END;
1481420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481421   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1481422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481423   +
1481424   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1481425   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1481426   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1481427   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1481428   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1481429   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481430   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1481431   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1481432   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1481433   +end;
MPRINT(EM_DIAGRAM):   end;
1481434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481435   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1481436   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1481437   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1481438   +   end;
MPRINT(EM_DIAGRAM):   end;
1481439   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1481440   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1481441   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1481442   +   end;
MPRINT(EM_DIAGRAM):   end;
1481443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481444   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1481445   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1481446   +   end;
MPRINT(EM_DIAGRAM):   end;
1481447   +end;
MPRINT(EM_DIAGRAM):   end;
1481448   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1481449   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1481450   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1481451   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1481452   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1481453   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1481454   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1481455   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1481456   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1481457   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1481458   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1481459   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1481460   +END;
MPRINT(EM_DIAGRAM):   END;
1481461   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1481462   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1481463   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1481464   +END;
MPRINT(EM_DIAGRAM):   END;
1481465   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1481466   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1481467   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1481468   +END;
MPRINT(EM_DIAGRAM):   END;
1481469   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1481470   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1481471   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1481472   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1481473   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1481474   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1481475   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1481476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481477   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1481478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481479   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1481480   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1481481   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1481482   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1481483   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1481484   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1481485   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1481486   +END;
MPRINT(EM_DIAGRAM):   END;
1481487   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1481488   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1481489   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1481490   +drop
1481491   +H11
1481492   +H12
1481493   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1481494   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1481495   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1481496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481497   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1481498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481499   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1481500   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1481501   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1481502   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1481503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481504   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1481505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481506   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1481507   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1481508   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1481509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481510   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1481511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481512   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1481513   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1481514   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1481515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481516   +* Ensmbl29: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 7 of 10;
1481517   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481519   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1481520   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1481521   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1481522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1481523   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1481524   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1481525   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1481526   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1481527   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1481528   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1481529   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1481530   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1481531   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1481532   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1481533   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1481534   +LENGTH _WARN_ $4
1481535   +      F_DepVar  $ 12
1481536   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1481537   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1481538   +
1481539   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1481540   +
1481541   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1481542   +
1481543   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1481544   +
1481545   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1481546   +
1481547   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1481548   +
1481549   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1481550   +
1481551   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1481552   +
1481553   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1481554   +
1481555   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1481556   +
1481557   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1481558   +
1481559   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1481560   +
1481561   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1481562   +
1481563   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1481564   +
1481565   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1481566   +
1481567   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1481568   +
1481569   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1481570   +
1481571   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1481572   +
1481573   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1481574   +
1481575   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1481576   +
1481577   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1481578   +
1481579   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1481580   +
1481581   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1481582   +
1481583   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1481584   +
1481585   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1481586   +
1481587   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1481588   +
1481589   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1481590   +
1481591   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1481592   +
1481593   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1481594   +
1481595   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1481596   +
1481597   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1481598   +
1481599   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1481600   +
1481601   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1481602   +
1481603   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1481604   +
1481605   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1481606   +
1481607   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1481608   +
1481609   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1481610   +
1481611   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1481612   +
1481613   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1481614   +
1481615   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1481616   +
1481617   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1481618   +
1481619   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1481620   +
1481621   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1481622   +
1481623   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1481624   +
1481625   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1481626   +
1481627   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1481628   +
1481629   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1481630   +
1481631   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1481632   +
1481633   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1481634   +
1481635   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1481636   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1481637   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1481638   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1481639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481641   +end;
MPRINT(EM_DIAGRAM):   end;
1481642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481644   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1481645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481646   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481647   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1481648   +   end;
MPRINT(EM_DIAGRAM):   end;
1481649   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481650   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1481651   +   end;
MPRINT(EM_DIAGRAM):   end;
1481652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481653   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1481654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481656   +   end;
MPRINT(EM_DIAGRAM):   end;
1481657   +end;
MPRINT(EM_DIAGRAM):   end;
1481658   +
1481659   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1481660   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1481661   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1481662   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1481663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481665   +end;
MPRINT(EM_DIAGRAM):   end;
1481666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481668   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1481669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481670   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481671   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1481672   +   end;
MPRINT(EM_DIAGRAM):   end;
1481673   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481674   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1481675   +   end;
MPRINT(EM_DIAGRAM):   end;
1481676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481677   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1481678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481680   +   end;
MPRINT(EM_DIAGRAM):   end;
1481681   +end;
MPRINT(EM_DIAGRAM):   end;
1481682   +
1481683   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1481684   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1481685   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1481686   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1481687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481689   +end;
MPRINT(EM_DIAGRAM):   end;
1481690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481692   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1481693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481694   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481695   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1481696   +   end;
MPRINT(EM_DIAGRAM):   end;
1481697   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481698   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1481699   +   end;
MPRINT(EM_DIAGRAM):   end;
1481700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481701   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1481702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481704   +   end;
MPRINT(EM_DIAGRAM):   end;
1481705   +end;
MPRINT(EM_DIAGRAM):   end;
1481706   +
1481707   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1481708   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1481709   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1481710   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1481711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481713   +end;
MPRINT(EM_DIAGRAM):   end;
1481714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481715   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481716   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1481717   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481718   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481719   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1481720   +   end;
MPRINT(EM_DIAGRAM):   end;
1481721   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481722   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1481723   +   end;
MPRINT(EM_DIAGRAM):   end;
1481724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481725   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1481726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481728   +   end;
MPRINT(EM_DIAGRAM):   end;
1481729   +end;
MPRINT(EM_DIAGRAM):   end;
1481730   +
1481731   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1481732   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1481733   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1481734   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1481735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481737   +end;
MPRINT(EM_DIAGRAM):   end;
1481738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481739   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481740   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1481741   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481742   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481743   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1481744   +   end;
MPRINT(EM_DIAGRAM):   end;
1481745   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481746   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1481747   +   end;
MPRINT(EM_DIAGRAM):   end;
1481748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481749   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1481750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481752   +   end;
MPRINT(EM_DIAGRAM):   end;
1481753   +end;
MPRINT(EM_DIAGRAM):   end;
1481754   +
1481755   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1481756   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1481757   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1481758   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1481759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481761   +end;
MPRINT(EM_DIAGRAM):   end;
1481762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481764   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1481765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1481767   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1481768   +   end;
MPRINT(EM_DIAGRAM):   end;
1481769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1481770   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1481771   +   end;
MPRINT(EM_DIAGRAM):   end;
1481772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481773   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1481774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481776   +   end;
MPRINT(EM_DIAGRAM):   end;
1481777   +end;
MPRINT(EM_DIAGRAM):   end;
1481778   +
1481779   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1481780   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1481781   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1481782   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1481783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481785   +end;
MPRINT(EM_DIAGRAM):   end;
1481786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1481788   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1481789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481790   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1481791   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1481792   +   end;
MPRINT(EM_DIAGRAM):   end;
1481793   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1481794   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1481795   +   end;
MPRINT(EM_DIAGRAM):   end;
1481796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481797   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1481798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481800   +   end;
MPRINT(EM_DIAGRAM):   end;
1481801   +end;
MPRINT(EM_DIAGRAM):   end;
1481802   +
1481803   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1481804   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1481805   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1481806   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1481807   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1481808   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1481809   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1481810   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1481811   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1481812   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1481813   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1481814   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1481815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481817   +end;
MPRINT(EM_DIAGRAM):   end;
1481818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481819   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1481820   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1481821   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481822   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1481823   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1481824   +   end;
MPRINT(EM_DIAGRAM):   end;
1481825   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1481826   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1481827   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1481828   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1481829   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1481830   +   end;
MPRINT(EM_DIAGRAM):   end;
1481831   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1481832   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1481833   +   end;
MPRINT(EM_DIAGRAM):   end;
1481834   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1481835   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1481836   +   end;
MPRINT(EM_DIAGRAM):   end;
1481837   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1481838   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1481839   +   end;
MPRINT(EM_DIAGRAM):   end;
1481840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481841   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1481842   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1481843   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1481844   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1481845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481847   +   end;
MPRINT(EM_DIAGRAM):   end;
1481848   +end;
MPRINT(EM_DIAGRAM):   end;
1481849   +
1481850   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1481851   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1481852   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1481853   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1481854   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1481855   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1481856   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1481857   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1481858   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1481859   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1481860   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1481861   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1481862   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1481863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1481864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481865   +end;
MPRINT(EM_DIAGRAM):   end;
1481866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1481867   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1481868   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1481869   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1481870   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1481871   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1481872   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1481873   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1481874   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1481875   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481876   +         end;
MPRINT(EM_DIAGRAM):   end;
1481877   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1481878   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1481879   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1481880   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481881   +            end;
MPRINT(EM_DIAGRAM):   end;
1481882   +         end;
MPRINT(EM_DIAGRAM):   end;
1481883   +      end;
MPRINT(EM_DIAGRAM):   end;
1481884   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1481885   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1481886   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1481887   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481888   +         end;
MPRINT(EM_DIAGRAM):   end;
1481889   +      end;
MPRINT(EM_DIAGRAM):   end;
1481890   +   end;
MPRINT(EM_DIAGRAM):   end;
1481891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1481892   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1481893   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1481894   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481895   +      end;
MPRINT(EM_DIAGRAM):   end;
1481896   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1481897   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1481898   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1481899   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1481900   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1481901   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1481902   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1481903   +         end;
MPRINT(EM_DIAGRAM):   end;
1481904   +      end;
MPRINT(EM_DIAGRAM):   end;
1481905   +   end;
MPRINT(EM_DIAGRAM):   end;
1481906   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1481907   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1481908   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1481909   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1481910   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1481911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1481912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481913   +   end;
MPRINT(EM_DIAGRAM):   end;
1481914   +end;
MPRINT(EM_DIAGRAM):   end;
1481915   +
1481916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481917   +*** Checking missing input Interval
1481918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1481919   +
1481920   +IF NMISS(
1481921   +   AcceptedCmpTotal ,
1481922   +   Age ,
1481923   +   Frq ,
1481924   +   Income ,
1481925   +   Kidhome ,
1481926   +   Mnt ,
1481927   +   MntFishProducts ,
1481928   +   MntFruits ,
1481929   +   MntGoldProds ,
1481930   +   MntMeatProducts ,
1481931   +   MntSweetProducts ,
1481932   +   MntWines ,
1481933   +   MonthsAsCustomer ,
1481934   +   NumCatalogPurchases ,
1481935   +   NumDealsPurchases ,
1481936   +   NumDistPurchases ,
1481937   +   NumStorePurchases ,
1481938   +   NumWebPurchases ,
1481939   +   NumWebVisitsMonth ,
1481940   +   RFMstat ,
1481941   +   RMntFrq ,
1481942   +   Recency ,
1481943   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1481944   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1481945   +
1481946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1481947   +END;
MPRINT(EM_DIAGRAM):   END;
1481948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481949   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1481950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1481951   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1481952   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1481953   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1481954   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1481955   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1481956   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1481957   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1481958   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1481959   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1481960   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1481961   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1481962   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1481963   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1481964   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1481965   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1481966   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1481967   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1481968   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1481969   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1481970   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1481971   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1481972   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1481973   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1481974   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1481975   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1481976   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1481977   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1481978   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1481979   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1481980   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1481981   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1481982   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1481983   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1481984   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1481985   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1481986   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1481987   +END;
MPRINT(EM_DIAGRAM):   END;
1481988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1481989   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1481990   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1481991   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1481992   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1481993   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1481994   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1481995   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1481996   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1481997   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1481998   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1481999   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1482000   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1482001   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1482002   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1482003   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1482004   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1482005   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1482006   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1482007   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1482008   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1482009   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1482010   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1482011   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1482012   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1482013   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1482014   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1482015   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1482016   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1482017   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1482018   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1482019   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1482020   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1482021   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1482022   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1482023   +   ELSE S_NumCatalogPurchases
1482024   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1482025   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1482026   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1482027   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1482028   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1482029   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1482030   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1482031   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1482032   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1482033   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1482034   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1482035   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1482036   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1482037   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1482038   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1482039   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1482040   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1482041   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1482042   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1482043   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1482044   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1482045   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1482046   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1482047   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1482048   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1482049   +END;
MPRINT(EM_DIAGRAM):   END;
1482050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482051   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1482052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482054   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1482055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482057   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1482058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482059   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1482060   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1482061   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1482062   +        S_Income  +     0.49557647195287 * S_Kidhome
1482063   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1482064   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1482065   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1482066   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1482067   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1482068   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1482069   +          +     1.29965538748336 * S_NumDealsPurchases
1482070   +          +     0.16818868463142 * S_NumDistPurchases
1482071   +          +    -0.64507792847411 * S_NumStorePurchases
1482072   +          +    -0.52243329275268 * S_NumWebPurchases
1482073   +          +     1.48521107923182 * S_NumWebVisitsMonth
1482074   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1482075   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1482076   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1482077   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1482078   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1482079   +        S_Income  +       0.536631748871 * S_Kidhome
1482080   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1482081   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1482082   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1482083   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1482084   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1482085   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1482086   +          +    -0.63220849663702 * S_NumDealsPurchases
1482087   +          +    -0.03517440588176 * S_NumDistPurchases
1482088   +          +     0.90435516280473 * S_NumStorePurchases
1482089   +          +     1.02540776095101 * S_NumWebPurchases
1482090   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1482091   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1482092   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1482093   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1482094   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1482095   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1482096   +        S_Income  +     0.45173611630992 * S_Kidhome
1482097   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1482098   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1482099   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1482100   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1482101   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1482102   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1482103   +          +     0.00572910064772 * S_NumDealsPurchases
1482104   +          +    -0.43545754325176 * S_NumDistPurchases
1482105   +          +     0.12831980635185 * S_NumStorePurchases
1482106   +          +     0.02223697618186 * S_NumWebPurchases
1482107   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1482108   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1482109   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1482110   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1482111   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1482112   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1482113   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1482114   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1482115   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
1482116   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1482117   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1482118   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1482119   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1482120   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
1482121   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1482122   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1482123   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1482124   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1482125   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
1482126   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1482127   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1482128   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1482129   +          +     0.14010081581672 * Marital_StatusDivorced
1482130   +          +     0.03574033044092 * Marital_StatusMarried
1482131   +          +    -0.14272769898675 * Marital_StatusSingle
1482132   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1482133   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1482134   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1482135   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1482136   +          +    -0.14878433798537 * Marital_StatusDivorced
1482137   +          +     0.14990226067603 * Marital_StatusMarried
1482138   +          +    -0.50903755449357 * Marital_StatusSingle
1482139   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1482140   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1482141   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1482142   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1482143   +          +    -0.52568922939912 * Marital_StatusDivorced
1482144   +          +     1.74121506979092 * Marital_StatusMarried
1482145   +          +    -1.16029880777095 * Marital_StatusSingle
1482146   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1482147   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1482148   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1482149   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1482150   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1482151   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1482152   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1482153   +END;
MPRINT(EM_DIAGRAM):   END;
1482154   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1482155   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1482156   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1482157   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1482158   +END;
MPRINT(EM_DIAGRAM):   END;
1482159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482160   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1482161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482162   +
1482163   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1482164   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1482165   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1482166   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1482167   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1482168   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482169   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1482170   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1482171   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1482172   +end;
MPRINT(EM_DIAGRAM):   end;
1482173   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482174   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1482175   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1482176   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1482177   +   end;
MPRINT(EM_DIAGRAM):   end;
1482178   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1482179   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1482180   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1482181   +   end;
MPRINT(EM_DIAGRAM):   end;
1482182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482183   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1482184   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1482185   +   end;
MPRINT(EM_DIAGRAM):   end;
1482186   +end;
MPRINT(EM_DIAGRAM):   end;
1482187   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1482188   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1482189   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
1482190   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1482191   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1482192   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1482193   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1482194   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1482195   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1482196   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1482197   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1482198   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1482199   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1482200   +END;
MPRINT(EM_DIAGRAM):   END;
1482201   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1482202   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1482203   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1482204   +END;
MPRINT(EM_DIAGRAM):   END;
1482205   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1482206   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1482207   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1482208   +END;
MPRINT(EM_DIAGRAM):   END;
1482209   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1482210   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1482211   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1482212   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1482213   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1482214   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1482215   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1482216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482217   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1482218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482219   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1482220   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1482221   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1482222   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1482223   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1482224   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1482225   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1482226   +END;
MPRINT(EM_DIAGRAM):   END;
1482227   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1482228   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1482229   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1482230   +drop
1482231   +H11
1482232   +H12
1482233   +H13
1482234   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1482235   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1482236   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1482237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482238   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1482239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482240   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1482241   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1482242   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1482243   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1482244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482245   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1482246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482247   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1482248   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1482249   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1482250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482251   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1482252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482253   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1482254   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1482255   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1482256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482257   +* Ensmbl29: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 8 of 10;
1482258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482260   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1482261   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1482262   +* NODE: Neural7;
MPRINT(EM_DIAGRAM):   * NODE: Neural7;
1482263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1482264   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1482265   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1482266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1482267   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1482268   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1482269   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1482270   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1482271   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1482272   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1482273   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1482274   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1482275   +LENGTH _WARN_ $4
1482276   +      F_DepVar  $ 12
1482277   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1482278   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1482279   +
1482280   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1482281   +
1482282   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1482283   +
1482284   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1482285   +
1482286   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1482287   +
1482288   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1482289   +
1482290   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1482291   +
1482292   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1482293   +
1482294   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1482295   +
1482296   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1482297   +
1482298   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1482299   +
1482300   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1482301   +
1482302   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1482303   +
1482304   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1482305   +
1482306   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1482307   +
1482308   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1482309   +
1482310   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1482311   +
1482312   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1482313   +
1482314   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1482315   +
1482316   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1482317   +
1482318   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1482319   +
1482320   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1482321   +
1482322   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1482323   +
1482324   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1482325   +
1482326   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1482327   +
1482328   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1482329   +
1482330   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1482331   +
1482332   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1482333   +
1482334   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1482335   +
1482336   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1482337   +
1482338   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1482339   +
1482340   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1482341   +
1482342   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1482343   +
1482344   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1482345   +
1482346   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1482347   +
1482348   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1482349   +
1482350   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1482351   +
1482352   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1482353   +
1482354   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1482355   +
1482356   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1482357   +
1482358   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1482359   +
1482360   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1482361   +
1482362   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1482363   +
1482364   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1482365   +
1482366   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1482367   +
1482368   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1482369   +
1482370   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1482371   +
1482372   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1482373   +
1482374   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1482375   +
1482376   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1482377   +
1482378   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1482379   +
1482380   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1482381   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1482382   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1482383   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1482384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482386   +end;
MPRINT(EM_DIAGRAM):   end;
1482387   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482388   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482389   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1482390   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482391   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1482392   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1482393   +   end;
MPRINT(EM_DIAGRAM):   end;
1482394   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1482395   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1482396   +   end;
MPRINT(EM_DIAGRAM):   end;
1482397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482398   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1482399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482401   +   end;
MPRINT(EM_DIAGRAM):   end;
1482402   +end;
MPRINT(EM_DIAGRAM):   end;
1482403   +
1482404   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1482405   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1482406   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1482407   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1482408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482410   +end;
MPRINT(EM_DIAGRAM):   end;
1482411   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482413   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1482414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482415   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1482416   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1482417   +   end;
MPRINT(EM_DIAGRAM):   end;
1482418   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1482419   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1482420   +   end;
MPRINT(EM_DIAGRAM):   end;
1482421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482422   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1482423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482425   +   end;
MPRINT(EM_DIAGRAM):   end;
1482426   +end;
MPRINT(EM_DIAGRAM):   end;
1482427   +
1482428   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1482429   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1482430   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1482431   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1482432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482434   +end;
MPRINT(EM_DIAGRAM):   end;
1482435   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482436   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482437   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1482438   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482439   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1482440   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1482441   +   end;
MPRINT(EM_DIAGRAM):   end;
1482442   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1482443   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1482444   +   end;
MPRINT(EM_DIAGRAM):   end;
1482445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482446   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1482447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482449   +   end;
MPRINT(EM_DIAGRAM):   end;
1482450   +end;
MPRINT(EM_DIAGRAM):   end;
1482451   +
1482452   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1482453   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1482454   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1482455   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1482456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482458   +end;
MPRINT(EM_DIAGRAM):   end;
1482459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482461   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1482462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482463   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1482464   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1482465   +   end;
MPRINT(EM_DIAGRAM):   end;
1482466   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1482467   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1482468   +   end;
MPRINT(EM_DIAGRAM):   end;
1482469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482470   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1482471   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482472   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482473   +   end;
MPRINT(EM_DIAGRAM):   end;
1482474   +end;
MPRINT(EM_DIAGRAM):   end;
1482475   +
1482476   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1482477   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1482478   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1482479   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1482480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482482   +end;
MPRINT(EM_DIAGRAM):   end;
1482483   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482484   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482485   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1482486   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482487   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1482488   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1482489   +   end;
MPRINT(EM_DIAGRAM):   end;
1482490   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1482491   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1482492   +   end;
MPRINT(EM_DIAGRAM):   end;
1482493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482494   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1482495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482497   +   end;
MPRINT(EM_DIAGRAM):   end;
1482498   +end;
MPRINT(EM_DIAGRAM):   end;
1482499   +
1482500   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1482501   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1482502   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1482503   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1482504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482506   +end;
MPRINT(EM_DIAGRAM):   end;
1482507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482509   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1482510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1482512   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1482513   +   end;
MPRINT(EM_DIAGRAM):   end;
1482514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1482515   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1482516   +   end;
MPRINT(EM_DIAGRAM):   end;
1482517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482518   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1482519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482521   +   end;
MPRINT(EM_DIAGRAM):   end;
1482522   +end;
MPRINT(EM_DIAGRAM):   end;
1482523   +
1482524   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1482525   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1482526   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1482527   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1482528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482530   +end;
MPRINT(EM_DIAGRAM):   end;
1482531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1482533   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1482534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482535   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1482536   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1482537   +   end;
MPRINT(EM_DIAGRAM):   end;
1482538   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1482539   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1482540   +   end;
MPRINT(EM_DIAGRAM):   end;
1482541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482542   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1482543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482545   +   end;
MPRINT(EM_DIAGRAM):   end;
1482546   +end;
MPRINT(EM_DIAGRAM):   end;
1482547   +
1482548   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1482549   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1482550   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1482551   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1482552   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1482553   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1482554   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1482555   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1482556   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1482557   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1482558   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1482559   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1482560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482562   +end;
MPRINT(EM_DIAGRAM):   end;
1482563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482564   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1482565   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1482566   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482567   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1482568   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1482569   +   end;
MPRINT(EM_DIAGRAM):   end;
1482570   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1482571   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1482572   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1482573   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1482574   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1482575   +   end;
MPRINT(EM_DIAGRAM):   end;
1482576   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1482577   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1482578   +   end;
MPRINT(EM_DIAGRAM):   end;
1482579   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1482580   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1482581   +   end;
MPRINT(EM_DIAGRAM):   end;
1482582   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1482583   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1482584   +   end;
MPRINT(EM_DIAGRAM):   end;
1482585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482586   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1482587   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1482588   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1482589   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1482590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482592   +   end;
MPRINT(EM_DIAGRAM):   end;
1482593   +end;
MPRINT(EM_DIAGRAM):   end;
1482594   +
1482595   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1482596   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1482597   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1482598   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1482599   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1482600   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1482601   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1482602   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1482603   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1482604   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1482605   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1482606   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1482607   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1482608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1482609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482610   +end;
MPRINT(EM_DIAGRAM):   end;
1482611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482612   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1482613   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1482614   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482615   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1482616   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1482617   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1482618   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1482619   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1482620   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1482621   +         end;
MPRINT(EM_DIAGRAM):   end;
1482622   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1482623   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1482624   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1482625   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1482626   +            end;
MPRINT(EM_DIAGRAM):   end;
1482627   +         end;
MPRINT(EM_DIAGRAM):   end;
1482628   +      end;
MPRINT(EM_DIAGRAM):   end;
1482629   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1482630   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1482631   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1482632   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1482633   +         end;
MPRINT(EM_DIAGRAM):   end;
1482634   +      end;
MPRINT(EM_DIAGRAM):   end;
1482635   +   end;
MPRINT(EM_DIAGRAM):   end;
1482636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482637   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1482638   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1482639   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1482640   +      end;
MPRINT(EM_DIAGRAM):   end;
1482641   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1482642   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1482643   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1482644   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1482645   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1482646   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1482647   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1482648   +         end;
MPRINT(EM_DIAGRAM):   end;
1482649   +      end;
MPRINT(EM_DIAGRAM):   end;
1482650   +   end;
MPRINT(EM_DIAGRAM):   end;
1482651   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1482652   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1482653   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1482654   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1482655   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1482656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1482657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482658   +   end;
MPRINT(EM_DIAGRAM):   end;
1482659   +end;
MPRINT(EM_DIAGRAM):   end;
1482660   +
1482661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482662   +*** Checking missing input Interval
1482663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1482664   +
1482665   +IF NMISS(
1482666   +   AcceptedCmpTotal ,
1482667   +   Age ,
1482668   +   Frq ,
1482669   +   Income ,
1482670   +   Kidhome ,
1482671   +   Mnt ,
1482672   +   MntFishProducts ,
1482673   +   MntFruits ,
1482674   +   MntGoldProds ,
1482675   +   MntMeatProducts ,
1482676   +   MntSweetProducts ,
1482677   +   MntWines ,
1482678   +   MonthsAsCustomer ,
1482679   +   NumCatalogPurchases ,
1482680   +   NumDealsPurchases ,
1482681   +   NumDistPurchases ,
1482682   +   NumStorePurchases ,
1482683   +   NumWebPurchases ,
1482684   +   NumWebVisitsMonth ,
1482685   +   RFMstat ,
1482686   +   RMntFrq ,
1482687   +   Recency ,
1482688   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1482689   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1482690   +
1482691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1482692   +END;
MPRINT(EM_DIAGRAM):   END;
1482693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482694   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1482695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1482697   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1482698   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1482699   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1482700   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1482701   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1482702   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1482703   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1482704   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1482705   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1482706   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1482707   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1482708   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1482709   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1482710   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1482711   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1482712   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1482713   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1482714   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1482715   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1482716   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1482717   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1482718   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1482719   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1482720   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1482721   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1482722   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1482723   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1482724   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1482725   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1482726   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1482727   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1482728   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1482729   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1482730   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1482731   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1482732   +END;
MPRINT(EM_DIAGRAM):   END;
1482733   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1482734   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1482735   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1482736   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1482737   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1482738   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1482739   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1482740   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1482741   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1482742   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1482743   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1482744   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1482745   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1482746   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1482747   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1482748   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1482749   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1482750   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1482751   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1482752   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1482753   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1482754   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1482755   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1482756   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1482757   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1482758   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1482759   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1482760   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1482761   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1482762   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1482763   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1482764   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1482765   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1482766   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1482767   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1482768   +   ELSE S_NumCatalogPurchases
1482769   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1482770   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1482771   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1482772   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1482773   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1482774   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1482775   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1482776   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1482777   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1482778   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1482779   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1482780   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1482781   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1482782   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1482783   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1482784   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1482785   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1482786   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1482787   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1482788   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1482789   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1482790   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1482791   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1482792   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1482793   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1482794   +END;
MPRINT(EM_DIAGRAM):   END;
1482795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482796   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1482797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482799   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1482800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482802   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1482803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482804   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1482805   +   H11  =    -0.49268542152723 * S_AcceptedCmpTotal  +     -0.0481397514569 *
1482806   +        S_Age  +    -0.30437636824683 * S_Frq  +    -1.15179334457144 *
1482807   +        S_Income  +     0.52341833722719 * S_Kidhome
1482808   +          +    -0.21261714885662 * S_Mnt  +    -0.10196325382831 *
1482809   +        S_MntFishProducts  +     0.18788251887399 * S_MntFruits
1482810   +          +     0.07877248271808 * S_MntGoldProds  +     -0.3554186123772 *
1482811   +        S_MntMeatProducts  +     0.26810834903306 * S_MntSweetProducts
1482812   +          +      0.7572736068799 * S_MntWines  +    -0.11619352540399 *
1482813   +        S_MonthsAsCustomer  +    -0.46080176244829 * S_NumCatalogPurchases
1482814   +          +    -0.07601319156416 * S_NumDealsPurchases
1482815   +          +    -0.37691059923172 * S_NumDistPurchases
1482816   +          +     0.14479416923691 * S_NumStorePurchases
1482817   +          +     0.22886116861382 * S_NumWebPurchases
1482818   +          +    -1.05452266604504 * S_NumWebVisitsMonth
1482819   +          +     0.11426625648846 * S_RFMstat  +    -0.46845377036873 *
1482820   +        S_RMntFrq  +     1.39805990084367 * S_Recency
1482821   +          +     0.91325795567367 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.49268542152723 * S_AcceptedCmpTotal + -0.0481397514569 * S_Age 
+ -0.30437636824683 * S_Frq + -1.15179334457144 * S_Income + 0.52341833722719 * S_Kidhome + 
-0.21261714885662 * S_Mnt + -0.10196325382831 * S_MntFishProducts + 0.18788251887399 * 
S_MntFruits + 0.07877248271808 * S_MntGoldProds + -0.3554186123772 * S_MntMeatProducts + 
0.26810834903306 * S_MntSweetProducts + 0.7572736068799 * S_MntWines + -0.11619352540399 * 
S_MonthsAsCustomer + -0.46080176244829 * S_NumCatalogPurchases + -0.07601319156416 * 
S_NumDealsPurchases + -0.37691059923172 * S_NumDistPurchases + 0.14479416923691 * 
S_NumStorePurchases + 0.22886116861382 * S_NumWebPurchases + -1.05452266604504 * 
S_NumWebVisitsMonth + 0.11426625648846 * S_RFMstat + -0.46845377036873 * S_RMntFrq + 
1.39805990084367 * S_Recency + 0.91325795567367 * S_Teenhome ;
1482822   +   H12  =     0.48640474281615 * S_AcceptedCmpTotal  +     0.03168788563965 *
1482823   +        S_Age  +    -0.02802128226737 * S_Frq  +     0.52993214073901 *
1482824   +        S_Income  +     0.24958351789577 * S_Kidhome
1482825   +          +     0.25221072579725 * S_Mnt  +    -0.54431466149526 *
1482826   +        S_MntFishProducts  +    -0.09969634201392 * S_MntFruits
1482827   +          +     0.22251888175317 * S_MntGoldProds  +     2.21720479300716 *
1482828   +        S_MntMeatProducts  +     0.08411214394291 * S_MntSweetProducts
1482829   +          +    -0.83482542959891 * S_MntWines  +     0.06928323386075 *
1482830   +        S_MonthsAsCustomer  +     1.61603076533547 * S_NumCatalogPurchases
1482831   +          +     0.79919814392328 * S_NumDealsPurchases
1482832   +          +     0.30394718497487 * S_NumDistPurchases
1482833   +          +      -0.727130739278 * S_NumStorePurchases
1482834   +          +    -0.92337052372179 * S_NumWebPurchases
1482835   +          +     0.22125703025242 * S_NumWebVisitsMonth
1482836   +          +     0.51615035692083 * S_RFMstat  +     0.09759485646525 *
1482837   +        S_RMntFrq  +    -0.21632393786918 * S_Recency
1482838   +          +    -0.09817720742254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.48640474281615 * S_AcceptedCmpTotal + 0.03168788563965 * S_Age + 
-0.02802128226737 * S_Frq + 0.52993214073901 * S_Income + 0.24958351789577 * S_Kidhome + 
0.25221072579725 * S_Mnt + -0.54431466149526 * S_MntFishProducts + -0.09969634201392 * 
S_MntFruits + 0.22251888175317 * S_MntGoldProds + 2.21720479300716 * S_MntMeatProducts + 
0.08411214394291 * S_MntSweetProducts + -0.83482542959891 * S_MntWines + 0.06928323386075 * 
S_MonthsAsCustomer + 1.61603076533547 * S_NumCatalogPurchases + 0.79919814392328 * 
S_NumDealsPurchases + 0.30394718497487 * S_NumDistPurchases + -0.727130739278 * 
S_NumStorePurchases + -0.92337052372179 * S_NumWebPurchases + 0.22125703025242 * 
S_NumWebVisitsMonth + 0.51615035692083 * S_RFMstat + 0.09759485646525 * S_RMntFrq + 
-0.21632393786918 * S_Recency + -0.09817720742254 * S_Teenhome ;
1482839   +   H13  =    -0.14277955421105 * S_AcceptedCmpTotal  +     0.01891543541262 *
1482840   +        S_Age  +    -0.09449326498218 * S_Frq  +    -0.03060296052615 *
1482841   +        S_Income  +    -0.02210730279852 * S_Kidhome
1482842   +          +     0.15705631910101 * S_Mnt  +     0.08573647183827 *
1482843   +        S_MntFishProducts  +    -0.07727594473101 * S_MntFruits
1482844   +          +     0.10800565745981 * S_MntGoldProds  +     0.16136844354024 *
1482845   +        S_MntMeatProducts  +    -0.27592138838926 * S_MntSweetProducts
1482846   +          +    -0.28884862043521 * S_MntWines  +    -0.26221449264568 *
1482847   +        S_MonthsAsCustomer  +    -0.12893818317268 * S_NumCatalogPurchases
1482848   +          +    -0.07260787713046 * S_NumDealsPurchases
1482849   +          +    -0.11357594278299 * S_NumDistPurchases
1482850   +          +    -0.12187788759653 * S_NumStorePurchases
1482851   +          +    -0.12854188822638 * S_NumWebPurchases
1482852   +          +     0.19328484993193 * S_NumWebVisitsMonth
1482853   +          +     0.29126701299369 * S_RFMstat  +       0.295572030551 *
1482854   +        S_RMntFrq  +    -0.17474693596234 * S_Recency
1482855   +          +    -0.15767296223747 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14277955421105 * S_AcceptedCmpTotal + 0.01891543541262 * S_Age 
+ -0.09449326498218 * S_Frq + -0.03060296052615 * S_Income + -0.02210730279852 * S_Kidhome + 
0.15705631910101 * S_Mnt + 0.08573647183827 * S_MntFishProducts + -0.07727594473101 * 
S_MntFruits + 0.10800565745981 * S_MntGoldProds + 0.16136844354024 * S_MntMeatProducts + 
-0.27592138838926 * S_MntSweetProducts + -0.28884862043521 * S_MntWines + -0.26221449264568 * 
S_MonthsAsCustomer + -0.12893818317268 * S_NumCatalogPurchases + -0.07260787713046 * 
S_NumDealsPurchases + -0.11357594278299 * S_NumDistPurchases + -0.12187788759653 * 
S_NumStorePurchases + -0.12854188822638 * S_NumWebPurchases + 0.19328484993193 * 
S_NumWebVisitsMonth + 0.29126701299369 * S_RFMstat + 0.295572030551 * S_RMntFrq + 
-0.17474693596234 * S_Recency + -0.15767296223747 * S_Teenhome ;
1482856   +   H14  =     0.02882140654096 * S_AcceptedCmpTotal  +     0.22754549790851 *
1482857   +        S_Age  +     0.62237954814905 * S_Frq  +     0.32094678094502 *
1482858   +        S_Income  +     -0.5159289111115 * S_Kidhome
1482859   +          +    -0.06660708376246 * S_Mnt  +     0.23505454155784 *
1482860   +        S_MntFishProducts  +     -0.1751094914934 * S_MntFruits
1482861   +          +     0.28529181082906 * S_MntGoldProds  +    -0.86064239437512 *
1482862   +        S_MntMeatProducts  +    -0.11869244038768 * S_MntSweetProducts
1482863   +          +     0.54178192135459 * S_MntWines  +     0.01320164526542 *
1482864   +        S_MonthsAsCustomer  +     -0.8775343676818 * S_NumCatalogPurchases
1482865   +          +    -0.76643907891635 * S_NumDealsPurchases
1482866   +          +     0.28173289049322 * S_NumDistPurchases
1482867   +          +     0.65522454520442 * S_NumStorePurchases
1482868   +          +     0.68112901460293 * S_NumWebPurchases
1482869   +          +    -0.49101731268641 * S_NumWebVisitsMonth
1482870   +          +    -0.19434806570231 * S_RFMstat  +    -0.00086194515061 *
1482871   +        S_RMntFrq  +     0.47432332222746 * S_Recency
1482872   +          +    -0.05016870847242 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02882140654096 * S_AcceptedCmpTotal + 0.22754549790851 * S_Age + 
0.62237954814905 * S_Frq + 0.32094678094502 * S_Income + -0.5159289111115 * S_Kidhome + 
-0.06660708376246 * S_Mnt + 0.23505454155784 * S_MntFishProducts + -0.1751094914934 * 
S_MntFruits + 0.28529181082906 * S_MntGoldProds + -0.86064239437512 * S_MntMeatProducts + 
-0.11869244038768 * S_MntSweetProducts + 0.54178192135459 * S_MntWines + 0.01320164526542 * 
S_MonthsAsCustomer + -0.8775343676818 * S_NumCatalogPurchases + -0.76643907891635 * 
S_NumDealsPurchases + 0.28173289049322 * S_NumDistPurchases + 0.65522454520442 * 
S_NumStorePurchases + 0.68112901460293 * S_NumWebPurchases + -0.49101731268641 * 
S_NumWebVisitsMonth + -0.19434806570231 * S_RFMstat + -0.00086194515061 * S_RMntFrq + 
0.47432332222746 * S_Recency + -0.05016870847242 * S_Teenhome ;
1482873   +   H15  =    -0.53993167927046 * S_AcceptedCmpTotal  +    -0.01376485869661 *
1482874   +        S_Age  +     0.13417021721762 * S_Frq  +    -0.46098316120524 *
1482875   +        S_Income  +     0.79883165437194 * S_Kidhome
1482876   +          +    -0.08868062204795 * S_Mnt  +     0.27921118443695 *
1482877   +        S_MntFishProducts  +     0.07333408727108 * S_MntFruits
1482878   +          +    -0.12699517331566 * S_MntGoldProds  +    -0.83076183794341 *
1482879   +        S_MntMeatProducts  +     0.07046050445165 * S_MntSweetProducts
1482880   +          +     0.39887580122915 * S_MntWines  +     0.22266979348172 *
1482881   +        S_MonthsAsCustomer  +    -0.63148593968536 * S_NumCatalogPurchases
1482882   +          +    -0.54240596184474 * S_NumDealsPurchases
1482883   +          +     0.07214067132859 * S_NumDistPurchases
1482884   +          +     0.63136920851698 * S_NumStorePurchases
1482885   +          +     0.67036298761526 * S_NumWebPurchases
1482886   +          +     -1.5590147163003 * S_NumWebVisitsMonth
1482887   +          +    -0.14672746638498 * S_RFMstat  +     0.45614757001513 *
1482888   +        S_RMntFrq  +     1.43166375146019 * S_Recency
1482889   +          +     0.33608033306213 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.53993167927046 * S_AcceptedCmpTotal + -0.01376485869661 * S_Age 
+ 0.13417021721762 * S_Frq + -0.46098316120524 * S_Income + 0.79883165437194 * S_Kidhome + 
-0.08868062204795 * S_Mnt + 0.27921118443695 * S_MntFishProducts + 0.07333408727108 * 
S_MntFruits + -0.12699517331566 * S_MntGoldProds + -0.83076183794341 * S_MntMeatProducts + 
0.07046050445165 * S_MntSweetProducts + 0.39887580122915 * S_MntWines + 0.22266979348172 * 
S_MonthsAsCustomer + -0.63148593968536 * S_NumCatalogPurchases + -0.54240596184474 * 
S_NumDealsPurchases + 0.07214067132859 * S_NumDistPurchases + 0.63136920851698 * 
S_NumStorePurchases + 0.67036298761526 * S_NumWebPurchases + -1.5590147163003 * 
S_NumWebVisitsMonth + -0.14672746638498 * S_RFMstat + 0.45614757001513 * S_RMntFrq + 
1.43166375146019 * S_Recency + 0.33608033306213 * S_Teenhome ;
1482890   +   H11  = H11  +     0.00378267229722 * AcceptedCmp10
1482891   +          +     0.35869089787338 * AcceptedCmp20  +     0.34289379925327 *
1482892   +        AcceptedCmp30  +     0.52644241458012 * AcceptedCmp40
1482893   +          +    -0.13608418232323 * AcceptedCmp50  +      0.0959964311844 *
1482894   +        Complain0  +    -0.33986310453812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00378267229722 * AcceptedCmp10 + 0.35869089787338 * 
AcceptedCmp20 + 0.34289379925327 * AcceptedCmp30 + 0.52644241458012 * AcceptedCmp40 + 
-0.13608418232323 * AcceptedCmp50 + 0.0959964311844 * Complain0 + -0.33986310453812 * 
HigherEducationBinary0 ;
1482895   +   H12  = H12  +    -0.20844623079893 * AcceptedCmp10
1482896   +          +      0.2510523434536 * AcceptedCmp20  +     0.23001544402014 *
1482897   +        AcceptedCmp30  +     0.31575100635625 * AcceptedCmp40
1482898   +          +    -0.27770609908664 * AcceptedCmp50  +     0.23396693724368 *
1482899   +        Complain0  +    -0.14587691179074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20844623079893 * AcceptedCmp10 + 0.2510523434536 * 
AcceptedCmp20 + 0.23001544402014 * AcceptedCmp30 + 0.31575100635625 * AcceptedCmp40 + 
-0.27770609908664 * AcceptedCmp50 + 0.23396693724368 * Complain0 + -0.14587691179074 * 
HigherEducationBinary0 ;
1482900   +   H13  = H13  +    -0.01749375115567 * AcceptedCmp10
1482901   +          +     0.03272810660889 * AcceptedCmp20  +     0.05919744501073 *
1482902   +        AcceptedCmp30  +    -0.05281709288559 * AcceptedCmp40
1482903   +          +     0.17878522964245 * AcceptedCmp50  +    -0.15875476707826 *
1482904   +        Complain0  +     0.12807090869788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01749375115567 * AcceptedCmp10 + 0.03272810660889 * 
AcceptedCmp20 + 0.05919744501073 * AcceptedCmp30 + -0.05281709288559 * AcceptedCmp40 + 
0.17878522964245 * AcceptedCmp50 + -0.15875476707826 * Complain0 + 0.12807090869788 * 
HigherEducationBinary0 ;
1482905   +   H14  = H14  +     0.09851664636541 * AcceptedCmp10
1482906   +          +     0.31377564249189 * AcceptedCmp20  +     0.52269532116349 *
1482907   +        AcceptedCmp30  +     0.02591777861146 * AcceptedCmp40
1482908   +          +     0.32944924737684 * AcceptedCmp50  +     0.47187246513641 *
1482909   +        Complain0  +     0.20705632210077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09851664636541 * AcceptedCmp10 + 0.31377564249189 * 
AcceptedCmp20 + 0.52269532116349 * AcceptedCmp30 + 0.02591777861146 * AcceptedCmp40 + 
0.32944924737684 * AcceptedCmp50 + 0.47187246513641 * Complain0 + 0.20705632210077 * 
HigherEducationBinary0 ;
1482910   +   H15  = H15  +     0.25267160740134 * AcceptedCmp10
1482911   +          +     0.37928521134817 * AcceptedCmp20  +     0.14104403552359 *
1482912   +        AcceptedCmp30  +     0.11544762492946 * AcceptedCmp40
1482913   +          +     0.50603978517673 * AcceptedCmp50  +    -0.00034162341159 *
1482914   +        Complain0  +    -0.00425270701284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.25267160740134 * AcceptedCmp10 + 0.37928521134817 * 
AcceptedCmp20 + 0.14104403552359 * AcceptedCmp30 + 0.11544762492946 * AcceptedCmp40 + 
0.50603978517673 * AcceptedCmp50 + -0.00034162341159 * Complain0 + -0.00425270701284 * 
HigherEducationBinary0 ;
1482915   +   H11  = H11  +     0.21764897070728 * Education2n_Cycle
1482916   +          +    -0.08901311303506 * EducationBasic  +      0.0272878010337 *
1482917   +        EducationGraduation  +     0.05103320060897 * EducationMaster
1482918   +          +    -0.43880138896132 * Marital_StatusDivorced
1482919   +          +     1.07801970957052 * Marital_StatusMarried
1482920   +          +    -1.01564319756795 * Marital_StatusSingle
1482921   +          +     1.06803078970545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21764897070728 * Education2n_Cycle + -0.08901311303506 * 
EducationBasic + 0.0272878010337 * EducationGraduation + 0.05103320060897 * EducationMaster + 
-0.43880138896132 * Marital_StatusDivorced + 1.07801970957052 * Marital_StatusMarried + 
-1.01564319756795 * Marital_StatusSingle + 1.06803078970545 * Marital_StatusTogether ;
1482922   +   H12  = H12  +     0.20450416319293 * Education2n_Cycle
1482923   +          +    -0.09602008725654 * EducationBasic  +     0.01841737017681 *
1482924   +        EducationGraduation  +     0.06732737733154 * EducationMaster
1482925   +          +    -0.26753605060913 * Marital_StatusDivorced
1482926   +          +     0.38107608670301 * Marital_StatusMarried
1482927   +          +     -0.1436641790467 * Marital_StatusSingle
1482928   +          +     0.51604025961093 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20450416319293 * Education2n_Cycle + -0.09602008725654 * 
EducationBasic + 0.01841737017681 * EducationGraduation + 0.06732737733154 * EducationMaster + 
-0.26753605060913 * Marital_StatusDivorced + 0.38107608670301 * Marital_StatusMarried + 
-0.1436641790467 * Marital_StatusSingle + 0.51604025961093 * Marital_StatusTogether ;
1482929   +   H13  = H13  +     0.06208521737633 * Education2n_Cycle
1482930   +          +    -0.33631443686566 * EducationBasic  +     0.16608152113657 *
1482931   +        EducationGraduation  +     0.12802026359779 * EducationMaster
1482932   +          +    -0.08001329849816 * Marital_StatusDivorced
1482933   +          +      0.0371075570789 * Marital_StatusMarried
1482934   +          +     0.00370467546319 * Marital_StatusSingle
1482935   +          +    -0.00676233309382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06208521737633 * Education2n_Cycle + -0.33631443686566 * 
EducationBasic + 0.16608152113657 * EducationGraduation + 0.12802026359779 * EducationMaster + 
-0.08001329849816 * Marital_StatusDivorced + 0.0371075570789 * Marital_StatusMarried + 
0.00370467546319 * Marital_StatusSingle + -0.00676233309382 * Marital_StatusTogether ;
1482936   +   H14  = H14  +     0.23121044223136 * Education2n_Cycle
1482937   +          +     0.20063897603031 * EducationBasic  +    -0.03690411024016 *
1482938   +        EducationGraduation  +    -0.05893576310907 * EducationMaster
1482939   +          +     0.13587543683769 * Marital_StatusDivorced
1482940   +          +    -0.45903453868087 * Marital_StatusMarried
1482941   +          +      0.3498299821692 * Marital_StatusSingle
1482942   +          +    -0.24987552246214 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23121044223136 * Education2n_Cycle + 0.20063897603031 * 
EducationBasic + -0.03690411024016 * EducationGraduation + -0.05893576310907 * EducationMaster 
+ 0.13587543683769 * Marital_StatusDivorced + -0.45903453868087 * Marital_StatusMarried + 
0.3498299821692 * Marital_StatusSingle + -0.24987552246214 * Marital_StatusTogether ;
1482943   +   H15  = H15  +    -0.25453618071143 * Education2n_Cycle
1482944   +          +     0.10531942203707 * EducationBasic  +    -0.11067812258079 *
1482945   +        EducationGraduation  +     0.22861584696672 * EducationMaster
1482946   +          +    -0.23512394203797 * Marital_StatusDivorced
1482947   +          +       0.710701930681 * Marital_StatusMarried
1482948   +          +    -0.56116525410203 * Marital_StatusSingle
1482949   +          +     0.87274230285244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25453618071143 * Education2n_Cycle + 0.10531942203707 * 
EducationBasic + -0.11067812258079 * EducationGraduation + 0.22861584696672 * EducationMaster 
+ -0.23512394203797 * Marital_StatusDivorced + 0.710701930681 * Marital_StatusMarried + 
-0.56116525410203 * Marital_StatusSingle + 0.87274230285244 * Marital_StatusTogether ;
1482950   +   H11  =     1.97354382834855 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.97354382834855 + H11 ;
1482951   +   H12  =     0.19040674177137 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19040674177137 + H12 ;
1482952   +   H13  =    -2.95812486901971 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95812486901971 + H13 ;
1482953   +   H14  =     0.68206105329025 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.68206105329025 + H14 ;
1482954   +   H15  =    -0.15880184648294 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15880184648294 + H15 ;
1482955   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1482956   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1482957   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1482958   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1482959   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1482960   +END;
MPRINT(EM_DIAGRAM):   END;
1482961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1482962   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1482963   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1482964   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1482965   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1482966   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1482967   +END;
MPRINT(EM_DIAGRAM):   END;
1482968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482969   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1482970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1482971   +
1482972   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1482973   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1482974   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1482975   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1482976   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1482977   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1482978   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1482979   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1482980   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1482981   +end;
MPRINT(EM_DIAGRAM):   end;
1482982   +else do;
MPRINT(EM_DIAGRAM):   else do;
1482983   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1482984   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1482985   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1482986   +   end;
MPRINT(EM_DIAGRAM):   end;
1482987   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1482988   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1482989   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1482990   +   end;
MPRINT(EM_DIAGRAM):   end;
1482991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1482992   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1482993   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1482994   +   end;
MPRINT(EM_DIAGRAM):   end;
1482995   +end;
MPRINT(EM_DIAGRAM):   end;
1482996   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1482997   +   P_DepVar1  =    -3.25756779032103 * H11  +     3.11613473869222 * H12
1482998   +          +     0.05860782492357 * H13  +    -2.24562119342825 * H14
1482999   +          +    -3.55426417229617 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.25756779032103 * H11 + 3.11613473869222 * H12 + 
0.05860782492357 * H13 + -2.24562119342825 * H14 + -3.55426417229617 * H15 ;
1483000   +   P_DepVar1  =    -1.11502795304759 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11502795304759 + P_DepVar1 ;
1483001   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1483002   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1483003   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1483004   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1483005   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1483006   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1483007   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1483008   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1483009   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1483010   +END;
MPRINT(EM_DIAGRAM):   END;
1483011   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1483012   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1483013   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1483014   +END;
MPRINT(EM_DIAGRAM):   END;
1483015   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1483016   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1483017   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1483018   +END;
MPRINT(EM_DIAGRAM):   END;
1483019   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1483020   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1483021   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1483022   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1483023   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1483024   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1483025   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1483026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483027   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1483028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483029   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1483030   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1483031   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1483032   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1483033   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1483034   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1483035   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1483036   +END;
MPRINT(EM_DIAGRAM):   END;
1483037   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1483038   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1483039   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1483040   +drop
1483041   +H11
1483042   +H12
1483043   +H13
1483044   +H14
1483045   +H15
1483046   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1483047   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1483048   +* Renaming variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural7;
1483049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483050   +* Renaming Posterior variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural7;
1483051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483052   +drop Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar1;
1483053   +Neural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar1 = P_DepVar1;
1483054   +drop Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural7_P_DepVar0;
1483055   +Neural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural7_P_DepVar0 = P_DepVar0;
1483056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483057   +* Renaming Into variables for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural7;
1483058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483059   +length Neural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural7_I_DepVar $32;
1483060   +drop Neural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural7_I_DepVar;
1483061   +Neural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural7_I_DepVar = I_DepVar;
1483062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483063   +* Renaming _WARN_ variable for Neural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural7;
1483064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483065   +length Neural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural7_WARN_ $4;
1483066   +drop Neural7_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural7_WARN_;
1483067   +Neural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural7_WARN_ = _WARN_;
1483068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483069   +* Ensmbl29: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 9 of 10;
1483070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483072   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1483073   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1483074   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1483075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483076   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1483077   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1483078   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1483079   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1483080   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1483081   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1483082   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1483083   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1483084   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1483085   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1483086   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1483087   +LENGTH _WARN_ $4
1483088   +      F_DepVar  $ 12
1483089   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1483090   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1483091   +
1483092   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1483093   +
1483094   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1483095   +
1483096   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1483097   +
1483098   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1483099   +
1483100   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1483101   +
1483102   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1483103   +
1483104   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1483105   +
1483106   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1483107   +
1483108   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1483109   +
1483110   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1483111   +
1483112   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1483113   +
1483114   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1483115   +
1483116   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1483117   +
1483118   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1483119   +
1483120   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1483121   +
1483122   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1483123   +
1483124   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1483125   +
1483126   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1483127   +
1483128   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1483129   +
1483130   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1483131   +
1483132   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1483133   +
1483134   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1483135   +
1483136   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1483137   +
1483138   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1483139   +
1483140   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1483141   +
1483142   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1483143   +
1483144   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1483145   +
1483146   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1483147   +
1483148   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1483149   +
1483150   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1483151   +
1483152   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1483153   +
1483154   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1483155   +
1483156   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1483157   +
1483158   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1483159   +
1483160   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1483161   +
1483162   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1483163   +
1483164   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1483165   +
1483166   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1483167   +
1483168   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1483169   +
1483170   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1483171   +
1483172   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1483173   +
1483174   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1483175   +
1483176   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1483177   +
1483178   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1483179   +
1483180   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1483181   +
1483182   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1483183   +
1483184   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1483185   +
1483186   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1483187   +
1483188   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1483189   +
1483190   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1483191   +
1483192   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1483193   +
1483194   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1483195   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1483196   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1483197   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1483198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483200   +end;
MPRINT(EM_DIAGRAM):   end;
1483201   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483203   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1483204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483205   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1483206   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1483207   +   end;
MPRINT(EM_DIAGRAM):   end;
1483208   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1483209   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1483210   +   end;
MPRINT(EM_DIAGRAM):   end;
1483211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483212   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1483213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483215   +   end;
MPRINT(EM_DIAGRAM):   end;
1483216   +end;
MPRINT(EM_DIAGRAM):   end;
1483217   +
1483218   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1483219   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1483220   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1483221   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1483222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483224   +end;
MPRINT(EM_DIAGRAM):   end;
1483225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483226   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483227   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1483228   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483229   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1483230   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1483231   +   end;
MPRINT(EM_DIAGRAM):   end;
1483232   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1483233   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1483234   +   end;
MPRINT(EM_DIAGRAM):   end;
1483235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483236   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1483237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483239   +   end;
MPRINT(EM_DIAGRAM):   end;
1483240   +end;
MPRINT(EM_DIAGRAM):   end;
1483241   +
1483242   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1483243   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1483244   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1483245   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1483246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483248   +end;
MPRINT(EM_DIAGRAM):   end;
1483249   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483250   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483251   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1483252   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483253   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1483254   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1483255   +   end;
MPRINT(EM_DIAGRAM):   end;
1483256   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1483257   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1483258   +   end;
MPRINT(EM_DIAGRAM):   end;
1483259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483260   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1483261   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483262   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483263   +   end;
MPRINT(EM_DIAGRAM):   end;
1483264   +end;
MPRINT(EM_DIAGRAM):   end;
1483265   +
1483266   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1483267   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1483268   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1483269   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1483270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483272   +end;
MPRINT(EM_DIAGRAM):   end;
1483273   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483274   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483275   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1483276   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483277   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1483278   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1483279   +   end;
MPRINT(EM_DIAGRAM):   end;
1483280   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1483281   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1483282   +   end;
MPRINT(EM_DIAGRAM):   end;
1483283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483284   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1483285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483287   +   end;
MPRINT(EM_DIAGRAM):   end;
1483288   +end;
MPRINT(EM_DIAGRAM):   end;
1483289   +
1483290   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1483291   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1483292   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1483293   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1483294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483296   +end;
MPRINT(EM_DIAGRAM):   end;
1483297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483298   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483299   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1483300   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483301   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1483302   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1483303   +   end;
MPRINT(EM_DIAGRAM):   end;
1483304   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1483305   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1483306   +   end;
MPRINT(EM_DIAGRAM):   end;
1483307   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483308   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1483309   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483310   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483311   +   end;
MPRINT(EM_DIAGRAM):   end;
1483312   +end;
MPRINT(EM_DIAGRAM):   end;
1483313   +
1483314   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1483315   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1483316   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1483317   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1483318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483320   +end;
MPRINT(EM_DIAGRAM):   end;
1483321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483323   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1483324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483325   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1483326   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1483327   +   end;
MPRINT(EM_DIAGRAM):   end;
1483328   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1483329   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1483330   +   end;
MPRINT(EM_DIAGRAM):   end;
1483331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483332   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1483333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483335   +   end;
MPRINT(EM_DIAGRAM):   end;
1483336   +end;
MPRINT(EM_DIAGRAM):   end;
1483337   +
1483338   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1483339   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1483340   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1483341   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1483342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483344   +end;
MPRINT(EM_DIAGRAM):   end;
1483345   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1483347   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1483348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483349   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1483350   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1483351   +   end;
MPRINT(EM_DIAGRAM):   end;
1483352   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1483353   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1483354   +   end;
MPRINT(EM_DIAGRAM):   end;
1483355   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483356   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1483357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483359   +   end;
MPRINT(EM_DIAGRAM):   end;
1483360   +end;
MPRINT(EM_DIAGRAM):   end;
1483361   +
1483362   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1483363   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1483364   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1483365   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1483366   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1483367   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1483368   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1483369   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1483370   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1483371   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1483372   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1483373   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1483374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483376   +end;
MPRINT(EM_DIAGRAM):   end;
1483377   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483378   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1483379   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1483380   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483381   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1483382   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1483383   +   end;
MPRINT(EM_DIAGRAM):   end;
1483384   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1483385   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1483386   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1483387   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1483388   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1483389   +   end;
MPRINT(EM_DIAGRAM):   end;
1483390   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1483391   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1483392   +   end;
MPRINT(EM_DIAGRAM):   end;
1483393   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1483394   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1483395   +   end;
MPRINT(EM_DIAGRAM):   end;
1483396   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1483397   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1483398   +   end;
MPRINT(EM_DIAGRAM):   end;
1483399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483400   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1483401   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1483402   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1483403   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1483404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483406   +   end;
MPRINT(EM_DIAGRAM):   end;
1483407   +end;
MPRINT(EM_DIAGRAM):   end;
1483408   +
1483409   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1483410   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1483411   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1483412   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1483413   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1483414   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1483415   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1483416   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1483417   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1483418   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1483419   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1483420   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1483421   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1483422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1483423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483424   +end;
MPRINT(EM_DIAGRAM):   end;
1483425   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483426   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1483427   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1483428   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483429   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1483430   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1483431   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1483432   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1483433   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1483434   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1483435   +         end;
MPRINT(EM_DIAGRAM):   end;
1483436   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1483437   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1483438   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1483439   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1483440   +            end;
MPRINT(EM_DIAGRAM):   end;
1483441   +         end;
MPRINT(EM_DIAGRAM):   end;
1483442   +      end;
MPRINT(EM_DIAGRAM):   end;
1483443   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1483444   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1483445   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1483446   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1483447   +         end;
MPRINT(EM_DIAGRAM):   end;
1483448   +      end;
MPRINT(EM_DIAGRAM):   end;
1483449   +   end;
MPRINT(EM_DIAGRAM):   end;
1483450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483451   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1483452   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1483453   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1483454   +      end;
MPRINT(EM_DIAGRAM):   end;
1483455   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1483456   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1483457   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1483458   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1483459   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1483460   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1483461   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1483462   +         end;
MPRINT(EM_DIAGRAM):   end;
1483463   +      end;
MPRINT(EM_DIAGRAM):   end;
1483464   +   end;
MPRINT(EM_DIAGRAM):   end;
1483465   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1483466   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1483467   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1483468   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1483469   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1483470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1483471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483472   +   end;
MPRINT(EM_DIAGRAM):   end;
1483473   +end;
MPRINT(EM_DIAGRAM):   end;
1483474   +
1483475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483476   +*** Checking missing input Interval
1483477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1483478   +
1483479   +IF NMISS(
1483480   +   AcceptedCmpTotal ,
1483481   +   Age ,
1483482   +   Frq ,
1483483   +   Income ,
1483484   +   Kidhome ,
1483485   +   Mnt ,
1483486   +   MntFishProducts ,
1483487   +   MntFruits ,
1483488   +   MntGoldProds ,
1483489   +   MntMeatProducts ,
1483490   +   MntSweetProducts ,
1483491   +   MntWines ,
1483492   +   MonthsAsCustomer ,
1483493   +   NumCatalogPurchases ,
1483494   +   NumDealsPurchases ,
1483495   +   NumDistPurchases ,
1483496   +   NumStorePurchases ,
1483497   +   NumWebPurchases ,
1483498   +   NumWebVisitsMonth ,
1483499   +   RFMstat ,
1483500   +   RMntFrq ,
1483501   +   Recency ,
1483502   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1483503   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1483504   +
1483505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1483506   +END;
MPRINT(EM_DIAGRAM):   END;
1483507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483508   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1483509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483510   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1483511   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1483512   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1483513   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1483514   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1483515   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1483516   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1483517   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1483518   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1483519   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1483520   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1483521   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1483522   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1483523   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1483524   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1483525   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1483526   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1483527   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1483528   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1483529   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1483530   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1483531   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1483532   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1483533   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1483534   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1483535   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1483536   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1483537   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1483538   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1483539   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1483540   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1483541   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1483542   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1483543   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1483544   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1483545   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1483546   +END;
MPRINT(EM_DIAGRAM):   END;
1483547   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1483548   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1483549   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1483550   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1483551   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1483552   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1483553   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1483554   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1483555   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1483556   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1483557   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1483558   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1483559   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1483560   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1483561   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1483562   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1483563   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1483564   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1483565   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1483566   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1483567   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1483568   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1483569   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1483570   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1483571   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1483572   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1483573   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1483574   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1483575   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1483576   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1483577   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1483578   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1483579   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1483580   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1483581   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1483582   +   ELSE S_NumCatalogPurchases
1483583   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1483584   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1483585   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1483586   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1483587   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1483588   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1483589   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1483590   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1483591   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1483592   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1483593   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1483594   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1483595   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1483596   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1483597   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1483598   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1483599   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1483600   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1483601   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1483602   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1483603   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1483604   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1483605   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1483606   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1483607   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1483608   +END;
MPRINT(EM_DIAGRAM):   END;
1483609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483610   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1483611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483613   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1483614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483616   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1483617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483618   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1483619   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1483620   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1483621   +        S_Income  +    -0.09693130155866 * S_Kidhome
1483622   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1483623   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1483624   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1483625   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1483626   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1483627   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1483628   +          +     0.87256063855463 * S_NumDealsPurchases
1483629   +          +     0.24228318068596 * S_NumDistPurchases
1483630   +          +    -0.65575177240856 * S_NumStorePurchases
1483631   +          +    -0.94105747825406 * S_NumWebPurchases
1483632   +          +     0.88098930350141 * S_NumWebVisitsMonth
1483633   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1483634   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1483635   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age 
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome + 
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 * 
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts + 
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 * 
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 * 
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 * 
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 * 
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq + 
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1483636   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1483637   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1483638   +        S_Income  +    -0.48351377369429 * S_Kidhome
1483639   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1483640   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1483641   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1483642   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1483643   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1483644   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1483645   +          +     0.19198092320653 * S_NumDealsPurchases
1483646   +          +    -0.01877290175933 * S_NumDistPurchases
1483647   +          +    -0.61698509852352 * S_NumStorePurchases
1483648   +          +    -0.36114842161331 * S_NumWebPurchases
1483649   +          +     0.87653599441887 * S_NumWebVisitsMonth
1483650   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1483651   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1483652   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age + 
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome + 
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 * 
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts + 
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 * 
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 * 
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 * 
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 * 
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq + 
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1483653   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1483654   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1483655   +        S_Income  +    -0.03117320792997 * S_Kidhome
1483656   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1483657   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1483658   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1483659   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1483660   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1483661   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1483662   +          +    -0.17772008430544 * S_NumDealsPurchases
1483663   +          +    -0.24320624261016 * S_NumDistPurchases
1483664   +          +     0.42056923271106 * S_NumStorePurchases
1483665   +          +    -0.28718554863857 * S_NumWebPurchases
1483666   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1483667   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1483668   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1483669   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age + 
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome + 
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 * 
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts + 
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 * 
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 * 
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 * 
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 * 
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq + 
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1483670   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1483671   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1483672   +        S_Income  +     -0.0433863245185 * S_Kidhome
1483673   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1483674   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1483675   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1483676   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1483677   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1483678   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1483679   +          +    -0.43652501997552 * S_NumDealsPurchases
1483680   +          +     0.17317052107867 * S_NumDistPurchases
1483681   +          +     0.23672921935551 * S_NumStorePurchases
1483682   +          +     0.49273989445476 * S_NumWebPurchases
1483683   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1483684   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1483685   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1483686   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age + 
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome + 
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 * 
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts + 
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 * 
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 * 
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 * 
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 * 
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq + 
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1483687   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1483688   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1483689   +        S_Income  +     0.59347379159371 * S_Kidhome
1483690   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1483691   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1483692   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1483693   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1483694   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1483695   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1483696   +          +     0.06887104992711 * S_NumDealsPurchases
1483697   +          +    -0.03976087278251 * S_NumDistPurchases
1483698   +          +     -0.0289014951041 * S_NumStorePurchases
1483699   +          +    -0.08062500939119 * S_NumWebPurchases
1483700   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1483701   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1483702   +        S_RMntFrq  +       0.940313744576 * S_Recency
1483703   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age 
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome + 
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 * 
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts + 
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 * 
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 * 
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 * 
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 * 
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq + 
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1483704   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1483705   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1483706   +        S_Income  +    -0.55245961592835 * S_Kidhome
1483707   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1483708   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1483709   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1483710   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1483711   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1483712   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1483713   +          +    -0.50731731808528 * S_NumDealsPurchases
1483714   +          +     -0.4854662155502 * S_NumDistPurchases
1483715   +          +     0.21175181231244 * S_NumStorePurchases
1483716   +          +     0.04923223410585 * S_NumWebPurchases
1483717   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1483718   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1483719   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1483720   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age 
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome + 
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 * 
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts + 
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 * 
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 * 
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 * 
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 * 
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq + 
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1483721   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1483722   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1483723   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1483724   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1483725   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 * 
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 + 
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 * 
HigherEducationBinary0 ;
1483726   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1483727   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1483728   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1483729   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1483730   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 * 
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 + 
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 * 
HigherEducationBinary0 ;
1483731   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1483732   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1483733   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1483734   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1483735   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 * 
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 + 
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 * 
HigherEducationBinary0 ;
1483736   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1483737   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1483738   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1483739   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1483740   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 * 
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 + 
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 * 
HigherEducationBinary0 ;
1483741   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1483742   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1483743   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1483744   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1483745   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 * 
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 + 
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 * 
HigherEducationBinary0 ;
1483746   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1483747   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1483748   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1483749   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1483750   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 * 
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 + 
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 * 
HigherEducationBinary0 ;
1483751   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1483752   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1483753   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1483754   +          +     0.13102231169849 * Marital_StatusDivorced
1483755   +          +     0.13221932247035 * Marital_StatusMarried
1483756   +          +    -0.28666963919866 * Marital_StatusSingle
1483757   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 * 
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster + 
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried + 
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1483758   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1483759   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1483760   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1483761   +          +     0.36873255525654 * Marital_StatusDivorced
1483762   +          +    -0.54422050380085 * Marital_StatusMarried
1483763   +          +     0.58130553469516 * Marital_StatusSingle
1483764   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 * 
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster 
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried + 
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1483765   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1483766   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1483767   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1483768   +          +    -0.07480235993304 * Marital_StatusDivorced
1483769   +          +     0.31705972445069 * Marital_StatusMarried
1483770   +          +    -0.08626328185895 * Marital_StatusSingle
1483771   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 * 
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster 
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried + 
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1483772   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1483773   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1483774   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1483775   +          +    -0.06733679615115 * Marital_StatusDivorced
1483776   +          +     0.23111557732379 * Marital_StatusMarried
1483777   +          +    -0.34379469870478 * Marital_StatusSingle
1483778   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 * 
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster 
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried + 
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1483779   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1483780   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1483781   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1483782   +          +    -0.07108588070668 * Marital_StatusDivorced
1483783   +          +     1.10060875265784 * Marital_StatusMarried
1483784   +          +    -0.74271327534863 * Marital_StatusSingle
1483785   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 * 
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster + 
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried + 
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1483786   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1483787   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1483788   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1483789   +          +    -0.19461023827362 * Marital_StatusDivorced
1483790   +          +     -0.4165676037681 * Marital_StatusMarried
1483791   +          +     0.43379324993555 * Marital_StatusSingle
1483792   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 * 
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster 
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried + 
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1483793   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1483794   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1483795   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1483796   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1483797   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1483798   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1483799   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1483800   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1483801   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1483802   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1483803   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1483804   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1483805   +END;
MPRINT(EM_DIAGRAM):   END;
1483806   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1483807   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1483808   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1483809   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1483810   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1483811   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1483812   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1483813   +END;
MPRINT(EM_DIAGRAM):   END;
1483814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483815   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1483816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483817   +
1483818   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1483819   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1483820   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1483821   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1483822   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1483823   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1483824   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1483825   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1483826   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1483827   +end;
MPRINT(EM_DIAGRAM):   end;
1483828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1483829   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1483830   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1483831   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1483832   +   end;
MPRINT(EM_DIAGRAM):   end;
1483833   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1483834   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1483835   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1483836   +   end;
MPRINT(EM_DIAGRAM):   end;
1483837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1483838   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1483839   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1483840   +   end;
MPRINT(EM_DIAGRAM):   end;
1483841   +end;
MPRINT(EM_DIAGRAM):   end;
1483842   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1483843   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1483844   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1483845   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 + 
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 + 
-2.08728996739757 * H16 ;
1483846   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1483847   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1483848   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1483849   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1483850   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1483851   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1483852   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1483853   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1483854   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1483855   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1483856   +END;
MPRINT(EM_DIAGRAM):   END;
1483857   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1483858   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1483859   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1483860   +END;
MPRINT(EM_DIAGRAM):   END;
1483861   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1483862   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1483863   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1483864   +END;
MPRINT(EM_DIAGRAM):   END;
1483865   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1483866   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1483867   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1483868   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1483869   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1483870   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1483871   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1483872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483873   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1483874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1483875   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1483876   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1483877   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1483878   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1483879   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1483880   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1483881   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1483882   +END;
MPRINT(EM_DIAGRAM):   END;
1483883   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1483884   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1483885   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1483886   +drop
1483887   +H11
1483888   +H12
1483889   +H13
1483890   +H14
1483891   +H15
1483892   +H16
1483893   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1483894   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1483895   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1483896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483897   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1483898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483899   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1483900   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1483901   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1483902   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1483903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483904   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1483905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483906   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1483907   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1483908   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1483909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483910   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1483911   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483912   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1483913   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1483914   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1483915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483916   +* Ensmbl29: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Scoring Code of model 10 of 10;
1483917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483919   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1483920   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1483921   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1483922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1483923   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1483924   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1483925   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1483926   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1483927   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1483928   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1483929   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1483930   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1483931   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1483932   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1483933   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1483934   +LENGTH _WARN_ $4
1483935   +      F_DepVar  $ 12
1483936   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1483937   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1483938   +
1483939   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1483940   +
1483941   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1483942   +
1483943   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1483944   +
1483945   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1483946   +
1483947   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1483948   +
1483949   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1483950   +
1483951   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1483952   +
1483953   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1483954   +
1483955   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1483956   +
1483957   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1483958   +
1483959   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1483960   +
1483961   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1483962   +
1483963   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1483964   +
1483965   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1483966   +
1483967   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1483968   +
1483969   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1483970   +
1483971   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1483972   +
1483973   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1483974   +
1483975   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1483976   +
1483977   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1483978   +
1483979   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1483980   +
1483981   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1483982   +
1483983   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1483984   +
1483985   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1483986   +
1483987   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1483988   +
1483989   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1483990   +
1483991   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1483992   +
1483993   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1483994   +
1483995   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1483996   +
1483997   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1483998   +
1483999   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1484000   +
1484001   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1484002   +
1484003   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1484004   +
1484005   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1484006   +
1484007   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1484008   +
1484009   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1484010   +
1484011   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1484012   +
1484013   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1484014   +
1484015   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1484016   +
1484017   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1484018   +
1484019   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1484020   +
1484021   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1484022   +
1484023   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1484024   +
1484025   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1484026   +
1484027   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1484028   +
1484029   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1484030   +
1484031   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1484032   +
1484033   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1484034   +
1484035   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1484036   +
1484037   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1484038   +
1484039   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1484040   +
1484041   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1484042   +
1484043   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1484044   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1484045   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1484046   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1484047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484049   +end;
MPRINT(EM_DIAGRAM):   end;
1484050   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484051   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484052   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1484053   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484054   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1484055   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1484056   +   end;
MPRINT(EM_DIAGRAM):   end;
1484057   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1484058   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1484059   +   end;
MPRINT(EM_DIAGRAM):   end;
1484060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484061   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1484062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484064   +   end;
MPRINT(EM_DIAGRAM):   end;
1484065   +end;
MPRINT(EM_DIAGRAM):   end;
1484066   +
1484067   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1484068   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1484069   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1484070   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1484071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484073   +end;
MPRINT(EM_DIAGRAM):   end;
1484074   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484075   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484076   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1484077   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484078   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1484079   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1484080   +   end;
MPRINT(EM_DIAGRAM):   end;
1484081   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1484082   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1484083   +   end;
MPRINT(EM_DIAGRAM):   end;
1484084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484085   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1484086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484088   +   end;
MPRINT(EM_DIAGRAM):   end;
1484089   +end;
MPRINT(EM_DIAGRAM):   end;
1484090   +
1484091   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1484092   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1484093   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1484094   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1484095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484097   +end;
MPRINT(EM_DIAGRAM):   end;
1484098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484100   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1484101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484102   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1484103   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1484104   +   end;
MPRINT(EM_DIAGRAM):   end;
1484105   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1484106   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1484107   +   end;
MPRINT(EM_DIAGRAM):   end;
1484108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484109   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1484110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484112   +   end;
MPRINT(EM_DIAGRAM):   end;
1484113   +end;
MPRINT(EM_DIAGRAM):   end;
1484114   +
1484115   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1484116   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1484117   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1484118   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1484119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484121   +end;
MPRINT(EM_DIAGRAM):   end;
1484122   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484123   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484124   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1484125   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484126   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1484127   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1484128   +   end;
MPRINT(EM_DIAGRAM):   end;
1484129   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1484130   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1484131   +   end;
MPRINT(EM_DIAGRAM):   end;
1484132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484133   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1484134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484136   +   end;
MPRINT(EM_DIAGRAM):   end;
1484137   +end;
MPRINT(EM_DIAGRAM):   end;
1484138   +
1484139   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1484140   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1484141   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1484142   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1484143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484145   +end;
MPRINT(EM_DIAGRAM):   end;
1484146   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484148   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1484149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484150   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1484151   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1484152   +   end;
MPRINT(EM_DIAGRAM):   end;
1484153   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1484154   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1484155   +   end;
MPRINT(EM_DIAGRAM):   end;
1484156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484157   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1484158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484160   +   end;
MPRINT(EM_DIAGRAM):   end;
1484161   +end;
MPRINT(EM_DIAGRAM):   end;
1484162   +
1484163   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1484164   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1484165   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1484166   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1484167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484169   +end;
MPRINT(EM_DIAGRAM):   end;
1484170   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484171   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484172   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1484173   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484174   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1484175   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1484176   +   end;
MPRINT(EM_DIAGRAM):   end;
1484177   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1484178   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1484179   +   end;
MPRINT(EM_DIAGRAM):   end;
1484180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484181   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1484182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484184   +   end;
MPRINT(EM_DIAGRAM):   end;
1484185   +end;
MPRINT(EM_DIAGRAM):   end;
1484186   +
1484187   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1484188   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1484189   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1484190   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1484191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484193   +end;
MPRINT(EM_DIAGRAM):   end;
1484194   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484195   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1484196   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1484197   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484198   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1484199   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1484200   +   end;
MPRINT(EM_DIAGRAM):   end;
1484201   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1484202   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1484203   +   end;
MPRINT(EM_DIAGRAM):   end;
1484204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484205   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1484206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484208   +   end;
MPRINT(EM_DIAGRAM):   end;
1484209   +end;
MPRINT(EM_DIAGRAM):   end;
1484210   +
1484211   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1484212   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1484213   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1484214   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1484215   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1484216   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1484217   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1484218   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1484219   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1484220   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1484221   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1484222   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1484223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484225   +end;
MPRINT(EM_DIAGRAM):   end;
1484226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484227   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1484228   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1484229   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484230   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1484231   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1484232   +   end;
MPRINT(EM_DIAGRAM):   end;
1484233   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1484234   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1484235   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1484236   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1484237   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1484238   +   end;
MPRINT(EM_DIAGRAM):   end;
1484239   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1484240   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1484241   +   end;
MPRINT(EM_DIAGRAM):   end;
1484242   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1484243   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1484244   +   end;
MPRINT(EM_DIAGRAM):   end;
1484245   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1484246   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1484247   +   end;
MPRINT(EM_DIAGRAM):   end;
1484248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484249   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1484250   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1484251   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1484252   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1484253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484255   +   end;
MPRINT(EM_DIAGRAM):   end;
1484256   +end;
MPRINT(EM_DIAGRAM):   end;
1484257   +
1484258   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1484259   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1484260   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1484261   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1484262   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1484263   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1484264   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1484265   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1484266   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1484267   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1484268   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1484269   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1484270   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1484271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1484272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484273   +end;
MPRINT(EM_DIAGRAM):   end;
1484274   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484275   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1484276   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1484277   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484278   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1484279   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1484280   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1484281   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1484282   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1484283   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1484284   +         end;
MPRINT(EM_DIAGRAM):   end;
1484285   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1484286   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1484287   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1484288   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1484289   +            end;
MPRINT(EM_DIAGRAM):   end;
1484290   +         end;
MPRINT(EM_DIAGRAM):   end;
1484291   +      end;
MPRINT(EM_DIAGRAM):   end;
1484292   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1484293   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1484294   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1484295   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1484296   +         end;
MPRINT(EM_DIAGRAM):   end;
1484297   +      end;
MPRINT(EM_DIAGRAM):   end;
1484298   +   end;
MPRINT(EM_DIAGRAM):   end;
1484299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484300   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1484301   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1484302   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1484303   +      end;
MPRINT(EM_DIAGRAM):   end;
1484304   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1484305   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1484306   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1484307   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1484308   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1484309   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1484310   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1484311   +         end;
MPRINT(EM_DIAGRAM):   end;
1484312   +      end;
MPRINT(EM_DIAGRAM):   end;
1484313   +   end;
MPRINT(EM_DIAGRAM):   end;
1484314   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1484315   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1484316   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1484317   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1484318   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1484319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1484320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484321   +   end;
MPRINT(EM_DIAGRAM):   end;
1484322   +end;
MPRINT(EM_DIAGRAM):   end;
1484323   +
1484324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484325   +*** Checking missing input Interval
1484326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1484327   +
1484328   +IF NMISS(
1484329   +   AcceptedCmpTotal ,
1484330   +   Age ,
1484331   +   Frq ,
1484332   +   Income ,
1484333   +   Kidhome ,
1484334   +   Mnt ,
1484335   +   MntFishProducts ,
1484336   +   MntFruits ,
1484337   +   MntGoldProds ,
1484338   +   MntMeatProducts ,
1484339   +   MntSweetProducts ,
1484340   +   MntWines ,
1484341   +   MonthsAsCustomer ,
1484342   +   NumCatalogPurchases ,
1484343   +   NumDealsPurchases ,
1484344   +   NumDistPurchases ,
1484345   +   NumStorePurchases ,
1484346   +   NumWebPurchases ,
1484347   +   NumWebVisitsMonth ,
1484348   +   RFMstat ,
1484349   +   RMntFrq ,
1484350   +   Recency ,
1484351   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1484352   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1484353   +
1484354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1484355   +END;
MPRINT(EM_DIAGRAM):   END;
1484356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484357   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1484358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484359   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1484360   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1484361   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1484362   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1484363   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1484364   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1484365   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1484366   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1484367   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1484368   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1484369   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1484370   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1484371   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1484372   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1484373   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1484374   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1484375   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1484376   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1484377   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1484378   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1484379   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1484380   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1484381   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1484382   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1484383   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1484384   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1484385   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1484386   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1484387   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1484388   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1484389   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1484390   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1484391   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1484392   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1484393   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1484394   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1484395   +END;
MPRINT(EM_DIAGRAM):   END;
1484396   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1484397   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1484398   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1484399   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1484400   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1484401   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1484402   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1484403   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1484404   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1484405   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1484406   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1484407   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1484408   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1484409   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1484410   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1484411   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1484412   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1484413   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1484414   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1484415   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1484416   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1484417   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1484418   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1484419   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1484420   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1484421   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1484422   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1484423   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1484424   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1484425   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1484426   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1484427   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1484428   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1484429   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1484430   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1484431   +   ELSE S_NumCatalogPurchases
1484432   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1484433   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1484434   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1484435   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1484436   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1484437   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1484438   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1484439   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1484440   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1484441   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1484442   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1484443   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1484444   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1484445   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1484446   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1484447   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1484448   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1484449   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1484450   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1484451   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1484452   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1484453   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1484454   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1484455   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1484456   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1484457   +END;
MPRINT(EM_DIAGRAM):   END;
1484458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484459   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1484460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484462   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1484463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484465   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1484466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1484468   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1484469   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1484470   +        S_Income  +    -0.48552270697514 * S_Kidhome
1484471   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1484472   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1484473   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1484474   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1484475   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1484476   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1484477   +          +    -0.23083265836869 * S_NumDealsPurchases
1484478   +          +     0.18257445063797 * S_NumDistPurchases
1484479   +          +     0.38040778765927 * S_NumStorePurchases
1484480   +          +     0.25798779223068 * S_NumWebPurchases
1484481   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1484482   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1484483   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1484484   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age 
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome + 
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 * 
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts + 
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 * 
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 * 
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 * 
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 * 
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq + 
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1484485   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1484486   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1484487   +        S_Income  +     0.23694585796773 * S_Kidhome
1484488   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1484489   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1484490   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1484491   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1484492   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1484493   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1484494   +          +    -0.07783411363525 * S_NumDealsPurchases
1484495   +          +     0.41281579441285 * S_NumDistPurchases
1484496   +          +     0.22243606867939 * S_NumStorePurchases
1484497   +          +     0.27174952755013 * S_NumWebPurchases
1484498   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1484499   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1484500   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1484501   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age 
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome + 
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 * 
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts + 
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 * 
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 * 
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 * 
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 * 
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq + 
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1484502   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1484503   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1484504   +        S_Income  +     0.20802765248799 * S_Kidhome
1484505   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1484506   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1484507   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1484508   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1484509   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1484510   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1484511   +          +     0.09455783738093 * S_NumDealsPurchases
1484512   +          +    -0.06039304909585 * S_NumDistPurchases
1484513   +          +    -0.10306611685636 * S_NumStorePurchases
1484514   +          +    -0.00323837049664 * S_NumWebPurchases
1484515   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1484516   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1484517   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1484518   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age 
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome + 
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 * 
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts + 
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 * 
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 * 
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 * 
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 * 
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq + 
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1484519   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1484520   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1484521   +        S_Income  +     0.26381864865425 * S_Kidhome
1484522   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1484523   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1484524   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1484525   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1484526   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1484527   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1484528   +          +      0.8306613243419 * S_NumDealsPurchases
1484529   +          +     0.31439474207278 * S_NumDistPurchases
1484530   +          +    -0.62131474975756 * S_NumStorePurchases
1484531   +          +    -1.04845843654047 * S_NumWebPurchases
1484532   +          +     0.13255915506164 * S_NumWebVisitsMonth
1484533   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1484534   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1484535   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age + 
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome + 
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 * 
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts + 
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 * 
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 * 
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 * 
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 * 
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq + 
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1484536   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1484537   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1484538   +        S_Income  +    -0.71599192201946 * S_Kidhome
1484539   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1484540   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1484541   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1484542   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1484543   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1484544   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1484545   +          +     0.63537278643623 * S_NumDealsPurchases
1484546   +          +     0.00410348485264 * S_NumDistPurchases
1484547   +          +    -0.78287523583925 * S_NumStorePurchases
1484548   +          +    -0.73614491225189 * S_NumWebPurchases
1484549   +          +      1.5997596522354 * S_NumWebVisitsMonth
1484550   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1484551   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1484552   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age 
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome + 
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 * 
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts + 
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 * 
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 * 
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 * 
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 * 
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq + 
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1484553   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1484554   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1484555   +        S_Income  +    -0.23853377939411 * S_Kidhome
1484556   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1484557   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1484558   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1484559   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1484560   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1484561   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1484562   +          +    -0.30899603957269 * S_NumDealsPurchases
1484563   +          +     0.11839581082877 * S_NumDistPurchases
1484564   +          +     0.20149797391098 * S_NumStorePurchases
1484565   +          +      0.1616654107491 * S_NumWebPurchases
1484566   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1484567   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1484568   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1484569   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age 
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome + 
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 * 
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts + 
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 * 
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 * 
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 * 
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 * 
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq + 
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1484570   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1484571   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1484572   +        S_Income  +    -0.48650790963695 * S_Kidhome
1484573   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1484574   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1484575   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1484576   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1484577   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1484578   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1484579   +          +    -0.18889005468777 * S_NumDealsPurchases
1484580   +          +     0.17240918361456 * S_NumDistPurchases
1484581   +          +     0.11704610685994 * S_NumStorePurchases
1484582   +          +     0.23031393640508 * S_NumWebPurchases
1484583   +          +     0.66002859819524 * S_NumWebVisitsMonth
1484584   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1484585   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1484586   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age 
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome + 
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 * 
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts + 
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 * 
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 * 
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 * 
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 * 
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq + 
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1484587   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1484588   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1484589   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1484590   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1484591   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 * 
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 + 
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 * 
HigherEducationBinary0 ;
1484592   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1484593   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1484594   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1484595   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1484596   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 * 
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 + 
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 * 
HigherEducationBinary0 ;
1484597   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1484598   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1484599   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1484600   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1484601   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 * 
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 + 
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 * 
HigherEducationBinary0 ;
1484602   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1484603   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1484604   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1484605   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1484606   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 * 
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 + 
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 * 
HigherEducationBinary0 ;
1484607   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1484608   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1484609   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1484610   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1484611   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 * 
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 + 
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 * 
HigherEducationBinary0 ;
1484612   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1484613   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1484614   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1484615   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1484616   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 * 
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 + 
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 * 
HigherEducationBinary0 ;
1484617   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1484618   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1484619   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1484620   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1484621   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 * 
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 + 
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 * 
HigherEducationBinary0 ;
1484622   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1484623   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1484624   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1484625   +          +     0.43452164349556 * Marital_StatusDivorced
1484626   +          +    -0.46042593279944 * Marital_StatusMarried
1484627   +          +     0.45533323427801 * Marital_StatusSingle
1484628   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 * 
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster + 
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried + 
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1484629   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1484630   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1484631   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1484632   +          +     0.11002244687305 * Marital_StatusDivorced
1484633   +          +     0.52424349905683 * Marital_StatusMarried
1484634   +          +     -0.3969250366321 * Marital_StatusSingle
1484635   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 * 
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster 
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried + 
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1484636   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1484637   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1484638   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1484639   +          +    -0.05300704180744 * Marital_StatusDivorced
1484640   +          +     0.07805487103106 * Marital_StatusMarried
1484641   +          +     0.20033339442958 * Marital_StatusSingle
1484642   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 * 
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster + 
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried + 
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1484643   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1484644   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1484645   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1484646   +          +    -0.42379596543146 * Marital_StatusDivorced
1484647   +          +     0.66738351478416 * Marital_StatusMarried
1484648   +          +    -0.37324277578462 * Marital_StatusSingle
1484649   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 * 
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster + 
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried + 
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1484650   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1484651   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1484652   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1484653   +          +     0.88761025578489 * Marital_StatusDivorced
1484654   +          +    -0.85905539883385 * Marital_StatusMarried
1484655   +          +     0.73467737758558 * Marital_StatusSingle
1484656   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 * 
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster 
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried + 
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1484657   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1484658   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1484659   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1484660   +          +    -0.11980818075461 * Marital_StatusDivorced
1484661   +          +    -0.16572953052582 * Marital_StatusMarried
1484662   +          +     0.34617421331983 * Marital_StatusSingle
1484663   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 * 
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster 
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried + 
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1484664   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1484665   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1484666   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1484667   +          +     0.14874886057777 * Marital_StatusDivorced
1484668   +          +     -1.0463076915992 * Marital_StatusMarried
1484669   +          +     0.72937563672763 * Marital_StatusSingle
1484670   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 * 
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster 
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried + 
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1484671   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1484672   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1484673   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1484674   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1484675   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1484676   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1484677   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1484678   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1484679   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1484680   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1484681   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1484682   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1484683   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1484684   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1484685   +END;
MPRINT(EM_DIAGRAM):   END;
1484686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1484687   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1484688   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1484689   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1484690   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1484691   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1484692   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1484693   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1484694   +END;
MPRINT(EM_DIAGRAM):   END;
1484695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484696   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1484697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484698   +
1484699   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1484700   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1484701   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1484702   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1484703   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1484704   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1484705   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1484706   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1484707   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1484708   +end;
MPRINT(EM_DIAGRAM):   end;
1484709   +else do;
MPRINT(EM_DIAGRAM):   else do;
1484710   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1484711   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1484712   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1484713   +   end;
MPRINT(EM_DIAGRAM):   end;
1484714   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1484715   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1484716   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1484717   +   end;
MPRINT(EM_DIAGRAM):   end;
1484718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1484719   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1484720   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1484721   +   end;
MPRINT(EM_DIAGRAM):   end;
1484722   +end;
MPRINT(EM_DIAGRAM):   end;
1484723   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1484724   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1484725   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1484726   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1484727   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 + 
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 * 
H16 + 2.19267705077374 * H17 ;
1484728   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1484729   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1484730   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1484731   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1484732   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1484733   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1484734   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1484735   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1484736   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1484737   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1484738   +END;
MPRINT(EM_DIAGRAM):   END;
1484739   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1484740   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1484741   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1484742   +END;
MPRINT(EM_DIAGRAM):   END;
1484743   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1484744   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1484745   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1484746   +END;
MPRINT(EM_DIAGRAM):   END;
1484747   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1484748   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1484749   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1484750   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1484751   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1484752   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1484753   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1484754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484755   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1484756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1484757   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1484758   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1484759   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1484760   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1484761   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1484762   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1484763   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1484764   +END;
MPRINT(EM_DIAGRAM):   END;
1484765   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1484766   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1484767   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1484768   +drop
1484769   +H11
1484770   +H12
1484771   +H13
1484772   +H14
1484773   +H15
1484774   +H16
1484775   +H17
1484776   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1484777   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1484778   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1484779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484780   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1484781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484782   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1484783   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1484784   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1484785   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1484786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484787   +* Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
1484788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484789   +length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
1484790   +drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
1484791   +Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
1484792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484793   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1484794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484795   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1484796   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1484797   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1484798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484799   +* Ensmbl29: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Voting to produce predicted target;
1484800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484801   +array Ensmbl29_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_post{2} _temporary_;
1484802   +array Ensmbl29_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl29_count{2} _temporary_;
1484803   +array Ensmbl29_level{2} $32 _temporary_ (
1484804   +"1"
1484805   +"0"
1484806   +);
MPRINT(EM_DIAGRAM):   array Ensmbl29_level{2} $32 _temporary_ ( "1" "0" );
1484807   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1484808   +Ensmbl29_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{i} = 0;
1484809   +Ensmbl29_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{i} = 0;
1484810   +end;
MPRINT(EM_DIAGRAM):   end;
1484811   +if Reg5_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{1} then do;
1484812   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484813   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg5_P_DepVar1;
1484814   +end;
MPRINT(EM_DIAGRAM):   end;
1484815   +if Reg_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{1} then do;
1484816   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484817   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Reg_P_DepVar1;
1484818   +end;
MPRINT(EM_DIAGRAM):   end;
1484819   +if Tree_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{1} then do;
1484820   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484821   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Tree_P_DepVar1;
1484822   +end;
MPRINT(EM_DIAGRAM):   end;
1484823   +if Neural4_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{1} then do;
1484824   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484825   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural4_P_DepVar1;
1484826   +end;
MPRINT(EM_DIAGRAM):   end;
1484827   +if Neural_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{1} then do;
1484828   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484829   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural_P_DepVar1;
1484830   +end;
MPRINT(EM_DIAGRAM):   end;
1484831   +if Neural2_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{1} then do;
1484832   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484833   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural2_P_DepVar1;
1484834   +end;
MPRINT(EM_DIAGRAM):   end;
1484835   +if Neural3_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{1} then do;
1484836   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484837   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural3_P_DepVar1;
1484838   +end;
MPRINT(EM_DIAGRAM):   end;
1484839   +if Neural7_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{1} then do;
1484840   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484841   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural7_P_DepVar1;
1484842   +end;
MPRINT(EM_DIAGRAM):   end;
1484843   +if Neural9_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{1} then do;
1484844   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484845   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural9_P_DepVar1;
1484846   +end;
MPRINT(EM_DIAGRAM):   end;
1484847   +if Neural10_I_DepVar = Ensmbl29_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{1} then do;
1484848   +Ensmbl29_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{1} + 1;
1484849   +Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{1}=Ensmbl29_post{1}+ Neural10_P_DepVar1;
1484850   +end;
MPRINT(EM_DIAGRAM):   end;
1484851   +if Reg5_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg5_I_DepVar = Ensmbl29_level{2} then do;
1484852   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484853   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg5_P_DepVar0;
1484854   +end;
MPRINT(EM_DIAGRAM):   end;
1484855   +if Reg_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Reg_I_DepVar = Ensmbl29_level{2} then do;
1484856   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484857   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Reg_P_DepVar0;
1484858   +end;
MPRINT(EM_DIAGRAM):   end;
1484859   +if Tree_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Tree_I_DepVar = Ensmbl29_level{2} then do;
1484860   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484861   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Tree_P_DepVar0;
1484862   +end;
MPRINT(EM_DIAGRAM):   end;
1484863   +if Neural4_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl29_level{2} then do;
1484864   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484865   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural4_P_DepVar0;
1484866   +end;
MPRINT(EM_DIAGRAM):   end;
1484867   +if Neural_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural_I_DepVar = Ensmbl29_level{2} then do;
1484868   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484869   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural_P_DepVar0;
1484870   +end;
MPRINT(EM_DIAGRAM):   end;
1484871   +if Neural2_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl29_level{2} then do;
1484872   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484873   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural2_P_DepVar0;
1484874   +end;
MPRINT(EM_DIAGRAM):   end;
1484875   +if Neural3_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl29_level{2} then do;
1484876   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484877   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural3_P_DepVar0;
1484878   +end;
MPRINT(EM_DIAGRAM):   end;
1484879   +if Neural7_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural7_I_DepVar = Ensmbl29_level{2} then do;
1484880   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484881   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural7_P_DepVar0;
1484882   +end;
MPRINT(EM_DIAGRAM):   end;
1484883   +if Neural9_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl29_level{2} then do;
1484884   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484885   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural9_P_DepVar0;
1484886   +end;
MPRINT(EM_DIAGRAM):   end;
1484887   +if Neural10_I_DepVar = Ensmbl29_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl29_level{2} then do;
1484888   +Ensmbl29_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl29_count{2} + 1;
1484889   +Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl29_post{2}=Ensmbl29_post{2}+ Neural10_P_DepVar0;
1484890   +end;
MPRINT(EM_DIAGRAM):   end;
1484891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484892   +* Ensmbl29: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Determine Into Variable;
1484893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484894   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1484895   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1484896   +vote_count = max(
1484897   +Ensmbl29_count{1} ,
1484898   +Ensmbl29_count{2}
1484899   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl29_count{1} , Ensmbl29_count{2} );
1484900   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1484901   +if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl29_count{i}=vote_count and Ensmbl29_post{i}>vote_post then do;
1484902   +I_DepVar = Ensmbl29_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl29_level{i};
1484903   +vote_post = Ensmbl29_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl29_count{i};
1484904   +end;
MPRINT(EM_DIAGRAM):   end;
1484905   +end;
MPRINT(EM_DIAGRAM):   end;
1484906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484907   +* Ensmbl29: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Compute posterior vars using models predicting the chosen 
level;
1484908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484909   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1484910   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1484911   +if I_DepVar = Reg5_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg5_I_DepVar then do;
1484912   +P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg5_P_DepVar1;
1484913   +P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg5_P_DepVar0;
1484914   +end;
MPRINT(EM_DIAGRAM):   end;
1484915   +if I_DepVar = Reg_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Reg_I_DepVar then do;
1484916   +P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Reg_P_DepVar1;
1484917   +P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Reg_P_DepVar0;
1484918   +end;
MPRINT(EM_DIAGRAM):   end;
1484919   +if I_DepVar = Tree_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Tree_I_DepVar then do;
1484920   +P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Tree_P_DepVar1;
1484921   +P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Tree_P_DepVar0;
1484922   +end;
MPRINT(EM_DIAGRAM):   end;
1484923   +if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
1484924   +P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
1484925   +P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
1484926   +end;
MPRINT(EM_DIAGRAM):   end;
1484927   +if I_DepVar = Neural_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural_I_DepVar then do;
1484928   +P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural_P_DepVar1;
1484929   +P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural_P_DepVar0;
1484930   +end;
MPRINT(EM_DIAGRAM):   end;
1484931   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1484932   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1484933   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1484934   +end;
MPRINT(EM_DIAGRAM):   end;
1484935   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1484936   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1484937   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1484938   +end;
MPRINT(EM_DIAGRAM):   end;
1484939   +if I_DepVar = Neural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural7_I_DepVar then do;
1484940   +P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural7_P_DepVar1;
1484941   +P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural7_P_DepVar0;
1484942   +end;
MPRINT(EM_DIAGRAM):   end;
1484943   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1484944   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1484945   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1484946   +end;
MPRINT(EM_DIAGRAM):   end;
1484947   +if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
1484948   +P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
1484949   +P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
1484950   +end;
MPRINT(EM_DIAGRAM):   end;
1484951   +* Ensmbl29: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Averaging posterior;
1484952   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1484953   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1484954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484955   +* Ensmbl29: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Producing Unformatted variable;
1484956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484957   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1484958   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1484959   +else
1484960   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1484961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484962   +* Ensmbl29: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing _WARN_ Variable;
1484963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1484964   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1484965   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1484966   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1484967   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1484968   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1484969   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1484970   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1484971   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1484972   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1484973   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1484974   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1484975   +if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1484976   +if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1484977   +if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1484978   +if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1484979   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1484980   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1484981   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1484982   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1484983   +if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1484984   +if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1484985   +if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1484986   +if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1484987   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1484988   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1484989   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1484990   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1484991   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1484992   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1484993   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1484994   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1484995   +if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1484996   +if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1484997   +if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1484998   +if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1484999   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1485000   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1485001   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1485002   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1485003   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1485003  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1485004   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1485004  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1485005   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1485005  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1485006   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1485006  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1485007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1485008   +* Ensmbl29: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing Residual Vars;
1485009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1485010   +if
1485011   +F_DepVar NE '1'
1485012   +AND F_DepVar NE '0'
1485013   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1485014   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1485015   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1485016   +end;
MPRINT(EM_DIAGRAM):   end;
1485017   +else do;
MPRINT(EM_DIAGRAM):   else do;
1485018   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1485019   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1485020   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1485021   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1485022   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1485023   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1485024   +END;
MPRINT(EM_DIAGRAM):   END;
1485025   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485026    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL29_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1485027    quit;
1485028    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl29_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl29_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl29_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1485088    filename _pref
1485088  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1485089    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1485090    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1485091   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1485092   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1485093   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1485094   +
1485095   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1485096   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1485097   +
1485098   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1485099   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1485100   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1485101   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1485102   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1485103   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1485104   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1485105   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1485106   +
1485107   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1485108   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1485109   +
1485110   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1485111   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1485112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485114   +end;
MPRINT(EM_DIAGRAM):   end;
1485115   +
1485116   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1485117   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1485118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485120   +end;
MPRINT(EM_DIAGRAM):   end;
1485121   +
1485122   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1485123   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1485124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485126   +end;
MPRINT(EM_DIAGRAM):   end;
1485127   +
1485128   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1485129   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1485130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485132   +end;
MPRINT(EM_DIAGRAM):   end;
1485133   +
1485134   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1485135   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1485136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485138   +end;
MPRINT(EM_DIAGRAM):   end;
1485139   +
1485140   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1485141   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1485142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485144   +end;
MPRINT(EM_DIAGRAM):   end;
1485145   +
1485146   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1485147   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1485148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485150   +end;
MPRINT(EM_DIAGRAM):   end;
1485151   +
1485152   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1485153   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1485154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485156   +end;
MPRINT(EM_DIAGRAM):   end;
1485157   +
1485158   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1485159   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1485160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485162   +end;
MPRINT(EM_DIAGRAM):   end;
1485163   +
1485164   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1485165   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1485166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485168   +end;
MPRINT(EM_DIAGRAM):   end;
1485169   +
1485170   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1485171   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1485172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485174   +end;
MPRINT(EM_DIAGRAM):   end;
1485175   +
1485176   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1485177   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1485178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485180   +end;
MPRINT(EM_DIAGRAM):   end;
1485181   +
1485182   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1485183   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1485184   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1485185   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1485186   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1485187   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1485188   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1485189   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1485190   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1485191   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1485192   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1485193   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1485194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485196   +end;
MPRINT(EM_DIAGRAM):   end;
1485197   +else do;
MPRINT(EM_DIAGRAM):   else do;
1485198   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1485199   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1485200   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1485201   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1485202   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1485203   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1485204   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1485205   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1485206   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485207   +         end;
MPRINT(EM_DIAGRAM):   end;
1485208   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1485209   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1485210   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1485211   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485212   +            end;
MPRINT(EM_DIAGRAM):   end;
1485213   +         end;
MPRINT(EM_DIAGRAM):   end;
1485214   +      end;
MPRINT(EM_DIAGRAM):   end;
1485215   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1485216   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1485217   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1485218   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485219   +         end;
MPRINT(EM_DIAGRAM):   end;
1485220   +      end;
MPRINT(EM_DIAGRAM):   end;
1485221   +   end;
MPRINT(EM_DIAGRAM):   end;
1485222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1485223   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1485224   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1485225   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485226   +      end;
MPRINT(EM_DIAGRAM):   end;
1485227   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1485228   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1485229   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1485230   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1485231   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1485232   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1485233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485234   +         end;
MPRINT(EM_DIAGRAM):   end;
1485235   +      end;
MPRINT(EM_DIAGRAM):   end;
1485236   +   end;
MPRINT(EM_DIAGRAM):   end;
1485237   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1485238   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1485239   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1485240   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1485241   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1485242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1485243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485244   +   end;
MPRINT(EM_DIAGRAM):   end;
1485245   +end;
MPRINT(EM_DIAGRAM):   end;
1485246   +
1485247   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1485248   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1485249   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1485250   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1485251   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1485252   +end;
MPRINT(EM_DIAGRAM):   end;
1485253   +
1485254   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1485255   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1485256   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1485257   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1485258   +
1485259   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1485260   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1485261   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1485262   +
1485263   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1485264   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1485265   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1485266   +
1485267   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1485268   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1485269   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1485270   +
1485271   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1485272   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1485273   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1485274   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1485275   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1485276   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1485277   +
1485278   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1485279   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1485280   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1485281   +
1485282   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1485283   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1485284   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1485285   +
1485286   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1485287   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1485288   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1485289   +
1485290   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1485291   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1485292   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1485293   +
1485294   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1485295   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1485296   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1485297   +
1485298   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1485299   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1485300   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1485301   +
1485302   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1485303   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1485304   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1485305   +
1485306   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1485307   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1485308   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1485309   +
1485310   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1485311   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1485312   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1485313   +
1485314   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1485315   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1485316   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1485317   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1485318   +
1485319   +REG5DR1:
1485320   +
1485321   +
1485322   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1485323   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1485324   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1485325   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1485326   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1485327   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1485328   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1485329   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1485330   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1485331   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1485332   +end;
MPRINT(EM_DIAGRAM):   end;
1485333   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1485334   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1485335   +
1485336   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1485337   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1485338   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485339    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1485340    quit;
1485341    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1485342    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1485343    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1485344    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1485345    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1485346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485347    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1485348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485350    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1485351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485353    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485354    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1485355    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1485356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485357    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1485358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1485359    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1485360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485362    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485363    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1485364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485365    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485366    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1485367    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1485367  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

1485368    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485369    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1485370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485371    filename _pref
1485371  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1485372    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1485373    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1485374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1485375   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1485376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1485377   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1485378   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1485379   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485380    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1485381    quit;
1485382    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1485383    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1485384    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1485385    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1485386    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1485387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485388    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1485389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485391    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1485392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485394    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485395    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1485396    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1485397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485398    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1485399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1485400    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1485401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485403    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485404    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1485405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485406    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485407    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1485408    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1485408  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1485409    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485410    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1485411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485412    filename _pref
1485412  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1485413    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1485414    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1485415   +
1485416   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1485417   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1485417  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1485418   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1485419   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1485420   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1485421   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1485422   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485423    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1485424    quit;
1485425    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1485426    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1485427    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1485428    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1485429    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1485430    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485431    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1485432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485434    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1485435    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485436    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485437    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485438    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1485439    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1485440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485441    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1485442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485443    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1485444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485446    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485447    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1485448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485449    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485450    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1485451    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1485451  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1485452    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485453    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1485454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485455    filename _pref
1485455  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1485456    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1485457    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1485458   +
1485459   +
1485460   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1485461   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1485462   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1485463   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1485464   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1485465   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485466   +
1485467   +
1485468   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1485469   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1485470   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1485471   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1485472   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1485473   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485474   +
1485475   +
1485476   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1485477   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1485478   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1485479   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1485480   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1485481   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485482   +
1485483   +
1485484   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1485485   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1485486   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1485487   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1485488   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1485489   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485490   +
1485491   +
1485492   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1485493   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1485494   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1485495   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1485496   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1485497   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485498   +
1485499   +
1485500   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1485501   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1485502   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1485503   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1485504   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1485505   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485506   +
1485507   +
1485508   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1485509   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1485510   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1485511   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1485512   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1485513   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485514   +
1485515   +
1485516   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1485517   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1485518   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1485519   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1485520   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1485521   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1485522   +if
1485523   +_FILTERNORM1 not in ( '.')
1485524   + and
1485525   +_FILTERNORM2 not in ( '.')
1485526   + and
1485527   +_FILTERNORM3 not in ( '.')
1485528   + and
1485529   +_FILTERNORM4 not in ( '.')
1485530   + and
1485531   +_FILTERNORM5 not in ( '.')
1485532   + and
1485533   +_FILTERNORM6 not in ( '.')
1485534   + and
1485535   +_FILTERNORM7 not in ( ' ')
1485536   + and
1485537   +_FILTERNORM8 not in ( ' ')
1485538   +and
1485539   +( Dt_Customer ne .)
1485540   +and ( Income ne . and (Income<=107000))
1485541   +and ( Kidhome ne .)
1485542   +and ( MntFishProducts ne .)
1485543   +and ( MntFruits ne .)
1485544   +and ( MntGoldProds ne .)
1485545   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1485546   +and ( MntSweetProducts ne .)
1485547   +and ( MntWines ne .)
1485548   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1485549   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1485550   +and ( NumStorePurchases ne .)
1485551   +and ( NumWebPurchases ne .)
1485552   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1485553   +and ( Recency ne .)
1485554   +and ( Teenhome ne .)
1485555   +and ( Year_Birth ne .)
1485556   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1485557   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1485558   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1485559   +end;
MPRINT(EM_DIAGRAM):   end;
1485560   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1485561   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485562    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1485563    quit;
1485564    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1485565    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1485566    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1485567    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1485568    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1485569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485570    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1485571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485573    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1485574    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485575    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485576    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485577    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1485578    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1485579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485580    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1485581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1485582    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1485583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485586    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1485587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485588    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485589    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1485590    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1485590  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1485591    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485592    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1485593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485594    %macro varDept(fcmpdata=,id=);
1485595    %global nobs&id scoreFlag&id;
1485596    %let scoreFlag&id = 0;
1485597    %if &id=1 or ^&fcmpStart %then %do;
1485598    proc sort data=&fcmpdata out=_temp&id nodupkey;
1485599    by NAME;
1485600    where id=&id and LHS in( %let j=1;
1485601    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1485602    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1485603    "&var" %let j = %eval(&j+1);
1485604    %end;
1485605    );
1485606    run;
1485607    %let dsid = %sysfunc(open(_temp&id));
1485608    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1485609    %let dsid = %sysfunc(close(&dsid));
1485610    %if &&nobs&id %then %do;
1485611    %let scoreFlag&id = 1;
1485612    %let fcmpStart = 1;
1485613    %end;
1485614    %else %let fcmpStart = 0;
1485615    %end;
1485616    %else %do;
1485617    proc sort data=&fcmpdata out=_tempid;
1485618    where id=&id;
1485619    by LHS;
1485620    run;
1485621    %let dsid = %sysfunc(open(_tempid));
1485622    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1485623    %let dsid = %sysfunc(close(&dsid));
1485624    %if ^&&nobs&id %then %do;
1485625    proc datasets lib=work nolist;
1485626    delete _tempid;
1485627    run;
1485628    quit;
1485629    %end;
1485630    %else %do;
1485631    data _tempAll;
1485632    set %let j=%eval(&id-1);
1485633    %do x=1 %to &j;
1485634    %if &&nobs&x %then %do;
1485635    _temp&x %end;
1485636    %end;
1485637    ;
1485638    run;
1485639    proc sql;
1485640    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1485640  ! work._tempid p2 where p.name=p2.lhs;
1485641    quit;
1485642    data _temp&id;
1485643    set _temp&id;
1485644    where LHS ne '' and NAME ne '' and Node ne '';
1485645    run;
1485646    proc datasets lib=work nolist;
1485647    delete _tempAll;
1485648    run;
1485649    %let dsid = %sysfunc(open(_temp&id));
1485650    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1485651    %let dsid = %sysfunc(close(&dsid));
1485652    %if ^&&nobs&id %then %do;
1485653    proc datasets lib=work nolist;
1485654    delete _temp&id;
1485655    run;
1485656    quit;
1485657    %end;
1485658    %else %do;
1485659    %let scoreFlag&id = 1;
1485660    data _temp&id;
1485661    set _temp&id;
1485662    where LHS ne NAME and node ne '';
1485663    run;
1485664    %let dsid = %sysfunc(open(_temp&id));
1485665    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1485666    %let dsid = %sysfunc(close(&dsid));
1485667    %if ^&&nobs&id %then %do;
1485668    proc datasets lib=work nolist;
1485669    delete _temp&id;
1485670    run;
1485671    quit;
1485672    %end;
1485673    %else %do;
1485674    proc sort data=_temp&id nodupkey;
1485675    by LHS NAME;
1485676    run;
1485677    %end;
1485678    %end;
1485679    %end;
1485680    %end;
1485681    %mend varDept;
1485682    %macro optCode(outdata=fcmpdata);
1485683    %global fcmpStart;
1485684    %let fcmpStart = 0;
1485685    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1485686    %let NumNodes=9;
1485687    %do k=1 %to &NumNodes;
1485688    %vardept(fcmpdata=&outdata, id=&k);
1485689    %end;
1485690    %mend optCode;
1485691    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1485692    filename _pref
1485692  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1485693    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1485694    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1485695   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1485696   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1485697   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1485698   +
1485699   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1485700   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1485701   +
1485702   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1485703   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1485704   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1485705   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1485706   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1485707   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1485708   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1485709   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1485710   +
1485711   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1485712   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1485713   +
1485714   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1485715   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1485716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485718   +end;
MPRINT(EM_DIAGRAM):   end;
1485719   +
1485720   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1485721   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1485722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485724   +end;
MPRINT(EM_DIAGRAM):   end;
1485725   +
1485726   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1485727   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1485728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485730   +end;
MPRINT(EM_DIAGRAM):   end;
1485731   +
1485732   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1485733   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1485734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485736   +end;
MPRINT(EM_DIAGRAM):   end;
1485737   +
1485738   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1485739   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1485740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485742   +end;
MPRINT(EM_DIAGRAM):   end;
1485743   +
1485744   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1485745   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1485746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485748   +end;
MPRINT(EM_DIAGRAM):   end;
1485749   +
1485750   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1485751   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1485752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485754   +end;
MPRINT(EM_DIAGRAM):   end;
1485755   +
1485756   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1485757   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1485758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485760   +end;
MPRINT(EM_DIAGRAM):   end;
1485761   +
1485762   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1485763   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1485764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485766   +end;
MPRINT(EM_DIAGRAM):   end;
1485767   +
1485768   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1485769   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1485770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485772   +end;
MPRINT(EM_DIAGRAM):   end;
1485773   +
1485774   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1485775   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1485776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485778   +end;
MPRINT(EM_DIAGRAM):   end;
1485779   +
1485780   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1485781   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1485782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485784   +end;
MPRINT(EM_DIAGRAM):   end;
1485785   +
1485786   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1485787   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1485788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485790   +end;
MPRINT(EM_DIAGRAM):   end;
1485791   +
1485792   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1485793   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1485794   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1485795   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1485796   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1485797   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1485798   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1485799   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1485800   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1485801   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1485802   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1485803   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1485804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1485805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485806   +end;
MPRINT(EM_DIAGRAM):   end;
1485807   +else do;
MPRINT(EM_DIAGRAM):   else do;
1485808   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1485809   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1485810   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1485811   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1485812   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1485813   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1485814   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1485815   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1485816   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485817   +         end;
MPRINT(EM_DIAGRAM):   end;
1485818   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1485819   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1485820   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1485821   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485822   +            end;
MPRINT(EM_DIAGRAM):   end;
1485823   +         end;
MPRINT(EM_DIAGRAM):   end;
1485824   +      end;
MPRINT(EM_DIAGRAM):   end;
1485825   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1485826   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1485827   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1485828   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485829   +         end;
MPRINT(EM_DIAGRAM):   end;
1485830   +      end;
MPRINT(EM_DIAGRAM):   end;
1485831   +   end;
MPRINT(EM_DIAGRAM):   end;
1485832   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1485833   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1485834   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1485835   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485836   +      end;
MPRINT(EM_DIAGRAM):   end;
1485837   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1485838   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1485839   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1485840   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1485841   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1485842   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1485843   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1485844   +         end;
MPRINT(EM_DIAGRAM):   end;
1485845   +      end;
MPRINT(EM_DIAGRAM):   end;
1485846   +   end;
MPRINT(EM_DIAGRAM):   end;
1485847   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1485848   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1485849   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1485850   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1485851   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1485852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1485853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1485854   +   end;
MPRINT(EM_DIAGRAM):   end;
1485855   +end;
MPRINT(EM_DIAGRAM):   end;
1485856   +
1485857   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1485858   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1485859   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1485860   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1485861   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1485862   +end;
MPRINT(EM_DIAGRAM):   end;
1485863   +
1485864   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1485865   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1485866   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1485867   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1485868   +
1485869   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1485870   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1485871   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1485872   +
1485873   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1485874   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1485875   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1485876   +
1485877   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1485878   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1485879   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1485880   +
1485881   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1485882   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1485883   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1485884   +
1485885   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1485886   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1485887   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1485888   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1485889   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1485890   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1485891   +
1485892   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1485893   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1485894   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1485895   +
1485896   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1485897   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1485898   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1485899   +
1485900   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1485901   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1485902   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1485903   +
1485904   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1485905   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1485906   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1485907   +
1485908   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1485909   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1485910   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1485911   +
1485912   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1485913   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1485914   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1485915   +
1485916   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1485917   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1485918   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1485919   +
1485920   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1485921   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1485922   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1485923   +
1485924   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1485925   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1485926   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1485927   +
1485928   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1485929   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1485930   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1485931   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1485932   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1485933   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1485934   +end;
MPRINT(EM_DIAGRAM):   end;
1485935   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1485936   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1485937   +
1485938   +REGDR1:
1485939   +
1485940   +
1485941   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1485942   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1485943   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1485944   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1485945   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1485946   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1485947   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1485948   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1485949   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1485950   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1485951   +end;
MPRINT(EM_DIAGRAM):   end;
1485952   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1485953   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1485954   +
1485955   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1485956   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1485957   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485958    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1485959    quit;
1485960    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1485961    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1485962    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1485963    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1485964    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1485965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485966    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1485967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485969    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1485970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485972    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485973    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1485974    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1485975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485976    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1485977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1485978    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1485979    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485981    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1485982    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1485983    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1485984    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485985    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1485986    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1485986  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

1485987    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1485988    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1485989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1485990    filename _pref
1485990  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1485991    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1485992    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1485993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1485994   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1485995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1485996   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1485997   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1485998   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1485999    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486000    quit;
1486001    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486002    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486003    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486004    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1486005    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486007    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486010    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1486011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486013    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486014    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486015    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486017    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1486018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1486019    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486020    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486022    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486023    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486024    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486025    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486026    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486027    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486027  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1486028    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486029    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486031    filename _pref
1486031  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1486032    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486033    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1486034   +
1486035   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1486036   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1486036  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1486037   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1486038   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1486039   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1486040   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1486041   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1486042    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486043    quit;
1486044    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486045    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486046    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486047    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1486048    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486050    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
The SAS System

NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486053    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1486054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486056    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486057    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486058    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486059    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486060    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1486061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486062    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486063    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486065    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486066    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486067    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486068    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486069    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486070    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486070  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1486071    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486072    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486074    filename _pref
1486074  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1486075    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486076    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1486077   +
1486078   +
1486079   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1486080   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1486081   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1486082   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1486083   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1486084   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486085   +
1486086   +
1486087   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1486088   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1486089   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1486090   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1486091   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1486092   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486093   +
1486094   +
1486095   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1486096   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1486097   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1486098   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1486099   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1486100   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486101   +
1486102   +
1486103   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1486104   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1486105   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1486106   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1486107   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1486108   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486109   +
1486110   +
1486111   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1486112   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1486113   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1486114   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1486115   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1486116   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486117   +
1486118   +
1486119   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1486120   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1486121   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1486122   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1486123   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1486124   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486125   +
1486126   +
1486127   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1486128   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1486129   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1486130   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1486131   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1486132   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486133   +
1486134   +
1486135   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1486136   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1486137   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1486138   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1486139   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1486140   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486141   +if
1486142   +_FILTERNORM1 not in ( '.')
1486143   + and
1486144   +_FILTERNORM2 not in ( '.')
1486145   + and
1486146   +_FILTERNORM3 not in ( '.')
1486147   + and
1486148   +_FILTERNORM4 not in ( '.')
1486149   + and
1486150   +_FILTERNORM5 not in ( '.')
1486151   + and
1486152   +_FILTERNORM6 not in ( '.')
1486153   + and
1486154   +_FILTERNORM7 not in ( ' ')
1486155   + and
1486156   +_FILTERNORM8 not in ( ' ')
1486157   +and
1486158   +( Dt_Customer ne .)
1486159   +and ( Income ne . and (Income<=107000))
1486160   +and ( Kidhome ne .)
1486161   +and ( MntFishProducts ne .)
1486162   +and ( MntFruits ne .)
1486163   +and ( MntGoldProds ne .)
1486164   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1486165   +and ( MntSweetProducts ne .)
1486166   +and ( MntWines ne .)
1486167   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1486168   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1486169   +and ( NumStorePurchases ne .)
1486170   +and ( NumWebPurchases ne .)
1486171   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1486172   +and ( Recency ne .)
1486173   +and ( Teenhome ne .)
1486174   +and ( Year_Birth ne .)
1486175   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1486176   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1486177   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1486178   +end;
MPRINT(EM_DIAGRAM):   end;
1486179   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1486180   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1486181    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486182    quit;
1486183    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486184    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486185    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486186    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1486187    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486189    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486191    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486192    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1486193    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486195    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486196    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486197    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486199    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1486200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1486201    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486203    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486205    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486207    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486208    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486209    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486209  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1486210    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486211    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486213    %macro varDept(fcmpdata=,id=);
1486214    %global nobs&id scoreFlag&id;
1486215    %let scoreFlag&id = 0;
1486216    %if &id=1 or ^&fcmpStart %then %do;
1486217    proc sort data=&fcmpdata out=_temp&id nodupkey;
1486218    by NAME;
1486219    where id=&id and LHS in( %let j=1;
1486220    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1486221    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1486222    "&var" %let j = %eval(&j+1);
1486223    %end;
1486224    );
1486225    run;
1486226    %let dsid = %sysfunc(open(_temp&id));
1486227    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486228    %let dsid = %sysfunc(close(&dsid));
1486229    %if &&nobs&id %then %do;
1486230    %let scoreFlag&id = 1;
1486231    %let fcmpStart = 1;
1486232    %end;
1486233    %else %let fcmpStart = 0;
1486234    %end;
1486235    %else %do;
1486236    proc sort data=&fcmpdata out=_tempid;
1486237    where id=&id;
1486238    by LHS;
1486239    run;
1486240    %let dsid = %sysfunc(open(_tempid));
1486241    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486242    %let dsid = %sysfunc(close(&dsid));
1486243    %if ^&&nobs&id %then %do;
1486244    proc datasets lib=work nolist;
1486245    delete _tempid;
1486246    run;
1486247    quit;
1486248    %end;
1486249    %else %do;
1486250    data _tempAll;
1486251    set %let j=%eval(&id-1);
1486252    %do x=1 %to &j;
1486253    %if &&nobs&x %then %do;
1486254    _temp&x %end;
1486255    %end;
1486256    ;
1486257    run;
1486258    proc sql;
1486259    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1486259  ! work._tempid p2 where p.name=p2.lhs;
1486260    quit;
1486261    data _temp&id;
1486262    set _temp&id;
1486263    where LHS ne '' and NAME ne '' and Node ne '';
1486264    run;
1486265    proc datasets lib=work nolist;
1486266    delete _tempAll;
1486267    run;
1486268    %let dsid = %sysfunc(open(_temp&id));
1486269    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486270    %let dsid = %sysfunc(close(&dsid));
1486271    %if ^&&nobs&id %then %do;
1486272    proc datasets lib=work nolist;
1486273    delete _temp&id;
1486274    run;
1486275    quit;
1486276    %end;
1486277    %else %do;
1486278    %let scoreFlag&id = 1;
1486279    data _temp&id;
1486280    set _temp&id;
1486281    where LHS ne NAME and node ne '';
1486282    run;
1486283    %let dsid = %sysfunc(open(_temp&id));
1486284    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486285    %let dsid = %sysfunc(close(&dsid));
1486286    %if ^&&nobs&id %then %do;
1486287    proc datasets lib=work nolist;
1486288    delete _temp&id;
1486289    run;
1486290    quit;
1486291    %end;
1486292    %else %do;
1486293    proc sort data=_temp&id nodupkey;
1486294    by LHS NAME;
1486295    run;
1486296    %end;
1486297    %end;
1486298    %end;
1486299    %end;
1486300    %mend varDept;
1486301    %macro optCode(outdata=fcmpdata);
1486302    %global fcmpStart;
1486303    %let fcmpStart = 0;
1486304    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1486305    %let NumNodes=9;
1486306    %do k=1 %to &NumNodes;
1486307    %vardept(fcmpdata=&outdata, id=&k);
1486308    %end;
1486309    %mend optCode;
1486310    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1486311    filename _pref
1486311  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas";
1486312    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486313    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree\EMPUBLISHSCORE.sas.
1486314   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1486315   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1486316   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1486317   +
1486318   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1486319   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1486320   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1486321   +
1486322   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1486323   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1486324   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1486325   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1486326   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1486327   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1486328   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1486329   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1486330   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1486331   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1486332   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1486333   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1486334   +
1486335   +
1486336   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1486337   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1486338   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1486339   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1486340   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1486341   +
1486342   +
1486343   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
1486344   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1486345   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1486346   +  IF  NOT MISSING(Recency ) AND
1486347   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1486348   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1486349   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1486350   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1486351   +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1486352   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1486353   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1486354   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1486355   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1486356   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1486357   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1486358   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486359   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486360   +      END;
MPRINT(EM_DIAGRAM):   END;
1486361   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486362   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1486363   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1486364   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1486365   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1486366   +        _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1486367   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1486368   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1486369   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1486370   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1486371   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1486372   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1486373   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486374   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486375   +        END;
MPRINT(EM_DIAGRAM):   END;
1486376   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486377   +        IF  NOT MISSING(NumStorePurchases ) AND
1486378   +          NumStorePurchases  <                  6.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND NumStorePurchases < 6.5 THEN DO;
1486379   +          IF  NOT MISSING(NumWebVisitsMonth ) AND
1486380   +            NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1486381   +            _NODE_  =                   56;
MPRINT(EM_DIAGRAM):   _NODE_ = 56;
1486382   +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1486383   +            P_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.61111111111111;
1486384   +            P_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.38888888888888;
1486385   +            Q_DepVar0  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.61111111111111;
1486386   +            Q_DepVar1  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.38888888888888;
1486387   +            V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1486388   +            V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1486389   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486390   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486391   +            END;
MPRINT(EM_DIAGRAM):   END;
1486392   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486393   +            _NODE_  =                   57;
MPRINT(EM_DIAGRAM):   _NODE_ = 57;
1486394   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1486395   +            P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
1486396   +            P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
1486397   +            Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
1486398   +            Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
1486399   +            V_DepVar0  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.3076923076923;
1486400   +            V_DepVar1  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.69230769230769;
1486401   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486402   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486403   +            END;
MPRINT(EM_DIAGRAM):   END;
1486404   +          END;
MPRINT(EM_DIAGRAM):   END;
1486405   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486406   +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
1486407   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1486408   +          P_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.74545454545454;
1486409   +          P_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.25454545454545;
1486410   +          Q_DepVar0  =     0.74545454545454;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.74545454545454;
1486411   +          Q_DepVar1  =     0.25454545454545;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.25454545454545;
1486412   +          V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1486413   +          V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1486414   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486415   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486416   +          END;
MPRINT(EM_DIAGRAM):   END;
1486417   +        END;
MPRINT(EM_DIAGRAM):   END;
1486418   +      END;
MPRINT(EM_DIAGRAM):   END;
1486419   +    END;
MPRINT(EM_DIAGRAM):   END;
1486420   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486421   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1486422   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1486423   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1486424   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1486425   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1486426   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1486427   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1486428   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1486429   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1486430   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1486431   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486432   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486433   +      END;
MPRINT(EM_DIAGRAM):   END;
1486434   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486435   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1486436   +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1486437   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1486438   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1486439   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1486440   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1486441   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1486442   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1486443   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486444   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486445   +      END;
MPRINT(EM_DIAGRAM):   END;
1486446   +    END;
MPRINT(EM_DIAGRAM):   END;
1486447   +  END;
MPRINT(EM_DIAGRAM):   END;
1486448   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486449   +  IF  NOT MISSING(Recency ) AND
1486450   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1486451   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1486452   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN 
DO;
1486453   +      IF  NOT MISSING(NumStorePurchases ) AND
1486454   +                         7.5 <= NumStorePurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumStorePurchases ) AND 7.5 <= NumStorePurchases THEN DO;
1486455   +        IF  NOT MISSING(RFMstat ) AND
1486456   +              1964.32692307692 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1964.32692307692 <= RFMstat THEN DO;
1486457   +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
1486458   +          _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1486459   +          P_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.42857142857142;
1486460   +          P_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.57142857142857;
1486461   +          Q_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.42857142857142;
1486462   +          Q_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.57142857142857;
1486463   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1486464   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1486465   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486466   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486467   +          END;
MPRINT(EM_DIAGRAM):   END;
1486468   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486469   +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
1486470   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1486471   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1486472   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1486473   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1486474   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1486475   +          V_DepVar0  =     0.69230769230769;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.69230769230769;
1486476   +          V_DepVar1  =      0.3076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3076923076923;
1486477   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486478   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486479   +          END;
MPRINT(EM_DIAGRAM):   END;
1486480   +        END;
MPRINT(EM_DIAGRAM):   END;
1486481   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486482   +        IF  NOT MISSING(MntFishProducts ) AND
1486483   +          MntFishProducts  <                   26 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntFishProducts ) AND MntFishProducts < 26 THEN DO;
1486484   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1486485   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1486486   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1486487   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1486488   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1486489   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1486490   +          V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
1486491   +          V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
1486492   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486493   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486494   +          END;
MPRINT(EM_DIAGRAM):   END;
1486495   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486496   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1486497   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1486498   +          P_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13793103448275;
1486499   +          P_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86206896551724;
1486500   +          Q_DepVar0  =     0.13793103448275;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13793103448275;
1486501   +          Q_DepVar1  =     0.86206896551724;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86206896551724;
1486502   +          V_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.14285714285714;
1486503   +          V_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85714285714285;
1486504   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486505   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486506   +          END;
MPRINT(EM_DIAGRAM):   END;
1486507   +        END;
MPRINT(EM_DIAGRAM):   END;
1486508   +      END;
MPRINT(EM_DIAGRAM):   END;
1486509   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486510   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1486511   +                         7.5 <= NumWebVisitsMonth  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND 7.5 <= NumWebVisitsMonth THEN DO;
1486512   +        IF  NOT MISSING(NumCatalogPurchases ) AND
1486513   +                           0.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 0.5 <= NumCatalogPurchases THEN 
DO;
1486514   +          IF  NOT MISSING(Kidhome ) AND
1486515   +            Kidhome  <                  0.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND Kidhome < 0.5 THEN DO;
1486516   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1486517   +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1486518   +            P_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.66666666666666;
1486519   +            P_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.33333333333333;
1486520   +            Q_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.66666666666666;
1486521   +            Q_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.33333333333333;
1486522   +            V_DepVar0  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6;
1486523   +            V_DepVar1  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.4;
1486524   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486525   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486526   +            END;
MPRINT(EM_DIAGRAM):   END;
1486527   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486528   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1486529   +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1486530   +            P_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26470588235294;
1486531   +            P_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73529411764705;
1486532   +            Q_DepVar0  =     0.26470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26470588235294;
1486533   +            Q_DepVar1  =     0.73529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73529411764705;
1486534   +            V_DepVar0  =     0.21428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.21428571428571;
1486535   +            V_DepVar1  =     0.78571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.78571428571428;
1486536   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1486537   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1486538   +            END;
MPRINT(EM_DIAGRAM):   END;
1486539   +          END;
MPRINT(EM_DIAGRAM):   END;
1486540   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486541   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1486542   +          _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1486543   +          P_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81428571428571;
1486544   +          P_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18571428571428;
1486545   +          Q_DepVar0  =     0.81428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81428571428571;
1486546   +          Q_DepVar1  =     0.18571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18571428571428;
1486547   +          V_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.71428571428571;
1486548   +          V_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.28571428571428;
1486549   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486550   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486551   +          END;
MPRINT(EM_DIAGRAM):   END;
1486552   +        END;
MPRINT(EM_DIAGRAM):   END;
1486553   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486554   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1486555   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1486556   +        P_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90114942528735;
1486557   +        P_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09885057471264;
1486558   +        Q_DepVar0  =     0.90114942528735;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90114942528735;
1486559   +        Q_DepVar1  =     0.09885057471264;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09885057471264;
1486560   +        V_DepVar0  =      0.8848167539267;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8848167539267;
1486561   +        V_DepVar1  =     0.11518324607329;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.11518324607329;
1486562   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486563   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486564   +        END;
MPRINT(EM_DIAGRAM):   END;
1486565   +      END;
MPRINT(EM_DIAGRAM):   END;
1486566   +    END;
MPRINT(EM_DIAGRAM):   END;
1486567   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1486568   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1486569   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1486570   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1486571   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1486572   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1486573   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1486574   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1486575   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1486576   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1486577   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1486578   +    END;
MPRINT(EM_DIAGRAM):   END;
1486579   +  END;
MPRINT(EM_DIAGRAM):   END;
1486580   +
1486581   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1486582   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1486583   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1486584   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1486585    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486586    quit;
1486587    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486588    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486589    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486590    retain ID 2 Node "Tree";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree";
1486591    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486592    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486593    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 103 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 103 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486596    proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree_variableset out=_temp2(keep=NAME CREATOR);
1486597    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486599    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486600    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486601    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486603    proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree_train out=_meta(keep=NAME) noprint;
1486604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1486605    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486606    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486607    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486608    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486609    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486611    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486612    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486613    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486613  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 93 rows and 5 columns.

1486614    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486615    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 93 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 93 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486617    filename _pref
1486617  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1486618    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486619    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1486620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1486621   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1486622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1486623   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1486624   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1486625   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1486626    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486627    quit;
1486628    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486629    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486630    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486631    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1486632    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486634    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486637    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1486638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486639    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486640    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486641    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486642    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486644    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1486645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1486646    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486649    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486650    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486652    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486653    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486654    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486654  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1486655    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486656    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 97 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486658    filename _pref
1486658  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1486659    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486660    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1486661   +
1486662   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1486663   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1486663  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1486664   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1486665   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1486666   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1486667   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1486668   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1486669    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486670    quit;
1486671    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486672    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486673    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486674    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1486675    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486677    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486680    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1486681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486683    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486684    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486685    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486686    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486687    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1486688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486689    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486690    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486692    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486693    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486695    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1486696    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486697    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486697  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1486698    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486699    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 136 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486701    filename _pref
1486701  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1486702    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486703    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1486704   +
1486705   +
1486706   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1486707   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1486708   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1486709   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1486710   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1486711   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486712   +
1486713   +
1486714   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1486715   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1486716   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1486717   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1486718   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1486719   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486720   +
1486721   +
1486722   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1486723   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1486724   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1486725   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1486726   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1486727   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486728   +
1486729   +
1486730   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1486731   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1486732   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1486733   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1486734   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1486735   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486736   +
1486737   +
1486738   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1486739   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1486740   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1486741   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1486742   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1486743   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486744   +
1486745   +
1486746   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1486747   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1486748   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1486749   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1486750   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1486751   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486752   +
1486753   +
1486754   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1486755   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1486756   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1486757   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1486758   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1486759   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486760   +
1486761   +
1486762   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1486763   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1486764   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1486765   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1486766   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1486767   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1486768   +if
1486769   +_FILTERNORM1 not in ( '.')
1486770   + and
1486771   +_FILTERNORM2 not in ( '.')
1486772   + and
1486773   +_FILTERNORM3 not in ( '.')
1486774   + and
1486775   +_FILTERNORM4 not in ( '.')
1486776   + and
1486777   +_FILTERNORM5 not in ( '.')
1486778   + and
1486779   +_FILTERNORM6 not in ( '.')
1486780   + and
1486781   +_FILTERNORM7 not in ( ' ')
1486782   + and
1486783   +_FILTERNORM8 not in ( ' ')
1486784   +and
1486785   +( Dt_Customer ne .)
1486786   +and ( Income ne . and (Income<=107000))
1486787   +and ( Kidhome ne .)
1486788   +and ( MntFishProducts ne .)
1486789   +and ( MntFruits ne .)
1486790   +and ( MntGoldProds ne .)
1486791   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1486792   +and ( MntSweetProducts ne .)
1486793   +and ( MntWines ne .)
1486794   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1486795   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1486796   +and ( NumStorePurchases ne .)
1486797   +and ( NumWebPurchases ne .)
1486798   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1486799   +and ( Recency ne .)
1486800   +and ( Teenhome ne .)
1486801   +and ( Year_Birth ne .)
1486802   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1486803   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1486804   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1486805   +end;
MPRINT(EM_DIAGRAM):   end;
1486806   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1486807   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1486808    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1486809    quit;
1486810    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1486811    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1486812    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1486813    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1486814    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1486815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486816    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1486817    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486819    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1486820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486823    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1486824    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1486825    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486826    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1486827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1486828    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1486829    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486831    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1486832    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1486833    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1486834    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1486835    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1486836    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1486836  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1486837    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486838    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1486839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1486840    %macro varDept(fcmpdata=,id=);
1486841    %global nobs&id scoreFlag&id;
1486842    %let scoreFlag&id = 0;
1486843    %if &id=1 or ^&fcmpStart %then %do;
1486844    proc sort data=&fcmpdata out=_temp&id nodupkey;
1486845    by NAME;
1486846    where id=&id and LHS in( %let j=1;
1486847    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1486848    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1486849    "&var" %let j = %eval(&j+1);
1486850    %end;
1486851    );
1486852    run;
1486853    %let dsid = %sysfunc(open(_temp&id));
1486854    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486855    %let dsid = %sysfunc(close(&dsid));
1486856    %if &&nobs&id %then %do;
1486857    %let scoreFlag&id = 1;
1486858    %let fcmpStart = 1;
1486859    %end;
1486860    %else %let fcmpStart = 0;
1486861    %end;
1486862    %else %do;
1486863    proc sort data=&fcmpdata out=_tempid;
1486864    where id=&id;
1486865    by LHS;
1486866    run;
1486867    %let dsid = %sysfunc(open(_tempid));
1486868    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486869    %let dsid = %sysfunc(close(&dsid));
1486870    %if ^&&nobs&id %then %do;
1486871    proc datasets lib=work nolist;
1486872    delete _tempid;
1486873    run;
1486874    quit;
1486875    %end;
1486876    %else %do;
1486877    data _tempAll;
1486878    set %let j=%eval(&id-1);
1486879    %do x=1 %to &j;
1486880    %if &&nobs&x %then %do;
1486881    _temp&x %end;
1486882    %end;
1486883    ;
1486884    run;
1486885    proc sql;
1486886    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1486886  ! work._tempid p2 where p.name=p2.lhs;
1486887    quit;
1486888    data _temp&id;
1486889    set _temp&id;
1486890    where LHS ne '' and NAME ne '' and Node ne '';
1486891    run;
1486892    proc datasets lib=work nolist;
1486893    delete _tempAll;
1486894    run;
1486895    %let dsid = %sysfunc(open(_temp&id));
1486896    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486897    %let dsid = %sysfunc(close(&dsid));
1486898    %if ^&&nobs&id %then %do;
1486899    proc datasets lib=work nolist;
1486900    delete _temp&id;
1486901    run;
1486902    quit;
1486903    %end;
1486904    %else %do;
1486905    %let scoreFlag&id = 1;
1486906    data _temp&id;
1486907    set _temp&id;
1486908    where LHS ne NAME and node ne '';
1486909    run;
1486910    %let dsid = %sysfunc(open(_temp&id));
1486911    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1486912    %let dsid = %sysfunc(close(&dsid));
1486913    %if ^&&nobs&id %then %do;
1486914    proc datasets lib=work nolist;
1486915    delete _temp&id;
1486916    run;
1486917    quit;
1486918    %end;
1486919    %else %do;
1486920    proc sort data=_temp&id nodupkey;
1486921    by LHS NAME;
1486922    run;
1486923    %end;
1486924    %end;
1486925    %end;
1486926    %end;
1486927    %mend varDept;
1486928    %macro optCode(outdata=fcmpdata);
1486929    %global fcmpStart;
1486930    %let fcmpStart = 0;
1486931    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1486932    %let NumNodes=9;
1486933    %do k=1 %to &NumNodes;
1486934    %vardept(fcmpdata=&outdata, id=&k);
1486935    %end;
1486936    %mend optCode;
1486937    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 18 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 9 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 17 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1486938    filename _pref
1486938  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1486939    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1486940    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1486941   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1486942   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1486943   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1486944   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1486945   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1486946   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1486947   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1486948   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1486949   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1486950   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1486951   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1486952   +LENGTH _WARN_ $4
1486953   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1486954   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1486955   +
1486956   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1486957   +
1486958   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1486959   +
1486960   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1486961   +
1486962   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1486963   +
1486964   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1486965   +
1486966   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1486967   +
1486968   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1486969   +
1486970   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1486971   +
1486972   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1486973   +
1486974   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1486975   +
1486976   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1486977   +
1486978   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1486979   +
1486980   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1486981   +
1486982   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1486983   +
1486984   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1486985   +
1486986   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1486987   +
1486988   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1486989   +
1486990   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1486991   +
1486992   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1486993   +
1486994   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1486995   +
1486996   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1486997   +
1486998   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1486999   +
1487000   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1487001   +
1487002   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1487003   +
1487004   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1487005   +
1487006   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1487007   +
1487008   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1487009   +
1487010   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1487011   +
1487012   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1487013   +
1487014   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1487015   +
1487016   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1487017   +
1487018   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1487019   +
1487020   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1487021   +
1487022   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1487023   +
1487024   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1487025   +
1487026   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1487027   +
1487028   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1487029   +
1487030   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1487031   +
1487032   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1487033   +
1487034   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1487035   +
1487036   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1487037   +
1487038   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1487039   +
1487040   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1487041   +
1487042   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1487043   +
1487044   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1487045   +
1487046   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1487047   +
1487048   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1487049   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1487050   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1487051   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1487052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487054   +end;
MPRINT(EM_DIAGRAM):   end;
1487055   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487056   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487057   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1487058   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487059   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1487060   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1487061   +   end;
MPRINT(EM_DIAGRAM):   end;
1487062   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1487063   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1487064   +   end;
MPRINT(EM_DIAGRAM):   end;
1487065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487066   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1487067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487069   +   end;
MPRINT(EM_DIAGRAM):   end;
1487070   +end;
MPRINT(EM_DIAGRAM):   end;
1487071   +
1487072   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1487073   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1487074   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1487075   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1487076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487078   +end;
MPRINT(EM_DIAGRAM):   end;
1487079   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487080   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487081   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1487082   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487083   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1487084   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1487085   +   end;
MPRINT(EM_DIAGRAM):   end;
1487086   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1487087   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1487088   +   end;
MPRINT(EM_DIAGRAM):   end;
1487089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487090   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1487091   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487092   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487093   +   end;
MPRINT(EM_DIAGRAM):   end;
1487094   +end;
MPRINT(EM_DIAGRAM):   end;
1487095   +
1487096   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1487097   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1487098   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1487099   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1487100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487102   +end;
MPRINT(EM_DIAGRAM):   end;
1487103   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487104   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487105   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1487106   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487107   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1487108   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1487109   +   end;
MPRINT(EM_DIAGRAM):   end;
1487110   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1487111   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1487112   +   end;
MPRINT(EM_DIAGRAM):   end;
1487113   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487114   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1487115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487117   +   end;
MPRINT(EM_DIAGRAM):   end;
1487118   +end;
MPRINT(EM_DIAGRAM):   end;
1487119   +
1487120   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1487121   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1487122   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1487123   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1487124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487126   +end;
MPRINT(EM_DIAGRAM):   end;
1487127   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487128   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487129   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1487130   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487131   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1487132   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1487133   +   end;
MPRINT(EM_DIAGRAM):   end;
1487134   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1487135   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1487136   +   end;
MPRINT(EM_DIAGRAM):   end;
1487137   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487138   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1487139   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487140   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487141   +   end;
MPRINT(EM_DIAGRAM):   end;
1487142   +end;
MPRINT(EM_DIAGRAM):   end;
1487143   +
1487144   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1487145   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1487146   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1487147   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1487148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487150   +end;
MPRINT(EM_DIAGRAM):   end;
1487151   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487152   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487153   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1487154   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487155   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1487156   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1487157   +   end;
MPRINT(EM_DIAGRAM):   end;
1487158   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1487159   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1487160   +   end;
MPRINT(EM_DIAGRAM):   end;
1487161   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487162   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1487163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487165   +   end;
MPRINT(EM_DIAGRAM):   end;
1487166   +end;
MPRINT(EM_DIAGRAM):   end;
1487167   +
1487168   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1487169   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1487170   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1487171   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1487172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487174   +end;
MPRINT(EM_DIAGRAM):   end;
1487175   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487177   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1487178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487179   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1487180   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1487181   +   end;
MPRINT(EM_DIAGRAM):   end;
1487182   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1487183   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1487184   +   end;
MPRINT(EM_DIAGRAM):   end;
1487185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487186   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1487187   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487188   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487189   +   end;
MPRINT(EM_DIAGRAM):   end;
1487190   +end;
MPRINT(EM_DIAGRAM):   end;
1487191   +
1487192   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1487193   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1487194   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1487195   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1487196   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487198   +end;
MPRINT(EM_DIAGRAM):   end;
1487199   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487200   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1487201   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1487202   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487203   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1487204   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1487205   +   end;
MPRINT(EM_DIAGRAM):   end;
1487206   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1487207   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1487208   +   end;
MPRINT(EM_DIAGRAM):   end;
1487209   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487210   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1487211   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487212   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487213   +   end;
MPRINT(EM_DIAGRAM):   end;
1487214   +end;
MPRINT(EM_DIAGRAM):   end;
1487215   +
1487216   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1487217   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1487218   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1487219   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1487220   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1487221   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1487222   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1487223   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1487224   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1487225   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1487226   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1487227   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1487228   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487229   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487230   +end;
MPRINT(EM_DIAGRAM):   end;
1487231   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487232   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1487233   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1487234   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487235   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1487236   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1487237   +   end;
MPRINT(EM_DIAGRAM):   end;
1487238   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1487239   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1487240   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1487241   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1487242   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1487243   +   end;
MPRINT(EM_DIAGRAM):   end;
1487244   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1487245   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1487246   +   end;
MPRINT(EM_DIAGRAM):   end;
1487247   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1487248   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1487249   +   end;
MPRINT(EM_DIAGRAM):   end;
1487250   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1487251   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1487252   +   end;
MPRINT(EM_DIAGRAM):   end;
1487253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487254   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1487255   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1487256   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1487257   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1487258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487260   +   end;
MPRINT(EM_DIAGRAM):   end;
1487261   +end;
MPRINT(EM_DIAGRAM):   end;
1487262   +
1487263   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1487264   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1487265   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1487266   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1487267   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1487268   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1487269   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1487270   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1487271   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1487272   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1487273   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1487274   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1487275   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1487276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1487277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487278   +end;
MPRINT(EM_DIAGRAM):   end;
1487279   +else do;
MPRINT(EM_DIAGRAM):   else do;
1487280   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1487281   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1487282   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1487283   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1487284   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1487285   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1487286   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1487287   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1487288   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1487289   +         end;
MPRINT(EM_DIAGRAM):   end;
1487290   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1487291   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1487292   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1487293   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1487294   +            end;
MPRINT(EM_DIAGRAM):   end;
1487295   +         end;
MPRINT(EM_DIAGRAM):   end;
1487296   +      end;
MPRINT(EM_DIAGRAM):   end;
1487297   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1487298   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1487299   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1487300   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1487301   +         end;
MPRINT(EM_DIAGRAM):   end;
1487302   +      end;
MPRINT(EM_DIAGRAM):   end;
1487303   +   end;
MPRINT(EM_DIAGRAM):   end;
1487304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1487305   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1487306   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1487307   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1487308   +      end;
MPRINT(EM_DIAGRAM):   end;
1487309   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1487310   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1487311   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1487312   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1487313   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1487314   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1487315   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1487316   +         end;
MPRINT(EM_DIAGRAM):   end;
1487317   +      end;
MPRINT(EM_DIAGRAM):   end;
1487318   +   end;
MPRINT(EM_DIAGRAM):   end;
1487319   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1487320   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1487321   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1487322   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1487323   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1487324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1487325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487326   +   end;
MPRINT(EM_DIAGRAM):   end;
1487327   +end;
MPRINT(EM_DIAGRAM):   end;
1487328   +
1487329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487330   +*** Checking missing input Interval
1487331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1487332   +
1487333   +IF NMISS(
1487334   +   AcceptedCmpTotal ,
1487335   +   Age ,
1487336   +   Frq ,
1487337   +   Income ,
1487338   +   Kidhome ,
1487339   +   Mnt ,
1487340   +   MntFishProducts ,
1487341   +   MntFruits ,
1487342   +   MntGoldProds ,
1487343   +   MntMeatProducts ,
1487344   +   MntSweetProducts ,
1487345   +   MntWines ,
1487346   +   MonthsAsCustomer ,
1487347   +   NumCatalogPurchases ,
1487348   +   NumDealsPurchases ,
1487349   +   NumDistPurchases ,
1487350   +   NumStorePurchases ,
1487351   +   NumWebPurchases ,
1487352   +   NumWebVisitsMonth ,
1487353   +   RFMstat ,
1487354   +   RMntFrq ,
1487355   +   Recency ,
1487356   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1487357   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1487358   +
1487359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1487360   +END;
MPRINT(EM_DIAGRAM):   END;
1487361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487362   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1487363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487364   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1487365   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1487366   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1487367   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1487368   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1487369   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1487370   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1487371   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1487372   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1487373   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1487374   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1487375   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1487376   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1487377   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1487378   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1487379   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1487380   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1487381   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1487382   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1487383   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1487384   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1487385   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1487386   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1487387   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1487388   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1487389   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1487390   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1487391   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1487392   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1487393   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1487394   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1487395   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1487396   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1487397   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1487398   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1487399   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1487400   +END;
MPRINT(EM_DIAGRAM):   END;
1487401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1487402   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1487403   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1487404   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1487405   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1487406   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1487407   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1487408   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1487409   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1487410   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1487411   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1487412   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1487413   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1487414   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1487415   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1487416   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1487417   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1487418   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1487419   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1487420   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1487421   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1487422   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1487423   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1487424   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1487425   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1487426   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1487427   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1487428   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1487429   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1487430   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1487431   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1487432   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1487433   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1487434   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1487435   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1487436   +   ELSE S_NumCatalogPurchases
1487437   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1487438   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1487439   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1487440   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1487441   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1487442   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1487443   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1487444   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1487445   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1487446   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1487447   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1487448   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1487449   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1487450   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1487451   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1487452   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1487453   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1487454   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1487455   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1487456   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1487457   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1487458   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1487459   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1487460   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1487461   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1487462   +END;
MPRINT(EM_DIAGRAM):   END;
1487463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487464   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1487465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487467   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1487468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487470   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1487471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487472   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1487473   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1487474   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1487475   +        S_Income  +    -0.76740176580734 * S_Kidhome
1487476   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1487477   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1487478   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1487479   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1487480   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1487481   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1487482   +          +    -1.00050516074089 * S_NumDealsPurchases
1487483   +          +    -0.89322788176916 * S_NumDistPurchases
1487484   +          +     1.21914397196653 * S_NumStorePurchases
1487485   +          +     1.50867172673665 * S_NumWebPurchases
1487486   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1487487   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1487488   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1487489   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1487490   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1487491   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1487492   +        S_Income  +    -0.76288911429735 * S_Kidhome
1487493   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1487494   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1487495   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1487496   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1487497   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1487498   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1487499   +          +     0.79497206561332 * S_NumDealsPurchases
1487500   +          +    -0.13658888199464 * S_NumDistPurchases
1487501   +          +    -0.86436416316417 * S_NumStorePurchases
1487502   +          +    -0.85206550087617 * S_NumWebPurchases
1487503   +          +     1.72745004688732 * S_NumWebVisitsMonth
1487504   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1487505   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1487506   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1487507   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1487508   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1487509   +        S_Income  +    -0.48841499166688 * S_Kidhome
1487510   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1487511   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1487512   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1487513   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1487514   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1487515   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1487516   +          +    -0.00010125986409 * S_NumDealsPurchases
1487517   +          +    -0.00873530900019 * S_NumDistPurchases
1487518   +          +    -0.13188135131414 * S_NumStorePurchases
1487519   +          +    -0.10710067608125 * S_NumWebPurchases
1487520   +          +     0.99164053465149 * S_NumWebVisitsMonth
1487521   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1487522   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1487523   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1487524   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1487525   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1487526   +        S_Income  +    -0.57026847797175 * S_Kidhome
1487527   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1487528   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1487529   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1487530   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1487531   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1487532   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1487533   +          +     0.83618651452015 * S_NumDealsPurchases
1487534   +          +     0.22469306589917 * S_NumDistPurchases
1487535   +          +    -0.95889459414769 * S_NumStorePurchases
1487536   +          +    -0.95695646799114 * S_NumWebPurchases
1487537   +          +     0.96738689790948 * S_NumWebVisitsMonth
1487538   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1487539   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1487540   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1487541   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1487542   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1487543   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1487544   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1487545   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
1487546   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1487547   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1487548   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1487549   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1487550   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
1487551   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1487552   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1487553   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1487554   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1487555   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
1487556   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1487557   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1487558   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1487559   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1487560   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
1487561   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1487562   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1487563   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1487564   +          +     0.80885454992674 * Marital_StatusDivorced
1487565   +          +     -0.5568630572283 * Marital_StatusMarried
1487566   +          +    -0.03099047176508 * Marital_StatusSingle
1487567   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1487568   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1487569   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1487570   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1487571   +          +     0.13911597069393 * Marital_StatusDivorced
1487572   +          +    -1.50081060732787 * Marital_StatusMarried
1487573   +          +     1.41717012231539 * Marital_StatusSingle
1487574   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1487575   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1487576   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1487577   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1487578   +          +    -0.26412736340464 * Marital_StatusDivorced
1487579   +          +    -0.27049992388629 * Marital_StatusMarried
1487580   +          +     0.67476795725099 * Marital_StatusSingle
1487581   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1487582   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1487583   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1487584   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1487585   +          +      0.8954230457499 * Marital_StatusDivorced
1487586   +          +     0.73706556068242 * Marital_StatusMarried
1487587   +          +    -1.29073720538893 * Marital_StatusSingle
1487588   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1487589   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1487590   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1487591   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1487592   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1487593   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1487594   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1487595   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1487596   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1487597   +END;
MPRINT(EM_DIAGRAM):   END;
1487598   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1487599   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1487600   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1487601   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1487602   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1487603   +END;
MPRINT(EM_DIAGRAM):   END;
1487604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487605   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1487606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487607   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1487608   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1487609   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1487610   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1487611   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1487612   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1487613   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1487614   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1487615   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1487616   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1487617   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1487618   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1487619   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1487620   +END;
MPRINT(EM_DIAGRAM):   END;
1487621   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1487622   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1487623   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1487624   +END;
MPRINT(EM_DIAGRAM):   END;
1487625   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1487626   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1487627   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1487628   +END;
MPRINT(EM_DIAGRAM):   END;
1487629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487630   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1487631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1487632   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1487633   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1487634   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1487635   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1487636   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1487637   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1487638   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1487639   +END;
MPRINT(EM_DIAGRAM):   END;
1487640   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1487641   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1487642   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1487643   +drop
1487644   +H11
1487645   +H12
1487646   +H13
1487647   +H14
1487648   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1487649   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1487650    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1487651    quit;
1487652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1487653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1487654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1487655    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1487656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1487657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1487659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487661    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1487662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1487664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1487666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1487667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487668    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1487669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1487670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1487671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1487675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487676    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1487678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1487678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

1487679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487680    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1487681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487682    filename _pref
1487682  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1487683    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1487684    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1487685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1487686   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1487687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1487688   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1487689   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1487690   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1487691    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1487692    quit;
1487693    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1487694    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1487695    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1487696    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1487697    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1487698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487699    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1487700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487702    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1487703    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487705    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487706    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1487707    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1487708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487709    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1487710    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1487711    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1487712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487714    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487715    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1487716    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487717    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487718    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1487719    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1487719  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1487720    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487721    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1487722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487723    filename _pref
1487723  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1487724    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1487725    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1487726   +
1487727   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1487728   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1487728  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1487729   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1487730   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1487731   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1487732   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1487733   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1487734    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1487735    quit;
1487736    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1487737    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1487738    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1487739    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1487740    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1487741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487742    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1487743    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487745    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1487746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487748    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487749    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1487750    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1487751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487752    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1487753    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487754    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1487755    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487757    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487758    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1487759    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487760    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487761    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1487762    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1487762  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1487763    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487764    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1487765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487766    filename _pref
1487766  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1487767    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1487768    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1487769   +
1487770   +
1487771   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1487772   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1487773   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1487774   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1487775   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1487776   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487777   +
1487778   +
1487779   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1487780   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1487781   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1487782   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1487783   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1487784   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487785   +
1487786   +
1487787   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1487788   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1487789   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1487790   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1487791   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1487792   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487793   +
1487794   +
1487795   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1487796   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1487797   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1487798   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1487799   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1487800   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487801   +
1487802   +
1487803   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1487804   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1487805   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1487806   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1487807   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1487808   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487809   +
1487810   +
1487811   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1487812   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1487813   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1487814   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1487815   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1487816   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487817   +
1487818   +
1487819   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1487820   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1487821   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1487822   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1487823   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1487824   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487825   +
1487826   +
1487827   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1487828   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1487829   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1487830   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1487831   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1487832   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1487833   +if
1487834   +_FILTERNORM1 not in ( '.')
1487835   + and
1487836   +_FILTERNORM2 not in ( '.')
1487837   + and
1487838   +_FILTERNORM3 not in ( '.')
1487839   + and
1487840   +_FILTERNORM4 not in ( '.')
1487841   + and
1487842   +_FILTERNORM5 not in ( '.')
1487843   + and
1487844   +_FILTERNORM6 not in ( '.')
1487845   + and
1487846   +_FILTERNORM7 not in ( ' ')
1487847   + and
1487848   +_FILTERNORM8 not in ( ' ')
1487849   +and
1487850   +( Dt_Customer ne .)
1487851   +and ( Income ne . and (Income<=107000))
1487852   +and ( Kidhome ne .)
1487853   +and ( MntFishProducts ne .)
1487854   +and ( MntFruits ne .)
1487855   +and ( MntGoldProds ne .)
1487856   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1487857   +and ( MntSweetProducts ne .)
1487858   +and ( MntWines ne .)
1487859   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1487860   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1487861   +and ( NumStorePurchases ne .)
1487862   +and ( NumWebPurchases ne .)
1487863   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1487864   +and ( Recency ne .)
1487865   +and ( Teenhome ne .)
1487866   +and ( Year_Birth ne .)
1487867   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1487868   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1487869   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1487870   +end;
MPRINT(EM_DIAGRAM):   end;
1487871   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1487872   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1487873    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1487874    quit;
1487875    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1487876    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1487877    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1487878    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1487879    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1487880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487881    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1487882    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487883    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487884    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1487885    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487887    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487888    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1487889    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1487890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487891    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1487892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1487893    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1487894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487895    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1487896    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1487897    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1487898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1487899    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487900    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1487901    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1487901  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1487902    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487903    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1487904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1487905    %macro varDept(fcmpdata=,id=);
1487906    %global nobs&id scoreFlag&id;
1487907    %let scoreFlag&id = 0;
1487908    %if &id=1 or ^&fcmpStart %then %do;
1487909    proc sort data=&fcmpdata out=_temp&id nodupkey;
1487910    by NAME;
1487911    where id=&id and LHS in( %let j=1;
1487912    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1487913    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1487914    "&var" %let j = %eval(&j+1);
1487915    %end;
1487916    );
1487917    run;
1487918    %let dsid = %sysfunc(open(_temp&id));
1487919    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1487920    %let dsid = %sysfunc(close(&dsid));
1487921    %if &&nobs&id %then %do;
1487922    %let scoreFlag&id = 1;
1487923    %let fcmpStart = 1;
1487924    %end;
1487925    %else %let fcmpStart = 0;
1487926    %end;
1487927    %else %do;
1487928    proc sort data=&fcmpdata out=_tempid;
1487929    where id=&id;
1487930    by LHS;
1487931    run;
1487932    %let dsid = %sysfunc(open(_tempid));
1487933    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1487934    %let dsid = %sysfunc(close(&dsid));
1487935    %if ^&&nobs&id %then %do;
1487936    proc datasets lib=work nolist;
1487937    delete _tempid;
1487938    run;
1487939    quit;
1487940    %end;
1487941    %else %do;
1487942    data _tempAll;
1487943    set %let j=%eval(&id-1);
1487944    %do x=1 %to &j;
1487945    %if &&nobs&x %then %do;
1487946    _temp&x %end;
1487947    %end;
1487948    ;
1487949    run;
1487950    proc sql;
1487951    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1487951  ! work._tempid p2 where p.name=p2.lhs;
1487952    quit;
1487953    data _temp&id;
1487954    set _temp&id;
1487955    where LHS ne '' and NAME ne '' and Node ne '';
1487956    run;
1487957    proc datasets lib=work nolist;
1487958    delete _tempAll;
1487959    run;
1487960    %let dsid = %sysfunc(open(_temp&id));
1487961    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1487962    %let dsid = %sysfunc(close(&dsid));
1487963    %if ^&&nobs&id %then %do;
1487964    proc datasets lib=work nolist;
1487965    delete _temp&id;
1487966    run;
1487967    quit;
1487968    %end;
1487969    %else %do;
1487970    %let scoreFlag&id = 1;
1487971    data _temp&id;
1487972    set _temp&id;
1487973    where LHS ne NAME and node ne '';
1487974    run;
1487975    %let dsid = %sysfunc(open(_temp&id));
1487976    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1487977    %let dsid = %sysfunc(close(&dsid));
1487978    %if ^&&nobs&id %then %do;
1487979    proc datasets lib=work nolist;
1487980    delete _temp&id;
1487981    run;
1487982    quit;
1487983    %end;
1487984    %else %do;
1487985    proc sort data=_temp&id nodupkey;
1487986    by LHS NAME;
1487987    run;
1487988    %end;
1487989    %end;
1487990    %end;
1487991    %end;
1487992    %mend varDept;
1487993    %macro optCode(outdata=fcmpdata);
1487994    %global fcmpStart;
1487995    %let fcmpStart = 0;
1487996    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1487997    %let NumNodes=9;
1487998    %do k=1 %to &NumNodes;
1487999    %vardept(fcmpdata=&outdata, id=&k);
1488000    %end;
1488001    %mend optCode;
1488002    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1488003    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1488004    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1488005    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1488006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488007    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1488008    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1488009    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1488010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488011    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1488012    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1488012  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1488013    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1488014    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1488015    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1488016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488017    filename _pref
1488017  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas";
1488018    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1488019    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural\EMPUBLISHSCORE.sas.
1488020   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1488021   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1488022   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1488023   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1488024   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1488025   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1488026   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1488027   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1488028   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1488029   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1488030   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1488031   +LENGTH _WARN_ $4
1488032   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1488033   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1488034   +
1488035   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1488036   +
1488037   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1488038   +
1488039   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1488040   +
1488041   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1488042   +
1488043   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1488044   +
1488045   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1488046   +
1488047   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1488048   +
1488049   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1488050   +
1488051   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1488052   +
1488053   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1488054   +
1488055   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1488056   +
1488057   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1488058   +
1488059   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1488060   +
1488061   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1488062   +
1488063   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1488064   +
1488065   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1488066   +
1488067   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1488068   +
1488069   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1488070   +
1488071   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1488072   +
1488073   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1488074   +
1488075   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1488076   +
1488077   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1488078   +
1488079   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1488080   +
1488081   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1488082   +
1488083   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1488084   +
1488085   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1488086   +
1488087   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1488088   +
1488089   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1488090   +
1488091   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1488092   +
1488093   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1488094   +
1488095   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1488096   +
1488097   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1488098   +
1488099   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1488100   +
1488101   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1488102   +
1488103   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1488104   +
1488105   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1488106   +
1488107   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1488108   +
1488109   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1488110   +
1488111   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1488112   +
1488113   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1488114   +
1488115   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1488116   +
1488117   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1488118   +
1488119   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1488120   +
1488121   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1488122   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1488123   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1488124   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1488125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488127   +end;
MPRINT(EM_DIAGRAM):   end;
1488128   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488129   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488130   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1488131   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488132   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1488133   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1488134   +   end;
MPRINT(EM_DIAGRAM):   end;
1488135   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1488136   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1488137   +   end;
MPRINT(EM_DIAGRAM):   end;
1488138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488139   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1488140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488142   +   end;
MPRINT(EM_DIAGRAM):   end;
1488143   +end;
MPRINT(EM_DIAGRAM):   end;
1488144   +
1488145   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1488146   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1488147   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1488148   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1488149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488151   +end;
MPRINT(EM_DIAGRAM):   end;
1488152   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488153   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488154   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1488155   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488156   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1488157   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1488158   +   end;
MPRINT(EM_DIAGRAM):   end;
1488159   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1488160   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1488161   +   end;
MPRINT(EM_DIAGRAM):   end;
1488162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488163   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1488164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488166   +   end;
MPRINT(EM_DIAGRAM):   end;
1488167   +end;
MPRINT(EM_DIAGRAM):   end;
1488168   +
1488169   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1488170   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1488171   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1488172   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1488173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488175   +end;
MPRINT(EM_DIAGRAM):   end;
1488176   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488177   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488178   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1488179   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488180   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1488181   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1488182   +   end;
MPRINT(EM_DIAGRAM):   end;
1488183   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1488184   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1488185   +   end;
MPRINT(EM_DIAGRAM):   end;
1488186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488187   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1488188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488190   +   end;
MPRINT(EM_DIAGRAM):   end;
1488191   +end;
MPRINT(EM_DIAGRAM):   end;
1488192   +
1488193   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1488194   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1488195   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1488196   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1488197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488199   +end;
MPRINT(EM_DIAGRAM):   end;
1488200   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488202   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1488203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488204   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1488205   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1488206   +   end;
MPRINT(EM_DIAGRAM):   end;
1488207   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1488208   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1488209   +   end;
MPRINT(EM_DIAGRAM):   end;
1488210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488211   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1488212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488214   +   end;
MPRINT(EM_DIAGRAM):   end;
1488215   +end;
MPRINT(EM_DIAGRAM):   end;
1488216   +
1488217   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1488218   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1488219   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1488220   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1488221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488223   +end;
MPRINT(EM_DIAGRAM):   end;
1488224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488226   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1488227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488228   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1488229   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1488230   +   end;
MPRINT(EM_DIAGRAM):   end;
1488231   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1488232   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1488233   +   end;
MPRINT(EM_DIAGRAM):   end;
1488234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488235   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1488236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488238   +   end;
MPRINT(EM_DIAGRAM):   end;
1488239   +end;
MPRINT(EM_DIAGRAM):   end;
1488240   +
1488241   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1488242   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1488243   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1488244   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1488245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488247   +end;
MPRINT(EM_DIAGRAM):   end;
1488248   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488249   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488250   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1488251   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488252   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1488253   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1488254   +   end;
MPRINT(EM_DIAGRAM):   end;
1488255   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1488256   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1488257   +   end;
MPRINT(EM_DIAGRAM):   end;
1488258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488259   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1488260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488262   +   end;
MPRINT(EM_DIAGRAM):   end;
1488263   +end;
MPRINT(EM_DIAGRAM):   end;
1488264   +
1488265   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1488266   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1488267   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1488268   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1488269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488271   +end;
MPRINT(EM_DIAGRAM):   end;
1488272   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488273   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1488274   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1488275   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488276   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1488277   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1488278   +   end;
MPRINT(EM_DIAGRAM):   end;
1488279   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1488280   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1488281   +   end;
MPRINT(EM_DIAGRAM):   end;
1488282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488283   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1488284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488286   +   end;
MPRINT(EM_DIAGRAM):   end;
1488287   +end;
MPRINT(EM_DIAGRAM):   end;
1488288   +
1488289   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1488290   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1488291   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1488292   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1488293   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1488294   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1488295   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1488296   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1488297   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1488298   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1488299   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1488300   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1488301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488303   +end;
MPRINT(EM_DIAGRAM):   end;
1488304   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488305   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1488306   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1488307   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488308   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1488309   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1488310   +   end;
MPRINT(EM_DIAGRAM):   end;
1488311   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1488312   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1488313   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1488314   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1488315   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1488316   +   end;
MPRINT(EM_DIAGRAM):   end;
1488317   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1488318   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1488319   +   end;
MPRINT(EM_DIAGRAM):   end;
1488320   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1488321   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1488322   +   end;
MPRINT(EM_DIAGRAM):   end;
1488323   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1488324   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1488325   +   end;
MPRINT(EM_DIAGRAM):   end;
1488326   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488327   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1488328   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1488329   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1488330   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1488331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488333   +   end;
MPRINT(EM_DIAGRAM):   end;
1488334   +end;
MPRINT(EM_DIAGRAM):   end;
1488335   +
1488336   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1488337   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1488338   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1488339   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1488340   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1488341   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1488342   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1488343   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1488344   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1488345   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1488346   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1488347   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1488348   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1488349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1488350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488351   +end;
MPRINT(EM_DIAGRAM):   end;
1488352   +else do;
MPRINT(EM_DIAGRAM):   else do;
1488353   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1488354   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1488355   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1488356   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1488357   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1488358   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1488359   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1488360   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1488361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1488362   +         end;
MPRINT(EM_DIAGRAM):   end;
1488363   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1488364   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1488365   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1488366   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1488367   +            end;
MPRINT(EM_DIAGRAM):   end;
1488368   +         end;
MPRINT(EM_DIAGRAM):   end;
1488369   +      end;
MPRINT(EM_DIAGRAM):   end;
1488370   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1488371   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1488372   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1488373   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1488374   +         end;
MPRINT(EM_DIAGRAM):   end;
1488375   +      end;
MPRINT(EM_DIAGRAM):   end;
1488376   +   end;
MPRINT(EM_DIAGRAM):   end;
1488377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1488378   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1488379   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1488380   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1488381   +      end;
MPRINT(EM_DIAGRAM):   end;
1488382   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1488383   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1488384   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1488385   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1488386   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1488387   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1488388   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1488389   +         end;
MPRINT(EM_DIAGRAM):   end;
1488390   +      end;
MPRINT(EM_DIAGRAM):   end;
1488391   +   end;
MPRINT(EM_DIAGRAM):   end;
1488392   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1488393   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1488394   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1488395   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1488396   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1488397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1488398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488399   +   end;
MPRINT(EM_DIAGRAM):   end;
1488400   +end;
MPRINT(EM_DIAGRAM):   end;
1488401   +
1488402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488403   +*** Checking missing input Interval
1488404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1488405   +
1488406   +IF NMISS(
1488407   +   AcceptedCmpTotal ,
1488408   +   Age ,
1488409   +   Frq ,
1488410   +   Income ,
1488411   +   Kidhome ,
1488412   +   Mnt ,
1488413   +   MntFishProducts ,
1488414   +   MntFruits ,
1488415   +   MntGoldProds ,
1488416   +   MntMeatProducts ,
1488417   +   MntSweetProducts ,
1488418   +   MntWines ,
1488419   +   MonthsAsCustomer ,
1488420   +   NumCatalogPurchases ,
1488421   +   NumDealsPurchases ,
1488422   +   NumDistPurchases ,
1488423   +   NumStorePurchases ,
1488424   +   NumWebPurchases ,
1488425   +   NumWebVisitsMonth ,
1488426   +   RFMstat ,
1488427   +   RMntFrq ,
1488428   +   Recency ,
1488429   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1488430   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1488431   +
1488432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1488433   +END;
MPRINT(EM_DIAGRAM):   END;
1488434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488435   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1488436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488437   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1488438   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1488439   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1488440   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1488441   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1488442   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1488443   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1488444   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1488445   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1488446   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1488447   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1488448   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1488449   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1488450   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1488451   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1488452   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1488453   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1488454   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1488455   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1488456   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1488457   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1488458   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1488459   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1488460   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1488461   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1488462   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1488463   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1488464   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1488465   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1488466   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1488467   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1488468   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1488469   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1488470   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1488471   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1488472   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1488473   +END;
MPRINT(EM_DIAGRAM):   END;
1488474   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1488475   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1488476   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1488477   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1488478   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1488479   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1488480   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1488481   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1488482   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1488483   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1488484   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1488485   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1488486   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1488487   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1488488   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1488489   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1488490   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1488491   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1488492   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1488493   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1488494   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1488495   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1488496   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1488497   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1488498   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1488499   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1488500   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1488501   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1488502   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1488503   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1488504   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1488505   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1488506   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1488507   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1488508   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1488509   +   ELSE S_NumCatalogPurchases
1488510   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1488511   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1488512   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1488513   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1488514   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1488515   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1488516   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1488517   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1488518   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1488519   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1488520   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1488521   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1488522   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1488523   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1488524   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1488525   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1488526   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1488527   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1488528   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1488529   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1488530   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1488531   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1488532   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1488533   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1488534   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1488535   +END;
MPRINT(EM_DIAGRAM):   END;
1488536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488537   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1488538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488540   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1488541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488543   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1488544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1488546   +   H11  =     0.21199836063704 * S_AcceptedCmpTotal  +    -0.02945581506424 *
1488547   +        S_Age  +    -0.16919262213625 * S_Frq  +     0.14512005996462 *
1488548   +        S_Income  +    -0.02666790507068 * S_Kidhome
1488549   +          +     0.00783799563972 * S_Mnt  +    -0.04773263250677 *
1488550   +        S_MntFishProducts  +     -0.0422809135011 * S_MntFruits
1488551   +          +      0.0079708708989 * S_MntGoldProds  +      0.2106873504387 *
1488552   +        S_MntMeatProducts  +    -0.02356644979368 * S_MntSweetProducts
1488553   +          +    -0.19316118342366 * S_MntWines  +    -0.01997288256292 *
1488554   +        S_MonthsAsCustomer  +     0.28114494721724 * S_NumCatalogPurchases
1488555   +          +     0.15201388307546 * S_NumDealsPurchases
1488556   +          +      0.0691064780948 * S_NumDistPurchases
1488557   +          +    -0.06316014736289 * S_NumStorePurchases
1488558   +          +    -0.10762176869863 * S_NumWebPurchases
1488559   +          +     0.30130792444288 * S_NumWebVisitsMonth
1488560   +          +      0.0486829682523 * S_RFMstat  +     0.05664601410311 *
1488561   +        S_RMntFrq  +    -0.33967860548156 * S_Recency
1488562   +          +    -0.07910434348734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.21199836063704 * S_AcceptedCmpTotal + -0.02945581506424 * S_Age 
+ -0.16919262213625 * S_Frq + 0.14512005996462 * S_Income + -0.02666790507068 * S_Kidhome + 
0.00783799563972 * S_Mnt + -0.04773263250677 * S_MntFishProducts + -0.0422809135011 * 
S_MntFruits + 0.0079708708989 * S_MntGoldProds + 0.2106873504387 * S_MntMeatProducts + 
-0.02356644979368 * S_MntSweetProducts + -0.19316118342366 * S_MntWines + -0.01997288256292 * 
S_MonthsAsCustomer + 0.28114494721724 * S_NumCatalogPurchases + 0.15201388307546 * 
S_NumDealsPurchases + 0.0691064780948 * S_NumDistPurchases + -0.06316014736289 * 
S_NumStorePurchases + -0.10762176869863 * S_NumWebPurchases + 0.30130792444288 * 
S_NumWebVisitsMonth + 0.0486829682523 * S_RFMstat + 0.05664601410311 * S_RMntFrq + 
-0.33967860548156 * S_Recency + -0.07910434348734 * S_Teenhome ;
1488563   +   H11  = H11  +    -0.00073768107162 * AcceptedCmp10
1488564   +          +     0.00345057378593 * AcceptedCmp20  +    -0.01951840681321 *
1488565   +        AcceptedCmp30  +     0.01519043635856 * AcceptedCmp40
1488566   +          +    -0.06774838806782 * AcceptedCmp50  +      0.0455181994272 *
1488567   +        Complain0  +    -0.02208676447134 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00073768107162 * AcceptedCmp10 + 0.00345057378593 * 
AcceptedCmp20 + -0.01951840681321 * AcceptedCmp30 + 0.01519043635856 * AcceptedCmp40 + 
-0.06774838806782 * AcceptedCmp50 + 0.0455181994272 * Complain0 + -0.02208676447134 * 
HigherEducationBinary0 ;
1488568   +   H11  = H11  +     0.02211753777429 * Education2n_Cycle
1488569   +          +     -0.0415173136677 * EducationBasic  +     0.02078484520297 *
1488570   +        EducationGraduation  +    -0.00122029917596 * EducationMaster
1488571   +          +     0.03231417790779 * Marital_StatusDivorced
1488572   +          +    -0.11917982892952 * Marital_StatusMarried
1488573   +          +     0.09076044687834 * Marital_StatusSingle
1488574   +          +     -0.1248189936875 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02211753777429 * Education2n_Cycle + -0.0415173136677 * 
EducationBasic + 0.02078484520297 * EducationGraduation + -0.00122029917596 * EducationMaster 
+ 0.03231417790779 * Marital_StatusDivorced + -0.11917982892952 * Marital_StatusMarried + 
0.09076044687834 * Marital_StatusSingle + -0.1248189936875 * Marital_StatusTogether ;
1488575   +   H11  =     -0.5152185206902 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.5152185206902 + H11 ;
1488576   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1488577   +END;
MPRINT(EM_DIAGRAM):   END;
1488578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1488579   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1488580   +END;
MPRINT(EM_DIAGRAM):   END;
1488581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488582   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1488583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488584   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1488585   +   P_DepVar1  =     8.82361756901136 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.82361756901136 * H11 ;
1488586   +   P_DepVar1  =      -0.589740369134 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.589740369134 + P_DepVar1 ;
1488587   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1488588   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1488589   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1488590   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1488591   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1488592   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1488593   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1488594   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1488595   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1488596   +END;
MPRINT(EM_DIAGRAM):   END;
1488597   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1488598   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1488599   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1488600   +END;
MPRINT(EM_DIAGRAM):   END;
1488601   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1488602   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1488603   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1488604   +END;
MPRINT(EM_DIAGRAM):   END;
1488605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488606   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1488607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1488608   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1488609   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1488610   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1488611   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1488612   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1488613   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1488614   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1488615   +END;
MPRINT(EM_DIAGRAM):   END;
1488616   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1488617   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1488618   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1488619   +drop
1488620   +H11
1488621   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1488622   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1488623    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1488624    quit;
1488625    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1488626    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1488627    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1488628    retain ID 2 Node "Neural";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural";
1488629    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1488630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2006 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2006 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488631    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1488632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2006 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2006 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488634    proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural_variableset out=_temp2(keep=NAME CREATOR);
1488635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488637    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488638    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1488639    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1488640    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488641    proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural_train out=_meta(keep=NAME) noprint;
1488642    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1488643    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1488644    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488646    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488647    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1488648    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488649    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488650    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1488651    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1488651  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1271 rows and 5 columns.

1488652    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488653    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1488654    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1271 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1271 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488655    filename _pref
1488655  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1488656    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1488657    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1488658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1488659   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1488660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1488661   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1488662   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1488663   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1488664    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1488665    quit;
1488666    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1488667    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1488668    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1488669    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1488670    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1488671    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488672    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1488673    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488675    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1488676    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488678    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488679    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1488680    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1488681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488682    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1488683    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1488684    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1488685    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488686    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488687    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488688    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1488689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488690    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488691    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1488692    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1488692  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1488693    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488694    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1488695    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1275 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488696    filename _pref
1488696  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1488697    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1488698    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1488699   +
1488700   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1488701   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1488701  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1488702   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1488703   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1488704   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1488705   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1488706   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1488707    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1488708    quit;
1488709    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1488710    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1488711    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1488712    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1488713    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1488714    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488715    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1488716    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488717    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488718    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1488719    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488720    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488721    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488722    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1488723    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1488724    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488725    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1488726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488727    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1488728    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488730    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488731    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1488732    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488733    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488734    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1488735    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1488735  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1488736    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488737    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1488738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1314 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488739    filename _pref
1488739  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1488740    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1488741    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1488742   +
1488743   +
1488744   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1488745   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1488746   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1488747   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1488748   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1488749   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488750   +
1488751   +
1488752   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1488753   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1488754   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1488755   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1488756   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1488757   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488758   +
1488759   +
1488760   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1488761   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1488762   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1488763   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1488764   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1488765   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488766   +
1488767   +
1488768   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1488769   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1488770   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1488771   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1488772   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1488773   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488774   +
1488775   +
1488776   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1488777   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1488778   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1488779   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1488780   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1488781   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488782   +
1488783   +
1488784   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1488785   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1488786   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1488787   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1488788   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1488789   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488790   +
1488791   +
1488792   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1488793   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1488794   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1488795   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1488796   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1488797   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488798   +
1488799   +
1488800   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1488801   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1488802   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1488803   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1488804   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1488805   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1488806   +if
1488807   +_FILTERNORM1 not in ( '.')
1488808   + and
1488809   +_FILTERNORM2 not in ( '.')
1488810   + and
1488811   +_FILTERNORM3 not in ( '.')
1488812   + and
1488813   +_FILTERNORM4 not in ( '.')
1488814   + and
1488815   +_FILTERNORM5 not in ( '.')
1488816   + and
1488817   +_FILTERNORM6 not in ( '.')
1488818   + and
1488819   +_FILTERNORM7 not in ( ' ')
1488820   + and
1488821   +_FILTERNORM8 not in ( ' ')
1488822   +and
1488823   +( Dt_Customer ne .)
1488824   +and ( Income ne . and (Income<=107000))
1488825   +and ( Kidhome ne .)
1488826   +and ( MntFishProducts ne .)
1488827   +and ( MntFruits ne .)
1488828   +and ( MntGoldProds ne .)
1488829   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1488830   +and ( MntSweetProducts ne .)
1488831   +and ( MntWines ne .)
1488832   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1488833   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1488834   +and ( NumStorePurchases ne .)
1488835   +and ( NumWebPurchases ne .)
1488836   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1488837   +and ( Recency ne .)
1488838   +and ( Teenhome ne .)
1488839   +and ( Year_Birth ne .)
1488840   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1488841   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1488842   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1488843   +end;
MPRINT(EM_DIAGRAM):   end;
1488844   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1488845   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1488846    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1488847    quit;
1488848    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1488849    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1488850    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1488851    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1488852    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1488853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488854    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1488855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488856    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488857    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1488858    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488860    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488861    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1488862    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1488863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488864    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1488865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1488866    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1488867    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488868    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488869    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1488870    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1488871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1488872    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488873    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1488874    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1488874  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1488875    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488876    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1488877    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1380 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488878    %macro varDept(fcmpdata=,id=);
1488879    %global nobs&id scoreFlag&id;
1488880    %let scoreFlag&id = 0;
1488881    %if &id=1 or ^&fcmpStart %then %do;
1488882    proc sort data=&fcmpdata out=_temp&id nodupkey;
1488883    by NAME;
1488884    where id=&id and LHS in( %let j=1;
1488885    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1488886    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1488887    "&var" %let j = %eval(&j+1);
1488888    %end;
1488889    );
1488890    run;
1488891    %let dsid = %sysfunc(open(_temp&id));
1488892    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1488893    %let dsid = %sysfunc(close(&dsid));
1488894    %if &&nobs&id %then %do;
1488895    %let scoreFlag&id = 1;
1488896    %let fcmpStart = 1;
1488897    %end;
1488898    %else %let fcmpStart = 0;
1488899    %end;
1488900    %else %do;
1488901    proc sort data=&fcmpdata out=_tempid;
1488902    where id=&id;
1488903    by LHS;
1488904    run;
1488905    %let dsid = %sysfunc(open(_tempid));
1488906    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1488907    %let dsid = %sysfunc(close(&dsid));
1488908    %if ^&&nobs&id %then %do;
1488909    proc datasets lib=work nolist;
1488910    delete _tempid;
1488911    run;
1488912    quit;
1488913    %end;
1488914    %else %do;
1488915    data _tempAll;
1488916    set %let j=%eval(&id-1);
1488917    %do x=1 %to &j;
1488918    %if &&nobs&x %then %do;
1488919    _temp&x %end;
1488920    %end;
1488921    ;
1488922    run;
1488923    proc sql;
1488924    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1488924  ! work._tempid p2 where p.name=p2.lhs;
1488925    quit;
1488926    data _temp&id;
1488927    set _temp&id;
1488928    where LHS ne '' and NAME ne '' and Node ne '';
1488929    run;
1488930    proc datasets lib=work nolist;
1488931    delete _tempAll;
1488932    run;
1488933    %let dsid = %sysfunc(open(_temp&id));
1488934    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1488935    %let dsid = %sysfunc(close(&dsid));
1488936    %if ^&&nobs&id %then %do;
1488937    proc datasets lib=work nolist;
1488938    delete _temp&id;
1488939    run;
1488940    quit;
1488941    %end;
1488942    %else %do;
1488943    %let scoreFlag&id = 1;
1488944    data _temp&id;
1488945    set _temp&id;
1488946    where LHS ne NAME and node ne '';
1488947    run;
1488948    %let dsid = %sysfunc(open(_temp&id));
1488949    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1488950    %let dsid = %sysfunc(close(&dsid));
1488951    %if ^&&nobs&id %then %do;
1488952    proc datasets lib=work nolist;
1488953    delete _temp&id;
1488954    run;
1488955    quit;
1488956    %end;
1488957    %else %do;
1488958    proc sort data=_temp&id nodupkey;
1488959    by LHS NAME;
1488960    run;
1488961    %end;
1488962    %end;
1488963    %end;
1488964    %end;
1488965    %mend varDept;
1488966    %macro optCode(outdata=fcmpdata);
1488967    %global fcmpStart;
1488968    %let fcmpStart = 0;
1488969    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1488970    %let NumNodes=9;
1488971    %do k=1 %to &NumNodes;
1488972    %vardept(fcmpdata=&outdata, id=&k);
1488973    %end;
1488974    %mend optCode;
1488975    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1488976    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1488977    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1488978    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1488979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488980    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1488981    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1488982    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1488983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488984    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1488985    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1488985  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1488986    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1488987    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1488988    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1488989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1488990    filename _pref
1488990  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1488991    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1488992    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1488993   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1488994   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1488995   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1488996   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1488997   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1488998   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1488999   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1489000   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1489001   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1489002   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1489003   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1489004   +LENGTH _WARN_ $4
1489005   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1489006   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1489007   +
1489008   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1489009   +
1489010   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1489011   +
1489012   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1489013   +
1489014   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1489015   +
1489016   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1489017   +
1489018   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1489019   +
1489020   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1489021   +
1489022   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1489023   +
1489024   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1489025   +
1489026   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1489027   +
1489028   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1489029   +
1489030   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1489031   +
1489032   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1489033   +
1489034   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1489035   +
1489036   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1489037   +
1489038   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1489039   +
1489040   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1489041   +
1489042   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1489043   +
1489044   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1489045   +
1489046   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1489047   +
1489048   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1489049   +
1489050   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1489051   +
1489052   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1489053   +
1489054   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1489055   +
1489056   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1489057   +
1489058   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1489059   +
1489060   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1489061   +
1489062   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1489063   +
1489064   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1489065   +
1489066   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1489067   +
1489068   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1489069   +
1489070   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1489071   +
1489072   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1489073   +
1489074   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1489075   +
1489076   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1489077   +
1489078   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1489079   +
1489080   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1489081   +
1489082   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1489083   +
1489084   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1489085   +
1489086   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1489087   +
1489088   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1489089   +
1489090   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1489091   +
1489092   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1489093   +
1489094   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1489095   +
1489096   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1489097   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1489098   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1489099   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1489100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489102   +end;
MPRINT(EM_DIAGRAM):   end;
1489103   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489104   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489105   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1489106   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489107   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1489108   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1489109   +   end;
MPRINT(EM_DIAGRAM):   end;
1489110   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1489111   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1489112   +   end;
MPRINT(EM_DIAGRAM):   end;
1489113   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489114   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1489115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489117   +   end;
MPRINT(EM_DIAGRAM):   end;
1489118   +end;
MPRINT(EM_DIAGRAM):   end;
1489119   +
1489120   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1489121   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1489122   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1489123   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1489124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489126   +end;
MPRINT(EM_DIAGRAM):   end;
1489127   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489128   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489129   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1489130   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489131   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1489132   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1489133   +   end;
MPRINT(EM_DIAGRAM):   end;
1489134   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1489135   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1489136   +   end;
MPRINT(EM_DIAGRAM):   end;
1489137   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489138   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1489139   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489140   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489141   +   end;
MPRINT(EM_DIAGRAM):   end;
1489142   +end;
MPRINT(EM_DIAGRAM):   end;
1489143   +
1489144   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1489145   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1489146   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1489147   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1489148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489150   +end;
MPRINT(EM_DIAGRAM):   end;
1489151   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489152   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489153   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1489154   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489155   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1489156   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1489157   +   end;
MPRINT(EM_DIAGRAM):   end;
1489158   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1489159   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1489160   +   end;
MPRINT(EM_DIAGRAM):   end;
1489161   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489162   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1489163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489165   +   end;
MPRINT(EM_DIAGRAM):   end;
1489166   +end;
MPRINT(EM_DIAGRAM):   end;
1489167   +
1489168   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1489169   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1489170   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1489171   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1489172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489174   +end;
MPRINT(EM_DIAGRAM):   end;
1489175   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489177   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1489178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489179   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1489180   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1489181   +   end;
MPRINT(EM_DIAGRAM):   end;
1489182   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1489183   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1489184   +   end;
MPRINT(EM_DIAGRAM):   end;
1489185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489186   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1489187   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489188   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489189   +   end;
MPRINT(EM_DIAGRAM):   end;
1489190   +end;
MPRINT(EM_DIAGRAM):   end;
1489191   +
1489192   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1489193   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1489194   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1489195   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1489196   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489198   +end;
MPRINT(EM_DIAGRAM):   end;
1489199   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489200   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489201   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1489202   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489203   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1489204   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1489205   +   end;
MPRINT(EM_DIAGRAM):   end;
1489206   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1489207   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1489208   +   end;
MPRINT(EM_DIAGRAM):   end;
1489209   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489210   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1489211   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489212   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489213   +   end;
MPRINT(EM_DIAGRAM):   end;
1489214   +end;
MPRINT(EM_DIAGRAM):   end;
1489215   +
1489216   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1489217   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1489218   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1489219   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1489220   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489221   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489222   +end;
MPRINT(EM_DIAGRAM):   end;
1489223   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489224   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489225   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1489226   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489227   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1489228   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1489229   +   end;
MPRINT(EM_DIAGRAM):   end;
1489230   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1489231   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1489232   +   end;
MPRINT(EM_DIAGRAM):   end;
1489233   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489234   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1489235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489237   +   end;
MPRINT(EM_DIAGRAM):   end;
1489238   +end;
MPRINT(EM_DIAGRAM):   end;
1489239   +
1489240   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1489241   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1489242   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1489243   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1489244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489246   +end;
MPRINT(EM_DIAGRAM):   end;
1489247   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489248   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1489249   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1489250   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489251   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1489252   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1489253   +   end;
MPRINT(EM_DIAGRAM):   end;
1489254   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1489255   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1489256   +   end;
MPRINT(EM_DIAGRAM):   end;
1489257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489258   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1489259   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489260   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489261   +   end;
MPRINT(EM_DIAGRAM):   end;
1489262   +end;
MPRINT(EM_DIAGRAM):   end;
1489263   +
1489264   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1489265   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1489266   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1489267   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1489268   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1489269   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1489270   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1489271   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1489272   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1489273   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1489274   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1489275   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1489276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489278   +end;
MPRINT(EM_DIAGRAM):   end;
1489279   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489280   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1489281   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1489282   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489283   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1489284   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1489285   +   end;
MPRINT(EM_DIAGRAM):   end;
1489286   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1489287   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1489288   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1489289   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1489290   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1489291   +   end;
MPRINT(EM_DIAGRAM):   end;
1489292   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1489293   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1489294   +   end;
MPRINT(EM_DIAGRAM):   end;
1489295   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1489296   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1489297   +   end;
MPRINT(EM_DIAGRAM):   end;
1489298   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1489299   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1489300   +   end;
MPRINT(EM_DIAGRAM):   end;
1489301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489302   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1489303   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1489304   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1489305   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1489306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489308   +   end;
MPRINT(EM_DIAGRAM):   end;
1489309   +end;
MPRINT(EM_DIAGRAM):   end;
1489310   +
1489311   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1489312   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1489313   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1489314   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1489315   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1489316   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1489317   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1489318   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1489319   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1489320   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1489321   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1489322   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1489323   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1489324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1489325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489326   +end;
MPRINT(EM_DIAGRAM):   end;
1489327   +else do;
MPRINT(EM_DIAGRAM):   else do;
1489328   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1489329   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1489330   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1489331   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1489332   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1489333   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1489334   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1489335   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1489336   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1489337   +         end;
MPRINT(EM_DIAGRAM):   end;
1489338   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1489339   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1489340   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1489341   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1489342   +            end;
MPRINT(EM_DIAGRAM):   end;
1489343   +         end;
MPRINT(EM_DIAGRAM):   end;
1489344   +      end;
MPRINT(EM_DIAGRAM):   end;
1489345   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1489346   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1489347   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1489348   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1489349   +         end;
MPRINT(EM_DIAGRAM):   end;
1489350   +      end;
MPRINT(EM_DIAGRAM):   end;
1489351   +   end;
MPRINT(EM_DIAGRAM):   end;
1489352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1489353   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1489354   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1489355   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1489356   +      end;
MPRINT(EM_DIAGRAM):   end;
1489357   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1489358   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1489359   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1489360   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1489361   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1489362   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1489363   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1489364   +         end;
MPRINT(EM_DIAGRAM):   end;
1489365   +      end;
MPRINT(EM_DIAGRAM):   end;
1489366   +   end;
MPRINT(EM_DIAGRAM):   end;
1489367   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1489368   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1489369   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1489370   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1489371   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1489372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1489373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489374   +   end;
MPRINT(EM_DIAGRAM):   end;
1489375   +end;
MPRINT(EM_DIAGRAM):   end;
1489376   +
1489377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489378   +*** Checking missing input Interval
1489379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1489380   +
1489381   +IF NMISS(
1489382   +   AcceptedCmpTotal ,
1489383   +   Age ,
1489384   +   Frq ,
1489385   +   Income ,
1489386   +   Kidhome ,
1489387   +   Mnt ,
1489388   +   MntFishProducts ,
1489389   +   MntFruits ,
1489390   +   MntGoldProds ,
1489391   +   MntMeatProducts ,
1489392   +   MntSweetProducts ,
1489393   +   MntWines ,
1489394   +   MonthsAsCustomer ,
1489395   +   NumCatalogPurchases ,
1489396   +   NumDealsPurchases ,
1489397   +   NumDistPurchases ,
1489398   +   NumStorePurchases ,
1489399   +   NumWebPurchases ,
1489400   +   NumWebVisitsMonth ,
1489401   +   RFMstat ,
1489402   +   RMntFrq ,
1489403   +   Recency ,
1489404   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1489405   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1489406   +
1489407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1489408   +END;
MPRINT(EM_DIAGRAM):   END;
1489409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489410   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1489411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489412   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1489413   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1489414   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1489415   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1489416   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1489417   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1489418   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1489419   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1489420   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1489421   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1489422   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1489423   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1489424   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1489425   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1489426   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1489427   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1489428   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1489429   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1489430   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1489431   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1489432   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1489433   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1489434   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1489435   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1489436   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1489437   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1489438   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1489439   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1489440   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1489441   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1489442   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1489443   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1489444   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1489445   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1489446   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1489447   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1489448   +END;
MPRINT(EM_DIAGRAM):   END;
1489449   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1489450   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1489451   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1489452   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1489453   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1489454   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1489455   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1489456   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1489457   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1489458   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1489459   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1489460   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1489461   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1489462   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1489463   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1489464   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1489465   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1489466   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1489467   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1489468   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1489469   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1489470   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1489471   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1489472   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1489473   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1489474   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1489475   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1489476   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1489477   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1489478   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1489479   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1489480   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1489481   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1489482   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1489483   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1489484   +   ELSE S_NumCatalogPurchases
1489485   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1489486   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1489487   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1489488   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1489489   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1489490   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1489491   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1489492   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1489493   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1489494   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1489495   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1489496   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1489497   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1489498   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1489499   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1489500   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1489501   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1489502   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1489503   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1489504   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1489505   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1489506   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1489507   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1489508   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1489509   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1489510   +END;
MPRINT(EM_DIAGRAM):   END;
1489511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489512   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1489513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489515   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1489516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489518   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1489519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489520   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1489521   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1489522   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1489523   +        S_Income  +    -1.07733254688396 * S_Kidhome
1489524   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1489525   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1489526   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1489527   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1489528   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1489529   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1489530   +          +     0.34431711603003 * S_NumDealsPurchases
1489531   +          +      0.7134923732819 * S_NumDistPurchases
1489532   +          +     0.05901777448936 * S_NumStorePurchases
1489533   +          +    -0.19803026616936 * S_NumWebPurchases
1489534   +          +     1.34202846183228 * S_NumWebVisitsMonth
1489535   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1489536   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1489537   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age + 
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome + 
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 * 
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts + 
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 * 
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 * 
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 * 
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 * 
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq + 
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1489538   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1489539   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1489540   +        S_Income  +    -0.00255151514163 * S_Kidhome
1489541   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1489542   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1489543   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1489544   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1489545   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1489546   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1489547   +          +     0.45752917132477 * S_NumDealsPurchases
1489548   +          +      0.1559495599293 * S_NumDistPurchases
1489549   +          +    -0.33402213718695 * S_NumStorePurchases
1489550   +          +    -0.39372662704902 * S_NumWebPurchases
1489551   +          +     0.52518189694069 * S_NumWebVisitsMonth
1489552   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1489553   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1489554   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age 
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome + 
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 * 
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts + 
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 * 
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 * 
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 * 
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 * 
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq + 
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1489555   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1489556   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1489557   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1489558   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1489559   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 * 
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 + 
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 * 
HigherEducationBinary0 ;
1489560   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1489561   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1489562   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1489563   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1489564   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 * 
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 + 
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 * 
HigherEducationBinary0 ;
1489565   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1489566   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1489567   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1489568   +          +     0.46710555357393 * Marital_StatusDivorced
1489569   +          +    -1.27560428667174 * Marital_StatusMarried
1489570   +          +      1.3147344073121 * Marital_StatusSingle
1489571   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 * 
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster 
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried + 
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1489572   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1489573   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1489574   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1489575   +          +     0.07422027097612 * Marital_StatusDivorced
1489576   +          +     0.00271855575037 * Marital_StatusMarried
1489577   +          +    -0.00749566028051 * Marital_StatusSingle
1489578   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 * 
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster + 
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried + 
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1489579   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1489580   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1489581   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1489582   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1489583   +END;
MPRINT(EM_DIAGRAM):   END;
1489584   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1489585   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1489586   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1489587   +END;
MPRINT(EM_DIAGRAM):   END;
1489588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489589   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1489590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1489592   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1489593   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1489594   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1489595   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1489596   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1489597   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1489598   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1489599   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1489600   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1489601   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1489602   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1489603   +END;
MPRINT(EM_DIAGRAM):   END;
1489604   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1489605   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1489606   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1489607   +END;
MPRINT(EM_DIAGRAM):   END;
1489608   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1489609   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1489610   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1489611   +END;
MPRINT(EM_DIAGRAM):   END;
1489612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489613   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1489614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1489615   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1489616   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1489617   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1489618   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1489619   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1489620   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1489621   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1489622   +END;
MPRINT(EM_DIAGRAM):   END;
1489623   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1489624   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1489625   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1489626   +drop
1489627   +H11
1489628   +H12
1489629   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1489630   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1489631    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1489632    quit;
1489633    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1489634    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1489635    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1489636    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1489637    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1489638    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489639    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1489640    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489641    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489642    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1489643    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489644    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489645    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489646    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1489647    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1489648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489649    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1489650    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1489651    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1489652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489654    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489655    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1489656    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489657    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489658    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1489659    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1489659  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1489660    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489661    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1489662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489663    filename _pref
1489663  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1489664    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1489665    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1489666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1489667   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1489668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1489669   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1489670   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1489671   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1489672    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1489673    quit;
1489674    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1489675    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1489676    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1489677    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1489678    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1489679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489680    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1489681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489683    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1489684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489685    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489686    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489687    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1489688    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1489689    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489690    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1489691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1489692    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1489693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489695    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489696    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1489697    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489698    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489699    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1489700    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1489700  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1489701    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489702    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1489703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489704    filename _pref
1489704  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1489705    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1489706    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1489707   +
1489708   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1489709   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1489709  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1489710   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1489711   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1489712   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1489713   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1489714   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1489715    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1489716    quit;
1489717    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1489718    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1489719    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1489720    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1489721    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1489722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489723    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1489724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489726    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1489727    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489729    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489730    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1489731    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1489732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489733    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1489734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489735    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1489736    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489737    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489738    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489739    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1489740    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489741    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489742    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1489743    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1489743  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1489744    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489745    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1489746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489747    filename _pref
1489747  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1489748    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1489749    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1489750   +
1489751   +
1489752   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1489753   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1489754   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1489755   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1489756   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1489757   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489758   +
1489759   +
1489760   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1489761   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1489762   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1489763   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1489764   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1489765   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489766   +
1489767   +
1489768   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1489769   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1489770   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1489771   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1489772   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1489773   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489774   +
1489775   +
1489776   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1489777   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1489778   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1489779   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1489780   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1489781   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489782   +
1489783   +
1489784   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1489785   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1489786   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1489787   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1489788   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1489789   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489790   +
1489791   +
1489792   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1489793   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1489794   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1489795   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1489796   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1489797   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489798   +
1489799   +
1489800   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1489801   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1489802   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1489803   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1489804   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1489805   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489806   +
1489807   +
1489808   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1489809   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1489810   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1489811   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1489812   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1489813   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1489814   +if
1489815   +_FILTERNORM1 not in ( '.')
1489816   + and
1489817   +_FILTERNORM2 not in ( '.')
1489818   + and
1489819   +_FILTERNORM3 not in ( '.')
1489820   + and
1489821   +_FILTERNORM4 not in ( '.')
1489822   + and
1489823   +_FILTERNORM5 not in ( '.')
1489824   + and
1489825   +_FILTERNORM6 not in ( '.')
1489826   + and
1489827   +_FILTERNORM7 not in ( ' ')
1489828   + and
1489829   +_FILTERNORM8 not in ( ' ')
1489830   +and
1489831   +( Dt_Customer ne .)
1489832   +and ( Income ne . and (Income<=107000))
1489833   +and ( Kidhome ne .)
1489834   +and ( MntFishProducts ne .)
1489835   +and ( MntFruits ne .)
1489836   +and ( MntGoldProds ne .)
1489837   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1489838   +and ( MntSweetProducts ne .)
1489839   +and ( MntWines ne .)
1489840   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1489841   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1489842   +and ( NumStorePurchases ne .)
1489843   +and ( NumWebPurchases ne .)
1489844   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1489845   +and ( Recency ne .)
1489846   +and ( Teenhome ne .)
1489847   +and ( Year_Birth ne .)
1489848   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1489849   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1489850   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1489851   +end;
MPRINT(EM_DIAGRAM):   end;
1489852   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1489853   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1489854    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1489855    quit;
1489856    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1489857    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1489858    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1489859    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1489860    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1489861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
The SAS System

      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489862    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1489863    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489865    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1489866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489868    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489869    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1489870    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1489871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489872    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1489873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1489874    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1489875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489877    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1489878    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1489879    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1489880    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489881    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1489882    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1489882  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1489883    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489884    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1489885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489886    %macro varDept(fcmpdata=,id=);
1489887    %global nobs&id scoreFlag&id;
1489888    %let scoreFlag&id = 0;
1489889    %if &id=1 or ^&fcmpStart %then %do;
1489890    proc sort data=&fcmpdata out=_temp&id nodupkey;
1489891    by NAME;
1489892    where id=&id and LHS in( %let j=1;
1489893    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1489894    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1489895    "&var" %let j = %eval(&j+1);
1489896    %end;
1489897    );
1489898    run;
1489899    %let dsid = %sysfunc(open(_temp&id));
1489900    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1489901    %let dsid = %sysfunc(close(&dsid));
1489902    %if &&nobs&id %then %do;
1489903    %let scoreFlag&id = 1;
1489904    %let fcmpStart = 1;
1489905    %end;
1489906    %else %let fcmpStart = 0;
1489907    %end;
1489908    %else %do;
1489909    proc sort data=&fcmpdata out=_tempid;
1489910    where id=&id;
1489911    by LHS;
1489912    run;
1489913    %let dsid = %sysfunc(open(_tempid));
1489914    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1489915    %let dsid = %sysfunc(close(&dsid));
1489916    %if ^&&nobs&id %then %do;
1489917    proc datasets lib=work nolist;
1489918    delete _tempid;
1489919    run;
1489920    quit;
1489921    %end;
1489922    %else %do;
1489923    data _tempAll;
1489924    set %let j=%eval(&id-1);
1489925    %do x=1 %to &j;
1489926    %if &&nobs&x %then %do;
1489927    _temp&x %end;
1489928    %end;
1489929    ;
1489930    run;
1489931    proc sql;
1489932    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1489932  ! work._tempid p2 where p.name=p2.lhs;
1489933    quit;
1489934    data _temp&id;
1489935    set _temp&id;
1489936    where LHS ne '' and NAME ne '' and Node ne '';
1489937    run;
1489938    proc datasets lib=work nolist;
1489939    delete _tempAll;
1489940    run;
1489941    %let dsid = %sysfunc(open(_temp&id));
1489942    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1489943    %let dsid = %sysfunc(close(&dsid));
1489944    %if ^&&nobs&id %then %do;
1489945    proc datasets lib=work nolist;
1489946    delete _temp&id;
1489947    run;
1489948    quit;
1489949    %end;
1489950    %else %do;
1489951    %let scoreFlag&id = 1;
1489952    data _temp&id;
1489953    set _temp&id;
1489954    where LHS ne NAME and node ne '';
1489955    run;
1489956    %let dsid = %sysfunc(open(_temp&id));
1489957    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1489958    %let dsid = %sysfunc(close(&dsid));
1489959    %if ^&&nobs&id %then %do;
1489960    proc datasets lib=work nolist;
1489961    delete _temp&id;
1489962    run;
1489963    quit;
1489964    %end;
1489965    %else %do;
1489966    proc sort data=_temp&id nodupkey;
1489967    by LHS NAME;
1489968    run;
1489969    %end;
1489970    %end;
1489971    %end;
1489972    %end;
1489973    %mend varDept;
1489974    %macro optCode(outdata=fcmpdata);
1489975    %global fcmpStart;
1489976    %let fcmpStart = 0;
1489977    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1489978    %let NumNodes=9;
1489979    %do k=1 %to &NumNodes;
1489980    %vardept(fcmpdata=&outdata, id=&k);
1489981    %end;
1489982    %mend optCode;
1489983    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1489984    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1489985    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1489986    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1489987    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1489988    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1489989    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1489990    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1489991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489992    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1489993    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1489993  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1489994    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489995    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1489996    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1489997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489998    filename _pref
1489998  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1489999    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1490000    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1490001   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1490002   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1490003   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1490004   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1490005   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1490006   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1490007   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1490008   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1490009   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1490010   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1490011   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1490012   +LENGTH _WARN_ $4
1490013   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1490014   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1490015   +
1490016   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1490017   +
1490018   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1490019   +
1490020   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1490021   +
1490022   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1490023   +
1490024   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1490025   +
1490026   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1490027   +
1490028   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1490029   +
1490030   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1490031   +
1490032   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1490033   +
1490034   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1490035   +
1490036   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1490037   +
1490038   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1490039   +
1490040   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1490041   +
1490042   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1490043   +
1490044   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1490045   +
1490046   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1490047   +
1490048   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1490049   +
1490050   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1490051   +
1490052   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1490053   +
1490054   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1490055   +
1490056   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1490057   +
1490058   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1490059   +
1490060   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1490061   +
1490062   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1490063   +
1490064   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1490065   +
1490066   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1490067   +
1490068   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1490069   +
1490070   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1490071   +
1490072   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1490073   +
1490074   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1490075   +
1490076   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1490077   +
1490078   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1490079   +
1490080   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1490081   +
1490082   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1490083   +
1490084   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1490085   +
1490086   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1490087   +
1490088   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1490089   +
1490090   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1490091   +
1490092   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1490093   +
1490094   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1490095   +
1490096   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1490097   +
1490098   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1490099   +
1490100   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1490101   +
1490102   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1490103   +
1490104   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1490105   +
1490106   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1490107   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1490108   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1490109   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1490110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490112   +end;
MPRINT(EM_DIAGRAM):   end;
1490113   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490115   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1490116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490117   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1490118   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1490119   +   end;
MPRINT(EM_DIAGRAM):   end;
1490120   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1490121   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1490122   +   end;
MPRINT(EM_DIAGRAM):   end;
1490123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490124   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1490125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490127   +   end;
MPRINT(EM_DIAGRAM):   end;
1490128   +end;
MPRINT(EM_DIAGRAM):   end;
1490129   +
1490130   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1490131   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1490132   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1490133   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1490134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490136   +end;
MPRINT(EM_DIAGRAM):   end;
1490137   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490138   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490139   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1490140   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490141   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1490142   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1490143   +   end;
MPRINT(EM_DIAGRAM):   end;
1490144   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1490145   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1490146   +   end;
MPRINT(EM_DIAGRAM):   end;
1490147   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490148   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1490149   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490150   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490151   +   end;
MPRINT(EM_DIAGRAM):   end;
1490152   +end;
MPRINT(EM_DIAGRAM):   end;
1490153   +
1490154   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1490155   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1490156   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1490157   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1490158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490160   +end;
MPRINT(EM_DIAGRAM):   end;
1490161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490162   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490163   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1490164   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490165   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1490166   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1490167   +   end;
MPRINT(EM_DIAGRAM):   end;
1490168   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1490169   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1490170   +   end;
MPRINT(EM_DIAGRAM):   end;
1490171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490172   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1490173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490175   +   end;
MPRINT(EM_DIAGRAM):   end;
1490176   +end;
MPRINT(EM_DIAGRAM):   end;
1490177   +
1490178   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1490179   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1490180   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1490181   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1490182   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490183   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490184   +end;
MPRINT(EM_DIAGRAM):   end;
1490185   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490186   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490187   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1490188   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490189   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1490190   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1490191   +   end;
MPRINT(EM_DIAGRAM):   end;
1490192   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1490193   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1490194   +   end;
MPRINT(EM_DIAGRAM):   end;
1490195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490196   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1490197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490199   +   end;
MPRINT(EM_DIAGRAM):   end;
1490200   +end;
MPRINT(EM_DIAGRAM):   end;
1490201   +
1490202   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1490203   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1490204   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1490205   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1490206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490208   +end;
MPRINT(EM_DIAGRAM):   end;
1490209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490210   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490211   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1490212   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490213   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1490214   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1490215   +   end;
MPRINT(EM_DIAGRAM):   end;
1490216   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1490217   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1490218   +   end;
MPRINT(EM_DIAGRAM):   end;
1490219   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490220   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1490221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490223   +   end;
MPRINT(EM_DIAGRAM):   end;
1490224   +end;
MPRINT(EM_DIAGRAM):   end;
1490225   +
1490226   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1490227   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1490228   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1490229   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1490230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490232   +end;
MPRINT(EM_DIAGRAM):   end;
1490233   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490234   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490235   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1490236   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490237   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1490238   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1490239   +   end;
MPRINT(EM_DIAGRAM):   end;
1490240   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1490241   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1490242   +   end;
MPRINT(EM_DIAGRAM):   end;
1490243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490244   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1490245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490247   +   end;
MPRINT(EM_DIAGRAM):   end;
1490248   +end;
MPRINT(EM_DIAGRAM):   end;
1490249   +
1490250   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1490251   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1490252   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1490253   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1490254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490256   +end;
MPRINT(EM_DIAGRAM):   end;
1490257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1490259   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1490260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490261   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1490262   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1490263   +   end;
MPRINT(EM_DIAGRAM):   end;
1490264   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1490265   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1490266   +   end;
MPRINT(EM_DIAGRAM):   end;
1490267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490268   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1490269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490271   +   end;
MPRINT(EM_DIAGRAM):   end;
1490272   +end;
MPRINT(EM_DIAGRAM):   end;
1490273   +
1490274   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1490275   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1490276   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1490277   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1490278   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1490279   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1490280   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1490281   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1490282   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1490283   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1490284   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1490285   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1490286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490288   +end;
MPRINT(EM_DIAGRAM):   end;
1490289   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490290   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1490291   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1490292   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490293   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1490294   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1490295   +   end;
MPRINT(EM_DIAGRAM):   end;
1490296   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1490297   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1490298   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1490299   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1490300   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1490301   +   end;
MPRINT(EM_DIAGRAM):   end;
1490302   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1490303   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1490304   +   end;
MPRINT(EM_DIAGRAM):   end;
1490305   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1490306   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1490307   +   end;
MPRINT(EM_DIAGRAM):   end;
1490308   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1490309   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1490310   +   end;
MPRINT(EM_DIAGRAM):   end;
1490311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490312   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1490313   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1490314   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1490315   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1490316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490318   +   end;
MPRINT(EM_DIAGRAM):   end;
1490319   +end;
MPRINT(EM_DIAGRAM):   end;
1490320   +
1490321   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1490322   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1490323   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1490324   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1490325   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1490326   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1490327   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1490328   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1490329   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1490330   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1490331   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1490332   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1490333   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1490334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1490335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490336   +end;
MPRINT(EM_DIAGRAM):   end;
1490337   +else do;
MPRINT(EM_DIAGRAM):   else do;
1490338   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1490339   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1490340   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1490341   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1490342   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1490343   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1490344   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1490345   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1490346   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1490347   +         end;
MPRINT(EM_DIAGRAM):   end;
1490348   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1490349   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1490350   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1490351   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1490352   +            end;
MPRINT(EM_DIAGRAM):   end;
1490353   +         end;
MPRINT(EM_DIAGRAM):   end;
1490354   +      end;
MPRINT(EM_DIAGRAM):   end;
1490355   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1490356   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1490357   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1490358   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1490359   +         end;
MPRINT(EM_DIAGRAM):   end;
1490360   +      end;
MPRINT(EM_DIAGRAM):   end;
1490361   +   end;
MPRINT(EM_DIAGRAM):   end;
1490362   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1490363   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1490364   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1490365   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1490366   +      end;
MPRINT(EM_DIAGRAM):   end;
1490367   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1490368   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1490369   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1490370   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1490371   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1490372   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1490373   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1490374   +         end;
MPRINT(EM_DIAGRAM):   end;
1490375   +      end;
MPRINT(EM_DIAGRAM):   end;
1490376   +   end;
MPRINT(EM_DIAGRAM):   end;
1490377   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1490378   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1490379   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1490380   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1490381   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1490382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1490383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490384   +   end;
MPRINT(EM_DIAGRAM):   end;
1490385   +end;
MPRINT(EM_DIAGRAM):   end;
1490386   +
1490387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490388   +*** Checking missing input Interval
1490389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1490390   +
1490391   +IF NMISS(
1490392   +   AcceptedCmpTotal ,
1490393   +   Age ,
1490394   +   Frq ,
1490395   +   Income ,
1490396   +   Kidhome ,
1490397   +   Mnt ,
1490398   +   MntFishProducts ,
1490399   +   MntFruits ,
1490400   +   MntGoldProds ,
1490401   +   MntMeatProducts ,
1490402   +   MntSweetProducts ,
1490403   +   MntWines ,
1490404   +   MonthsAsCustomer ,
1490405   +   NumCatalogPurchases ,
1490406   +   NumDealsPurchases ,
1490407   +   NumDistPurchases ,
1490408   +   NumStorePurchases ,
1490409   +   NumWebPurchases ,
1490410   +   NumWebVisitsMonth ,
1490411   +   RFMstat ,
1490412   +   RMntFrq ,
1490413   +   Recency ,
1490414   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1490415   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1490416   +
1490417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1490418   +END;
MPRINT(EM_DIAGRAM):   END;
1490419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490420   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1490421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490422   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1490423   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1490424   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1490425   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1490426   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1490427   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1490428   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1490429   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1490430   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1490431   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1490432   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1490433   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1490434   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1490435   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1490436   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1490437   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1490438   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1490439   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1490440   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1490441   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1490442   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1490443   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1490444   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1490445   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1490446   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1490447   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1490448   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1490449   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1490450   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1490451   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1490452   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1490453   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1490454   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1490455   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1490456   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1490457   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1490458   +END;
MPRINT(EM_DIAGRAM):   END;
1490459   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1490460   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1490461   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1490462   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1490463   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1490464   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1490465   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1490466   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1490467   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1490468   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1490469   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1490470   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1490471   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1490472   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1490473   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1490474   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1490475   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1490476   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1490477   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1490478   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1490479   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1490480   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1490481   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1490482   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1490483   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1490484   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1490485   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1490486   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1490487   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1490488   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1490489   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1490490   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1490491   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1490492   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1490493   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1490494   +   ELSE S_NumCatalogPurchases
1490495   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1490496   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1490497   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1490498   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1490499   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1490500   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1490501   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1490502   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1490503   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1490504   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1490505   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1490506   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1490507   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1490508   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1490509   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1490510   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1490511   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1490512   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1490513   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1490514   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1490515   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1490516   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1490517   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1490518   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1490519   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1490520   +END;
MPRINT(EM_DIAGRAM):   END;
1490521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490522   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1490523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490525   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1490526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490528   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1490529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490530   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1490531   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1490532   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1490533   +        S_Income  +     0.49557647195287 * S_Kidhome
1490534   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1490535   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1490536   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1490537   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1490538   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1490539   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1490540   +          +     1.29965538748336 * S_NumDealsPurchases
1490541   +          +     0.16818868463142 * S_NumDistPurchases
1490542   +          +    -0.64507792847411 * S_NumStorePurchases
1490543   +          +    -0.52243329275268 * S_NumWebPurchases
1490544   +          +     1.48521107923182 * S_NumWebVisitsMonth
1490545   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1490546   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1490547   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age 
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome + 
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 * 
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts + 
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 * 
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 * 
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 * 
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 * 
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq + 
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1490548   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1490549   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1490550   +        S_Income  +       0.536631748871 * S_Kidhome
1490551   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1490552   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1490553   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1490554   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1490555   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1490556   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1490557   +          +    -0.63220849663702 * S_NumDealsPurchases
1490558   +          +    -0.03517440588176 * S_NumDistPurchases
1490559   +          +     0.90435516280473 * S_NumStorePurchases
1490560   +          +     1.02540776095101 * S_NumWebPurchases
1490561   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1490562   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1490563   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1490564   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age 
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome + 
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 * 
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts + 
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 * 
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 * 
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 * 
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 * 
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq + 
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1490565   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1490566   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1490567   +        S_Income  +     0.45173611630992 * S_Kidhome
1490568   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1490569   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1490570   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1490571   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1490572   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1490573   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1490574   +          +     0.00572910064772 * S_NumDealsPurchases
1490575   +          +    -0.43545754325176 * S_NumDistPurchases
1490576   +          +     0.12831980635185 * S_NumStorePurchases
1490577   +          +     0.02223697618186 * S_NumWebPurchases
1490578   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1490579   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1490580   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1490581   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age 
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome + 
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 * 
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts + 
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 * 
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 * 
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 * 
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 * 
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq + 
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1490582   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1490583   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1490584   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1490585   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1490586   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 * 
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 + 
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 * 
HigherEducationBinary0 ;
1490587   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1490588   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1490589   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1490590   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1490591   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 * 
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 + 
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 * 
HigherEducationBinary0 ;
1490592   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1490593   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1490594   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1490595   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1490596   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 * 
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 + 
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 * 
HigherEducationBinary0 ;
1490597   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1490598   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1490599   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1490600   +          +     0.14010081581672 * Marital_StatusDivorced
1490601   +          +     0.03574033044092 * Marital_StatusMarried
1490602   +          +    -0.14272769898675 * Marital_StatusSingle
1490603   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 * 
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster 
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried + 
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1490604   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1490605   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1490606   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1490607   +          +    -0.14878433798537 * Marital_StatusDivorced
1490608   +          +     0.14990226067603 * Marital_StatusMarried
1490609   +          +    -0.50903755449357 * Marital_StatusSingle
1490610   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 * 
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster 
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried + 
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1490611   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1490612   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1490613   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1490614   +          +    -0.52568922939912 * Marital_StatusDivorced
1490615   +          +     1.74121506979092 * Marital_StatusMarried
1490616   +          +    -1.16029880777095 * Marital_StatusSingle
1490617   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 * 
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster + 
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried + 
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1490618   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1490619   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1490620   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1490621   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1490622   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1490623   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1490624   +END;
MPRINT(EM_DIAGRAM):   END;
1490625   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1490626   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1490627   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1490628   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1490629   +END;
MPRINT(EM_DIAGRAM):   END;
1490630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490631   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1490632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1490634   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1490635   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 + 
-3.01894159959464 * H13 ;
1490636   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1490637   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1490638   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1490639   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1490640   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1490641   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1490642   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1490643   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1490644   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1490645   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1490646   +END;
MPRINT(EM_DIAGRAM):   END;
1490647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1490648   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1490649   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1490650   +END;
MPRINT(EM_DIAGRAM):   END;
1490651   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1490652   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1490653   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1490654   +END;
MPRINT(EM_DIAGRAM):   END;
1490655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490656   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1490657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1490658   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1490659   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1490660   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1490661   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1490662   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1490663   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1490664   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1490665   +END;
MPRINT(EM_DIAGRAM):   END;
1490666   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1490667   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1490668   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1490669   +drop
1490670   +H11
1490671   +H12
1490672   +H13
1490673   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1490674   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1490675    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1490676    quit;
1490677    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1490678    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1490679    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1490680    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1490681    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1490682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490683    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1490684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490685    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490686    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1490687    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490689    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490690    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1490691    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1490692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490693    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1490694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1490695    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1490696    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490698    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490699    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1490700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490701    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490702    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1490703    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1490703  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1490704    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490705    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1490706    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490707    filename _pref
1490707  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1490708    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1490709    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1490710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1490711   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1490712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1490713   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1490714   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1490715   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1490716    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1490717    quit;
1490718    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1490719    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1490720    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1490721    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1490722    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1490723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490724    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1490725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490727    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1490728    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490730    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490731    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1490732    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1490733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490734    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1490735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1490736    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1490737    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490739    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490740    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1490741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490742    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490743    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1490744    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1490744  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1490745    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490746    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1490747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490748    filename _pref
1490748  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1490749    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1490750    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1490751   +
1490752   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1490753   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1490753  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1490754   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1490755   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1490756   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1490757   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1490758   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1490759    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1490760    quit;
1490761    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1490762    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1490763    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1490764    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1490765    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1490766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490767    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1490768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490770    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1490771    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490773    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490774    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1490775    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1490776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490777    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1490778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490779    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1490780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490782    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490783    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1490784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490785    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490786    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1490787    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1490787  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1490788    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490789    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1490790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490791    filename _pref
1490791  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1490792    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1490793    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1490794   +
1490795   +
1490796   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1490797   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1490798   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1490799   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1490800   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1490801   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490802   +
1490803   +
1490804   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1490805   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1490806   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1490807   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1490808   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1490809   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490810   +
1490811   +
1490812   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1490813   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1490814   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1490815   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1490816   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1490817   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490818   +
1490819   +
1490820   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1490821   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1490822   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1490823   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1490824   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1490825   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490826   +
1490827   +
1490828   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1490829   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1490830   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1490831   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1490832   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1490833   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490834   +
1490835   +
1490836   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1490837   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1490838   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1490839   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1490840   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1490841   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490842   +
1490843   +
1490844   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1490845   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1490846   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1490847   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1490848   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1490849   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490850   +
1490851   +
1490852   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1490853   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1490854   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1490855   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1490856   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1490857   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1490858   +if
1490859   +_FILTERNORM1 not in ( '.')
1490860   + and
1490861   +_FILTERNORM2 not in ( '.')
1490862   + and
1490863   +_FILTERNORM3 not in ( '.')
1490864   + and
1490865   +_FILTERNORM4 not in ( '.')
1490866   + and
1490867   +_FILTERNORM5 not in ( '.')
1490868   + and
1490869   +_FILTERNORM6 not in ( '.')
1490870   + and
1490871   +_FILTERNORM7 not in ( ' ')
1490872   + and
1490873   +_FILTERNORM8 not in ( ' ')
1490874   +and
1490875   +( Dt_Customer ne .)
1490876   +and ( Income ne . and (Income<=107000))
1490877   +and ( Kidhome ne .)
1490878   +and ( MntFishProducts ne .)
1490879   +and ( MntFruits ne .)
1490880   +and ( MntGoldProds ne .)
1490881   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1490882   +and ( MntSweetProducts ne .)
1490883   +and ( MntWines ne .)
1490884   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1490885   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1490886   +and ( NumStorePurchases ne .)
1490887   +and ( NumWebPurchases ne .)
1490888   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1490889   +and ( Recency ne .)
1490890   +and ( Teenhome ne .)
1490891   +and ( Year_Birth ne .)
1490892   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1490893   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1490894   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1490895   +end;
MPRINT(EM_DIAGRAM):   end;
1490896   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1490897   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1490898    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1490899    quit;
1490900    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1490901    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1490902    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1490903    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1490904    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1490905    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490906    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1490907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490908    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490909    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1490910    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490912    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490913    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1490914    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1490915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490916    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1490917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1490918    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1490919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490921    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1490922    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1490923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1490924    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490925    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1490926    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1490926  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1490927    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1490928    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1490929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1490930    %macro varDept(fcmpdata=,id=);
1490931    %global nobs&id scoreFlag&id;
1490932    %let scoreFlag&id = 0;
1490933    %if &id=1 or ^&fcmpStart %then %do;
1490934    proc sort data=&fcmpdata out=_temp&id nodupkey;
1490935    by NAME;
1490936    where id=&id and LHS in( %let j=1;
1490937    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1490938    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1490939    "&var" %let j = %eval(&j+1);
1490940    %end;
1490941    );
1490942    run;
1490943    %let dsid = %sysfunc(open(_temp&id));
1490944    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1490945    %let dsid = %sysfunc(close(&dsid));
1490946    %if &&nobs&id %then %do;
1490947    %let scoreFlag&id = 1;
1490948    %let fcmpStart = 1;
1490949    %end;
1490950    %else %let fcmpStart = 0;
1490951    %end;
1490952    %else %do;
1490953    proc sort data=&fcmpdata out=_tempid;
1490954    where id=&id;
1490955    by LHS;
1490956    run;
1490957    %let dsid = %sysfunc(open(_tempid));
1490958    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1490959    %let dsid = %sysfunc(close(&dsid));
1490960    %if ^&&nobs&id %then %do;
1490961    proc datasets lib=work nolist;
1490962    delete _tempid;
1490963    run;
1490964    quit;
1490965    %end;
1490966    %else %do;
1490967    data _tempAll;
1490968    set %let j=%eval(&id-1);
1490969    %do x=1 %to &j;
1490970    %if &&nobs&x %then %do;
1490971    _temp&x %end;
1490972    %end;
1490973    ;
1490974    run;
1490975    proc sql;
1490976    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1490976  ! work._tempid p2 where p.name=p2.lhs;
1490977    quit;
1490978    data _temp&id;
1490979    set _temp&id;
1490980    where LHS ne '' and NAME ne '' and Node ne '';
1490981    run;
1490982    proc datasets lib=work nolist;
1490983    delete _tempAll;
1490984    run;
1490985    %let dsid = %sysfunc(open(_temp&id));
1490986    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1490987    %let dsid = %sysfunc(close(&dsid));
1490988    %if ^&&nobs&id %then %do;
1490989    proc datasets lib=work nolist;
1490990    delete _temp&id;
1490991    run;
1490992    quit;
1490993    %end;
1490994    %else %do;
1490995    %let scoreFlag&id = 1;
1490996    data _temp&id;
1490997    set _temp&id;
1490998    where LHS ne NAME and node ne '';
1490999    run;
1491000    %let dsid = %sysfunc(open(_temp&id));
1491001    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1491002    %let dsid = %sysfunc(close(&dsid));
1491003    %if ^&&nobs&id %then %do;
1491004    proc datasets lib=work nolist;
1491005    delete _temp&id;
1491006    run;
1491007    quit;
1491008    %end;
1491009    %else %do;
1491010    proc sort data=_temp&id nodupkey;
1491011    by LHS NAME;
1491012    run;
1491013    %end;
1491014    %end;
1491015    %end;
1491016    %end;
1491017    %mend varDept;
1491018    %macro optCode(outdata=fcmpdata);
1491019    %global fcmpStart;
1491020    %let fcmpStart = 0;
1491021    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1491022    %let NumNodes=9;
1491023    %do k=1 %to &NumNodes;
1491024    %vardept(fcmpdata=&outdata, id=&k);
1491025    %end;
1491026    %mend optCode;
1491027    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1491028    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1491029    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1491030    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1491031    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491032    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1491033    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1491034    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1491035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491036    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1491037    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1491037  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1491038    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491039    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1491040    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1491041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491042    filename _pref
1491042  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas";
1491043    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1491044    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural7\EMPUBLISHSCORE.sas.
1491045   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1491046   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1491047   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1491048   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1491049   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1491050   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1491051   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1491052   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1491053   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1491054   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1491055   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1491056   +LENGTH _WARN_ $4
1491057   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1491058   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1491059   +
1491060   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1491061   +
1491062   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1491063   +
1491064   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1491065   +
1491066   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1491067   +
1491068   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1491069   +
1491070   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1491071   +
1491072   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1491073   +
1491074   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1491075   +
1491076   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1491077   +
1491078   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1491079   +
1491080   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1491081   +
1491082   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1491083   +
1491084   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1491085   +
1491086   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1491087   +
1491088   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1491089   +
1491090   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1491091   +
1491092   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1491093   +
1491094   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1491095   +
1491096   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1491097   +
1491098   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1491099   +
1491100   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1491101   +
1491102   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1491103   +
1491104   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1491105   +
1491106   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1491107   +
1491108   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1491109   +
1491110   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1491111   +
1491112   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1491113   +
1491114   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1491115   +
1491116   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1491117   +
1491118   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1491119   +
1491120   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1491121   +
1491122   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1491123   +
1491124   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1491125   +
1491126   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1491127   +
1491128   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1491129   +
1491130   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1491131   +
1491132   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1491133   +
1491134   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1491135   +
1491136   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1491137   +
1491138   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1491139   +
1491140   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1491141   +
1491142   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1491143   +
1491144   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1491145   +
1491146   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1491147   +
1491148   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1491149   +
1491150   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1491151   +
1491152   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1491153   +
1491154   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1491155   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1491156   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1491157   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1491158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491160   +end;
MPRINT(EM_DIAGRAM):   end;
1491161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491162   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491163   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1491164   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491165   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1491166   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1491167   +   end;
MPRINT(EM_DIAGRAM):   end;
1491168   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1491169   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1491170   +   end;
MPRINT(EM_DIAGRAM):   end;
1491171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491172   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1491173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491175   +   end;
MPRINT(EM_DIAGRAM):   end;
1491176   +end;
MPRINT(EM_DIAGRAM):   end;
1491177   +
1491178   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1491179   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1491180   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1491181   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1491182   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491183   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491184   +end;
MPRINT(EM_DIAGRAM):   end;
1491185   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491186   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491187   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1491188   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491189   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1491190   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1491191   +   end;
MPRINT(EM_DIAGRAM):   end;
1491192   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1491193   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1491194   +   end;
MPRINT(EM_DIAGRAM):   end;
1491195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491196   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1491197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491199   +   end;
MPRINT(EM_DIAGRAM):   end;
1491200   +end;
MPRINT(EM_DIAGRAM):   end;
1491201   +
1491202   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1491203   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1491204   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1491205   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1491206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491208   +end;
MPRINT(EM_DIAGRAM):   end;
1491209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491210   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491211   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1491212   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491213   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1491214   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1491215   +   end;
MPRINT(EM_DIAGRAM):   end;
1491216   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1491217   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1491218   +   end;
MPRINT(EM_DIAGRAM):   end;
1491219   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491220   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1491221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491223   +   end;
MPRINT(EM_DIAGRAM):   end;
1491224   +end;
MPRINT(EM_DIAGRAM):   end;
1491225   +
1491226   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1491227   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1491228   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1491229   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1491230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491232   +end;
MPRINT(EM_DIAGRAM):   end;
1491233   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491234   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491235   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1491236   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491237   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1491238   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1491239   +   end;
MPRINT(EM_DIAGRAM):   end;
1491240   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1491241   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1491242   +   end;
MPRINT(EM_DIAGRAM):   end;
1491243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491244   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1491245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491247   +   end;
MPRINT(EM_DIAGRAM):   end;
1491248   +end;
MPRINT(EM_DIAGRAM):   end;
1491249   +
1491250   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1491251   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1491252   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1491253   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1491254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491256   +end;
MPRINT(EM_DIAGRAM):   end;
1491257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491259   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1491260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491261   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1491262   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1491263   +   end;
MPRINT(EM_DIAGRAM):   end;
1491264   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1491265   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1491266   +   end;
MPRINT(EM_DIAGRAM):   end;
1491267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491268   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1491269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491271   +   end;
MPRINT(EM_DIAGRAM):   end;
1491272   +end;
MPRINT(EM_DIAGRAM):   end;
1491273   +
1491274   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1491275   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1491276   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1491277   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1491278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491280   +end;
MPRINT(EM_DIAGRAM):   end;
1491281   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491282   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491283   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1491284   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491285   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1491286   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1491287   +   end;
MPRINT(EM_DIAGRAM):   end;
1491288   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1491289   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1491290   +   end;
MPRINT(EM_DIAGRAM):   end;
1491291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491292   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1491293   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491294   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491295   +   end;
MPRINT(EM_DIAGRAM):   end;
1491296   +end;
MPRINT(EM_DIAGRAM):   end;
1491297   +
1491298   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1491299   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1491300   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1491301   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1491302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491304   +end;
MPRINT(EM_DIAGRAM):   end;
1491305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1491307   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1491308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491309   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1491310   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1491311   +   end;
MPRINT(EM_DIAGRAM):   end;
1491312   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1491313   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1491314   +   end;
MPRINT(EM_DIAGRAM):   end;
1491315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491316   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1491317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491319   +   end;
MPRINT(EM_DIAGRAM):   end;
1491320   +end;
MPRINT(EM_DIAGRAM):   end;
1491321   +
1491322   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1491323   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1491324   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1491325   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1491326   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1491327   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1491328   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1491329   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1491330   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1491331   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1491332   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1491333   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1491334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491336   +end;
MPRINT(EM_DIAGRAM):   end;
1491337   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491338   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1491339   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1491340   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491341   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1491342   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1491343   +   end;
MPRINT(EM_DIAGRAM):   end;
1491344   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1491345   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1491346   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1491347   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1491348   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1491349   +   end;
MPRINT(EM_DIAGRAM):   end;
1491350   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1491351   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1491352   +   end;
MPRINT(EM_DIAGRAM):   end;
1491353   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1491354   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1491355   +   end;
MPRINT(EM_DIAGRAM):   end;
1491356   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1491357   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1491358   +   end;
MPRINT(EM_DIAGRAM):   end;
1491359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491360   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1491361   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1491362   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1491363   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1491364   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491365   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491366   +   end;
MPRINT(EM_DIAGRAM):   end;
1491367   +end;
MPRINT(EM_DIAGRAM):   end;
1491368   +
1491369   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1491370   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1491371   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1491372   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1491373   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1491374   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1491375   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1491376   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1491377   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1491378   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1491379   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1491380   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1491381   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1491382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1491383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491384   +end;
MPRINT(EM_DIAGRAM):   end;
1491385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1491386   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1491387   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1491388   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1491389   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1491390   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1491391   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1491392   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1491393   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1491394   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1491395   +         end;
MPRINT(EM_DIAGRAM):   end;
1491396   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1491397   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1491398   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1491399   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1491400   +            end;
MPRINT(EM_DIAGRAM):   end;
1491401   +         end;
MPRINT(EM_DIAGRAM):   end;
1491402   +      end;
MPRINT(EM_DIAGRAM):   end;
1491403   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1491404   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1491405   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1491406   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1491407   +         end;
MPRINT(EM_DIAGRAM):   end;
1491408   +      end;
MPRINT(EM_DIAGRAM):   end;
1491409   +   end;
MPRINT(EM_DIAGRAM):   end;
1491410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1491411   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1491412   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1491413   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1491414   +      end;
MPRINT(EM_DIAGRAM):   end;
1491415   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1491416   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1491417   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1491418   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1491419   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1491420   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1491421   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1491422   +         end;
MPRINT(EM_DIAGRAM):   end;
1491423   +      end;
MPRINT(EM_DIAGRAM):   end;
1491424   +   end;
MPRINT(EM_DIAGRAM):   end;
1491425   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1491426   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1491427   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1491428   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1491429   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1491430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1491431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491432   +   end;
MPRINT(EM_DIAGRAM):   end;
1491433   +end;
MPRINT(EM_DIAGRAM):   end;
1491434   +
1491435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491436   +*** Checking missing input Interval
1491437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1491438   +
1491439   +IF NMISS(
1491440   +   AcceptedCmpTotal ,
1491441   +   Age ,
1491442   +   Frq ,
1491443   +   Income ,
1491444   +   Kidhome ,
1491445   +   Mnt ,
1491446   +   MntFishProducts ,
1491447   +   MntFruits ,
1491448   +   MntGoldProds ,
1491449   +   MntMeatProducts ,
1491450   +   MntSweetProducts ,
1491451   +   MntWines ,
1491452   +   MonthsAsCustomer ,
1491453   +   NumCatalogPurchases ,
1491454   +   NumDealsPurchases ,
1491455   +   NumDistPurchases ,
1491456   +   NumStorePurchases ,
1491457   +   NumWebPurchases ,
1491458   +   NumWebVisitsMonth ,
1491459   +   RFMstat ,
1491460   +   RMntFrq ,
1491461   +   Recency ,
1491462   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1491463   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1491464   +
1491465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1491466   +END;
MPRINT(EM_DIAGRAM):   END;
1491467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491468   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1491469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491470   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1491471   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1491472   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1491473   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1491474   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1491475   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1491476   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1491477   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1491478   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1491479   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1491480   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1491481   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1491482   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1491483   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1491484   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1491485   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1491486   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1491487   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1491488   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1491489   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1491490   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1491491   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1491492   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1491493   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1491494   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1491495   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1491496   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1491497   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1491498   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1491499   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1491500   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1491501   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1491502   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1491503   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1491504   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1491505   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1491506   +END;
MPRINT(EM_DIAGRAM):   END;
1491507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1491508   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1491509   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1491510   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1491511   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1491512   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1491513   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1491514   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1491515   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1491516   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1491517   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1491518   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1491519   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1491520   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1491521   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1491522   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1491523   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1491524   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1491525   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1491526   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1491527   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1491528   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1491529   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1491530   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1491531   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1491532   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1491533   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1491534   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1491535   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1491536   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1491537   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1491538   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1491539   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1491540   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1491541   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1491542   +   ELSE S_NumCatalogPurchases
1491543   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1491544   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1491545   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1491546   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1491547   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1491548   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1491549   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1491550   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1491551   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1491552   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1491553   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1491554   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1491555   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1491556   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1491557   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1491558   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1491559   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1491560   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1491561   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1491562   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1491563   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1491564   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1491565   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1491566   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1491567   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1491568   +END;
MPRINT(EM_DIAGRAM):   END;
1491569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491570   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1491571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491573   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1491574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491576   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1491577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491578   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1491579   +   H11  =    -0.49268542152723 * S_AcceptedCmpTotal  +     -0.0481397514569 *
1491580   +        S_Age  +    -0.30437636824683 * S_Frq  +    -1.15179334457144 *
1491581   +        S_Income  +     0.52341833722719 * S_Kidhome
1491582   +          +    -0.21261714885662 * S_Mnt  +    -0.10196325382831 *
1491583   +        S_MntFishProducts  +     0.18788251887399 * S_MntFruits
1491584   +          +     0.07877248271808 * S_MntGoldProds  +     -0.3554186123772 *
1491585   +        S_MntMeatProducts  +     0.26810834903306 * S_MntSweetProducts
1491586   +          +      0.7572736068799 * S_MntWines  +    -0.11619352540399 *
1491587   +        S_MonthsAsCustomer  +    -0.46080176244829 * S_NumCatalogPurchases
1491588   +          +    -0.07601319156416 * S_NumDealsPurchases
1491589   +          +    -0.37691059923172 * S_NumDistPurchases
1491590   +          +     0.14479416923691 * S_NumStorePurchases
1491591   +          +     0.22886116861382 * S_NumWebPurchases
1491592   +          +    -1.05452266604504 * S_NumWebVisitsMonth
1491593   +          +     0.11426625648846 * S_RFMstat  +    -0.46845377036873 *
1491594   +        S_RMntFrq  +     1.39805990084367 * S_Recency
1491595   +          +     0.91325795567367 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.49268542152723 * S_AcceptedCmpTotal + -0.0481397514569 * S_Age 
+ -0.30437636824683 * S_Frq + -1.15179334457144 * S_Income + 0.52341833722719 * S_Kidhome + 
-0.21261714885662 * S_Mnt + -0.10196325382831 * S_MntFishProducts + 0.18788251887399 * 
S_MntFruits + 0.07877248271808 * S_MntGoldProds + -0.3554186123772 * S_MntMeatProducts + 
0.26810834903306 * S_MntSweetProducts + 0.7572736068799 * S_MntWines + -0.11619352540399 * 
S_MonthsAsCustomer + -0.46080176244829 * S_NumCatalogPurchases + -0.07601319156416 * 
S_NumDealsPurchases + -0.37691059923172 * S_NumDistPurchases + 0.14479416923691 * 
S_NumStorePurchases + 0.22886116861382 * S_NumWebPurchases + -1.05452266604504 * 
S_NumWebVisitsMonth + 0.11426625648846 * S_RFMstat + -0.46845377036873 * S_RMntFrq + 
1.39805990084367 * S_Recency + 0.91325795567367 * S_Teenhome ;
1491596   +   H12  =     0.48640474281615 * S_AcceptedCmpTotal  +     0.03168788563965 *
1491597   +        S_Age  +    -0.02802128226737 * S_Frq  +     0.52993214073901 *
1491598   +        S_Income  +     0.24958351789577 * S_Kidhome
1491599   +          +     0.25221072579725 * S_Mnt  +    -0.54431466149526 *
1491600   +        S_MntFishProducts  +    -0.09969634201392 * S_MntFruits
1491601   +          +     0.22251888175317 * S_MntGoldProds  +     2.21720479300716 *
1491602   +        S_MntMeatProducts  +     0.08411214394291 * S_MntSweetProducts
1491603   +          +    -0.83482542959891 * S_MntWines  +     0.06928323386075 *
1491604   +        S_MonthsAsCustomer  +     1.61603076533547 * S_NumCatalogPurchases
1491605   +          +     0.79919814392328 * S_NumDealsPurchases
1491606   +          +     0.30394718497487 * S_NumDistPurchases
1491607   +          +      -0.727130739278 * S_NumStorePurchases
1491608   +          +    -0.92337052372179 * S_NumWebPurchases
1491609   +          +     0.22125703025242 * S_NumWebVisitsMonth
1491610   +          +     0.51615035692083 * S_RFMstat  +     0.09759485646525 *
1491611   +        S_RMntFrq  +    -0.21632393786918 * S_Recency
1491612   +          +    -0.09817720742254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.48640474281615 * S_AcceptedCmpTotal + 0.03168788563965 * S_Age + 
-0.02802128226737 * S_Frq + 0.52993214073901 * S_Income + 0.24958351789577 * S_Kidhome + 
0.25221072579725 * S_Mnt + -0.54431466149526 * S_MntFishProducts + -0.09969634201392 * 
S_MntFruits + 0.22251888175317 * S_MntGoldProds + 2.21720479300716 * S_MntMeatProducts + 
0.08411214394291 * S_MntSweetProducts + -0.83482542959891 * S_MntWines + 0.06928323386075 * 
S_MonthsAsCustomer + 1.61603076533547 * S_NumCatalogPurchases + 0.79919814392328 * 
S_NumDealsPurchases + 0.30394718497487 * S_NumDistPurchases + -0.727130739278 * 
S_NumStorePurchases + -0.92337052372179 * S_NumWebPurchases + 0.22125703025242 * 
S_NumWebVisitsMonth + 0.51615035692083 * S_RFMstat + 0.09759485646525 * S_RMntFrq + 
-0.21632393786918 * S_Recency + -0.09817720742254 * S_Teenhome ;
1491613   +   H13  =    -0.14277955421105 * S_AcceptedCmpTotal  +     0.01891543541262 *
1491614   +        S_Age  +    -0.09449326498218 * S_Frq  +    -0.03060296052615 *
1491615   +        S_Income  +    -0.02210730279852 * S_Kidhome
1491616   +          +     0.15705631910101 * S_Mnt  +     0.08573647183827 *
1491617   +        S_MntFishProducts  +    -0.07727594473101 * S_MntFruits
1491618   +          +     0.10800565745981 * S_MntGoldProds  +     0.16136844354024 *
1491619   +        S_MntMeatProducts  +    -0.27592138838926 * S_MntSweetProducts
1491620   +          +    -0.28884862043521 * S_MntWines  +    -0.26221449264568 *
1491621   +        S_MonthsAsCustomer  +    -0.12893818317268 * S_NumCatalogPurchases
1491622   +          +    -0.07260787713046 * S_NumDealsPurchases
1491623   +          +    -0.11357594278299 * S_NumDistPurchases
1491624   +          +    -0.12187788759653 * S_NumStorePurchases
1491625   +          +    -0.12854188822638 * S_NumWebPurchases
1491626   +          +     0.19328484993193 * S_NumWebVisitsMonth
1491627   +          +     0.29126701299369 * S_RFMstat  +       0.295572030551 *
1491628   +        S_RMntFrq  +    -0.17474693596234 * S_Recency
1491629   +          +    -0.15767296223747 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14277955421105 * S_AcceptedCmpTotal + 0.01891543541262 * S_Age 
+ -0.09449326498218 * S_Frq + -0.03060296052615 * S_Income + -0.02210730279852 * S_Kidhome + 
0.15705631910101 * S_Mnt + 0.08573647183827 * S_MntFishProducts + -0.07727594473101 * 
S_MntFruits + 0.10800565745981 * S_MntGoldProds + 0.16136844354024 * S_MntMeatProducts + 
-0.27592138838926 * S_MntSweetProducts + -0.28884862043521 * S_MntWines + -0.26221449264568 * 
S_MonthsAsCustomer + -0.12893818317268 * S_NumCatalogPurchases + -0.07260787713046 * 
S_NumDealsPurchases + -0.11357594278299 * S_NumDistPurchases + -0.12187788759653 * 
S_NumStorePurchases + -0.12854188822638 * S_NumWebPurchases + 0.19328484993193 * 
S_NumWebVisitsMonth + 0.29126701299369 * S_RFMstat + 0.295572030551 * S_RMntFrq + 
-0.17474693596234 * S_Recency + -0.15767296223747 * S_Teenhome ;
1491630   +   H14  =     0.02882140654096 * S_AcceptedCmpTotal  +     0.22754549790851 *
1491631   +        S_Age  +     0.62237954814905 * S_Frq  +     0.32094678094502 *
1491632   +        S_Income  +     -0.5159289111115 * S_Kidhome
1491633   +          +    -0.06660708376246 * S_Mnt  +     0.23505454155784 *
1491634   +        S_MntFishProducts  +     -0.1751094914934 * S_MntFruits
1491635   +          +     0.28529181082906 * S_MntGoldProds  +    -0.86064239437512 *
1491636   +        S_MntMeatProducts  +    -0.11869244038768 * S_MntSweetProducts
1491637   +          +     0.54178192135459 * S_MntWines  +     0.01320164526542 *
1491638   +        S_MonthsAsCustomer  +     -0.8775343676818 * S_NumCatalogPurchases
1491639   +          +    -0.76643907891635 * S_NumDealsPurchases
1491640   +          +     0.28173289049322 * S_NumDistPurchases
1491641   +          +     0.65522454520442 * S_NumStorePurchases
1491642   +          +     0.68112901460293 * S_NumWebPurchases
1491643   +          +    -0.49101731268641 * S_NumWebVisitsMonth
1491644   +          +    -0.19434806570231 * S_RFMstat  +    -0.00086194515061 *
1491645   +        S_RMntFrq  +     0.47432332222746 * S_Recency
1491646   +          +    -0.05016870847242 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02882140654096 * S_AcceptedCmpTotal + 0.22754549790851 * S_Age + 
0.62237954814905 * S_Frq + 0.32094678094502 * S_Income + -0.5159289111115 * S_Kidhome + 
-0.06660708376246 * S_Mnt + 0.23505454155784 * S_MntFishProducts + -0.1751094914934 * 
S_MntFruits + 0.28529181082906 * S_MntGoldProds + -0.86064239437512 * S_MntMeatProducts + 
-0.11869244038768 * S_MntSweetProducts + 0.54178192135459 * S_MntWines + 0.01320164526542 * 
S_MonthsAsCustomer + -0.8775343676818 * S_NumCatalogPurchases + -0.76643907891635 * 
S_NumDealsPurchases + 0.28173289049322 * S_NumDistPurchases + 0.65522454520442 * 
S_NumStorePurchases + 0.68112901460293 * S_NumWebPurchases + -0.49101731268641 * 
S_NumWebVisitsMonth + -0.19434806570231 * S_RFMstat + -0.00086194515061 * S_RMntFrq + 
0.47432332222746 * S_Recency + -0.05016870847242 * S_Teenhome ;
1491647   +   H15  =    -0.53993167927046 * S_AcceptedCmpTotal  +    -0.01376485869661 *
1491648   +        S_Age  +     0.13417021721762 * S_Frq  +    -0.46098316120524 *
1491649   +        S_Income  +     0.79883165437194 * S_Kidhome
1491650   +          +    -0.08868062204795 * S_Mnt  +     0.27921118443695 *
1491651   +        S_MntFishProducts  +     0.07333408727108 * S_MntFruits
1491652   +          +    -0.12699517331566 * S_MntGoldProds  +    -0.83076183794341 *
1491653   +        S_MntMeatProducts  +     0.07046050445165 * S_MntSweetProducts
1491654   +          +     0.39887580122915 * S_MntWines  +     0.22266979348172 *
1491655   +        S_MonthsAsCustomer  +    -0.63148593968536 * S_NumCatalogPurchases
1491656   +          +    -0.54240596184474 * S_NumDealsPurchases
1491657   +          +     0.07214067132859 * S_NumDistPurchases
1491658   +          +     0.63136920851698 * S_NumStorePurchases
1491659   +          +     0.67036298761526 * S_NumWebPurchases
1491660   +          +     -1.5590147163003 * S_NumWebVisitsMonth
1491661   +          +    -0.14672746638498 * S_RFMstat  +     0.45614757001513 *
1491662   +        S_RMntFrq  +     1.43166375146019 * S_Recency
1491663   +          +     0.33608033306213 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.53993167927046 * S_AcceptedCmpTotal + -0.01376485869661 * S_Age 
+ 0.13417021721762 * S_Frq + -0.46098316120524 * S_Income + 0.79883165437194 * S_Kidhome + 
-0.08868062204795 * S_Mnt + 0.27921118443695 * S_MntFishProducts + 0.07333408727108 * 
S_MntFruits + -0.12699517331566 * S_MntGoldProds + -0.83076183794341 * S_MntMeatProducts + 
0.07046050445165 * S_MntSweetProducts + 0.39887580122915 * S_MntWines + 0.22266979348172 * 
S_MonthsAsCustomer + -0.63148593968536 * S_NumCatalogPurchases + -0.54240596184474 * 
S_NumDealsPurchases + 0.07214067132859 * S_NumDistPurchases + 0.63136920851698 * 
S_NumStorePurchases + 0.67036298761526 * S_NumWebPurchases + -1.5590147163003 * 
S_NumWebVisitsMonth + -0.14672746638498 * S_RFMstat + 0.45614757001513 * S_RMntFrq + 
1.43166375146019 * S_Recency + 0.33608033306213 * S_Teenhome ;
1491664   +   H11  = H11  +     0.00378267229722 * AcceptedCmp10
1491665   +          +     0.35869089787338 * AcceptedCmp20  +     0.34289379925327 *
1491666   +        AcceptedCmp30  +     0.52644241458012 * AcceptedCmp40
1491667   +          +    -0.13608418232323 * AcceptedCmp50  +      0.0959964311844 *
1491668   +        Complain0  +    -0.33986310453812 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00378267229722 * AcceptedCmp10 + 0.35869089787338 * 
AcceptedCmp20 + 0.34289379925327 * AcceptedCmp30 + 0.52644241458012 * AcceptedCmp40 + 
-0.13608418232323 * AcceptedCmp50 + 0.0959964311844 * Complain0 + -0.33986310453812 * 
HigherEducationBinary0 ;
1491669   +   H12  = H12  +    -0.20844623079893 * AcceptedCmp10
1491670   +          +      0.2510523434536 * AcceptedCmp20  +     0.23001544402014 *
1491671   +        AcceptedCmp30  +     0.31575100635625 * AcceptedCmp40
1491672   +          +    -0.27770609908664 * AcceptedCmp50  +     0.23396693724368 *
1491673   +        Complain0  +    -0.14587691179074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20844623079893 * AcceptedCmp10 + 0.2510523434536 * 
AcceptedCmp20 + 0.23001544402014 * AcceptedCmp30 + 0.31575100635625 * AcceptedCmp40 + 
-0.27770609908664 * AcceptedCmp50 + 0.23396693724368 * Complain0 + -0.14587691179074 * 
HigherEducationBinary0 ;
1491674   +   H13  = H13  +    -0.01749375115567 * AcceptedCmp10
1491675   +          +     0.03272810660889 * AcceptedCmp20  +     0.05919744501073 *
1491676   +        AcceptedCmp30  +    -0.05281709288559 * AcceptedCmp40
1491677   +          +     0.17878522964245 * AcceptedCmp50  +    -0.15875476707826 *
1491678   +        Complain0  +     0.12807090869788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.01749375115567 * AcceptedCmp10 + 0.03272810660889 * 
AcceptedCmp20 + 0.05919744501073 * AcceptedCmp30 + -0.05281709288559 * AcceptedCmp40 + 
0.17878522964245 * AcceptedCmp50 + -0.15875476707826 * Complain0 + 0.12807090869788 * 
HigherEducationBinary0 ;
1491679   +   H14  = H14  +     0.09851664636541 * AcceptedCmp10
1491680   +          +     0.31377564249189 * AcceptedCmp20  +     0.52269532116349 *
1491681   +        AcceptedCmp30  +     0.02591777861146 * AcceptedCmp40
1491682   +          +     0.32944924737684 * AcceptedCmp50  +     0.47187246513641 *
1491683   +        Complain0  +     0.20705632210077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09851664636541 * AcceptedCmp10 + 0.31377564249189 * 
AcceptedCmp20 + 0.52269532116349 * AcceptedCmp30 + 0.02591777861146 * AcceptedCmp40 + 
0.32944924737684 * AcceptedCmp50 + 0.47187246513641 * Complain0 + 0.20705632210077 * 
HigherEducationBinary0 ;
1491684   +   H15  = H15  +     0.25267160740134 * AcceptedCmp10
1491685   +          +     0.37928521134817 * AcceptedCmp20  +     0.14104403552359 *
1491686   +        AcceptedCmp30  +     0.11544762492946 * AcceptedCmp40
1491687   +          +     0.50603978517673 * AcceptedCmp50  +    -0.00034162341159 *
1491688   +        Complain0  +    -0.00425270701284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.25267160740134 * AcceptedCmp10 + 0.37928521134817 * 
AcceptedCmp20 + 0.14104403552359 * AcceptedCmp30 + 0.11544762492946 * AcceptedCmp40 + 
0.50603978517673 * AcceptedCmp50 + -0.00034162341159 * Complain0 + -0.00425270701284 * 
HigherEducationBinary0 ;
1491689   +   H11  = H11  +     0.21764897070728 * Education2n_Cycle
1491690   +          +    -0.08901311303506 * EducationBasic  +      0.0272878010337 *
1491691   +        EducationGraduation  +     0.05103320060897 * EducationMaster
1491692   +          +    -0.43880138896132 * Marital_StatusDivorced
1491693   +          +     1.07801970957052 * Marital_StatusMarried
1491694   +          +    -1.01564319756795 * Marital_StatusSingle
1491695   +          +     1.06803078970545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21764897070728 * Education2n_Cycle + -0.08901311303506 * 
EducationBasic + 0.0272878010337 * EducationGraduation + 0.05103320060897 * EducationMaster + 
-0.43880138896132 * Marital_StatusDivorced + 1.07801970957052 * Marital_StatusMarried + 
-1.01564319756795 * Marital_StatusSingle + 1.06803078970545 * Marital_StatusTogether ;
1491696   +   H12  = H12  +     0.20450416319293 * Education2n_Cycle
1491697   +          +    -0.09602008725654 * EducationBasic  +     0.01841737017681 *
1491698   +        EducationGraduation  +     0.06732737733154 * EducationMaster
1491699   +          +    -0.26753605060913 * Marital_StatusDivorced
1491700   +          +     0.38107608670301 * Marital_StatusMarried
1491701   +          +     -0.1436641790467 * Marital_StatusSingle
1491702   +          +     0.51604025961093 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20450416319293 * Education2n_Cycle + -0.09602008725654 * 
EducationBasic + 0.01841737017681 * EducationGraduation + 0.06732737733154 * EducationMaster + 
-0.26753605060913 * Marital_StatusDivorced + 0.38107608670301 * Marital_StatusMarried + 
-0.1436641790467 * Marital_StatusSingle + 0.51604025961093 * Marital_StatusTogether ;
1491703   +   H13  = H13  +     0.06208521737633 * Education2n_Cycle
1491704   +          +    -0.33631443686566 * EducationBasic  +     0.16608152113657 *
1491705   +        EducationGraduation  +     0.12802026359779 * EducationMaster
1491706   +          +    -0.08001329849816 * Marital_StatusDivorced
1491707   +          +      0.0371075570789 * Marital_StatusMarried
1491708   +          +     0.00370467546319 * Marital_StatusSingle
1491709   +          +    -0.00676233309382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06208521737633 * Education2n_Cycle + -0.33631443686566 * 
EducationBasic + 0.16608152113657 * EducationGraduation + 0.12802026359779 * EducationMaster + 
-0.08001329849816 * Marital_StatusDivorced + 0.0371075570789 * Marital_StatusMarried + 
0.00370467546319 * Marital_StatusSingle + -0.00676233309382 * Marital_StatusTogether ;
1491710   +   H14  = H14  +     0.23121044223136 * Education2n_Cycle
1491711   +          +     0.20063897603031 * EducationBasic  +    -0.03690411024016 *
1491712   +        EducationGraduation  +    -0.05893576310907 * EducationMaster
1491713   +          +     0.13587543683769 * Marital_StatusDivorced
1491714   +          +    -0.45903453868087 * Marital_StatusMarried
1491715   +          +      0.3498299821692 * Marital_StatusSingle
1491716   +          +    -0.24987552246214 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23121044223136 * Education2n_Cycle + 0.20063897603031 * 
EducationBasic + -0.03690411024016 * EducationGraduation + -0.05893576310907 * EducationMaster 
+ 0.13587543683769 * Marital_StatusDivorced + -0.45903453868087 * Marital_StatusMarried + 
0.3498299821692 * Marital_StatusSingle + -0.24987552246214 * Marital_StatusTogether ;
1491717   +   H15  = H15  +    -0.25453618071143 * Education2n_Cycle
1491718   +          +     0.10531942203707 * EducationBasic  +    -0.11067812258079 *
1491719   +        EducationGraduation  +     0.22861584696672 * EducationMaster
1491720   +          +    -0.23512394203797 * Marital_StatusDivorced
1491721   +          +       0.710701930681 * Marital_StatusMarried
1491722   +          +    -0.56116525410203 * Marital_StatusSingle
1491723   +          +     0.87274230285244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25453618071143 * Education2n_Cycle + 0.10531942203707 * 
EducationBasic + -0.11067812258079 * EducationGraduation + 0.22861584696672 * EducationMaster 
+ -0.23512394203797 * Marital_StatusDivorced + 0.710701930681 * Marital_StatusMarried + 
-0.56116525410203 * Marital_StatusSingle + 0.87274230285244 * Marital_StatusTogether ;
1491724   +   H11  =     1.97354382834855 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.97354382834855 + H11 ;
1491725   +   H12  =     0.19040674177137 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19040674177137 + H12 ;
1491726   +   H13  =    -2.95812486901971 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.95812486901971 + H13 ;
1491727   +   H14  =     0.68206105329025 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.68206105329025 + H14 ;
1491728   +   H15  =    -0.15880184648294 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15880184648294 + H15 ;
1491729   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1491730   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1491731   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1491732   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1491733   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1491734   +END;
MPRINT(EM_DIAGRAM):   END;
1491735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1491736   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1491737   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1491738   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1491739   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1491740   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1491741   +END;
MPRINT(EM_DIAGRAM):   END;
1491742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491743   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1491744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491745   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1491746   +   P_DepVar1  =    -3.25756779032103 * H11  +     3.11613473869222 * H12
1491747   +          +     0.05860782492357 * H13  +    -2.24562119342825 * H14
1491748   +          +    -3.55426417229617 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.25756779032103 * H11 + 3.11613473869222 * H12 + 
0.05860782492357 * H13 + -2.24562119342825 * H14 + -3.55426417229617 * H15 ;
1491749   +   P_DepVar1  =    -1.11502795304759 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11502795304759 + P_DepVar1 ;
1491750   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1491751   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1491752   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1491753   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1491754   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1491755   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1491756   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1491757   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1491758   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1491759   +END;
MPRINT(EM_DIAGRAM):   END;
1491760   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1491761   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1491762   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1491763   +END;
MPRINT(EM_DIAGRAM):   END;
1491764   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1491765   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1491766   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1491767   +END;
MPRINT(EM_DIAGRAM):   END;
1491768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491769   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1491770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1491771   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1491772   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1491773   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1491774   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1491775   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1491776   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1491777   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1491778   +END;
MPRINT(EM_DIAGRAM):   END;
1491779   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1491780   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1491781   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1491782   +drop
1491783   +H11
1491784   +H12
1491785   +H13
1491786   +H14
1491787   +H15
1491788   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1491789   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1491790    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1491791    quit;
1491792    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1491793    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1491794    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1491795    retain ID 2 Node "Neural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural7";
1491796    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1491797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491798    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1491799    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491800    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2702 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2702 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491801    proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural7_variableset out=_temp2(keep=NAME CREATOR);
1491802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491803    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491804    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1491805    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1491806    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1491807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491808    proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural7_train out=_meta(keep=NAME) noprint;
1491809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1491810    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1491811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491813    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1491814    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1491815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491816    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491817    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1491818    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1491818  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1527 rows and 5 columns.

1491819    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491820    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1491821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1527 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1527 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491822    filename _pref
1491822  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1491823    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1491824    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1491825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1491826   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1491827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1491828   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1491829   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1491830   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1491831    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1491832    quit;
1491833    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1491834    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1491835    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1491836    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1491837    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1491838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491839    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1491840    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491842    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1491843    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491845    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1491846    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1491847    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1491848    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491849    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1491850    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1491851    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1491852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491854    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1491855    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1491856    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491857    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491858    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1491859    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1491859  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1491860    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491861    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1491862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491863    filename _pref
1491863  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1491864    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1491865    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1491866   +
1491867   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1491868   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1491868  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1491869   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1491870   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1491871   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1491872   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1491873   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1491874    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1491875    quit;
1491876    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1491877    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1491878    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1491879    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1491880    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1491881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1491882    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1491883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491885    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1491886    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491887    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491888    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1491889    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1491890    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1491891    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491892    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1491893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491894    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1491895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491897    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1491898    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1491899    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1491900    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491901    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1491902    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1491902  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1491903    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491904    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1491905    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491906    filename _pref
1491906  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1491907    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1491908    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1491909   +
1491910   +
1491911   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1491912   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1491913   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1491914   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1491915   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1491916   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491917   +
1491918   +
1491919   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1491920   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1491921   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1491922   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1491923   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1491924   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491925   +
1491926   +
1491927   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1491928   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1491929   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1491930   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1491931   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1491932   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491933   +
1491934   +
1491935   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1491936   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1491937   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1491938   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1491939   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1491940   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491941   +
1491942   +
1491943   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1491944   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1491945   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1491946   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1491947   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1491948   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491949   +
1491950   +
1491951   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1491952   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1491953   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1491954   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1491955   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1491956   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491957   +
1491958   +
1491959   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1491960   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1491961   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1491962   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1491963   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1491964   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491965   +
1491966   +
1491967   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1491968   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1491969   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1491970   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1491971   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1491972   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1491973   +if
1491974   +_FILTERNORM1 not in ( '.')
1491975   + and
1491976   +_FILTERNORM2 not in ( '.')
1491977   + and
1491978   +_FILTERNORM3 not in ( '.')
1491979   + and
1491980   +_FILTERNORM4 not in ( '.')
1491981   + and
1491982   +_FILTERNORM5 not in ( '.')
1491983   + and
1491984   +_FILTERNORM6 not in ( '.')
1491985   + and
1491986   +_FILTERNORM7 not in ( ' ')
1491987   + and
1491988   +_FILTERNORM8 not in ( ' ')
1491989   +and
1491990   +( Dt_Customer ne .)
1491991   +and ( Income ne . and (Income<=107000))
1491992   +and ( Kidhome ne .)
1491993   +and ( MntFishProducts ne .)
1491994   +and ( MntFruits ne .)
1491995   +and ( MntGoldProds ne .)
1491996   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1491997   +and ( MntSweetProducts ne .)
1491998   +and ( MntWines ne .)
1491999   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1492000   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1492001   +and ( NumStorePurchases ne .)
1492002   +and ( NumWebPurchases ne .)
1492003   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1492004   +and ( Recency ne .)
1492005   +and ( Teenhome ne .)
1492006   +and ( Year_Birth ne .)
1492007   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1492008   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1492009   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1492010   +end;
MPRINT(EM_DIAGRAM):   end;
1492011   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1492012   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1492013    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1492014    quit;
1492015    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1492016    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1492017    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1492018    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1492019    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1492020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492021    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1492022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492024    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1492025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492027    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1492028    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1492029    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1492030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492031    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1492032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1492033    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1492034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1492037    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1492038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492039    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492040    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1492041    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1492041  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1492042    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492043    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1492044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1636 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492045    %macro varDept(fcmpdata=,id=);
1492046    %global nobs&id scoreFlag&id;
1492047    %let scoreFlag&id = 0;
1492048    %if &id=1 or ^&fcmpStart %then %do;
1492049    proc sort data=&fcmpdata out=_temp&id nodupkey;
1492050    by NAME;
1492051    where id=&id and LHS in( %let j=1;
1492052    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1492053    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1492054    "&var" %let j = %eval(&j+1);
1492055    %end;
1492056    );
1492057    run;
1492058    %let dsid = %sysfunc(open(_temp&id));
1492059    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1492060    %let dsid = %sysfunc(close(&dsid));
1492061    %if &&nobs&id %then %do;
1492062    %let scoreFlag&id = 1;
1492063    %let fcmpStart = 1;
1492064    %end;
1492065    %else %let fcmpStart = 0;
1492066    %end;
1492067    %else %do;
1492068    proc sort data=&fcmpdata out=_tempid;
1492069    where id=&id;
1492070    by LHS;
1492071    run;
1492072    %let dsid = %sysfunc(open(_tempid));
1492073    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1492074    %let dsid = %sysfunc(close(&dsid));
1492075    %if ^&&nobs&id %then %do;
1492076    proc datasets lib=work nolist;
1492077    delete _tempid;
1492078    run;
1492079    quit;
1492080    %end;
1492081    %else %do;
1492082    data _tempAll;
1492083    set %let j=%eval(&id-1);
1492084    %do x=1 %to &j;
1492085    %if &&nobs&x %then %do;
1492086    _temp&x %end;
1492087    %end;
1492088    ;
1492089    run;
1492090    proc sql;
1492091    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1492091  ! work._tempid p2 where p.name=p2.lhs;
1492092    quit;
1492093    data _temp&id;
1492094    set _temp&id;
1492095    where LHS ne '' and NAME ne '' and Node ne '';
1492096    run;
1492097    proc datasets lib=work nolist;
1492098    delete _tempAll;
1492099    run;
1492100    %let dsid = %sysfunc(open(_temp&id));
1492101    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1492102    %let dsid = %sysfunc(close(&dsid));
1492103    %if ^&&nobs&id %then %do;
1492104    proc datasets lib=work nolist;
1492105    delete _temp&id;
1492106    run;
1492107    quit;
1492108    %end;
1492109    %else %do;
1492110    %let scoreFlag&id = 1;
1492111    data _temp&id;
1492112    set _temp&id;
1492113    where LHS ne NAME and node ne '';
1492114    run;
1492115    %let dsid = %sysfunc(open(_temp&id));
1492116    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1492117    %let dsid = %sysfunc(close(&dsid));
1492118    %if ^&&nobs&id %then %do;
1492119    proc datasets lib=work nolist;
1492120    delete _temp&id;
1492121    run;
1492122    quit;
1492123    %end;
1492124    %else %do;
1492125    proc sort data=_temp&id nodupkey;
1492126    by LHS NAME;
1492127    run;
1492128    %end;
1492129    %end;
1492130    %end;
1492131    %end;
1492132    %mend varDept;
1492133    %macro optCode(outdata=fcmpdata);
1492134    %global fcmpStart;
1492135    %let fcmpStart = 0;
1492136    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1492137    %let NumNodes=9;
1492138    %do k=1 %to &NumNodes;
1492139    %vardept(fcmpdata=&outdata, id=&k);
1492140    %end;
1492141    %mend optCode;
1492142    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1492143    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1492144    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1492145    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1492146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492147    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1492148    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1492149    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1492150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492151    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1492152    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1492152  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1492153    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1492154    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1492155    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1492156    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492157    filename _pref
1492157  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1492158    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1492159    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1492160   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1492161   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1492162   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1492163   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1492164   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1492165   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1492166   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1492167   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1492168   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1492169   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1492170   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1492171   +LENGTH _WARN_ $4
1492172   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1492173   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1492174   +
1492175   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1492176   +
1492177   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1492178   +
1492179   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1492180   +
1492181   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1492182   +
1492183   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1492184   +
1492185   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1492186   +
1492187   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1492188   +
1492189   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1492190   +
1492191   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1492192   +
1492193   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1492194   +
1492195   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1492196   +
1492197   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1492198   +
1492199   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1492200   +
1492201   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1492202   +
1492203   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1492204   +
1492205   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1492206   +
1492207   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1492208   +
1492209   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1492210   +
1492211   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1492212   +
1492213   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1492214   +
1492215   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1492216   +
1492217   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1492218   +
1492219   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1492220   +
1492221   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1492222   +
1492223   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1492224   +
1492225   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1492226   +
1492227   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1492228   +
1492229   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1492230   +
1492231   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1492232   +
1492233   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1492234   +
1492235   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1492236   +
1492237   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1492238   +
1492239   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1492240   +
1492241   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1492242   +
1492243   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1492244   +
1492245   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1492246   +
1492247   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1492248   +
1492249   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1492250   +
1492251   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1492252   +
1492253   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1492254   +
1492255   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1492256   +
1492257   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1492258   +
1492259   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1492260   +
1492261   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1492262   +
1492263   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1492264   +
1492265   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1492266   +
1492267   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1492268   +
1492269   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1492270   +
1492271   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1492272   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1492273   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1492274   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1492275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492277   +end;
MPRINT(EM_DIAGRAM):   end;
1492278   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492280   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1492281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1492283   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1492284   +   end;
MPRINT(EM_DIAGRAM):   end;
1492285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1492286   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1492287   +   end;
MPRINT(EM_DIAGRAM):   end;
1492288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492289   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1492290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492292   +   end;
MPRINT(EM_DIAGRAM):   end;
1492293   +end;
MPRINT(EM_DIAGRAM):   end;
1492294   +
1492295   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1492296   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1492297   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1492298   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1492299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492301   +end;
MPRINT(EM_DIAGRAM):   end;
1492302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492304   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1492305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492306   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1492307   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1492308   +   end;
MPRINT(EM_DIAGRAM):   end;
1492309   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1492310   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1492311   +   end;
MPRINT(EM_DIAGRAM):   end;
1492312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492313   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1492314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492316   +   end;
MPRINT(EM_DIAGRAM):   end;
1492317   +end;
MPRINT(EM_DIAGRAM):   end;
1492318   +
1492319   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1492320   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1492321   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1492322   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1492323   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492324   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492325   +end;
MPRINT(EM_DIAGRAM):   end;
1492326   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492327   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492328   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1492329   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492330   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1492331   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1492332   +   end;
MPRINT(EM_DIAGRAM):   end;
1492333   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1492334   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1492335   +   end;
MPRINT(EM_DIAGRAM):   end;
1492336   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492337   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1492338   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492339   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492340   +   end;
MPRINT(EM_DIAGRAM):   end;
1492341   +end;
MPRINT(EM_DIAGRAM):   end;
1492342   +
1492343   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1492344   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1492345   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1492346   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1492347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492349   +end;
MPRINT(EM_DIAGRAM):   end;
1492350   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492351   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492352   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1492353   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492354   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1492355   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1492356   +   end;
MPRINT(EM_DIAGRAM):   end;
1492357   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1492358   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1492359   +   end;
MPRINT(EM_DIAGRAM):   end;
1492360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492361   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1492362   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492363   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492364   +   end;
MPRINT(EM_DIAGRAM):   end;
1492365   +end;
MPRINT(EM_DIAGRAM):   end;
1492366   +
1492367   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1492368   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1492369   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1492370   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1492371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492373   +end;
MPRINT(EM_DIAGRAM):   end;
1492374   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492375   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492376   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1492377   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492378   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1492379   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1492380   +   end;
MPRINT(EM_DIAGRAM):   end;
1492381   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1492382   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1492383   +   end;
MPRINT(EM_DIAGRAM):   end;
1492384   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492385   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1492386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492388   +   end;
MPRINT(EM_DIAGRAM):   end;
1492389   +end;
MPRINT(EM_DIAGRAM):   end;
1492390   +
1492391   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1492392   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1492393   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1492394   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1492395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492397   +end;
MPRINT(EM_DIAGRAM):   end;
1492398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492399   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492400   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1492401   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492402   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1492403   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1492404   +   end;
MPRINT(EM_DIAGRAM):   end;
1492405   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1492406   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1492407   +   end;
MPRINT(EM_DIAGRAM):   end;
1492408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492409   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1492410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492412   +   end;
MPRINT(EM_DIAGRAM):   end;
1492413   +end;
MPRINT(EM_DIAGRAM):   end;
1492414   +
1492415   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1492416   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1492417   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1492418   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1492419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492421   +end;
MPRINT(EM_DIAGRAM):   end;
1492422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1492424   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1492425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492426   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1492427   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1492428   +   end;
MPRINT(EM_DIAGRAM):   end;
1492429   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1492430   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1492431   +   end;
MPRINT(EM_DIAGRAM):   end;
1492432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492433   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1492434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492436   +   end;
MPRINT(EM_DIAGRAM):   end;
1492437   +end;
MPRINT(EM_DIAGRAM):   end;
1492438   +
1492439   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1492440   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1492441   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1492442   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1492443   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1492444   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1492445   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1492446   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1492447   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1492448   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1492449   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1492450   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1492451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492453   +end;
MPRINT(EM_DIAGRAM):   end;
1492454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492455   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1492456   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1492457   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492458   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1492459   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1492460   +   end;
MPRINT(EM_DIAGRAM):   end;
1492461   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1492462   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1492463   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1492464   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1492465   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1492466   +   end;
MPRINT(EM_DIAGRAM):   end;
1492467   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1492468   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1492469   +   end;
MPRINT(EM_DIAGRAM):   end;
1492470   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1492471   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1492472   +   end;
MPRINT(EM_DIAGRAM):   end;
1492473   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1492474   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1492475   +   end;
MPRINT(EM_DIAGRAM):   end;
1492476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492477   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1492478   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1492479   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1492480   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1492481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492483   +   end;
MPRINT(EM_DIAGRAM):   end;
1492484   +end;
MPRINT(EM_DIAGRAM):   end;
1492485   +
1492486   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1492487   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1492488   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1492489   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1492490   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1492491   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1492492   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1492493   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1492494   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1492495   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1492496   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1492497   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1492498   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1492499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1492500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492501   +end;
MPRINT(EM_DIAGRAM):   end;
1492502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1492503   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1492504   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1492505   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1492506   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1492507   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1492508   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1492509   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1492510   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1492511   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1492512   +         end;
MPRINT(EM_DIAGRAM):   end;
1492513   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1492514   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1492515   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1492516   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1492517   +            end;
MPRINT(EM_DIAGRAM):   end;
1492518   +         end;
MPRINT(EM_DIAGRAM):   end;
1492519   +      end;
MPRINT(EM_DIAGRAM):   end;
1492520   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1492521   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1492522   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1492523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1492524   +         end;
MPRINT(EM_DIAGRAM):   end;
1492525   +      end;
MPRINT(EM_DIAGRAM):   end;
1492526   +   end;
MPRINT(EM_DIAGRAM):   end;
1492527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1492528   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1492529   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1492530   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1492531   +      end;
MPRINT(EM_DIAGRAM):   end;
1492532   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1492533   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1492534   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1492535   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1492536   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1492537   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1492538   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1492539   +         end;
MPRINT(EM_DIAGRAM):   end;
1492540   +      end;
MPRINT(EM_DIAGRAM):   end;
1492541   +   end;
MPRINT(EM_DIAGRAM):   end;
1492542   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1492543   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1492544   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1492545   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1492546   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1492547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1492548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492549   +   end;
MPRINT(EM_DIAGRAM):   end;
1492550   +end;
MPRINT(EM_DIAGRAM):   end;
1492551   +
1492552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492553   +*** Checking missing input Interval
1492554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1492555   +
1492556   +IF NMISS(
1492557   +   AcceptedCmpTotal ,
1492558   +   Age ,
1492559   +   Frq ,
1492560   +   Income ,
1492561   +   Kidhome ,
1492562   +   Mnt ,
1492563   +   MntFishProducts ,
1492564   +   MntFruits ,
1492565   +   MntGoldProds ,
1492566   +   MntMeatProducts ,
1492567   +   MntSweetProducts ,
1492568   +   MntWines ,
1492569   +   MonthsAsCustomer ,
1492570   +   NumCatalogPurchases ,
1492571   +   NumDealsPurchases ,
1492572   +   NumDistPurchases ,
1492573   +   NumStorePurchases ,
1492574   +   NumWebPurchases ,
1492575   +   NumWebVisitsMonth ,
1492576   +   RFMstat ,
1492577   +   RMntFrq ,
1492578   +   Recency ,
1492579   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1492580   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1492581   +
1492582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1492583   +END;
MPRINT(EM_DIAGRAM):   END;
1492584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492585   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1492586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492587   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1492588   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1492589   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1492590   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1492591   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1492592   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1492593   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1492594   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1492595   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1492596   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1492597   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1492598   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1492599   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1492600   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1492601   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1492602   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1492603   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1492604   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1492605   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1492606   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1492607   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1492608   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1492609   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1492610   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1492611   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1492612   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1492613   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1492614   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1492615   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1492616   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1492617   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1492618   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1492619   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1492620   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1492621   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1492622   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1492623   +END;
MPRINT(EM_DIAGRAM):   END;
1492624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1492625   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1492626   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1492627   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1492628   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1492629   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1492630   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1492631   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1492632   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1492633   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1492634   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1492635   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1492636   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1492637   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1492638   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1492639   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1492640   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1492641   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1492642   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1492643   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1492644   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1492645   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1492646   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1492647   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1492648   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1492649   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1492650   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1492651   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1492652   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1492653   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1492654   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1492655   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1492656   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1492657   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1492658   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1492659   +   ELSE S_NumCatalogPurchases
1492660   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1492661   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1492662   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1492663   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1492664   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1492665   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1492666   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1492667   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1492668   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1492669   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1492670   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1492671   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1492672   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1492673   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1492674   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1492675   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1492676   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1492677   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1492678   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1492679   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1492680   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1492681   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1492682   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1492683   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1492684   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1492685   +END;
MPRINT(EM_DIAGRAM):   END;
1492686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492687   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1492688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492690   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1492691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492693   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1492694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492695   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1492696   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1492697   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1492698   +        S_Income  +    -0.09693130155866 * S_Kidhome
1492699   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1492700   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1492701   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1492702   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1492703   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1492704   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1492705   +          +     0.87256063855463 * S_NumDealsPurchases
1492706   +          +     0.24228318068596 * S_NumDistPurchases
1492707   +          +    -0.65575177240856 * S_NumStorePurchases
1492708   +          +    -0.94105747825406 * S_NumWebPurchases
1492709   +          +     0.88098930350141 * S_NumWebVisitsMonth
1492710   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1492711   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1492712   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age 
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome + 
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 * 
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts + 
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 * 
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 * 
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 * 
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 * 
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq + 
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1492713   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1492714   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1492715   +        S_Income  +    -0.48351377369429 * S_Kidhome
1492716   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1492717   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1492718   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1492719   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1492720   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1492721   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1492722   +          +     0.19198092320653 * S_NumDealsPurchases
1492723   +          +    -0.01877290175933 * S_NumDistPurchases
1492724   +          +    -0.61698509852352 * S_NumStorePurchases
1492725   +          +    -0.36114842161331 * S_NumWebPurchases
1492726   +          +     0.87653599441887 * S_NumWebVisitsMonth
1492727   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1492728   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1492729   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age + 
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome + 
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 * 
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts + 
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 * 
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 * 
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 * 
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 * 
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq + 
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1492730   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1492731   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1492732   +        S_Income  +    -0.03117320792997 * S_Kidhome
1492733   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1492734   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1492735   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1492736   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1492737   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1492738   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1492739   +          +    -0.17772008430544 * S_NumDealsPurchases
1492740   +          +    -0.24320624261016 * S_NumDistPurchases
1492741   +          +     0.42056923271106 * S_NumStorePurchases
1492742   +          +    -0.28718554863857 * S_NumWebPurchases
1492743   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1492744   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1492745   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1492746   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age + 
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome + 
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 * 
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts + 
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 * 
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 * 
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 * 
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 * 
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq + 
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1492747   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1492748   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1492749   +        S_Income  +     -0.0433863245185 * S_Kidhome
1492750   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1492751   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1492752   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1492753   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1492754   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1492755   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1492756   +          +    -0.43652501997552 * S_NumDealsPurchases
1492757   +          +     0.17317052107867 * S_NumDistPurchases
1492758   +          +     0.23672921935551 * S_NumStorePurchases
1492759   +          +     0.49273989445476 * S_NumWebPurchases
1492760   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1492761   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1492762   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1492763   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age + 
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome + 
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 * 
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts + 
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 * 
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 * 
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 * 
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 * 
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq + 
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1492764   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1492765   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1492766   +        S_Income  +     0.59347379159371 * S_Kidhome
1492767   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1492768   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1492769   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1492770   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1492771   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1492772   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1492773   +          +     0.06887104992711 * S_NumDealsPurchases
1492774   +          +    -0.03976087278251 * S_NumDistPurchases
1492775   +          +     -0.0289014951041 * S_NumStorePurchases
1492776   +          +    -0.08062500939119 * S_NumWebPurchases
1492777   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1492778   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1492779   +        S_RMntFrq  +       0.940313744576 * S_Recency
1492780   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age 
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome + 
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 * 
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts + 
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 * 
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 * 
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 * 
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 * 
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq + 
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1492781   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1492782   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1492783   +        S_Income  +    -0.55245961592835 * S_Kidhome
1492784   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1492785   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1492786   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1492787   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1492788   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1492789   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1492790   +          +    -0.50731731808528 * S_NumDealsPurchases
1492791   +          +     -0.4854662155502 * S_NumDistPurchases
1492792   +          +     0.21175181231244 * S_NumStorePurchases
1492793   +          +     0.04923223410585 * S_NumWebPurchases
1492794   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1492795   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1492796   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1492797   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age 
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome + 
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 * 
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts + 
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 * 
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 * 
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 * 
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 * 
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq + 
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1492798   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1492799   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1492800   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1492801   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1492802   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 * 
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 + 
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 * 
HigherEducationBinary0 ;
1492803   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1492804   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1492805   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1492806   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1492807   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 * 
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 + 
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 * 
HigherEducationBinary0 ;
1492808   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1492809   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1492810   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1492811   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1492812   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 * 
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 + 
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 * 
HigherEducationBinary0 ;
1492813   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1492814   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1492815   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1492816   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1492817   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 * 
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 + 
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 * 
HigherEducationBinary0 ;
1492818   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1492819   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1492820   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1492821   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1492822   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 * 
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 + 
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 * 
HigherEducationBinary0 ;
1492823   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1492824   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1492825   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1492826   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1492827   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 * 
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 + 
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 * 
HigherEducationBinary0 ;
1492828   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1492829   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1492830   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1492831   +          +     0.13102231169849 * Marital_StatusDivorced
1492832   +          +     0.13221932247035 * Marital_StatusMarried
1492833   +          +    -0.28666963919866 * Marital_StatusSingle
1492834   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 * 
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster + 
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried + 
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1492835   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1492836   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1492837   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1492838   +          +     0.36873255525654 * Marital_StatusDivorced
1492839   +          +    -0.54422050380085 * Marital_StatusMarried
1492840   +          +     0.58130553469516 * Marital_StatusSingle
1492841   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 * 
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster 
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried + 
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1492842   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1492843   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1492844   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1492845   +          +    -0.07480235993304 * Marital_StatusDivorced
1492846   +          +     0.31705972445069 * Marital_StatusMarried
1492847   +          +    -0.08626328185895 * Marital_StatusSingle
1492848   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 * 
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster 
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried + 
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1492849   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1492850   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1492851   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1492852   +          +    -0.06733679615115 * Marital_StatusDivorced
1492853   +          +     0.23111557732379 * Marital_StatusMarried
1492854   +          +    -0.34379469870478 * Marital_StatusSingle
1492855   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 * 
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster 
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried + 
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1492856   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1492857   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1492858   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1492859   +          +    -0.07108588070668 * Marital_StatusDivorced
1492860   +          +     1.10060875265784 * Marital_StatusMarried
1492861   +          +    -0.74271327534863 * Marital_StatusSingle
1492862   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 * 
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster + 
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried + 
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1492863   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1492864   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1492865   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1492866   +          +    -0.19461023827362 * Marital_StatusDivorced
1492867   +          +     -0.4165676037681 * Marital_StatusMarried
1492868   +          +     0.43379324993555 * Marital_StatusSingle
1492869   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 * 
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster 
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried + 
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1492870   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1492871   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1492872   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1492873   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1492874   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1492875   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1492876   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1492877   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1492878   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1492879   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1492880   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1492881   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1492882   +END;
MPRINT(EM_DIAGRAM):   END;
1492883   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1492884   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1492885   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1492886   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1492887   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1492888   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1492889   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1492890   +END;
MPRINT(EM_DIAGRAM):   END;
1492891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492892   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1492893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492894   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1492895   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1492896   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1492897   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 + 
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 + 
-2.08728996739757 * H16 ;
1492898   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1492899   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1492900   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1492901   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1492902   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1492903   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1492904   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1492905   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1492906   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1492907   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1492908   +END;
MPRINT(EM_DIAGRAM):   END;
1492909   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1492910   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1492911   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1492912   +END;
MPRINT(EM_DIAGRAM):   END;
1492913   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1492914   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1492915   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1492916   +END;
MPRINT(EM_DIAGRAM):   END;
1492917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492918   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1492919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1492920   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1492921   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1492922   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1492923   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1492924   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1492925   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1492926   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1492927   +END;
MPRINT(EM_DIAGRAM):   END;
1492928   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1492929   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1492930   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1492931   +drop
1492932   +H11
1492933   +H12
1492934   +H13
1492935   +H14
1492936   +H15
1492937   +H16
1492938   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1492939   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1492940    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1492941    quit;
1492942    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1492943    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1492944    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1492945    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1492946    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1492947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492948    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1492949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492951    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1492952    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492954    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1492955    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1492956    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1492957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492958    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1492959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1492960    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1492961    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492963    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1492964    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1492965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492966    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492967    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1492968    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1492968  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1492969    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1492970    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1492971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492972    filename _pref
1492972  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1492973    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1492974    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1492975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1492976   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1492977   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1492978   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1492979   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1492980   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1492981    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1492982    quit;
1492983    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1492984    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1492985    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1492986    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1492987    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1492988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492989    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1492990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492992    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1492993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1492994    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492995    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1492996    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1492997    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1492998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1492999    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1493000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1493001    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1493002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1493004    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1493005    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1493006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493007    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493008    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1493009    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1493009  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1493010    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493011    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1493012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493013    filename _pref
1493013  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1493014    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1493015    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1493016   +
1493017   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1493018   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1493018  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1493019   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1493020   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1493021   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1493022   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1493023   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1493024    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1493025    quit;
1493026    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1493027    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1493028    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1493029    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1493030    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1493031    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1493032    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1493033    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493034    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493035    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1493036    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493037    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493038    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1493039    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1493040    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1493041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493042    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1493043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493044    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1493045    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493047    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1493048    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1493049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493050    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493051    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1493052    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1493052  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1493053    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493054    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1493055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493056    filename _pref
1493056  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1493057    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1493058    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1493059   +
1493060   +
1493061   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1493062   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1493063   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1493064   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1493065   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1493066   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493067   +
1493068   +
1493069   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1493070   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1493071   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1493072   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1493073   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1493074   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493075   +
1493076   +
1493077   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1493078   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1493079   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1493080   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1493081   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1493082   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493083   +
1493084   +
1493085   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1493086   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1493087   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1493088   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1493089   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1493090   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493091   +
1493092   +
1493093   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1493094   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1493095   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1493096   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1493097   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1493098   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493099   +
1493100   +
1493101   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1493102   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1493103   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1493104   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1493105   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1493106   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493107   +
1493108   +
1493109   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1493110   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1493111   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1493112   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1493113   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1493114   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493115   +
1493116   +
1493117   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1493118   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1493119   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1493120   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1493121   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1493122   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1493123   +if
1493124   +_FILTERNORM1 not in ( '.')
1493125   + and
1493126   +_FILTERNORM2 not in ( '.')
1493127   + and
1493128   +_FILTERNORM3 not in ( '.')
1493129   + and
1493130   +_FILTERNORM4 not in ( '.')
1493131   + and
1493132   +_FILTERNORM5 not in ( '.')
1493133   + and
1493134   +_FILTERNORM6 not in ( '.')
1493135   + and
1493136   +_FILTERNORM7 not in ( ' ')
1493137   + and
1493138   +_FILTERNORM8 not in ( ' ')
1493139   +and
1493140   +( Dt_Customer ne .)
1493141   +and ( Income ne . and (Income<=107000))
1493142   +and ( Kidhome ne .)
1493143   +and ( MntFishProducts ne .)
1493144   +and ( MntFruits ne .)
1493145   +and ( MntGoldProds ne .)
1493146   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1493147   +and ( MntSweetProducts ne .)
1493148   +and ( MntWines ne .)
1493149   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1493150   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1493151   +and ( NumStorePurchases ne .)
1493152   +and ( NumWebPurchases ne .)
1493153   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1493154   +and ( Recency ne .)
1493155   +and ( Teenhome ne .)
1493156   +and ( Year_Birth ne .)
1493157   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1493158   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1493159   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1493160   +end;
MPRINT(EM_DIAGRAM):   end;
1493161   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1493162   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1493163    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1493164    quit;
1493165    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1493166    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1493167    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1493168    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1493169    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1493170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493171    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1493172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493174    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1493175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1493177    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1493178    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1493179    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1493180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493181    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1493182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1493183    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1493184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493185    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493186    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1493187    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1493188    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1493189    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493190    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1493191    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1493191  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1493192    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1493193    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1493194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493195    %macro varDept(fcmpdata=,id=);
1493196    %global nobs&id scoreFlag&id;
1493197    %let scoreFlag&id = 0;
1493198    %if &id=1 or ^&fcmpStart %then %do;
1493199    proc sort data=&fcmpdata out=_temp&id nodupkey;
1493200    by NAME;
1493201    where id=&id and LHS in( %let j=1;
1493202    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1493203    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1493204    "&var" %let j = %eval(&j+1);
1493205    %end;
1493206    );
1493207    run;
1493208    %let dsid = %sysfunc(open(_temp&id));
1493209    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1493210    %let dsid = %sysfunc(close(&dsid));
1493211    %if &&nobs&id %then %do;
1493212    %let scoreFlag&id = 1;
1493213    %let fcmpStart = 1;
1493214    %end;
1493215    %else %let fcmpStart = 0;
1493216    %end;
1493217    %else %do;
1493218    proc sort data=&fcmpdata out=_tempid;
1493219    where id=&id;
1493220    by LHS;
1493221    run;
1493222    %let dsid = %sysfunc(open(_tempid));
1493223    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1493224    %let dsid = %sysfunc(close(&dsid));
1493225    %if ^&&nobs&id %then %do;
1493226    proc datasets lib=work nolist;
1493227    delete _tempid;
1493228    run;
1493229    quit;
1493230    %end;
1493231    %else %do;
1493232    data _tempAll;
1493233    set %let j=%eval(&id-1);
1493234    %do x=1 %to &j;
1493235    %if &&nobs&x %then %do;
1493236    _temp&x %end;
1493237    %end;
1493238    ;
1493239    run;
1493240    proc sql;
1493241    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1493241  ! work._tempid p2 where p.name=p2.lhs;
1493242    quit;
1493243    data _temp&id;
1493244    set _temp&id;
1493245    where LHS ne '' and NAME ne '' and Node ne '';
1493246    run;
1493247    proc datasets lib=work nolist;
1493248    delete _tempAll;
1493249    run;
1493250    %let dsid = %sysfunc(open(_temp&id));
1493251    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1493252    %let dsid = %sysfunc(close(&dsid));
1493253    %if ^&&nobs&id %then %do;
1493254    proc datasets lib=work nolist;
1493255    delete _temp&id;
1493256    run;
1493257    quit;
1493258    %end;
1493259    %else %do;
1493260    %let scoreFlag&id = 1;
1493261    data _temp&id;
1493262    set _temp&id;
1493263    where LHS ne NAME and node ne '';
1493264    run;
1493265    %let dsid = %sysfunc(open(_temp&id));
1493266    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1493267    %let dsid = %sysfunc(close(&dsid));
1493268    %if ^&&nobs&id %then %do;
1493269    proc datasets lib=work nolist;
1493270    delete _temp&id;
1493271    run;
1493272    quit;
1493273    %end;
1493274    %else %do;
1493275    proc sort data=_temp&id nodupkey;
1493276    by LHS NAME;
1493277    run;
1493278    %end;
1493279    %end;
1493280    %end;
1493281    %end;
1493282    %mend varDept;
1493283    %macro optCode(outdata=fcmpdata);
1493284    %global fcmpStart;
1493285    %let fcmpStart = 0;
1493286    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1493287    %let NumNodes=9;
1493288    %do k=1 %to &NumNodes;
1493289    %vardept(fcmpdata=&outdata, id=&k);
1493290    %end;
1493291    %mend optCode;
1493292    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1493293    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1493294    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1493295    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1493296    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493297    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1493298    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1493299    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1493300    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493301    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1493302    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1493302  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1493303    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1493304    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1493305    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1493306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1493307    filename _pref
1493307  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1493308    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1493309    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1493310   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1493311   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1493312   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1493313   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1493314   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1493315   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1493316   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1493317   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1493318   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1493319   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1493320   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1493321   +LENGTH _WARN_ $4
1493322   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1493323   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1493324   +
1493325   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1493326   +
1493327   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1493328   +
1493329   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1493330   +
1493331   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1493332   +
1493333   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1493334   +
1493335   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1493336   +
1493337   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1493338   +
1493339   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1493340   +
1493341   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1493342   +
1493343   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1493344   +
1493345   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1493346   +
1493347   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1493348   +
1493349   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1493350   +
1493351   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1493352   +
1493353   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1493354   +
1493355   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1493356   +
1493357   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1493358   +
1493359   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1493360   +
1493361   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1493362   +
1493363   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1493364   +
1493365   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1493366   +
1493367   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1493368   +
1493369   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1493370   +
1493371   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1493372   +
1493373   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1493374   +
1493375   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1493376   +
1493377   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1493378   +
1493379   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1493380   +
1493381   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1493382   +
1493383   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1493384   +
1493385   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1493386   +
1493387   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1493388   +
1493389   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1493390   +
1493391   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1493392   +
1493393   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1493394   +
1493395   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1493396   +
1493397   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1493398   +
1493399   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1493400   +
1493401   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1493402   +
1493403   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1493404   +
1493405   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1493406   +
1493407   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1493408   +
1493409   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1493410   +
1493411   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1493412   +
1493413   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1493414   +
1493415   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1493416   +
1493417   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1493418   +
1493419   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1493420   +
1493421   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1493422   +
1493423   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1493424   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1493425   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1493426   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1493427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493429   +end;
MPRINT(EM_DIAGRAM):   end;
1493430   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493432   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1493433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493434   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1493435   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1493436   +   end;
MPRINT(EM_DIAGRAM):   end;
1493437   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1493438   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1493439   +   end;
MPRINT(EM_DIAGRAM):   end;
1493440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493441   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1493442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493444   +   end;
MPRINT(EM_DIAGRAM):   end;
1493445   +end;
MPRINT(EM_DIAGRAM):   end;
1493446   +
1493447   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1493448   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1493449   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1493450   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1493451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493453   +end;
MPRINT(EM_DIAGRAM):   end;
1493454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493456   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1493457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1493459   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1493460   +   end;
MPRINT(EM_DIAGRAM):   end;
1493461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1493462   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1493463   +   end;
MPRINT(EM_DIAGRAM):   end;
1493464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493465   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1493466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493468   +   end;
MPRINT(EM_DIAGRAM):   end;
1493469   +end;
MPRINT(EM_DIAGRAM):   end;
1493470   +
1493471   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1493472   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1493473   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1493474   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1493475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493477   +end;
MPRINT(EM_DIAGRAM):   end;
1493478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493480   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1493481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493482   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1493483   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1493484   +   end;
MPRINT(EM_DIAGRAM):   end;
1493485   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1493486   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1493487   +   end;
MPRINT(EM_DIAGRAM):   end;
1493488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493489   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1493490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493492   +   end;
MPRINT(EM_DIAGRAM):   end;
1493493   +end;
MPRINT(EM_DIAGRAM):   end;
1493494   +
1493495   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1493496   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1493497   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1493498   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1493499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493501   +end;
MPRINT(EM_DIAGRAM):   end;
1493502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493504   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1493505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1493507   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1493508   +   end;
MPRINT(EM_DIAGRAM):   end;
1493509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1493510   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1493511   +   end;
MPRINT(EM_DIAGRAM):   end;
1493512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493513   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1493514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493516   +   end;
MPRINT(EM_DIAGRAM):   end;
1493517   +end;
MPRINT(EM_DIAGRAM):   end;
1493518   +
1493519   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1493520   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1493521   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1493522   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1493523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493525   +end;
MPRINT(EM_DIAGRAM):   end;
1493526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493528   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1493529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1493531   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1493532   +   end;
MPRINT(EM_DIAGRAM):   end;
1493533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1493534   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1493535   +   end;
MPRINT(EM_DIAGRAM):   end;
1493536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493537   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1493538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493540   +   end;
MPRINT(EM_DIAGRAM):   end;
1493541   +end;
MPRINT(EM_DIAGRAM):   end;
1493542   +
1493543   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1493544   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1493545   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1493546   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1493547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493549   +end;
MPRINT(EM_DIAGRAM):   end;
1493550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493552   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1493553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1493555   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1493556   +   end;
MPRINT(EM_DIAGRAM):   end;
1493557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1493558   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1493559   +   end;
MPRINT(EM_DIAGRAM):   end;
1493560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493561   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1493562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493564   +   end;
MPRINT(EM_DIAGRAM):   end;
1493565   +end;
MPRINT(EM_DIAGRAM):   end;
1493566   +
1493567   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1493568   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1493569   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1493570   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1493571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493573   +end;
MPRINT(EM_DIAGRAM):   end;
1493574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1493576   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1493577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493578   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1493579   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1493580   +   end;
MPRINT(EM_DIAGRAM):   end;
1493581   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1493582   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1493583   +   end;
MPRINT(EM_DIAGRAM):   end;
1493584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493585   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1493586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493588   +   end;
MPRINT(EM_DIAGRAM):   end;
1493589   +end;
MPRINT(EM_DIAGRAM):   end;
1493590   +
1493591   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1493592   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1493593   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1493594   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1493595   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1493596   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1493597   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1493598   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1493599   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1493600   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1493601   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1493602   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1493603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493605   +end;
MPRINT(EM_DIAGRAM):   end;
1493606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493607   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1493608   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1493609   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493610   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1493611   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1493612   +   end;
MPRINT(EM_DIAGRAM):   end;
1493613   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1493614   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1493615   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1493616   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1493617   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1493618   +   end;
MPRINT(EM_DIAGRAM):   end;
1493619   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1493620   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1493621   +   end;
MPRINT(EM_DIAGRAM):   end;
1493622   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1493623   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1493624   +   end;
MPRINT(EM_DIAGRAM):   end;
1493625   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1493626   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1493627   +   end;
MPRINT(EM_DIAGRAM):   end;
1493628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493629   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1493630   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1493631   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1493632   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1493633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493635   +   end;
MPRINT(EM_DIAGRAM):   end;
1493636   +end;
MPRINT(EM_DIAGRAM):   end;
1493637   +
1493638   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1493639   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1493640   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1493641   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1493642   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1493643   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1493644   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1493645   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1493646   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1493647   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1493648   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1493649   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1493650   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1493651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1493652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493653   +end;
MPRINT(EM_DIAGRAM):   end;
1493654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1493655   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1493656   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1493657   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1493658   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1493659   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1493660   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1493661   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1493662   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1493663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1493664   +         end;
MPRINT(EM_DIAGRAM):   end;
1493665   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1493666   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1493667   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1493668   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1493669   +            end;
MPRINT(EM_DIAGRAM):   end;
1493670   +         end;
MPRINT(EM_DIAGRAM):   end;
1493671   +      end;
MPRINT(EM_DIAGRAM):   end;
1493672   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1493673   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1493674   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1493675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1493676   +         end;
MPRINT(EM_DIAGRAM):   end;
1493677   +      end;
MPRINT(EM_DIAGRAM):   end;
1493678   +   end;
MPRINT(EM_DIAGRAM):   end;
1493679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1493680   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1493681   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1493682   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1493683   +      end;
MPRINT(EM_DIAGRAM):   end;
1493684   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1493685   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1493686   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1493687   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1493688   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1493689   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1493690   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1493691   +         end;
MPRINT(EM_DIAGRAM):   end;
1493692   +      end;
MPRINT(EM_DIAGRAM):   end;
1493693   +   end;
MPRINT(EM_DIAGRAM):   end;
1493694   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1493695   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1493696   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1493697   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1493698   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1493699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1493700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493701   +   end;
MPRINT(EM_DIAGRAM):   end;
1493702   +end;
MPRINT(EM_DIAGRAM):   end;
1493703   +
1493704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493705   +*** Checking missing input Interval
1493706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1493707   +
1493708   +IF NMISS(
1493709   +   AcceptedCmpTotal ,
1493710   +   Age ,
1493711   +   Frq ,
1493712   +   Income ,
1493713   +   Kidhome ,
1493714   +   Mnt ,
1493715   +   MntFishProducts ,
1493716   +   MntFruits ,
1493717   +   MntGoldProds ,
1493718   +   MntMeatProducts ,
1493719   +   MntSweetProducts ,
1493720   +   MntWines ,
1493721   +   MonthsAsCustomer ,
1493722   +   NumCatalogPurchases ,
1493723   +   NumDealsPurchases ,
1493724   +   NumDistPurchases ,
1493725   +   NumStorePurchases ,
1493726   +   NumWebPurchases ,
1493727   +   NumWebVisitsMonth ,
1493728   +   RFMstat ,
1493729   +   RMntFrq ,
1493730   +   Recency ,
1493731   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1493732   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1493733   +
1493734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1493735   +END;
MPRINT(EM_DIAGRAM):   END;
1493736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493737   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1493738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493739   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1493740   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1493741   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1493742   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1493743   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1493744   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1493745   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1493746   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1493747   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1493748   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1493749   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1493750   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1493751   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1493752   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1493753   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1493754   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1493755   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1493756   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1493757   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1493758   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1493759   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1493760   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1493761   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1493762   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1493763   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1493764   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1493765   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1493766   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1493767   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1493768   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1493769   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1493770   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1493771   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1493772   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1493773   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1493774   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1493775   +END;
MPRINT(EM_DIAGRAM):   END;
1493776   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1493777   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1493778   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1493779   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1493780   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1493781   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1493782   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1493783   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1493784   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1493785   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1493786   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1493787   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1493788   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1493789   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1493790   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1493791   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1493792   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1493793   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1493794   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1493795   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1493796   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1493797   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1493798   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1493799   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1493800   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1493801   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1493802   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1493803   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1493804   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1493805   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1493806   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1493807   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1493808   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1493809   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1493810   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1493811   +   ELSE S_NumCatalogPurchases
1493812   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1493813   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1493814   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1493815   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1493816   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1493817   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1493818   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1493819   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1493820   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1493821   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1493822   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1493823   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1493824   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1493825   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1493826   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1493827   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1493828   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1493829   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1493830   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1493831   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1493832   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1493833   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1493834   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1493835   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1493836   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1493837   +END;
MPRINT(EM_DIAGRAM):   END;
1493838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493839   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1493840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493842   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1493843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493845   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1493846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1493847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1493848   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1493849   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1493850   +        S_Income  +    -0.48552270697514 * S_Kidhome
1493851   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1493852   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1493853   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1493854   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1493855   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
The SAS System

1493856   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1493857   +          +    -0.23083265836869 * S_NumDealsPurchases
1493858   +          +     0.18257445063797 * S_NumDistPurchases
1493859   +          +     0.38040778765927 * S_NumStorePurchases
1493860   +          +     0.25798779223068 * S_NumWebPurchases
1493861   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1493862   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1493863   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1493864   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age 
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome + 
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 * 
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts + 
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 * 
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 * 
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 * 
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 * 
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq + 
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1493865   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1493866   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1493867   +        S_Income  +     0.23694585796773 * S_Kidhome
1493868   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1493869   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1493870   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1493871   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1493872   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1493873   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1493874   +          +    -0.07783411363525 * S_NumDealsPurchases
1493875   +          +     0.41281579441285 * S_NumDistPurchases
1493876   +          +     0.22243606867939 * S_NumStorePurchases
1493877   +          +     0.27174952755013 * S_NumWebPurchases
1493878   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1493879   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1493880   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1493881   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age 
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome + 
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 * 
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts + 
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 * 
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 * 
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 * 
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 * 
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq + 
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1493882   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1493883   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1493884   +        S_Income  +     0.20802765248799 * S_Kidhome
1493885   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1493886   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1493887   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1493888   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1493889   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1493890   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1493891   +          +     0.09455783738093 * S_NumDealsPurchases
1493892   +          +    -0.06039304909585 * S_NumDistPurchases
1493893   +          +    -0.10306611685636 * S_NumStorePurchases
1493894   +          +    -0.00323837049664 * S_NumWebPurchases
1493895   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1493896   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1493897   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1493898   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age 
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome + 
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 * 
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts + 
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 * 
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 * 
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 * 
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 * 
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq + 
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1493899   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1493900   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1493901   +        S_Income  +     0.26381864865425 * S_Kidhome
1493902   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1493903   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1493904   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1493905   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1493906   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1493907   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1493908   +          +      0.8306613243419 * S_NumDealsPurchases
1493909   +          +     0.31439474207278 * S_NumDistPurchases
1493910   +          +    -0.62131474975756 * S_NumStorePurchases
1493911   +          +    -1.04845843654047 * S_NumWebPurchases
1493912   +          +     0.13255915506164 * S_NumWebVisitsMonth
1493913   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1493914   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1493915   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age + 
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome + 
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 * 
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts + 
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 * 
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 * 
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 * 
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 * 
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq + 
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1493916   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1493917   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1493918   +        S_Income  +    -0.71599192201946 * S_Kidhome
1493919   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1493920   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1493921   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1493922   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1493923   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1493924   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1493925   +          +     0.63537278643623 * S_NumDealsPurchases
1493926   +          +     0.00410348485264 * S_NumDistPurchases
1493927   +          +    -0.78287523583925 * S_NumStorePurchases
1493928   +          +    -0.73614491225189 * S_NumWebPurchases
1493929   +          +      1.5997596522354 * S_NumWebVisitsMonth
1493930   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1493931   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1493932   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age 
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome + 
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 * 
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts + 
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 * 
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 * 
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 * 
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 * 
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq + 
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1493933   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1493934   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1493935   +        S_Income  +    -0.23853377939411 * S_Kidhome
1493936   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1493937   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1493938   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1493939   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1493940   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1493941   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1493942   +          +    -0.30899603957269 * S_NumDealsPurchases
1493943   +          +     0.11839581082877 * S_NumDistPurchases
1493944   +          +     0.20149797391098 * S_NumStorePurchases
1493945   +          +      0.1616654107491 * S_NumWebPurchases
1493946   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1493947   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1493948   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1493949   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age 
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome + 
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 * 
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts + 
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 * 
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 * 
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 * 
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 * 
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq + 
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1493950   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1493951   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1493952   +        S_Income  +    -0.48650790963695 * S_Kidhome
1493953   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1493954   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1493955   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1493956   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1493957   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1493958   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1493959   +          +    -0.18889005468777 * S_NumDealsPurchases
1493960   +          +     0.17240918361456 * S_NumDistPurchases
1493961   +          +     0.11704610685994 * S_NumStorePurchases
1493962   +          +     0.23031393640508 * S_NumWebPurchases
1493963   +          +     0.66002859819524 * S_NumWebVisitsMonth
1493964   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1493965   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1493966   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age 
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome + 
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 * 
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts + 
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 * 
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 * 
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 * 
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 * 
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq + 
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1493967   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1493968   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1493969   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1493970   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1493971   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 * 
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 + 
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 * 
HigherEducationBinary0 ;
1493972   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1493973   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1493974   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1493975   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1493976   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 * 
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 + 
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 * 
HigherEducationBinary0 ;
1493977   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1493978   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1493979   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1493980   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1493981   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 * 
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 + 
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 * 
HigherEducationBinary0 ;
1493982   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1493983   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1493984   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1493985   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1493986   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 * 
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 + 
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 * 
HigherEducationBinary0 ;
1493987   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1493988   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1493989   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1493990   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1493991   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 * 
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 + 
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 * 
HigherEducationBinary0 ;
1493992   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1493993   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1493994   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1493995   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1493996   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 * 
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 + 
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 * 
HigherEducationBinary0 ;
1493997   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1493998   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1493999   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1494000   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1494001   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 * 
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 + 
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 * 
HigherEducationBinary0 ;
1494002   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1494003   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1494004   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1494005   +          +     0.43452164349556 * Marital_StatusDivorced
1494006   +          +    -0.46042593279944 * Marital_StatusMarried
1494007   +          +     0.45533323427801 * Marital_StatusSingle
1494008   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 * 
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster + 
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried + 
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1494009   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1494010   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1494011   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1494012   +          +     0.11002244687305 * Marital_StatusDivorced
1494013   +          +     0.52424349905683 * Marital_StatusMarried
1494014   +          +     -0.3969250366321 * Marital_StatusSingle
1494015   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 * 
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster 
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried + 
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1494016   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1494017   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1494018   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1494019   +          +    -0.05300704180744 * Marital_StatusDivorced
1494020   +          +     0.07805487103106 * Marital_StatusMarried
1494021   +          +     0.20033339442958 * Marital_StatusSingle
1494022   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 * 
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster + 
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried + 
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1494023   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1494024   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1494025   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1494026   +          +    -0.42379596543146 * Marital_StatusDivorced
1494027   +          +     0.66738351478416 * Marital_StatusMarried
1494028   +          +    -0.37324277578462 * Marital_StatusSingle
1494029   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 * 
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster + 
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried + 
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1494030   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1494031   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1494032   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1494033   +          +     0.88761025578489 * Marital_StatusDivorced
1494034   +          +    -0.85905539883385 * Marital_StatusMarried
1494035   +          +     0.73467737758558 * Marital_StatusSingle
1494036   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 * 
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster 
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried + 
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1494037   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1494038   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1494039   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1494040   +          +    -0.11980818075461 * Marital_StatusDivorced
1494041   +          +    -0.16572953052582 * Marital_StatusMarried
1494042   +          +     0.34617421331983 * Marital_StatusSingle
1494043   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 * 
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster 
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried + 
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1494044   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1494045   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1494046   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1494047   +          +     0.14874886057777 * Marital_StatusDivorced
1494048   +          +     -1.0463076915992 * Marital_StatusMarried
1494049   +          +     0.72937563672763 * Marital_StatusSingle
1494050   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 * 
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster 
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried + 
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1494051   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1494052   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1494053   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1494054   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1494055   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1494056   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1494057   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1494058   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1494059   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1494060   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1494061   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1494062   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1494063   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1494064   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1494065   +END;
MPRINT(EM_DIAGRAM):   END;
1494066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1494067   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1494068   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1494069   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1494070   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1494071   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1494072   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1494073   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1494074   +END;
MPRINT(EM_DIAGRAM):   END;
1494075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1494076   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1494077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1494078   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1494079   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1494080   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1494081   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1494082   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 + 
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 * 
H16 + 2.19267705077374 * H17 ;
1494083   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1494084   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1494085   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1494086   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1494087   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1494088   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1494089   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1494090   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1494091   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1494092   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1494093   +END;
MPRINT(EM_DIAGRAM):   END;
1494094   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1494095   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1494096   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1494097   +END;
MPRINT(EM_DIAGRAM):   END;
1494098   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1494099   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1494100   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1494101   +END;
MPRINT(EM_DIAGRAM):   END;
1494102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1494103   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1494104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1494105   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1494106   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1494107   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1494108   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1494109   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1494110   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1494111   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1494112   +END;
MPRINT(EM_DIAGRAM):   END;
1494113   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1494114   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1494115   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1494116   +drop
1494117   +H11
1494118   +H12
1494119   +H13
1494120   +H14
1494121   +H15
1494122   +H16
1494123   +H17
1494124   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1494125   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1494126    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1494127    quit;
1494128    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1494129    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1494130    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1494131    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1494132    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1494133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494134    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1494135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494137    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1494138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494140    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494141    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1494142    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1494143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494144    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1494145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1494146    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1494147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494149    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494150    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1494151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494152    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494153    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1494154    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1494154  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

1494155    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494156    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1494157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494158    filename _pref
1494158  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1494159    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1494160    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1494161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1494162   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1494163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1494164   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1494165   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1494166   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1494167    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1494168    quit;
1494169    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1494170    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1494171    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1494172    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1494173    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1494174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494175    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1494176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494177    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494178    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1494179    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494181    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494182    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1494183    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1494184    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494185    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1494186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1494187    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1494188    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494189    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494190    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494191    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1494192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494193    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494194    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1494195    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1494195  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1494196    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494197    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1494198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494199    filename _pref
1494199  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1494200    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1494201    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1494202   +
1494203   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1494204   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1494204  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1494205   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1494206   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1494207   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1494208   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1494209   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1494210    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1494211    quit;
1494212    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1494213    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1494214    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1494215    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1494216    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1494217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494218    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1494219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494221    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1494222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494224    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494225    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1494226    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1494227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494228    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1494229    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494230    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1494231    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494232    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494233    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494234    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1494235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494236    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494237    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1494238    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1494238  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1494239    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494240    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1494241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494242    filename _pref
1494242  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1494243    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1494244    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1494245   +
1494246   +
1494247   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1494248   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1494249   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1494250   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1494251   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1494252   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494253   +
1494254   +
1494255   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1494256   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1494257   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1494258   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1494259   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1494260   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494261   +
1494262   +
1494263   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1494264   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1494265   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1494266   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1494267   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1494268   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494269   +
1494270   +
1494271   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1494272   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1494273   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1494274   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1494275   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1494276   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494277   +
1494278   +
1494279   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1494280   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1494281   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1494282   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1494283   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1494284   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494285   +
1494286   +
1494287   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1494288   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1494289   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1494290   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1494291   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1494292   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494293   +
1494294   +
1494295   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1494296   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1494297   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1494298   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1494299   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1494300   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494301   +
1494302   +
1494303   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1494304   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1494305   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1494306   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1494307   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1494308   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1494309   +if
1494310   +_FILTERNORM1 not in ( '.')
1494311   + and
1494312   +_FILTERNORM2 not in ( '.')
1494313   + and
1494314   +_FILTERNORM3 not in ( '.')
1494315   + and
1494316   +_FILTERNORM4 not in ( '.')
1494317   + and
1494318   +_FILTERNORM5 not in ( '.')
1494319   + and
1494320   +_FILTERNORM6 not in ( '.')
1494321   + and
1494322   +_FILTERNORM7 not in ( ' ')
1494323   + and
1494324   +_FILTERNORM8 not in ( ' ')
1494325   +and
1494326   +( Dt_Customer ne .)
1494327   +and ( Income ne . and (Income<=107000))
1494328   +and ( Kidhome ne .)
1494329   +and ( MntFishProducts ne .)
1494330   +and ( MntFruits ne .)
1494331   +and ( MntGoldProds ne .)
1494332   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1494333   +and ( MntSweetProducts ne .)
1494334   +and ( MntWines ne .)
1494335   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1494336   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1494337   +and ( NumStorePurchases ne .)
1494338   +and ( NumWebPurchases ne .)
1494339   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1494340   +and ( Recency ne .)
1494341   +and ( Teenhome ne .)
1494342   +and ( Year_Birth ne .)
1494343   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1494344   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1494345   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1494346   +end;
MPRINT(EM_DIAGRAM):   end;
1494347   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1494348   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1494349    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1494350    quit;
1494351    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1494352    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1494353    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1494354    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1494355    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1494356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494357    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1494358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494359    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494360    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1494361    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494362    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494363    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494364    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1494365    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1494366    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494367    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1494368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1494369    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1494370    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494371    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494372    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1494373    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1494374    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1494375    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494376    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1494377    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1494377  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1494378    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494379    proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl29_FCMP data=_tempx;
1494380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL29_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL29_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494381    %macro varDept(fcmpdata=,id=);
1494382    %global nobs&id scoreFlag&id;
1494383    %let scoreFlag&id = 0;
1494384    %if &id=1 or ^&fcmpStart %then %do;
1494385    proc sort data=&fcmpdata out=_temp&id nodupkey;
1494386    by NAME;
1494387    where id=&id and LHS in( %let j=1;
1494388    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1494389    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1494390    "&var" %let j = %eval(&j+1);
1494391    %end;
1494392    );
1494393    run;
1494394    %let dsid = %sysfunc(open(_temp&id));
1494395    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1494396    %let dsid = %sysfunc(close(&dsid));
1494397    %if &&nobs&id %then %do;
1494398    %let scoreFlag&id = 1;
1494399    %let fcmpStart = 1;
1494400    %end;
1494401    %else %let fcmpStart = 0;
1494402    %end;
1494403    %else %do;
1494404    proc sort data=&fcmpdata out=_tempid;
1494405    where id=&id;
1494406    by LHS;
1494407    run;
1494408    %let dsid = %sysfunc(open(_tempid));
1494409    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1494410    %let dsid = %sysfunc(close(&dsid));
1494411    %if ^&&nobs&id %then %do;
1494412    proc datasets lib=work nolist;
1494413    delete _tempid;
1494414    run;
1494415    quit;
1494416    %end;
1494417    %else %do;
1494418    data _tempAll;
1494419    set %let j=%eval(&id-1);
1494420    %do x=1 %to &j;
1494421    %if &&nobs&x %then %do;
1494422    _temp&x %end;
1494423    %end;
1494424    ;
1494425    run;
1494426    proc sql;
1494427    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1494427  ! work._tempid p2 where p.name=p2.lhs;
1494428    quit;
1494429    data _temp&id;
1494430    set _temp&id;
1494431    where LHS ne '' and NAME ne '' and Node ne '';
1494432    run;
1494433    proc datasets lib=work nolist;
1494434    delete _tempAll;
1494435    run;
1494436    %let dsid = %sysfunc(open(_temp&id));
1494437    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1494438    %let dsid = %sysfunc(close(&dsid));
1494439    %if ^&&nobs&id %then %do;
1494440    proc datasets lib=work nolist;
1494441    delete _temp&id;
1494442    run;
1494443    quit;
1494444    %end;
1494445    %else %do;
1494446    %let scoreFlag&id = 1;
1494447    data _temp&id;
1494448    set _temp&id;
1494449    where LHS ne NAME and node ne '';
1494450    run;
1494451    %let dsid = %sysfunc(open(_temp&id));
1494452    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1494453    %let dsid = %sysfunc(close(&dsid));
1494454    %if ^&&nobs&id %then %do;
1494455    proc datasets lib=work nolist;
1494456    delete _temp&id;
1494457    run;
1494458    quit;
1494459    %end;
1494460    %else %do;
1494461    proc sort data=_temp&id nodupkey;
1494462    by LHS NAME;
1494463    run;
1494464    %end;
1494465    %end;
1494466    %end;
1494467    %end;
1494468    %mend varDept;
1494469    %macro optCode(outdata=fcmpdata);
1494470    %global fcmpStart;
1494471    %let fcmpStart = 0;
1494472    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1494473    %let NumNodes=9;
1494474    %do k=1 %to &NumNodes;
1494475    %vardept(fcmpdata=&outdata, id=&k);
1494476    %end;
1494477    %mend optCode;
1494478    %optcode(outData=EMWS8.Ensmbl29_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl29_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1494479    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1494480    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1494481    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1494482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494483    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1494484    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1494485    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1494486    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494487    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1494488    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1494488  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1494489    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1494490    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1494491    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1494492    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494493    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1494494    * Ensmbl29: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Computing metadata for TRAIN data;
1494495    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL29_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl29\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl29_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl29_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl29_TRAIN out=WORK.M03Q9L25 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03Q9L25;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M03Q9L25(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03Q9L25;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M03Q9L25;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0I_EC7Y NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11RUTRS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   set WORK.M0I_EC7Y;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl29";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl29";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl29: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl29";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1494815    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1494816    set EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl29_EMINFO;
1494817    where DATA='Ensmbl29' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl29' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1494818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL29_EMINFO.
      WHERE (DATA='Ensmbl29') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494819    data EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl29_EMINFO;
1494820    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1494821    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1494822    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL29_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1494826    run;
1494827    data EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMINFO;
1494828    set EMWS8.Ensmbl29_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl29_EMINFO WORK.MODELTEMP_INFO;
1494829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL29_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL29_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494830    proc sort data = EMWS8.Ensmbl29_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl29_EMINFO NOTHREADS;
1494831    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1494832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL29_EMINFO.
NOTE: The data set EMWS8.ENSMBL29_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494833    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1494834    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1494835    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494836    proc sort data = EMWS8.Ensmbl29_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl29_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1494837    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1494838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL29_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494839    data EMWS8.Ensmbl29_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl29_EMINFO;
1494840    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1494841    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1494842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL29_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1494843    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1494844    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1494845    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1494846    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL29_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL29_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
