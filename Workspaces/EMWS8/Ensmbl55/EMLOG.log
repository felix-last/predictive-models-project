*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                21.11 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2_XMQ3T
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2_XMQ3T new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[107691] MAX=1 EXCEEDMAXVALUE='' )[107695] )[107689]
VALIDCHOICES=(CHOICE1='Y' )[107693] )[107977] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[107699]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[107703] )[107701] )[107697] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[107707]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[107713] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[107711] )[107709] )[107705] )[107687]
307775     proc freq data=EMWS8.Ensmbl55_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl55_VariableSet noprint;
307776     table ROLE*LEVEL/out=WORK.Ensmbl55META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl55META;
307777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set EMWS8.ENSMBL55_VARIABLESET.
NOTE: The data set WORK.ENSMBL55META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307778     proc print data=WORK.Ensmbl55META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl55META label noobs;
307779     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
307780     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
307780   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
307780   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
307781     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
307782     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
307783     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL55META.
NOTE: The PROCEDURE PRINT printed page 103.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307784     title10;
MPRINT(EM_DIAGRAM):   title10;
307785     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN EMWS8 AutoNeural37_TRAIN
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN
EMWS8.AutoNeural37_TRAIN EMWS8.AutoNeural37_TRAIN EMWS8 AutoNeural37_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural37_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural37_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
307814     data WORK.Ensmbl55_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl55_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
307815     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
307816     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
307816   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
307816   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
307817        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
307817   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
307817   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
307818     set EMWS8.AUTONEURAL37_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL37_DEPVAR_DM( where=(_TYPE_="TARGET"));
307819     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
307820     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
307821     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
307822     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
307823     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
307824     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
307825     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
307826     end;
MPRINT(EM_DIAGRAM):   end;
307827     output;
MPRINT(EM_DIAGRAM):   output;
307828     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL37_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL55_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
307829     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
307830     proc print data=WORK.Ensmbl55_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl55_EVENT noobs label;
307831     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
307832     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
307833     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
307834     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL55_EVENT.
NOTE: The PROCEDURE PRINT printed page 104.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307835     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
307836     proc print data = EMWS8.AutoNeural37_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural37_DepVar_DM noobs label;
307837     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
307838     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
307839     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
307839   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
307839   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
307840     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
307841     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
307842     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL37_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 105.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
307843     title10;
MPRINT(EM_DIAGRAM):   title10;
307844     %let groupid =;
307845     %let endGroupid =;
307846     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
307847     set EMWS8.AutoNeural37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_EMINFO;
307848     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
307848   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
307849     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
307850     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
307851     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
307852     %let groupid =;
307853     %let endGroupid =;
307854     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
307855     set EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural38_EMINFO;
307856     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
307856   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
307857     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
307858     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
307859     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307860     %let groupid =;
307861     %let endGroupid =;
307862     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
307863     set EMWS8.AutoNeural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural39_EMINFO;
307864     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
307864   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
307865     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
307866     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
307867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL39_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307868     %let groupid =;
307869     %let endGroupid =;
307870     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
307871     set EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMINFO;
307872     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
307872   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
307873     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
307874     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
307875     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307876     %let groupid =;
307877     %let endGroupid =;
307878     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
307879     set EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural34_EMINFO;
307880     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
307880   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
307881     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
307882     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
307883     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307884     %let groupid =;
307885     %let endGroupid =;
307886     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
307887     set EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMINFO;
307888     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
307888   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
307889     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
307890     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
307891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307892     data WORK.Ensmbl55;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl55;
307893     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
307894     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
307894   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
307895     nodeid="AUTONEURAL37";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL37";
307896     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
307897     output;
MPRINT(EM_DIAGRAM):   output;
307898     nodeid="AUTONEURAL38";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL38";
307899     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
307900     output;
MPRINT(EM_DIAGRAM):   output;
307901     nodeid="AUTONEURAL39";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL39";
307902     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
307903     output;
MPRINT(EM_DIAGRAM):   output;
307904     nodeid="AUTONEURAL40";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL40";
307905     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
307906     output;
MPRINT(EM_DIAGRAM):   output;
307907     nodeid="AUTONEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL34";
307908     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
307909     output;
MPRINT(EM_DIAGRAM):   output;
307910     nodeid="AUTONEURAL35";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL35";
307911     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
307912     output;
MPRINT(EM_DIAGRAM):   output;
307913     ;
MPRINT(EM_DIAGRAM):   ;
307914     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL55 has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
307915     title;
MPRINT(EM_DIAGRAM):   title;
307916     proc print data=WORK.Ensmbl55 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl55 label noobs;
307917     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
307918     title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
307919     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL55.
NOTE: The PROCEDURE PRINT printed page 106.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307920     title9;
MPRINT(EM_DIAGRAM):   title9;
307921     title10;
MPRINT(EM_DIAGRAM):   title10;
307922     data WORK.M2MOVYVK;
MPRINT(EM_DIAGRAM):    data WORK.M2MOVYVK;
307923     set WORK.M2MOVYVK;
MPRINT(EM_DIAGRAM):   set WORK.M2MOVYVK;
307924     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
307925     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2MOVYVK.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2MOVYVK has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
307926     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
307927     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
307928     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
307929     %macro DMDBClass;
307930         DepVar(DESC)
307931     %mend DMDBClass;
307932     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
307933     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
307934     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
307935     %macro DMDBVar;
307936
307937     %mend DMDBVar;
307938     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307939     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
307940     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
307941     proc dmdb batch data=EMWS8.AutoNeural37_TRAIN
307942     dmdbcat=WORK.EM_DMDB
307943     maxlevel = 513
307944     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural37_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
307945     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
307946     target
307947     DepVar
307948     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
307949     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL37_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
307950     quit;
307951     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2BBHAEG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2BBHAEG new;
MPRINT(EM_DIAGRAM):   run;
308053     filename emflow
308053   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring AUTONEURAL37_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308054     *------------------------------------------------------------*;
308055     * Ensmbl55: Scoring AUTONEURAL37_TRAIN data;
308056     *------------------------------------------------------------*;
308057     data EMWS8.Ensmbl55_TRAIN
308058     / view=EMWS8.Ensmbl55_TRAIN
308059     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_TRAIN / view=EMWS8.Ensmbl55_TRAIN ;
308060     set EMWS8.AutoNeural37_TRAIN
308061     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_TRAIN ;
308062     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas.
308063    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308064    +* Ensmbl55: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Combine model for DepVar;
308065    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308066    +* Ensmbl55: Scoring Code of model 1 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 1 of 6;
308067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308069    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
308070    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
308071    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
308072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308073    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308074    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
308075    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
308076    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
308077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308079    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
308080    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
308081    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
308082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308084    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
308085    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
308086    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
308087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308088    +
308089    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
308090    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
308090   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
308091    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
308092    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
308093    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
308094    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
308095    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
308096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308097    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
308098    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
308099    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
308100    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308102    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
308103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308104    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
308105    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
308106    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
308107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308108    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
308109    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
308110    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
308111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308113    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
308114    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
308115    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
308116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308118    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
308119    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
308120    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
308121    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308122    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308123    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
308124    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308125    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
308126    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
308127    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
308128    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
308129    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
308130    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
308131    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
308132    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
308133    +LENGTH _WARN_ $4
308134    +      F_DepVar  $ 12
308135    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
308136    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
308137    +
308138    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
308139    +
308140    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
308141    +
308142    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
308143    +
308144    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
308145    +
308146    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
308147    +
308148    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
308149    +
308150    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
308151    +
308152    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
308153    +
308154    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
308155    +
308156    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
308157    +
308158    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
308159    +
308160    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
308161    +
308162    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
308163    +
308164    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308165    +
308166    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
308167    +
308168    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
308169    +
308170    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
308171    +
308172    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
308173    +
308174    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
308175    +
308176    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
308177    +
308178    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
308179    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
308180    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
308181    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
308182    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
308183    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
308184    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
308185    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
308186    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
308187    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308188    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308189    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308190    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308193    +end;
MPRINT(EM_DIAGRAM):   end;
308194    +else do;
MPRINT(EM_DIAGRAM):   else do;
308195    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
308196    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
308197    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308198    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
308199    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
308200    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
308201    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
308202    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
308203    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308204    +         end;
MPRINT(EM_DIAGRAM):   end;
308205    +         else do;
MPRINT(EM_DIAGRAM):   else do;
308206    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
308207    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
308208    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308209    +            end;
MPRINT(EM_DIAGRAM):   end;
308210    +         end;
MPRINT(EM_DIAGRAM):   end;
308211    +      end;
MPRINT(EM_DIAGRAM):   end;
308212    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308213    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
308214    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
308215    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308216    +         end;
MPRINT(EM_DIAGRAM):   end;
308217    +      end;
MPRINT(EM_DIAGRAM):   end;
308218    +   end;
MPRINT(EM_DIAGRAM):   end;
308219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308220    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
308221    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
308222    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308223    +      end;
MPRINT(EM_DIAGRAM):   end;
308224    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308225    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
308226    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
308227    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
308228    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
308229    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
308230    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308231    +         end;
MPRINT(EM_DIAGRAM):   end;
308232    +      end;
MPRINT(EM_DIAGRAM):   end;
308233    +   end;
MPRINT(EM_DIAGRAM):   end;
308234    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
308235    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308236    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308237    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308238    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308241    +   end;
MPRINT(EM_DIAGRAM):   end;
308242    +end;
MPRINT(EM_DIAGRAM):   end;
308243    +
308244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308245    +*** Checking missing input Interval
308246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
308247    +
308248    +IF NMISS(
308249    +   AcceptedCmpTotal ,
308250    +   Frq ,
308251    +   Mnt ,
308252    +   MntMeatProducts ,
308253    +   NumCatalogPurchases ,
308254    +   NumDealsPurchases ,
308255    +   NumWebVisitsMonth ,
308256    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
308257    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
308258    +
308259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308260    +END;
MPRINT(EM_DIAGRAM):   END;
308261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308262    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
308263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308264    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308265    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308266    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
308267    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308268    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308269    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308270    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
308271    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
308272    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
308273    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308274    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
308275    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308276    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
308277    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308278    +END;
MPRINT(EM_DIAGRAM):   END;
308279    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308280    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
308281    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308282    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
308283    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
308284    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308285    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
308286    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308287    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
308288    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308289    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
308290    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
308291    +   ELSE S_NumCatalogPurchases
308292    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
308293    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
308294    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
308295    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308296    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
308297    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
308298    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308299    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
308300    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
308301    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308302    +END;
MPRINT(EM_DIAGRAM):   END;
308303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308304    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
308305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308307    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
308308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308309    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308310    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
308311    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
308312    +          +     6.08901143667375 * S_MntMeatProducts
308313    +          +     2.21464286693249 * S_NumCatalogPurchases
308314    +          +     0.88693497635794 * S_NumDealsPurchases
308315    +          +    -0.16352347343851 * S_NumWebVisitsMonth
308316    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 *
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 *
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 *
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
308317    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
308318    +          +     0.97693281807676 * Marital_StatusMarried
308319    +          +    -0.47353913752833 * Marital_StatusSingle
308320    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced +
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle +
0.72993998289048 * Marital_StatusTogether ;
308321    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
308322    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308323    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308324    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
308325    +END;
MPRINT(EM_DIAGRAM):   END;
308326    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308327    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
308328    +END;
MPRINT(EM_DIAGRAM):   END;
308329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308330    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
308331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308332    +
308333    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
308334    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
308335    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308336    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
308337    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
308338    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308339    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
308340    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308341    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308342    +end;
MPRINT(EM_DIAGRAM):   end;
308343    +else do;
MPRINT(EM_DIAGRAM):   else do;
308344    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
308345    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
308346    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
308347    +   end;
MPRINT(EM_DIAGRAM):   end;
308348    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
308349    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
308350    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
308351    +   end;
MPRINT(EM_DIAGRAM):   end;
308352    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308353    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308354    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308355    +   end;
MPRINT(EM_DIAGRAM):   end;
308356    +end;
MPRINT(EM_DIAGRAM):   end;
308357    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308358    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
308359    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
308360    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
308361    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
308362    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308363    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
308364    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
308365    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
308366    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
308367    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
308368    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
308369    +END;
MPRINT(EM_DIAGRAM):   END;
308370    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308371    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
308372    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
308373    +END;
MPRINT(EM_DIAGRAM):   END;
308374    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
308375    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
308376    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
308377    +END;
MPRINT(EM_DIAGRAM):   END;
308378    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
308379    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
308380    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
308381    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
308382    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
308383    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
308384    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
308385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308386    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
308387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308388    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
308389    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
308390    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
308391    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
308392    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
308393    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
308394    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
308395    +END;
MPRINT(EM_DIAGRAM):   END;
308396    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308397    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
308398    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
308399    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
308400    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
308401    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308402    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
308403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308404    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
308405    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
308406    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
308407    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
308408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308409    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
308410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308411    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
308412    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
308413    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
308414    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308415    +* Ensmbl55: Scoring Code of model 2 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 2 of 6;
308416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308417    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308418    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
308419    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
308420    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
308421    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
308422    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308423    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
308424    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
308425    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
308426    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
308427    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
308428    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
308429    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
308430    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
308431    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
308432    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
308433    +LENGTH _WARN_ $4
308434    +      F_DepVar  $ 12
308435    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
308436    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
308437    +
308438    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
308439    +
308440    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
308441    +
308442    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
308443    +
308444    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
308445    +
308446    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
308447    +
308448    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
308449    +
308450    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
308451    +
308452    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
308453    +
308454    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
308455    +
308456    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
308457    +
308458    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
308459    +
308460    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
308461    +
308462    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
308463    +
308464    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
308465    +
308466    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
308467    +
308468    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
308469    +
308470    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
308471    +
308472    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
308473    +
308474    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
308475    +
308476    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
308477    +
308478    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
308479    +
308480    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
308481    +
308482    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
308483    +
308484    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
308485    +
308486    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
308487    +
308488    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
308489    +
308490    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
308491    +
308492    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
308493    +
308494    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
308495    +
308496    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
308497    +
308498    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
308499    +
308500    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
308501    +
308502    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308503    +
308504    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
308505    +
308506    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
308507    +
308508    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
308509    +
308510    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
308511    +
308512    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
308513    +
308514    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
308515    +
308516    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
308517    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
308518    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
308519    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
308520    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
308521    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
308522    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
308523    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
308524    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
308525    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308526    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308527    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308528    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
308530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308531    +end;
MPRINT(EM_DIAGRAM):   end;
308532    +else do;
MPRINT(EM_DIAGRAM):   else do;
308533    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
308534    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
308535    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308536    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
308537    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
308538    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
308539    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
308540    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
308541    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308542    +         end;
MPRINT(EM_DIAGRAM):   end;
308543    +         else do;
MPRINT(EM_DIAGRAM):   else do;
308544    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
308545    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
308546    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308547    +            end;
MPRINT(EM_DIAGRAM):   end;
308548    +         end;
MPRINT(EM_DIAGRAM):   end;
308549    +      end;
MPRINT(EM_DIAGRAM):   end;
308550    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308551    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
308552    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
308553    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308554    +         end;
MPRINT(EM_DIAGRAM):   end;
308555    +      end;
MPRINT(EM_DIAGRAM):   end;
308556    +   end;
MPRINT(EM_DIAGRAM):   end;
308557    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308558    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
308559    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
308560    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308561    +      end;
MPRINT(EM_DIAGRAM):   end;
308562    +      else do;
MPRINT(EM_DIAGRAM):   else do;
308563    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
308564    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
308565    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
308566    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
308567    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
308568    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
308569    +         end;
MPRINT(EM_DIAGRAM):   end;
308570    +      end;
MPRINT(EM_DIAGRAM):   end;
308571    +   end;
MPRINT(EM_DIAGRAM):   end;
308572    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
308573    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
308574    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
308575    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
308576    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
308577    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
308578    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308579    +   end;
MPRINT(EM_DIAGRAM):   end;
308580    +end;
MPRINT(EM_DIAGRAM):   end;
308581    +
308582    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308583    +*** Checking missing input Interval
308584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
308585    +
308586    +IF NMISS(
308587    +   AcceptedCmpTotal ,
308588    +   Frq ,
308589    +   Mnt ,
308590    +   MntMeatProducts ,
308591    +   NumCatalogPurchases ,
308592    +   NumDealsPurchases ,
308593    +   NumWebVisitsMonth ,
308594    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
308595    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
308596    +
308597    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
308598    +END;
MPRINT(EM_DIAGRAM):   END;
308599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308600    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
308601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308602    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308603    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308604    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
308605    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308606    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308607    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308608    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
308609    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
308610    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
308611    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308612    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
308613    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308614    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
308615    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308616    +END;
MPRINT(EM_DIAGRAM):   END;
308617    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308618    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
308619    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
308620    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
308621    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
308622    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
308623    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
308624    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
308625    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
308626    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
308627    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
308628    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
308629    +   ELSE S_NumCatalogPurchases
308630    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
308631    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
308632    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
308633    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
308634    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
308635    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
308636    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
308637    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
308638    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
308639    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
308640    +END;
MPRINT(EM_DIAGRAM):   END;
308641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308642    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
308643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308645    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
308646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308647    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308648    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
308649    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
308650    +          +     3.02405267314398 * S_MntMeatProducts
308651    +          +     0.25422172488707 * S_NumCatalogPurchases
308652    +          +     0.25977266371328 * S_NumDealsPurchases
308653    +          +    -0.26865365728773 * S_NumWebVisitsMonth
308654    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 *
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 *
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 *
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
308655    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
308656    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
308657    +          +    -0.64419071408502 * S_MntMeatProducts
308658    +          +    -0.49060224303044 * S_NumCatalogPurchases
308659    +          +    -0.04840762943457 * S_NumDealsPurchases
308660    +          +     -0.7656247386051 * S_NumWebVisitsMonth
308661    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 *
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 *
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 *
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
308662    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
308663    +          +    -0.05888536499281 * Marital_StatusMarried
308664    +          +    -0.22627441829205 * Marital_StatusSingle
308665    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced +
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle +
0.52348719245564 * Marital_StatusTogether ;
308666    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
308667    +          +     0.82536605771339 * Marital_StatusMarried
308668    +          +    -0.97196770004098 * Marital_StatusSingle
308669    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced +
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle +
1.2063947269032 * Marital_StatusTogether ;
308670    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
308671    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
308672    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308673    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308674    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
308675    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
308676    +END;
MPRINT(EM_DIAGRAM):   END;
308677    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308678    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
308679    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
308680    +END;
MPRINT(EM_DIAGRAM):   END;
308681    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308682    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
308683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308684    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308685    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
308686    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
308687    +          +    -1.52187144029368 * S_MntMeatProducts
308688    +          +    -0.17233011764417 * S_NumCatalogPurchases
308689    +          +     0.08681674245114 * S_NumDealsPurchases
308690    +          +     0.13308256651831 * S_NumWebVisitsMonth
308691    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 *
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 *
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 *
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
308692    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
308693    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
308694    +          +     0.66187267823731 * S_MntMeatProducts
308695    +          +     1.52530454111654 * S_NumCatalogPurchases
308696    +          +     0.73982889008686 * S_NumDealsPurchases
308697    +          +     1.03760708665776 * S_NumWebVisitsMonth
308698    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 *
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 *
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 *
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
308699    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
308700    +          +    -0.57121500191985 * Marital_StatusMarried
308701    +          +     0.00575301863466 * Marital_StatusSingle
308702    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced +
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle +
0.58606212168272 * Marital_StatusTogether ;
308703    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
308704    +          +     0.68382990555761 * Marital_StatusMarried
308705    +          +    -0.40241665873988 * Marital_StatusSingle
308706    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced +
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle +
0.66274709598028 * Marital_StatusTogether ;
308707    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
308708    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
308709    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308710    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308711    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
308712    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
308713    +END;
MPRINT(EM_DIAGRAM):   END;
308714    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308715    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
308716    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
308717    +END;
MPRINT(EM_DIAGRAM):   END;
308718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308719    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
308720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308721    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308722    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
308723    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
308724    +          +    -2.40830591527574 * S_MntMeatProducts
308725    +          +    -0.89296864866675 * S_NumCatalogPurchases
308726    +          +     1.79889409325514 * S_NumDealsPurchases
308727    +          +    -0.33765715793031 * S_NumWebVisitsMonth
308728    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 *
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 *
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
308729    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
308730    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
308731    +          +     0.04224245417831 * S_MntMeatProducts
308732    +          +     0.25836861794607 * S_NumCatalogPurchases
308733    +          +     2.47909264202917 * S_NumDealsPurchases
308734    +          +     0.14790226792406 * S_NumWebVisitsMonth
308735    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 *
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 *
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 *
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
308736    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
308737    +          +     0.39103795234666 * Marital_StatusMarried
308738    +          +    -0.52822284221545 * Marital_StatusSingle
308739    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced +
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle +
-1.86494928221959 * Marital_StatusTogether ;
308740    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
308741    +          +       1.975579060233 * Marital_StatusMarried
308742    +          +     0.15028521746762 * Marital_StatusSingle
308743    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced +
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle +
0.92005975380984 * Marital_StatusTogether ;
308744    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
308745    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
308746    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308747    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308748    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
308749    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
308750    +END;
MPRINT(EM_DIAGRAM):   END;
308751    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308752    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
308753    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
308754    +END;
MPRINT(EM_DIAGRAM):   END;
308755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308756    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
308757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308758    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308759    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
308760    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
308761    +          +     0.16060225059391 * S_MntMeatProducts
308762    +          +     1.53093292630033 * S_NumCatalogPurchases
308763    +          +     0.39573641806699 * S_NumDealsPurchases
308764    +          +    -0.95387142126649 * S_NumWebVisitsMonth
308765    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 *
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 *
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 *
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
308766    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
308767    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
308768    +          +     0.71628478327205 * S_MntMeatProducts
308769    +          +     0.15890352363556 * S_NumCatalogPurchases
308770    +          +    -1.12928875468011 * S_NumDealsPurchases
308771    +          +    -0.30108145274307 * S_NumWebVisitsMonth
308772    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 *
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 *
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 *
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
308773    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
308774    +          +     0.91966160839643 * Marital_StatusMarried
308775    +          +    -0.63411090570397 * Marital_StatusSingle
308776    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced +
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle +
-0.54635673224032 * Marital_StatusTogether ;
308777    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
308778    +          +     0.77230489026504 * Marital_StatusMarried
308779    +          +     0.20456495503812 * Marital_StatusSingle
308780    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced +
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle +
-0.94791841887496 * Marital_StatusTogether ;
308781    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
308782    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
308783    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
308784    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
308785    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
308786    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
308787    +END;
MPRINT(EM_DIAGRAM):   END;
308788    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308789    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
308790    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
308791    +END;
MPRINT(EM_DIAGRAM):   END;
308792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308793    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
308794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308795    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308796    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
308797    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
308798    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
308799    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2
;
308800    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
308801    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 *
H1x2_2 ;
308802    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
308803    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2
;
308804    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
308805    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 *
H1x3_2 ;
308806    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
308807    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2
;
308808    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
308809    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
308810    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
308811    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
308812    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
308813    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
308814    +END;
MPRINT(EM_DIAGRAM):   END;
308815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308816    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
308817    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
308818    +END;
MPRINT(EM_DIAGRAM):   END;
308819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308820    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
308821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308822    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308823    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
308824    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
308825    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
308826    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2
;
308827    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
308828    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2
;
308829    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
308830    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
308831    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
308832    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2
;
308833    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
308834    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
308835    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
308836    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2
;
308837    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
308838    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
308839    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
308840    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
308841    +END;
MPRINT(EM_DIAGRAM):   END;
308842    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308843    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
308844    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
308845    +END;
MPRINT(EM_DIAGRAM):   END;
308846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308847    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
308848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308849    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308850    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
308851    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
308852    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
308853    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2
;
308854    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
308855    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
308856    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
308857    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 *
H1x3_2 ;
308858    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
308859    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
308860    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
308861    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2
;
308862    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
308863    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
308864    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
308865    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
308866    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
308867    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
308868    +END;
MPRINT(EM_DIAGRAM):   END;
308869    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308870    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
308871    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
308872    +END;
MPRINT(EM_DIAGRAM):   END;
308873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308874    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
308875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308876    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308877    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
308878    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
308879    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2
;
308880    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
308881    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
308882    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
308883    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
308884    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
308885    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308886    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
308887    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
308888    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
308889    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
308890    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
308891    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
308892    +END;
MPRINT(EM_DIAGRAM):   END;
308893    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308894    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
308895    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
308896    +END;
MPRINT(EM_DIAGRAM):   END;
308897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308898    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
308899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308900    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308901    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
308902    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
308903    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
308904    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
308905    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 *
H2x3_2 ;
308906    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
308907    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
308908    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
308909    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308910    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
308911    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
308912    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
308913    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
308914    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
308915    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
308916    +END;
MPRINT(EM_DIAGRAM):   END;
308917    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308918    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
308919    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
308920    +END;
MPRINT(EM_DIAGRAM):   END;
308921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308922    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
308923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308924    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308925    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
308926    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
308927    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
308928    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
308929    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
308930    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
308931    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308932    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
308933    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
308934    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
308935    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
308936    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
308937    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
308938    +END;
MPRINT(EM_DIAGRAM):   END;
308939    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308940    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
308941    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
308942    +END;
MPRINT(EM_DIAGRAM):   END;
308943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308944    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
308945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
308946    +
308947    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
308948    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
308949    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
308950    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
308951    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
308952    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
308953    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
308954    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308955    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308956    +end;
MPRINT(EM_DIAGRAM):   end;
308957    +else do;
MPRINT(EM_DIAGRAM):   else do;
308958    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
308959    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
308960    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
308961    +   end;
MPRINT(EM_DIAGRAM):   end;
308962    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
308963    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
308964    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
308965    +   end;
MPRINT(EM_DIAGRAM):   end;
308966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
308967    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
308968    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
308969    +   end;
MPRINT(EM_DIAGRAM):   end;
308970    +end;
MPRINT(EM_DIAGRAM):   end;
308971    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
308972    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
308973    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
308974    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
308975    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
308976    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
308977    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
308978    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
308979    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
308980    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
308981    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
308982    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
308983    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
308984    +END;
MPRINT(EM_DIAGRAM):   END;
308985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
308986    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
308987    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
308988    +END;
MPRINT(EM_DIAGRAM):   END;
308989    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
308990    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
308991    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
308992    +END;
MPRINT(EM_DIAGRAM):   END;
308993    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
308994    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
308995    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
308996    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
308997    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
308998    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
308999    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
309000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309001    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
309002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309003    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
309004    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
309005    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
309006    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
309007    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
309008    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
309009    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
309010    +END;
MPRINT(EM_DIAGRAM):   END;
309011    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309012    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
309013    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309014    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
309015    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
309016    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309017    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
309018    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309019    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
309020    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
309021    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
309022    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
309023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309024    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
309025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309026    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
309027    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
309028    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
309029    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309030    +* Ensmbl55: Scoring Code of model 3 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 3 of 6;
309031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309033    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
309034    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
309035    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
309036    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309037    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309038    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
309039    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309040    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
309041    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
309042    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
309043    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
309044    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
309045    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
309046    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
309047    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
309048    +LENGTH _WARN_ $4
309049    +      F_DepVar  $ 12
309050    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
309051    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
309052    +
309053    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
309054    +
309055    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
309056    +
309057    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
309058    +
309059    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
309060    +
309061    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
309062    +
309063    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
309064    +
309065    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
309066    +
309067    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
309068    +
309069    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
309070    +
309071    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
309072    +
309073    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
309074    +
309075    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
309076    +
309077    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
309078    +
309079    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
309080    +
309081    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
309082    +
309083    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309084    +
309085    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
309086    +
309087    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
309088    +
309089    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
309090    +
309091    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
309092    +
309093    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
309094    +
309095    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
309096    +
309097    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
309098    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
309099    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
309100    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
309101    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
309102    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
309103    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
309104    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
309105    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
309106    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309107    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309108    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309109    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309110    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309111    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309112    +end;
MPRINT(EM_DIAGRAM):   end;
309113    +else do;
MPRINT(EM_DIAGRAM):   else do;
309114    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
309115    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
309116    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309117    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
309118    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
309119    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
309120    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
309121    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
309122    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309123    +         end;
MPRINT(EM_DIAGRAM):   end;
309124    +         else do;
MPRINT(EM_DIAGRAM):   else do;
309125    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
309126    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
309127    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309128    +            end;
MPRINT(EM_DIAGRAM):   end;
309129    +         end;
MPRINT(EM_DIAGRAM):   end;
309130    +      end;
MPRINT(EM_DIAGRAM):   end;
309131    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309132    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
309133    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
309134    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309135    +         end;
MPRINT(EM_DIAGRAM):   end;
309136    +      end;
MPRINT(EM_DIAGRAM):   end;
309137    +   end;
MPRINT(EM_DIAGRAM):   end;
309138    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309139    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
309140    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
309141    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309142    +      end;
MPRINT(EM_DIAGRAM):   end;
309143    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309144    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
309145    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
309146    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
309147    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
309148    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
309149    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309150    +         end;
MPRINT(EM_DIAGRAM):   end;
309151    +      end;
MPRINT(EM_DIAGRAM):   end;
309152    +   end;
MPRINT(EM_DIAGRAM):   end;
309153    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
309154    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309155    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309156    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309157    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309158    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309159    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309160    +   end;
MPRINT(EM_DIAGRAM):   end;
309161    +end;
MPRINT(EM_DIAGRAM):   end;
309162    +
309163    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309164    +*** Checking missing input Interval
309165    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
309166    +
309167    +IF NMISS(
309168    +   AcceptedCmpTotal ,
309169    +   Frq ,
309170    +   Mnt ,
309171    +   MntMeatProducts ,
309172    +   NumCatalogPurchases ,
309173    +   NumDealsPurchases ,
309174    +   NumWebVisitsMonth ,
309175    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
309176    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
309177    +
309178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309179    +END;
MPRINT(EM_DIAGRAM):   END;
309180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309181    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
309182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309183    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309184    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309185    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
309186    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309187    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309188    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309189    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
309190    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
309191    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
309192    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309193    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
309194    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309195    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
309196    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309197    +END;
MPRINT(EM_DIAGRAM):   END;
309198    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309199    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
309200    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309201    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
309202    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
309203    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309204    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
309205    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309206    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
309207    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309208    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
309209    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
309210    +   ELSE S_NumCatalogPurchases
309211    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
309212    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
309213    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
309214    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309215    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
309216    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
309217    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309218    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
309219    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
309220    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309221    +END;
MPRINT(EM_DIAGRAM):   END;
309222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309223    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
309224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309225    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309226    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
309227    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309228    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309229    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
309230    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
309231    +          +     0.02561809182055 * S_MntMeatProducts
309232    +          +     -0.1793288912734 * S_NumCatalogPurchases
309233    +          +    -0.37563080213093 * S_NumDealsPurchases
309234    +          +    -0.48858578777845 * S_NumWebVisitsMonth
309235    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 *
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 *
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 *
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
309236    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
309237    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
309238    +          +     1.94302986779634 * S_MntMeatProducts
309239    +          +      0.2669037763846 * S_NumCatalogPurchases
309240    +          +     0.29313104233947 * S_NumDealsPurchases
309241    +          +    -0.30591479309812 * S_NumWebVisitsMonth
309242    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 *
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 *
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 *
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
309243    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
309244    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
309245    +          +    -0.76055629383789 * S_MntMeatProducts
309246    +          +    -0.40114802991127 * S_NumCatalogPurchases
309247    +          +    -1.12215966034372 * S_NumDealsPurchases
309248    +          +    -0.30978133586417 * S_NumWebVisitsMonth
309249    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 *
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 *
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 *
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
309250    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
309251    +          +     0.20445663414925 * Marital_StatusMarried
309252    +          +     0.16369117386202 * Marital_StatusSingle
309253    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced +
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle +
0.24678692955726 * Marital_StatusTogether ;
309254    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
309255    +          +     0.09645374599508 * Marital_StatusMarried
309256    +          +     -0.0816282741981 * Marital_StatusSingle
309257    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced +
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle +
0.097160394807 * Marital_StatusTogether ;
309258    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
309259    +          +     -3.9031880089591 * Marital_StatusMarried
309260    +          +      1.6995748309328 * Marital_StatusSingle
309261    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced +
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle +
-0.60356952072267 * Marital_StatusTogether ;
309262    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
309263    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
309264    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
309265    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
309266    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
309267    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
309268    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
309269    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
309270    +END;
MPRINT(EM_DIAGRAM):   END;
309271    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309272    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
309273    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
309274    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
309275    +END;
MPRINT(EM_DIAGRAM):   END;
309276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309277    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
309278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309279    +
309280    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
309281    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
309282    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309283    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
309284    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
309285    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309286    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
309287    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309288    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309289    +end;
MPRINT(EM_DIAGRAM):   end;
309290    +else do;
MPRINT(EM_DIAGRAM):   else do;
309291    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
309292    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
309293    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
309294    +   end;
MPRINT(EM_DIAGRAM):   end;
309295    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
309296    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
309297    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
309298    +   end;
MPRINT(EM_DIAGRAM):   end;
309299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309300    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309301    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309302    +   end;
MPRINT(EM_DIAGRAM):   end;
309303    +end;
MPRINT(EM_DIAGRAM):   end;
309304    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309305    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
309306    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 +
44.7070762374356 * H1x1_3 ;
309307    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
309308    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
309309    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
309310    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309311    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
309312    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
309313    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
309314    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
309315    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
309316    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
309317    +END;
MPRINT(EM_DIAGRAM):   END;
309318    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309319    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
309320    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
309321    +END;
MPRINT(EM_DIAGRAM):   END;
309322    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
309323    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
309324    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
309325    +END;
MPRINT(EM_DIAGRAM):   END;
309326    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
309327    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
309328    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
309329    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
309330    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
309331    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
309332    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
309333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309334    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
309335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309336    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
309337    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
309338    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
309339    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
309340    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
309341    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
309342    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
309343    +END;
MPRINT(EM_DIAGRAM):   END;
309344    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309345    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
309346    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309347    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
309348    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
309349    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309350    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
309351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309352    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
309353    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
309354    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
309355    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
309356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309357    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
309358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309359    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
309360    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
309361    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
309362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309363    +* Ensmbl55: Scoring Code of model 4 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 4 of 6;
309364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309366    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
309367    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
309368    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
309369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309370    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309371    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
309372    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309373    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
309374    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
309375    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
309376    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
309377    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
309378    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
309379    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
309380    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
309381    +LENGTH _WARN_ $4
309382    +      F_DepVar  $ 12
309383    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
309384    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
309385    +
309386    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
309387    +
309388    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
309389    +
309390    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
309391    +
309392    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
309393    +
309394    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
309395    +
309396    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
309397    +
309398    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
309399    +
309400    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
309401    +
309402    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
309403    +
309404    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
309405    +
309406    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
309407    +
309408    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
309409    +
309410    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
309411    +
309412    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
309413    +
309414    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
309415    +
309416    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
309417    +
309418    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309419    +
309420    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
309421    +
309422    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
309423    +
309424    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
309425    +
309426    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
309427    +
309428    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
309429    +
309430    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
309431    +
309432    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
309433    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
309434    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
309435    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
309436    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
309437    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
309438    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
309439    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
309440    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
309441    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309442    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309443    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309444    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309445    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309446    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309447    +end;
MPRINT(EM_DIAGRAM):   end;
309448    +else do;
MPRINT(EM_DIAGRAM):   else do;
309449    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
309450    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
309451    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309452    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
309453    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
309454    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
309455    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
309456    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
309457    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309458    +         end;
MPRINT(EM_DIAGRAM):   end;
309459    +         else do;
MPRINT(EM_DIAGRAM):   else do;
309460    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
309461    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
309462    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309463    +            end;
MPRINT(EM_DIAGRAM):   end;
309464    +         end;
MPRINT(EM_DIAGRAM):   end;
309465    +      end;
MPRINT(EM_DIAGRAM):   end;
309466    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309467    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
309468    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
309469    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309470    +         end;
MPRINT(EM_DIAGRAM):   end;
309471    +      end;
MPRINT(EM_DIAGRAM):   end;
309472    +   end;
MPRINT(EM_DIAGRAM):   end;
309473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309474    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
309475    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
309476    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309477    +      end;
MPRINT(EM_DIAGRAM):   end;
309478    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309479    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
309480    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
309481    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
309482    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
309483    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
309484    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309485    +         end;
MPRINT(EM_DIAGRAM):   end;
309486    +      end;
MPRINT(EM_DIAGRAM):   end;
309487    +   end;
MPRINT(EM_DIAGRAM):   end;
309488    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
309489    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309490    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309491    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309492    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309495    +   end;
MPRINT(EM_DIAGRAM):   end;
309496    +end;
MPRINT(EM_DIAGRAM):   end;
309497    +
309498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309499    +*** Checking missing input Interval
309500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
309501    +
309502    +IF NMISS(
309503    +   AcceptedCmpTotal ,
309504    +   Frq ,
309505    +   Mnt ,
309506    +   MntMeatProducts ,
309507    +   NumCatalogPurchases ,
309508    +   NumDealsPurchases ,
309509    +   NumWebVisitsMonth ,
309510    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
309511    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
309512    +
309513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309514    +END;
MPRINT(EM_DIAGRAM):   END;
309515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309516    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
309517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309518    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309519    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309520    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
309521    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309522    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309523    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309524    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
309525    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
309526    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
309527    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309528    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
309529    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309530    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
309531    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309532    +END;
MPRINT(EM_DIAGRAM):   END;
309533    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309534    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
309535    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309536    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
309537    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
309538    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309539    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
309540    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309541    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
309542    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309543    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
309544    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
309545    +   ELSE S_NumCatalogPurchases
309546    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
309547    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
309548    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
309549    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309550    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
309551    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
309552    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309553    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
309554    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
309555    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309556    +END;
MPRINT(EM_DIAGRAM):   END;
309557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309558    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
309559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309561    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
309562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309563    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309564    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
309565    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
309566    +          +      0.2338265945616 * S_MntMeatProducts
309567    +          +     0.01564313414142 * S_NumCatalogPurchases
309568    +          +    -0.07464304384577 * S_NumDealsPurchases
309569    +          +    -0.08299095200051 * S_NumWebVisitsMonth
309570    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
309571    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
309572    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
309573    +          +     -0.3893643428589 * S_MntMeatProducts
309574    +          +    -0.11487225011852 * S_NumCatalogPurchases
309575    +          +       0.001237145136 * S_NumDealsPurchases
309576    +          +    -0.04234500703321 * S_NumWebVisitsMonth
309577    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
309578    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
309579    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
309580    +          +    -0.27963474874984 * S_MntMeatProducts
309581    +          +     0.01939450840376 * S_NumCatalogPurchases
309582    +          +    -0.03907394757592 * S_NumDealsPurchases
309583    +          +     0.06752842740103 * S_NumWebVisitsMonth
309584    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
309585    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
309586    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
309587    +          +     0.09842717305515 * S_MntMeatProducts
309588    +          +     0.48040050668836 * S_NumCatalogPurchases
309589    +          +     0.55911507039756 * S_NumDealsPurchases
309590    +          +     0.35441361757916 * S_NumWebVisitsMonth
309591    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
309592    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
309593    +          +     0.13423943689575 * Marital_StatusMarried
309594    +          +    -0.01496857872487 * Marital_StatusSingle
309595    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
309596    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
309597    +          +     0.03005244373637 * Marital_StatusMarried
309598    +          +    -0.06891231360799 * Marital_StatusSingle
309599    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
309600    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
309601    +          +     0.01694145364157 * Marital_StatusMarried
309602    +          +    -0.05183794192194 * Marital_StatusSingle
309603    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
309604    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
309605    +          +     0.44185773223966 * Marital_StatusMarried
309606    +          +     -0.6351733171702 * Marital_StatusSingle
309607    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
309608    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
309609    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
309610    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
309611    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
309612    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
309613    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
309614    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
309615    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
309616    +END;
MPRINT(EM_DIAGRAM):   END;
309617    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309618    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
309619    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
309620    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
309621    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
309622    +END;
MPRINT(EM_DIAGRAM):   END;
309623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309624    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
309625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309626    +
309627    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
309628    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
309629    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309630    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
309631    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
309632    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309633    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
309634    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309635    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309636    +end;
MPRINT(EM_DIAGRAM):   end;
309637    +else do;
MPRINT(EM_DIAGRAM):   else do;
309638    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
309639    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
309640    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
309641    +   end;
MPRINT(EM_DIAGRAM):   end;
309642    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
309643    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
309644    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
309645    +   end;
MPRINT(EM_DIAGRAM):   end;
309646    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309647    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
309648    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
309649    +   end;
MPRINT(EM_DIAGRAM):   end;
309650    +end;
MPRINT(EM_DIAGRAM):   end;
309651    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309652    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
309653    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
309654    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
309655    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
309656    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
309657    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
309658    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
309659    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
309660    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
309661    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
309662    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
309663    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
309664    +END;
MPRINT(EM_DIAGRAM):   END;
309665    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309666    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
309667    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
309668    +END;
MPRINT(EM_DIAGRAM):   END;
309669    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
309670    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
309671    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
309672    +END;
MPRINT(EM_DIAGRAM):   END;
309673    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
309674    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
309675    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
309676    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
309677    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
309678    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
309679    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
309680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309681    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
309682    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309683    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
309684    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
309685    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
309686    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
309687    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
309688    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
309689    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
309690    +END;
MPRINT(EM_DIAGRAM):   END;
309691    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309692    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
309693    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
309694    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
309695    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
309696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309697    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
309698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309699    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
309700    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
309701    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
309702    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
309703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309704    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
309705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309706    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
309707    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
309708    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
309709    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309710    +* Ensmbl55: Scoring Code of model 5 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 5 of 6;
309711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309713    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
309714    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
309715    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
309716    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
309717    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309718    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
309719    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
309720    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
309721    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
309722    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
309723    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
309724    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
309725    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
309726    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
309727    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
309728    +LENGTH _WARN_ $4
309729    +      F_DepVar  $ 12
309730    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
309731    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
309732    +
309733    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
309734    +
309735    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
309736    +
309737    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
309738    +
309739    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
309740    +
309741    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
309742    +
309743    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
309744    +
309745    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
309746    +
309747    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
309748    +
309749    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
309750    +
309751    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
309752    +
309753    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
309754    +
309755    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
309756    +
309757    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
309758    +
309759    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
309760    +
309761    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
309762    +
309763    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
309764    +
309765    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
309766    +
309767    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
309768    +
309769    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
309770    +
309771    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
309772    +
309773    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
309774    +
309775    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
309776    +
309777    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
309778    +
309779    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
309780    +
309781    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
309782    +
309783    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
309784    +
309785    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
309786    +
309787    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
309788    +
309789    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
309790    +
309791    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
309792    +
309793    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
309794    +
309795    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
309796    +
309797    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
309798    +
309799    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
309800    +
309801    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
309802    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
309803    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
309804    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
309805    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
309806    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
309807    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
309808    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
309809    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
309810    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309811    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309812    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309813    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309814    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
309815    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309816    +end;
MPRINT(EM_DIAGRAM):   end;
309817    +else do;
MPRINT(EM_DIAGRAM):   else do;
309818    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
309819    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
309820    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
309821    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
309822    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
309823    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
309824    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
309825    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
309826    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309827    +         end;
MPRINT(EM_DIAGRAM):   end;
309828    +         else do;
MPRINT(EM_DIAGRAM):   else do;
309829    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
309830    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
309831    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309832    +            end;
MPRINT(EM_DIAGRAM):   end;
309833    +         end;
MPRINT(EM_DIAGRAM):   end;
309834    +      end;
MPRINT(EM_DIAGRAM):   end;
309835    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309836    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
309837    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
309838    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309839    +         end;
MPRINT(EM_DIAGRAM):   end;
309840    +      end;
MPRINT(EM_DIAGRAM):   end;
309841    +   end;
MPRINT(EM_DIAGRAM):   end;
309842    +   else do;
MPRINT(EM_DIAGRAM):   else do;
309843    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
309844    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
309845    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309846    +      end;
MPRINT(EM_DIAGRAM):   end;
309847    +      else do;
MPRINT(EM_DIAGRAM):   else do;
309848    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
309849    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
309850    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
309851    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
309852    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
309853    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
309854    +         end;
MPRINT(EM_DIAGRAM):   end;
309855    +      end;
MPRINT(EM_DIAGRAM):   end;
309856    +   end;
MPRINT(EM_DIAGRAM):   end;
309857    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
309858    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
309859    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
309860    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
309861    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
309862    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
309863    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309864    +   end;
MPRINT(EM_DIAGRAM):   end;
309865    +end;
MPRINT(EM_DIAGRAM):   end;
309866    +
309867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309868    +*** Checking missing input Interval
309869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
309870    +
309871    +IF NMISS(
309872    +   AcceptedCmpTotal ,
309873    +   Frq ,
309874    +   Mnt ,
309875    +   MntMeatProducts ,
309876    +   NumCatalogPurchases ,
309877    +   NumDealsPurchases ,
309878    +   NumWebVisitsMonth ,
309879    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
309880    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
309881    +
309882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
309883    +END;
MPRINT(EM_DIAGRAM):   END;
309884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309885    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
309886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309887    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309888    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309889    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
309890    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309891    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309892    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309893    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
309894    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
309895    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
309896    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309897    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
309898    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309899    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
309900    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309901    +END;
MPRINT(EM_DIAGRAM):   END;
309902    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
309903    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
309904    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
309905    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
309906    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
309907    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
309908    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
309909    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
309910    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
309911    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
309912    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
309913    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
309914    +   ELSE S_NumCatalogPurchases
309915    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
309916    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
309917    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
309918    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
309919    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
309920    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
309921    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
309922    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
309923    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
309924    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
309925    +END;
MPRINT(EM_DIAGRAM):   END;
309926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309927    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
309928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309930    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
309931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
309932    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
309933    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
309934    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
309935    +          +    -1.92258561684999 * S_MntMeatProducts
309936    +          +     -1.7098915194593 * S_NumCatalogPurchases
309937    +          +    -0.73092398706652 * S_NumDealsPurchases
309938    +          +    -1.52371325097768 * S_NumWebVisitsMonth
309939    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 *
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 *
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 *
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
309940    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
309941    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
309942    +          +     3.63686708458831 * S_MntMeatProducts
309943    +          +     0.32632650897658 * S_NumCatalogPurchases
309944    +          +     1.27820262549135 * S_NumDealsPurchases
309945    +          +    -0.18941034658667 * S_NumWebVisitsMonth
309946    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 *
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 *
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 *
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
309947    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
309948    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
309949    +          +    -0.10252809999866 * S_MntMeatProducts
309950    +          +    -2.01730745054613 * S_NumCatalogPurchases
309951    +          +     0.36276273056202 * S_NumDealsPurchases
309952    +          +    -2.03441379397145 * S_NumWebVisitsMonth
309953    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 *
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 *
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 *
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
309954    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
309955    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
309956    +          +     8.03567059273376 * S_MntMeatProducts
309957    +          +     2.16664649845379 * S_NumCatalogPurchases
309958    +          +     0.84009978401032 * S_NumDealsPurchases
309959    +          +     0.11354933533503 * S_NumWebVisitsMonth
309960    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 *
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 *
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 *
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
309961    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
309962    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
309963    +          +     1.87107978843927 * S_MntMeatProducts
309964    +          +    -0.31123291719979 * S_NumCatalogPurchases
309965    +          +    -2.80886037303887 * S_NumDealsPurchases
309966    +          +     0.08829426076164 * S_NumWebVisitsMonth
309967    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 *
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 *
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
309968    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
309969    +          +     0.50838467240268 * Marital_StatusMarried
309970    +          +    -0.57765911295879 * Marital_StatusSingle
309971    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced +
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle +
-0.24222335065155 * Marital_StatusTogether ;
309972    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
309973    +          +     0.03531168852657 * Marital_StatusMarried
309974    +          +    -0.34417109081648 * Marital_StatusSingle
309975    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced +
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle +
-0.31315325265885 * Marital_StatusTogether ;
309976    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
309977    +          +      1.9516301625913 * Marital_StatusMarried
309978    +          +    -0.24904237582097 * Marital_StatusSingle
309979    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced +
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle +
1.51668241109596 * Marital_StatusTogether ;
309980    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
309981    +          +     0.06718550412505 * Marital_StatusMarried
309982    +          +    -0.16735434131197 * Marital_StatusSingle
309983    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced +
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle +
1.06963270761532 * Marital_StatusTogether ;
309984    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
309985    +          +    -1.79498797741807 * Marital_StatusMarried
309986    +          +     2.86341746904333 * Marital_StatusSingle
309987    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced +
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle +
-2.44061593695879 * Marital_StatusTogether ;
309988    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
309989    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
309990    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
309991    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
309992    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
309993    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
309994    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
309995    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
309996    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
309997    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
309998    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
309999    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
310000    +END;
MPRINT(EM_DIAGRAM):   END;
310001    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310002    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
310003    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
310004    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
310005    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
310006    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
310007    +END;
MPRINT(EM_DIAGRAM):   END;
310008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310009    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
310010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310011    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310012    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
310013    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
310014    +          +    -0.19914740985847 * S_MntMeatProducts
310015    +          +    -0.96920717464092 * S_NumCatalogPurchases
310016    +          +    -1.68508588177508 * S_NumDealsPurchases
310017    +          +     -0.9404284924488 * S_NumWebVisitsMonth
310018    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 *
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 *
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
310019    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
310020    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
310021    +          +    -1.60286606361912 * S_MntMeatProducts
310022    +          +    -0.05010796315816 * S_NumCatalogPurchases
310023    +          +      1.1380574488234 * S_NumDealsPurchases
310024    +          +     0.25426721345204 * S_NumWebVisitsMonth
310025    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 *
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 *
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
310026    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
310027    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
310028    +          +     2.58979830897092 * S_MntMeatProducts
310029    +          +      1.2569773545009 * S_NumCatalogPurchases
310030    +          +     0.21119951191653 * S_NumDealsPurchases
310031    +          +    -0.40993456334326 * S_NumWebVisitsMonth
310032    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 *
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 *
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 *
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
310033    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
310034    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
310035    +          +     1.58324428521578 * S_MntMeatProducts
310036    +          +    -0.64140579988939 * S_NumCatalogPurchases
310037    +          +    -0.07557073365385 * S_NumDealsPurchases
310038    +          +     0.27159109297915 * S_NumWebVisitsMonth
310039    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 *
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 *
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 *
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
310040    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
310041    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
310042    +          +     0.02133290318048 * S_MntMeatProducts
310043    +          +    -0.37682732019302 * S_NumCatalogPurchases
310044    +          +     2.57483962426003 * S_NumDealsPurchases
310045    +          +    -0.76651867011773 * S_NumWebVisitsMonth
310046    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 *
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 *
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 *
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
310047    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
310048    +          +     1.00798219323102 * Marital_StatusMarried
310049    +          +     -1.3878630687005 * Marital_StatusSingle
310050    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced +
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle +
0.38993646858937 * Marital_StatusTogether ;
310051    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
310052    +          +    -0.99149540204741 * Marital_StatusMarried
310053    +          +    -0.22772928542301 * Marital_StatusSingle
310054    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced +
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle +
2.92746205796719 * Marital_StatusTogether ;
310055    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
310056    +          +     1.54170826840021 * Marital_StatusMarried
310057    +          +    -0.09937587953829 * Marital_StatusSingle
310058    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced +
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle +
0.56302999728519 * Marital_StatusTogether ;
310059    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
310060    +          +    -0.48775794259019 * Marital_StatusMarried
310061    +          +     0.87075561905397 * Marital_StatusSingle
310062    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced +
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle +
0.04810416118778 * Marital_StatusTogether ;
310063    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
310064    +          +     0.01260332236695 * Marital_StatusMarried
310065    +          +     1.18815076116703 * Marital_StatusSingle
310066    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced +
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle +
0.48437203261339 * Marital_StatusTogether ;
310067    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
310068    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
310069    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
310070    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
310071    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
310072    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
310073    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
310074    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
310075    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
310076    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
310077    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
310078    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
310079    +END;
MPRINT(EM_DIAGRAM):   END;
310080    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310081    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
310082    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
310083    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
310084    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
310085    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
310086    +END;
MPRINT(EM_DIAGRAM):   END;
310087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310088    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
310089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310090    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310091    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
310092    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
310093    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 +
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
310094    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
310095    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
310096    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 +
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
310097    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
310098    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
310099    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 +
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
310100    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
310101    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
310102    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 +
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
310103    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
310104    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
310105    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 +
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
310106    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
310107    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
310108    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
310109    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
310110    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
310111    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
310112    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
310113    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
310114    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
310115    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
310116    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
310117    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
310118    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
310119    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
310120    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
310121    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
310122    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
310123    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
310124    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
310125    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
310126    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
310127    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
310128    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
310129    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
310130    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
310131    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
310132    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
310133    +END;
MPRINT(EM_DIAGRAM):   END;
310134    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310135    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
310136    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
310137    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
310138    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
310139    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
310140    +END;
MPRINT(EM_DIAGRAM):   END;
310141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310142    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
310143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310144    +
310145    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
310146    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
310147    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310148    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
310149    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
310150    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310151    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
310152    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310153    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310154    +end;
MPRINT(EM_DIAGRAM):   end;
310155    +else do;
MPRINT(EM_DIAGRAM):   else do;
310156    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
310157    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
310158    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
310159    +   end;
MPRINT(EM_DIAGRAM):   end;
310160    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
310161    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
310162    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
310163    +   end;
MPRINT(EM_DIAGRAM):   end;
310164    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310165    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
310166    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
310167    +   end;
MPRINT(EM_DIAGRAM):   end;
310168    +end;
MPRINT(EM_DIAGRAM):   end;
310169    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310170    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
310171    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
310172    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 +
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
310173    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
310174    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
310175    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
310176    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310177    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
310178    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
310179    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
310180    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
310181    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
310182    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
310183    +END;
MPRINT(EM_DIAGRAM):   END;
310184    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310185    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
310186    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
310187    +END;
MPRINT(EM_DIAGRAM):   END;
310188    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
310189    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
310190    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
310191    +END;
MPRINT(EM_DIAGRAM):   END;
310192    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
310193    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
310194    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
310195    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
310196    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
310197    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
310198    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
310199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310200    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
310201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310202    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
310203    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
310204    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
310205    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
310206    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
310207    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
310208    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
310209    +END;
MPRINT(EM_DIAGRAM):   END;
310210    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310211    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
310212    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
310213    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
310214    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
310215    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310216    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
310217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310218    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
310219    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
310220    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
310221    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
310222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310223    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
310224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310225    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
310226    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
310227    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
310228    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310229    +* Ensmbl55: Scoring Code of model 6 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 6 of 6;
310230    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310232    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
310233    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
310234    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
310235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
310236    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310237    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
310238    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
310239    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
310240    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
310241    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
310242    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
310243    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
310244    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
310245    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
310246    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
310247    +LENGTH _WARN_ $4
310248    +      F_DepVar  $ 12
310249    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
310250    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
310251    +
310252    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
310253    +
310254    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
310255    +
310256    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
310257    +
310258    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
310259    +
310260    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
310261    +
310262    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
310263    +
310264    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
310265    +
310266    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
310267    +
310268    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
310269    +
310270    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
310271    +
310272    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
310273    +
310274    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
310275    +
310276    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
310277    +
310278    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
310279    +
310280    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
310281    +
310282    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
310283    +
310284    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
310285    +
310286    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
310287    +
310288    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
310289    +
310290    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
310291    +
310292    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
310293    +
310294    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
310295    +
310296    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
310297    +
310298    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
310299    +
310300    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
310301    +
310302    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
310303    +
310304    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
310305    +
310306    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
310307    +
310308    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
310309    +
310310    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
310311    +
310312    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
310313    +
310314    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
310315    +
310316    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
310317    +
310318    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
310319    +
310320    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
310321    +
310322    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
310323    +
310324    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
310325    +
310326    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
310327    +
310328    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
310329    +
310330    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
310331    +
310332    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
310333    +
310334    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
310335    +
310336    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
310337    +
310338    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
310339    +
310340    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
310341    +
310342    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
310343    +
310344    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
310345    +
310346    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
310347    +
310348    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
310349    +
310350    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
310351    +
310352    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
310353    +
310354    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
310355    +
310356    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
310357    +
310358    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
310359    +
310360    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
310361    +
310362    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
310363    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
310364    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
310365    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
310366    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
310367    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
310368    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
310369    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
310370    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
310371    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
310372    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
310373    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
310374    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
310375    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
310376    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310377    +end;
MPRINT(EM_DIAGRAM):   end;
310378    +else do;
MPRINT(EM_DIAGRAM):   else do;
310379    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
310380    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
310381    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
310382    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
310383    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
310384    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
310385    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
310386    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
310387    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310388    +         end;
MPRINT(EM_DIAGRAM):   end;
310389    +         else do;
MPRINT(EM_DIAGRAM):   else do;
310390    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
310391    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
310392    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310393    +            end;
MPRINT(EM_DIAGRAM):   end;
310394    +         end;
MPRINT(EM_DIAGRAM):   end;
310395    +      end;
MPRINT(EM_DIAGRAM):   end;
310396    +      else do;
MPRINT(EM_DIAGRAM):   else do;
310397    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
310398    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
310399    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310400    +         end;
MPRINT(EM_DIAGRAM):   end;
310401    +      end;
MPRINT(EM_DIAGRAM):   end;
310402    +   end;
MPRINT(EM_DIAGRAM):   end;
310403    +   else do;
MPRINT(EM_DIAGRAM):   else do;
310404    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
310405    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
310406    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310407    +      end;
MPRINT(EM_DIAGRAM):   end;
310408    +      else do;
MPRINT(EM_DIAGRAM):   else do;
310409    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
310410    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
310411    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
310412    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
310413    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
310414    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
310415    +         end;
MPRINT(EM_DIAGRAM):   end;
310416    +      end;
MPRINT(EM_DIAGRAM):   end;
310417    +   end;
MPRINT(EM_DIAGRAM):   end;
310418    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
310419    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
310420    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
310421    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
310422    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
310423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
310424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310425    +   end;
MPRINT(EM_DIAGRAM):   end;
310426    +end;
MPRINT(EM_DIAGRAM):   end;
310427    +
310428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310429    +*** Checking missing input Interval
310430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
310431    +
310432    +IF NMISS(
310433    +   AcceptedCmpTotal ,
310434    +   Frq ,
310435    +   Mnt ,
310436    +   MntMeatProducts ,
310437    +   NumCatalogPurchases ,
310438    +   NumDealsPurchases ,
310439    +   NumWebVisitsMonth ,
310440    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
310441    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
310442    +
310443    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
310444    +END;
MPRINT(EM_DIAGRAM):   END;
310445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310446    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
310447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310448    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310449    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310450    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
310451    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310452    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310453    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310454    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
310455    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
310456    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
310457    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
310458    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
310459    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
310460    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
310461    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310462    +END;
MPRINT(EM_DIAGRAM):   END;
310463    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310464    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
310465    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
310466    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
310467    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
310468    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
310469    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
310470    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
310471    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
310472    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
310473    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
310474    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
310475    +   ELSE S_NumCatalogPurchases
310476    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
310477    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
310478    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
310479    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
310480    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
310481    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
310482    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
310483    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
310484    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
310485    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
310486    +END;
MPRINT(EM_DIAGRAM):   END;
310487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310488    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
310489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310491    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
310492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310493    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310494    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
310495    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
310496    +          +     2.79168320854924 * S_MntMeatProducts
310497    +          +    -1.09894266401589 * S_NumCatalogPurchases
310498    +          +    -0.32966417347551 * S_NumDealsPurchases
310499    +          +    -0.72195034767343 * S_NumWebVisitsMonth
310500    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
310501    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
310502    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
310503    +          +     9.02469430152189 * S_MntMeatProducts
310504    +          +     1.42644521887241 * S_NumCatalogPurchases
310505    +          +      0.6475058577302 * S_NumDealsPurchases
310506    +          +     0.08123225110233 * S_NumWebVisitsMonth
310507    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
310508    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
310509    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
310510    +          +     5.40567027331821 * S_MntMeatProducts
310511    +          +     0.21404551755506 * S_NumCatalogPurchases
310512    +          +    -3.79184634796332 * S_NumDealsPurchases
310513    +          +     0.64355102802571 * S_NumWebVisitsMonth
310514    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
310515    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
310516    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
310517    +          +     2.35287601364019 * S_MntMeatProducts
310518    +          +    -3.27198648531912 * S_NumCatalogPurchases
310519    +          +    -0.16046880718311 * S_NumDealsPurchases
310520    +          +     -3.7025327830273 * S_NumWebVisitsMonth
310521    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
310522    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
310523    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
310524    +          +     8.39312647460766 * S_MntMeatProducts
310525    +          +     3.07026872536137 * S_NumCatalogPurchases
310526    +          +     2.03045608124213 * S_NumDealsPurchases
310527    +          +     3.86452915398414 * S_NumWebVisitsMonth
310528    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
310529    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
310530    +          +     0.14979485299347 * Marital_StatusMarried
310531    +          +    -0.09166445391312 * Marital_StatusSingle
310532    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
310533    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
310534    +          +      0.1646484112393 * Marital_StatusMarried
310535    +          +     0.01074681811884 * Marital_StatusSingle
310536    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
310537    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
310538    +          +    -0.28313626645981 * Marital_StatusMarried
310539    +          +      2.8257446964988 * Marital_StatusSingle
310540    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
310541    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
310542    +          +     3.05775024202559 * Marital_StatusMarried
310543    +          +    -0.23539571945671 * Marital_StatusSingle
310544    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
310545    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
310546    +          +    -0.48359916542157 * Marital_StatusMarried
310547    +          +    -1.64182316823237 * Marital_StatusSingle
310548    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
310549    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
310550    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
310551    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
310552    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
310553    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
310554    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
310555    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
310556    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310557    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
310558    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
310559    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
310560    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
310561    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
310562    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
310563    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
310564    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
310565    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
310566    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
310567    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
310568    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
310569    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
310570    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
310571    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
310572    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
310573    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
310574    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
310575    +END;
MPRINT(EM_DIAGRAM):   END;
310576    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310577    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
310578    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
310579    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
310580    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
310581    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
310582    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
310583    +END;
MPRINT(EM_DIAGRAM):   END;
310584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310585    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
310586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310587    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310588    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
310589    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
310590    +          +     0.55999885697493 * S_MntMeatProducts
310591    +          +      0.2225207563207 * S_NumCatalogPurchases
310592    +          +     -1.0233439835205 * S_NumDealsPurchases
310593    +          +    -0.35430585878397 * S_NumWebVisitsMonth
310594    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
310595    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
310596    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
310597    +          +    -1.04508919964747 * S_MntMeatProducts
310598    +          +     -0.6758665249546 * S_NumCatalogPurchases
310599    +          +    -0.24215201937497 * S_NumDealsPurchases
310600    +          +    -1.02736823453312 * S_NumWebVisitsMonth
310601    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
310602    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
310603    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
310604    +          +    -3.97854305593999 * S_MntMeatProducts
310605    +          +    -2.05331728407593 * S_NumCatalogPurchases
310606    +          +    -0.48841403720827 * S_NumDealsPurchases
310607    +          +     0.25411498590567 * S_NumWebVisitsMonth
310608    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
310609    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
310610    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
310611    +          +     -0.7071400781557 * S_MntMeatProducts
310612    +          +     1.20780208787296 * S_NumCatalogPurchases
310613    +          +    -0.58152407834402 * S_NumDealsPurchases
310614    +          +     2.15567925539399 * S_NumWebVisitsMonth
310615    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
310616    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
310617    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
310618    +          +    -1.07023271439686 * S_MntMeatProducts
310619    +          +     0.31952847185507 * S_NumCatalogPurchases
310620    +          +     0.97232557455358 * S_NumDealsPurchases
310621    +          +     1.40227284681788 * S_NumWebVisitsMonth
310622    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
310623    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
310624    +          +    -1.54860787754125 * Marital_StatusMarried
310625    +          +     3.07164083530731 * Marital_StatusSingle
310626    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
310627    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
310628    +          +     1.93404037878036 * Marital_StatusMarried
310629    +          +    -1.33159061927866 * Marital_StatusSingle
310630    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
310631    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
310632    +          +    -1.20603561095549 * Marital_StatusMarried
310633    +          +     1.40927693179184 * Marital_StatusSingle
310634    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
310635    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
310636    +          +     -0.1442863204197 * Marital_StatusMarried
310637    +          +     0.60523055771734 * Marital_StatusSingle
310638    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
310639    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
310640    +          +     0.09024082077945 * Marital_StatusMarried
310641    +          +     0.46315219527454 * Marital_StatusSingle
310642    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
310643    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
310644    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
310645    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
310646    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
310647    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
310648    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
310649    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
310650    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310651    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
310652    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
310653    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
310654    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
310655    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
310656    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
310657    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
310658    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
310659    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
310660    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
310661    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
310662    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
310663    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
310664    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
310665    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
310666    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
310667    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
310668    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
310669    +END;
MPRINT(EM_DIAGRAM):   END;
310670    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310671    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
310672    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
310673    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
310674    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
310675    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
310676    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
310677    +END;
MPRINT(EM_DIAGRAM):   END;
310678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310679    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
310680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310681    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310682    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
310683    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
310684    +          +    -1.02461177883701 * S_MntMeatProducts
310685    +          +     0.58245198640098 * S_NumCatalogPurchases
310686    +          +    -0.23780276328844 * S_NumDealsPurchases
310687    +          +     1.28202459687231 * S_NumWebVisitsMonth
310688    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
310689    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
310690    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
310691    +          +     0.13875330330852 * S_MntMeatProducts
310692    +          +    -0.22996544763814 * S_NumCatalogPurchases
310693    +          +    -0.36599639965399 * S_NumDealsPurchases
310694    +          +     1.99081506581768 * S_NumWebVisitsMonth
310695    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
310696    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
310697    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
310698    +          +     0.94472031892058 * S_MntMeatProducts
310699    +          +     0.27511909854912 * S_NumCatalogPurchases
310700    +          +    -0.55526545857693 * S_NumDealsPurchases
310701    +          +    -0.61544688091302 * S_NumWebVisitsMonth
310702    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
310703    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
310704    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
310705    +          +     1.61403840093612 * S_MntMeatProducts
310706    +          +    -0.34382576245292 * S_NumCatalogPurchases
310707    +          +     0.70213159483637 * S_NumDealsPurchases
310708    +          +    -0.39731145628175 * S_NumWebVisitsMonth
310709    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
310710    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
310711    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
310712    +          +    -0.33974847531229 * S_MntMeatProducts
310713    +          +     1.74350962571519 * S_NumCatalogPurchases
310714    +          +     0.41098583446208 * S_NumDealsPurchases
310715    +          +    -0.66305298743409 * S_NumWebVisitsMonth
310716    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
310717    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
310718    +          +    -0.29510060772746 * Marital_StatusMarried
310719    +          +     1.74124353401891 * Marital_StatusSingle
310720    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
310721    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
310722    +          +    -0.61203463567014 * Marital_StatusMarried
310723    +          +     1.95705767804118 * Marital_StatusSingle
310724    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
310725    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
310726    +          +      1.7151906515185 * Marital_StatusMarried
310727    +          +     0.70376524929742 * Marital_StatusSingle
310728    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
310729    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
310730    +          +    -1.27088213578872 * Marital_StatusMarried
310731    +          +    -0.91253966593459 * Marital_StatusSingle
310732    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
310733    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
310734    +          +     -0.5308059771847 * Marital_StatusMarried
310735    +          +    -0.11208078645904 * Marital_StatusSingle
310736    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
310737    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
310738    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
310739    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
310740    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
310741    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
310742    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
310743    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
310744    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
310745    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
310746    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
310747    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
310748    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
310749    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
310750    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
310751    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
310752    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
310753    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
310754    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
310755    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
310756    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
310757    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
310758    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
310759    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
310760    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
310761    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
310762    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
310763    +END;
MPRINT(EM_DIAGRAM):   END;
310764    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310765    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
310766    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
310767    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
310768    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
310769    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
310770    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
310771    +END;
MPRINT(EM_DIAGRAM):   END;
310772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310773    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
310774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310775    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310776    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
310777    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
310778    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
310779    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
310780    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
310781    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
310782    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
310783    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
310784    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
310785    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
310786    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
310787    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
310788    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
310789    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
310790    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
310791    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
310792    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
310793    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
310794    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
310795    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
310796    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
310797    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
310798    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
310799    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
310800    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
310801    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
310802    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
310803    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
310804    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
310805    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
310806    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
310807    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
310808    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
310809    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
310810    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
310811    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
310812    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
310813    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
310814    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
310815    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
310816    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
310817    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
310818    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
310819    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
310820    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
310821    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
310822    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
310823    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
310824    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
310825    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
310826    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
310827    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
310828    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
310829    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
310830    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
310831    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
310832    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
310833    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
310834    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
310835    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
310836    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
310837    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
310838    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
310839    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
310840    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
310841    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
310842    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
310843    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
310844    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
310845    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
310846    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
310847    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
310848    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
310849    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
310850    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
310851    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
310852    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
310853    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
310854    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
310855    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
310856    +END;
MPRINT(EM_DIAGRAM):   END;
310857    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310858    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
310859    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
310860    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
310861    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
310862    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
310863    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
310864    +END;
MPRINT(EM_DIAGRAM):   END;
310865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310866    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
310867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310868    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310869    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
310870    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
310871    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
310872    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
310873    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
310874    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
310875    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
310876    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
310877    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
310878    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
310879    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
310880    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
310881    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
310882    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
310883    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
310884    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
310885    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
310886    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
310887    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
310888    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
310889    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
310890    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
310891    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
310892    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
310893    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
310894    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
310895    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
310896    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
310897    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
310898    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
310899    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
310900    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
310901    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
310902    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
310903    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
310904    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
310905    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
310906    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
310907    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
310908    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
310909    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
310910    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
310911    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
310912    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
310913    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
310914    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
310915    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
310916    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
310917    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
310918    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
310919    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
310920    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
310921    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
310922    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
310923    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
310924    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
310925    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
310926    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
310927    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
310928    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
310929    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
310930    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
310931    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
310932    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
310933    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
310934    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
310935    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
310936    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
310937    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
310938    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
310939    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
310940    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
310941    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
310942    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
310943    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
310944    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
310945    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
310946    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
310947    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
310948    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
310949    +END;
MPRINT(EM_DIAGRAM):   END;
310950    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
310951    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
310952    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
310953    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
310954    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
310955    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
310956    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
310957    +END;
MPRINT(EM_DIAGRAM):   END;
310958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310959    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
310960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
310961    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
310962    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
310963    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
310964    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
310965    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
310966    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
310967    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
310968    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
310969    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
310970    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
310971    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
310972    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
310973    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
310974    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
310975    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
310976    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
310977    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
310978    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
310979    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
310980    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
310981    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
310982    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
310983    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
310984    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
310985    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
310986    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
310987    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
310988    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
310989    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
310990    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
310991    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
310992    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
310993    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
310994    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
310995    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
The SAS System
 
310996    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
310997    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
310998    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
310999    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
311000    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
311001    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
311002    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
311003    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
311004    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
311005    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
311006    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
311007    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
311008    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
311009    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
311010    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
311011    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
311012    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
311013    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
311014    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
311015    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
311016    +END;
MPRINT(EM_DIAGRAM):   END;
311017    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311018    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
311019    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
311020    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
311021    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
311022    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
311023    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
311024    +END;
MPRINT(EM_DIAGRAM):   END;
311025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311026    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
311027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311028    +
311029    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
311030    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
311031    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311032    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
311033    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
311034    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311035    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
311036    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
311037    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
311038    +end;
MPRINT(EM_DIAGRAM):   end;
311039    +else do;
MPRINT(EM_DIAGRAM):   else do;
311040    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
311041    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
311042    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
311043    +   end;
MPRINT(EM_DIAGRAM):   end;
311044    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
311045    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
311046    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
311047    +   end;
MPRINT(EM_DIAGRAM):   end;
311048    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311049    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
311050    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
311051    +   end;
MPRINT(EM_DIAGRAM):   end;
311052    +end;
MPRINT(EM_DIAGRAM):   end;
311053    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311054    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
311055    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
311056    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
311057    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
311058    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
311059    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
311060    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
311061    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
311062    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
311063    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
311064    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
311065    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
311066    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
311067    +END;
MPRINT(EM_DIAGRAM):   END;
311068    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311069    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
311070    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
311071    +END;
MPRINT(EM_DIAGRAM):   END;
311072    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
311073    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
311074    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
311075    +END;
MPRINT(EM_DIAGRAM):   END;
311076    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
311077    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
311078    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
311079    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
311080    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
311081    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
311082    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
311083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311084    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
311085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311086    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
311087    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
311088    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
311089    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
311090    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
311091    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
311092    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
311093    +END;
MPRINT(EM_DIAGRAM):   END;
311094    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311095    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
311096    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311097    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
311098    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
311099    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311100    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
311101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311102    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
311103    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
311104    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
311105    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
311106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311107    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
311108    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311109    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
311110    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
311111    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
311112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311113    +* Ensmbl55: Maximum Posteriors of 6 models;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Maximum Posteriors of 6 models;
311114    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311115    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
311116    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
311117    +P_DepVar1 = max(
311118    +AutoNeural37_P_DepVar1 ,
311119    +AutoNeural38_P_DepVar1 ,
311120    +AutoNeural39_P_DepVar1 ,
311121    +AutoNeural40_P_DepVar1 ,
311122    +AutoNeural34_P_DepVar1 ,
311123    +AutoNeural35_P_DepVar1
311124    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural37_P_DepVar1 , AutoNeural38_P_DepVar1 ,
AutoNeural39_P_DepVar1 , AutoNeural40_P_DepVar1 , AutoNeural34_P_DepVar1 ,
AutoNeural35_P_DepVar1 );
311125    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
311126    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
311127    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
311128    +end;
MPRINT(EM_DIAGRAM):   end;
311129    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
311130    +P_DepVar0 = max(
311131    +AutoNeural37_P_DepVar0 ,
311132    +AutoNeural38_P_DepVar0 ,
311133    +AutoNeural39_P_DepVar0 ,
311134    +AutoNeural40_P_DepVar0 ,
311135    +AutoNeural34_P_DepVar0 ,
311136    +AutoNeural35_P_DepVar0
311137    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural37_P_DepVar0 , AutoNeural38_P_DepVar0 ,
AutoNeural39_P_DepVar0 , AutoNeural40_P_DepVar0 , AutoNeural34_P_DepVar0 ,
AutoNeural35_P_DepVar0 );
311138    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
311139    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
311140    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
311141    +end;
MPRINT(EM_DIAGRAM):   end;
311142    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
311143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311144    +* Ensmbl55: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Classification Vars;
311145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311146    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
311147    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
311148    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
311149    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
311150    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
311151    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
311152    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
311153    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
311154    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
311155    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
311156    +end;
MPRINT(EM_DIAGRAM):   end;
311157    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
311158    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
311159    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
311160    +end;
MPRINT(EM_DIAGRAM):   end;
311161    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
311162    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311163    +* Ensmbl55: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Producing Unformatted variable;
311164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311165    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
311166    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
311167    +else
311168    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
311169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311170    +* Ensmbl55: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing _WARN_ Variable;
311171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311172    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
311173    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
311174    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
311175    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
311175   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
311176    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
311176   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
311177    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
311177   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
311178    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
311178   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
311179    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
311179   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
311180    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
311180   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
311181    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
311181   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
311182    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
311182   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
311183    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
311183   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
311184    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
311184   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
311185    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
311185   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
311186    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
311186   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
311187    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
311187   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
311188    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
311188   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
311189    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
311189   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
311190    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
311190   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
311191    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
311191   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
311192    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
311192   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
311193    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
311193   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
311194    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
311194   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
311195    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
311195   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
311196    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
311196   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
311197    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
311197   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
311198    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
311198   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
311199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311200    +* Ensmbl55: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Residual Vars;
311201    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311202    +if
311203    +F_DepVar NE '1'
311204    +AND F_DepVar NE '0'
311205    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
311206    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
311207    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
311208    +end;
MPRINT(EM_DIAGRAM):   end;
311209    +else do;
MPRINT(EM_DIAGRAM):   else do;
311210    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
311211    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
311212    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
311213    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
311214    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
311215    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
311216    +END;
MPRINT(EM_DIAGRAM):   END;
311217    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
311218     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL55_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.13 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.13 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
311219     quit;
311220     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
311221     filename emflow
311221   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring AUTONEURAL37_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311222     *------------------------------------------------------------*;
311223     * Ensmbl55: Scoring AUTONEURAL37_VALIDATE data;
311224     *------------------------------------------------------------*;
311225     data EMWS8.Ensmbl55_VALIDATE
311226     / view=EMWS8.Ensmbl55_VALIDATE
311227     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_VALIDATE / view=EMWS8.Ensmbl55_VALIDATE ;
311228     set EMWS8.AutoNeural37_VALIDATE
311229     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_VALIDATE ;
311230     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas.
311231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311232    +* Ensmbl55: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Combine model for DepVar;
311233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311234    +* Ensmbl55: Scoring Code of model 1 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 1 of 6;
311235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311236    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311237    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
311238    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
311239    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
311240    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311241    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311242    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
311243    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
311244    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
311245    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311246    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311247    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
311248    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
311249    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
311250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311252    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
311253    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
311254    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
311255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311256    +
311257    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
311258    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
311258   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
311259    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
311260    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
311261    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
311262    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
311263    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
311264    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311265    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
311266    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
311267    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
311268    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311269    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311270    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
311271    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311272    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
311273    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
311274    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
311275    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311276    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
311277    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
311278    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
311279    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311280    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311281    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
311282    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
311283    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
311284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311285    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311286    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
311287    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
311288    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
311289    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311290    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311291    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
311292    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311293    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
311294    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
311295    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
311296    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
311297    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
311298    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
311299    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
311300    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
311301    +LENGTH _WARN_ $4
311302    +      F_DepVar  $ 12
311303    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
311304    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
311305    +
311306    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
311307    +
311308    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
311309    +
311310    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
311311    +
311312    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
311313    +
311314    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
311315    +
311316    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
311317    +
311318    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
311319    +
311320    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
311321    +
311322    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
311323    +
311324    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
311325    +
311326    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
311327    +
311328    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
311329    +
311330    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
311331    +
311332    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311333    +
311334    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
311335    +
311336    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
311337    +
311338    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
311339    +
311340    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
311341    +
311342    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
311343    +
311344    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311345    +
311346    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
311347    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
311348    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
311349    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
311350    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
311351    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
311352    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
311353    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
311354    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
311355    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
311356    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
311357    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
311358    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
311359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311361    +end;
MPRINT(EM_DIAGRAM):   end;
311362    +else do;
MPRINT(EM_DIAGRAM):   else do;
311363    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
311364    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
311365    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311366    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
311367    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
311368    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
311369    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
311370    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
311371    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311372    +         end;
MPRINT(EM_DIAGRAM):   end;
311373    +         else do;
MPRINT(EM_DIAGRAM):   else do;
311374    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
311375    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
311376    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311377    +            end;
MPRINT(EM_DIAGRAM):   end;
311378    +         end;
MPRINT(EM_DIAGRAM):   end;
311379    +      end;
MPRINT(EM_DIAGRAM):   end;
311380    +      else do;
MPRINT(EM_DIAGRAM):   else do;
311381    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
311382    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
311383    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311384    +         end;
MPRINT(EM_DIAGRAM):   end;
311385    +      end;
MPRINT(EM_DIAGRAM):   end;
311386    +   end;
MPRINT(EM_DIAGRAM):   end;
311387    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311388    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
311389    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
311390    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311391    +      end;
MPRINT(EM_DIAGRAM):   end;
311392    +      else do;
MPRINT(EM_DIAGRAM):   else do;
311393    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
311394    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
311395    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
311396    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
311397    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
311398    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311399    +         end;
MPRINT(EM_DIAGRAM):   end;
311400    +      end;
MPRINT(EM_DIAGRAM):   end;
311401    +   end;
MPRINT(EM_DIAGRAM):   end;
311402    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
311403    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
311404    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
311405    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
311406    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
311407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311409    +   end;
MPRINT(EM_DIAGRAM):   end;
311410    +end;
MPRINT(EM_DIAGRAM):   end;
311411    +
311412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311413    +*** Checking missing input Interval
311414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
311415    +
311416    +IF NMISS(
311417    +   AcceptedCmpTotal ,
311418    +   Frq ,
311419    +   Mnt ,
311420    +   MntMeatProducts ,
311421    +   NumCatalogPurchases ,
311422    +   NumDealsPurchases ,
311423    +   NumWebVisitsMonth ,
311424    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
311425    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
311426    +
311427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311428    +END;
MPRINT(EM_DIAGRAM):   END;
311429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311430    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
311431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311432    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311433    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311434    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
311435    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311436    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311437    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311438    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
311439    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
311440    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
311441    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
311442    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
311443    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
311444    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
311445    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311446    +END;
MPRINT(EM_DIAGRAM):   END;
311447    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311448    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
311449    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311450    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
311451    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
311452    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311453    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
311454    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311455    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
311456    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311457    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
311458    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
311459    +   ELSE S_NumCatalogPurchases
311460    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
311461    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
311462    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
311463    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
311464    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
311465    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
311466    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
311467    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
311468    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
311469    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311470    +END;
MPRINT(EM_DIAGRAM):   END;
311471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311472    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
311473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311475    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
311476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311477    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311478    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
311479    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
311480    +          +     6.08901143667375 * S_MntMeatProducts
311481    +          +     2.21464286693249 * S_NumCatalogPurchases
311482    +          +     0.88693497635794 * S_NumDealsPurchases
311483    +          +    -0.16352347343851 * S_NumWebVisitsMonth
311484    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 *
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 *
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 *
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
311485    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
311486    +          +     0.97693281807676 * Marital_StatusMarried
311487    +          +    -0.47353913752833 * Marital_StatusSingle
311488    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced +
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle +
0.72993998289048 * Marital_StatusTogether ;
311489    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
311490    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
311491    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
311492    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
311493    +END;
MPRINT(EM_DIAGRAM):   END;
311494    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311495    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
311496    +END;
MPRINT(EM_DIAGRAM):   END;
311497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311498    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
311499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311500    +
311501    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
311502    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
311503    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311504    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
311505    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
311506    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311507    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
311508    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
311509    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
311510    +end;
MPRINT(EM_DIAGRAM):   end;
311511    +else do;
MPRINT(EM_DIAGRAM):   else do;
311512    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
311513    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
311514    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
311515    +   end;
MPRINT(EM_DIAGRAM):   end;
311516    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
311517    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
311518    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
311519    +   end;
MPRINT(EM_DIAGRAM):   end;
311520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311521    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
311522    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
311523    +   end;
MPRINT(EM_DIAGRAM):   end;
311524    +end;
MPRINT(EM_DIAGRAM):   end;
311525    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311526    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
311527    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
311528    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
311529    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
311530    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
311531    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
311532    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
311533    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
311534    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
311535    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
311536    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
311537    +END;
MPRINT(EM_DIAGRAM):   END;
311538    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311539    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
311540    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
311541    +END;
MPRINT(EM_DIAGRAM):   END;
311542    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
311543    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
311544    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
311545    +END;
MPRINT(EM_DIAGRAM):   END;
311546    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
311547    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
311548    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
311549    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
311550    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
311551    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
311552    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
311553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311554    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
311555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311556    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
311557    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
311558    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
311559    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
311560    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
311561    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
311562    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
311563    +END;
MPRINT(EM_DIAGRAM):   END;
311564    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311565    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
311566    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
311567    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
311568    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
311569    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311570    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
311571    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311572    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
311573    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
311574    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
311575    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
311576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311577    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
311578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311579    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
311580    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
311581    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
311582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311583    +* Ensmbl55: Scoring Code of model 2 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 2 of 6;
311584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311586    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
311587    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
311588    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
311589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
311590    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311591    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
311592    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
311593    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
311594    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
311595    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
311596    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
311597    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
311598    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
311599    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
311600    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
311601    +LENGTH _WARN_ $4
311602    +      F_DepVar  $ 12
311603    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
311604    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
311605    +
311606    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
311607    +
311608    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
311609    +
311610    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
311611    +
311612    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
311613    +
311614    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
311615    +
311616    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
311617    +
311618    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
311619    +
311620    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
311621    +
311622    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
311623    +
311624    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
311625    +
311626    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
311627    +
311628    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
311629    +
311630    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
311631    +
311632    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
311633    +
311634    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
311635    +
311636    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
311637    +
311638    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
311639    +
311640    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
311641    +
311642    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
311643    +
311644    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
311645    +
311646    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
311647    +
311648    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
311649    +
311650    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
311651    +
311652    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
311653    +
311654    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
311655    +
311656    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
311657    +
311658    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
311659    +
311660    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
311661    +
311662    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
311663    +
311664    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
311665    +
311666    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
311667    +
311668    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
311669    +
311670    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
311671    +
311672    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
311673    +
311674    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
311675    +
311676    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
311677    +
311678    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
311679    +
311680    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
311681    +
311682    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
311683    +
311684    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
311685    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
311686    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
311687    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
311688    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
311689    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
311690    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
311691    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
311692    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
311693    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
311694    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
311695    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
311696    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
311697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
311698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311699    +end;
MPRINT(EM_DIAGRAM):   end;
311700    +else do;
MPRINT(EM_DIAGRAM):   else do;
311701    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
311702    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
311703    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
311704    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
311705    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
311706    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
311707    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
311708    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
311709    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311710    +         end;
MPRINT(EM_DIAGRAM):   end;
311711    +         else do;
MPRINT(EM_DIAGRAM):   else do;
311712    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
311713    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
311714    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311715    +            end;
MPRINT(EM_DIAGRAM):   end;
311716    +         end;
MPRINT(EM_DIAGRAM):   end;
311717    +      end;
MPRINT(EM_DIAGRAM):   end;
311718    +      else do;
MPRINT(EM_DIAGRAM):   else do;
311719    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
311720    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
311721    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311722    +         end;
MPRINT(EM_DIAGRAM):   end;
311723    +      end;
MPRINT(EM_DIAGRAM):   end;
311724    +   end;
MPRINT(EM_DIAGRAM):   end;
311725    +   else do;
MPRINT(EM_DIAGRAM):   else do;
311726    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
311727    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
311728    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311729    +      end;
MPRINT(EM_DIAGRAM):   end;
311730    +      else do;
MPRINT(EM_DIAGRAM):   else do;
311731    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
311732    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
311733    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
311734    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
311735    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
311736    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
311737    +         end;
MPRINT(EM_DIAGRAM):   end;
311738    +      end;
MPRINT(EM_DIAGRAM):   end;
311739    +   end;
MPRINT(EM_DIAGRAM):   end;
311740    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
311741    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
311742    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
311743    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
311744    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
311745    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
311746    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311747    +   end;
MPRINT(EM_DIAGRAM):   end;
311748    +end;
MPRINT(EM_DIAGRAM):   end;
311749    +
311750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311751    +*** Checking missing input Interval
311752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
311753    +
311754    +IF NMISS(
311755    +   AcceptedCmpTotal ,
311756    +   Frq ,
311757    +   Mnt ,
311758    +   MntMeatProducts ,
311759    +   NumCatalogPurchases ,
311760    +   NumDealsPurchases ,
311761    +   NumWebVisitsMonth ,
311762    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
311763    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
311764    +
311765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
311766    +END;
MPRINT(EM_DIAGRAM):   END;
311767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311768    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
311769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311770    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311771    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311772    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
311773    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311774    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311775    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311776    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
311777    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
311778    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
311779    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
311780    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
311781    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
311782    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
311783    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311784    +END;
MPRINT(EM_DIAGRAM):   END;
311785    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311786    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
311787    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
311788    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
311789    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
311790    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
311791    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
311792    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
311793    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
311794    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
311795    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
311796    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
311797    +   ELSE S_NumCatalogPurchases
311798    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
311799    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
311800    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
311801    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
311802    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
311803    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
311804    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
311805    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
311806    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
311807    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
311808    +END;
MPRINT(EM_DIAGRAM):   END;
311809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311810    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
311811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311813    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
311814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311815    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311816    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
311817    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
311818    +          +     3.02405267314398 * S_MntMeatProducts
311819    +          +     0.25422172488707 * S_NumCatalogPurchases
311820    +          +     0.25977266371328 * S_NumDealsPurchases
311821    +          +    -0.26865365728773 * S_NumWebVisitsMonth
311822    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 *
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 *
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 *
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
311823    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
311824    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
311825    +          +    -0.64419071408502 * S_MntMeatProducts
311826    +          +    -0.49060224303044 * S_NumCatalogPurchases
311827    +          +    -0.04840762943457 * S_NumDealsPurchases
311828    +          +     -0.7656247386051 * S_NumWebVisitsMonth
311829    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 *
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 *
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 *
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
311830    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
311831    +          +    -0.05888536499281 * Marital_StatusMarried
311832    +          +    -0.22627441829205 * Marital_StatusSingle
311833    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced +
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle +
0.52348719245564 * Marital_StatusTogether ;
311834    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
311835    +          +     0.82536605771339 * Marital_StatusMarried
311836    +          +    -0.97196770004098 * Marital_StatusSingle
311837    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced +
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle +
1.2063947269032 * Marital_StatusTogether ;
311838    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
311839    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
311840    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
311841    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
311842    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
311843    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
311844    +END;
MPRINT(EM_DIAGRAM):   END;
311845    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311846    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
311847    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
311848    +END;
MPRINT(EM_DIAGRAM):   END;
311849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311850    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
311851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311852    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311853    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
311854    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
311855    +          +    -1.52187144029368 * S_MntMeatProducts
311856    +          +    -0.17233011764417 * S_NumCatalogPurchases
311857    +          +     0.08681674245114 * S_NumDealsPurchases
311858    +          +     0.13308256651831 * S_NumWebVisitsMonth
311859    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 *
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 *
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 *
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
311860    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
311861    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
311862    +          +     0.66187267823731 * S_MntMeatProducts
311863    +          +     1.52530454111654 * S_NumCatalogPurchases
311864    +          +     0.73982889008686 * S_NumDealsPurchases
311865    +          +     1.03760708665776 * S_NumWebVisitsMonth
311866    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 *
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 *
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 *
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
311867    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
311868    +          +    -0.57121500191985 * Marital_StatusMarried
311869    +          +     0.00575301863466 * Marital_StatusSingle
311870    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced +
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle +
0.58606212168272 * Marital_StatusTogether ;
311871    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
311872    +          +     0.68382990555761 * Marital_StatusMarried
311873    +          +    -0.40241665873988 * Marital_StatusSingle
311874    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced +
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle +
0.66274709598028 * Marital_StatusTogether ;
311875    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
311876    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
311877    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
311878    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
311879    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
311880    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
311881    +END;
MPRINT(EM_DIAGRAM):   END;
311882    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311883    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
311884    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
311885    +END;
MPRINT(EM_DIAGRAM):   END;
311886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311887    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
311888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311889    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311890    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
311891    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
311892    +          +    -2.40830591527574 * S_MntMeatProducts
311893    +          +    -0.89296864866675 * S_NumCatalogPurchases
311894    +          +     1.79889409325514 * S_NumDealsPurchases
311895    +          +    -0.33765715793031 * S_NumWebVisitsMonth
311896    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 *
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 *
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
311897    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
311898    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
311899    +          +     0.04224245417831 * S_MntMeatProducts
311900    +          +     0.25836861794607 * S_NumCatalogPurchases
311901    +          +     2.47909264202917 * S_NumDealsPurchases
311902    +          +     0.14790226792406 * S_NumWebVisitsMonth
311903    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 *
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 *
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 *
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
311904    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
311905    +          +     0.39103795234666 * Marital_StatusMarried
311906    +          +    -0.52822284221545 * Marital_StatusSingle
311907    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced +
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle +
-1.86494928221959 * Marital_StatusTogether ;
311908    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
311909    +          +       1.975579060233 * Marital_StatusMarried
311910    +          +     0.15028521746762 * Marital_StatusSingle
311911    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced +
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle +
0.92005975380984 * Marital_StatusTogether ;
311912    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
311913    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
311914    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
311915    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
311916    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
311917    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
311918    +END;
MPRINT(EM_DIAGRAM):   END;
311919    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311920    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
311921    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
311922    +END;
MPRINT(EM_DIAGRAM):   END;
311923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311924    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
311925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311926    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311927    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
311928    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
311929    +          +     0.16060225059391 * S_MntMeatProducts
311930    +          +     1.53093292630033 * S_NumCatalogPurchases
311931    +          +     0.39573641806699 * S_NumDealsPurchases
311932    +          +    -0.95387142126649 * S_NumWebVisitsMonth
311933    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 *
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 *
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 *
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
311934    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
311935    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
311936    +          +     0.71628478327205 * S_MntMeatProducts
311937    +          +     0.15890352363556 * S_NumCatalogPurchases
311938    +          +    -1.12928875468011 * S_NumDealsPurchases
311939    +          +    -0.30108145274307 * S_NumWebVisitsMonth
311940    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 *
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 *
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 *
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
311941    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
311942    +          +     0.91966160839643 * Marital_StatusMarried
311943    +          +    -0.63411090570397 * Marital_StatusSingle
311944    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced +
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle +
-0.54635673224032 * Marital_StatusTogether ;
311945    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
311946    +          +     0.77230489026504 * Marital_StatusMarried
311947    +          +     0.20456495503812 * Marital_StatusSingle
311948    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced +
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle +
-0.94791841887496 * Marital_StatusTogether ;
311949    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
311950    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
311951    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
311952    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
311953    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
311954    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
311955    +END;
MPRINT(EM_DIAGRAM):   END;
311956    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311957    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
311958    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
311959    +END;
MPRINT(EM_DIAGRAM):   END;
311960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311961    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
311962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311963    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311964    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
311965    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
311966    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
311967    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2
;
311968    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
311969    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 *
H1x2_2 ;
311970    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
311971    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2
;
311972    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
311973    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 *
H1x3_2 ;
311974    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
311975    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2
;
311976    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
311977    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
311978    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
311979    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
311980    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
311981    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
311982    +END;
MPRINT(EM_DIAGRAM):   END;
311983    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
311984    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
311985    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
311986    +END;
MPRINT(EM_DIAGRAM):   END;
311987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311988    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
311989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
311990    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
311991    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
311992    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
311993    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
311994    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2
;
311995    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
311996    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2
;
311997    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
311998    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
311999    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
312000    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2
;
312001    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
312002    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
312003    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
312004    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2
;
312005    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
312006    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
312007    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
312008    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
312009    +END;
MPRINT(EM_DIAGRAM):   END;
312010    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312011    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
312012    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
312013    +END;
MPRINT(EM_DIAGRAM):   END;
312014    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312015    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
312016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312017    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312018    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
312019    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
312020    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
312021    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2
;
312022    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
312023    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
312024    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
312025    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 *
H1x3_2 ;
312026    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
312027    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
312028    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
312029    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2
;
312030    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
312031    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
312032    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
312033    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
312034    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
312035    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
312036    +END;
MPRINT(EM_DIAGRAM):   END;
312037    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312038    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
312039    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
312040    +END;
MPRINT(EM_DIAGRAM):   END;
312041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312042    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
312043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312044    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312045    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
312046    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
312047    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2
;
312048    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
312049    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
312050    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
312051    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
312052    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
312053    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312054    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
312055    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
312056    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
312057    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
312058    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
312059    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
312060    +END;
MPRINT(EM_DIAGRAM):   END;
312061    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312062    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
312063    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
312064    +END;
MPRINT(EM_DIAGRAM):   END;
312065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312066    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
312067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312068    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312069    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
312070    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
312071    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
312072    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
312073    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 *
H2x3_2 ;
312074    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
312075    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
312076    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
312077    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312078    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
312079    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
312080    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
312081    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
312082    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
312083    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
312084    +END;
MPRINT(EM_DIAGRAM):   END;
312085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312086    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
312087    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
312088    +END;
MPRINT(EM_DIAGRAM):   END;
312089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312090    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
312091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312092    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312093    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
312094    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
312095    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
312096    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
312097    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
312098    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
312099    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312100    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
312101    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
312102    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
312103    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
312104    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
312105    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
312106    +END;
MPRINT(EM_DIAGRAM):   END;
312107    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312108    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
312109    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
312110    +END;
MPRINT(EM_DIAGRAM):   END;
312111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312112    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
312113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312114    +
312115    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
312116    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
312117    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312118    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
312119    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
312120    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312121    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
312122    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312123    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312124    +end;
MPRINT(EM_DIAGRAM):   end;
312125    +else do;
MPRINT(EM_DIAGRAM):   else do;
312126    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
312127    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
312128    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
312129    +   end;
MPRINT(EM_DIAGRAM):   end;
312130    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
312131    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
312132    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
312133    +   end;
MPRINT(EM_DIAGRAM):   end;
312134    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312135    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312136    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312137    +   end;
MPRINT(EM_DIAGRAM):   end;
312138    +end;
MPRINT(EM_DIAGRAM):   end;
312139    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312140    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
312141    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
312142    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
312143    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
312144    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
312145    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312146    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
312147    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
312148    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
312149    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
312150    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
312151    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
312152    +END;
MPRINT(EM_DIAGRAM):   END;
312153    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312154    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
312155    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
312156    +END;
MPRINT(EM_DIAGRAM):   END;
312157    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
312158    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
312159    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
312160    +END;
MPRINT(EM_DIAGRAM):   END;
312161    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
312162    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
312163    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
312164    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
312165    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
312166    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
312167    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
312168    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312169    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
312170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312171    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
312172    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
312173    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
312174    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
312175    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
312176    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
312177    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
312178    +END;
MPRINT(EM_DIAGRAM):   END;
312179    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312180    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
312181    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312182    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
312183    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
312184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312185    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
312186    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312187    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
312188    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
312189    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
312190    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
312191    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312192    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
312193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312194    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
312195    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
312196    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
312197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312198    +* Ensmbl55: Scoring Code of model 3 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 3 of 6;
312199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312200    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312201    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
312202    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
312203    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
312204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312205    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312206    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
312207    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312208    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
312209    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
312210    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
312211    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
312212    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
312213    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
312214    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
312215    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
312216    +LENGTH _WARN_ $4
312217    +      F_DepVar  $ 12
312218    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
312219    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
312220    +
312221    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
312222    +
312223    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
312224    +
312225    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
312226    +
312227    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
312228    +
312229    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
312230    +
312231    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
312232    +
312233    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
312234    +
312235    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
312236    +
312237    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
312238    +
312239    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
312240    +
312241    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
312242    +
312243    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
312244    +
312245    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
312246    +
312247    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
312248    +
312249    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
312250    +
312251    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312252    +
312253    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
312254    +
312255    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
312256    +
312257    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
312258    +
312259    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
312260    +
312261    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
312262    +
312263    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
312264    +
312265    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
312266    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
312267    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
312268    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312269    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
312270    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
312271    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
312272    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
312273    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
312274    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312275    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312276    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312277    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312278    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312279    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312280    +end;
MPRINT(EM_DIAGRAM):   end;
312281    +else do;
MPRINT(EM_DIAGRAM):   else do;
312282    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
312283    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
312284    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312285    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
312286    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
312287    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
312288    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
312289    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
312290    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312291    +         end;
MPRINT(EM_DIAGRAM):   end;
312292    +         else do;
MPRINT(EM_DIAGRAM):   else do;
312293    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
312294    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
312295    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312296    +            end;
MPRINT(EM_DIAGRAM):   end;
312297    +         end;
MPRINT(EM_DIAGRAM):   end;
312298    +      end;
MPRINT(EM_DIAGRAM):   end;
312299    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312300    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
312301    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
312302    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312303    +         end;
MPRINT(EM_DIAGRAM):   end;
312304    +      end;
MPRINT(EM_DIAGRAM):   end;
312305    +   end;
MPRINT(EM_DIAGRAM):   end;
312306    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312307    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
312308    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
312309    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312310    +      end;
MPRINT(EM_DIAGRAM):   end;
312311    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312312    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
312313    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
312314    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
312315    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
312316    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
312317    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312318    +         end;
MPRINT(EM_DIAGRAM):   end;
312319    +      end;
MPRINT(EM_DIAGRAM):   end;
312320    +   end;
MPRINT(EM_DIAGRAM):   end;
312321    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
312322    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312323    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312324    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312325    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312326    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312327    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312328    +   end;
MPRINT(EM_DIAGRAM):   end;
312329    +end;
MPRINT(EM_DIAGRAM):   end;
312330    +
312331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312332    +*** Checking missing input Interval
312333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
312334    +
312335    +IF NMISS(
312336    +   AcceptedCmpTotal ,
312337    +   Frq ,
312338    +   Mnt ,
312339    +   MntMeatProducts ,
312340    +   NumCatalogPurchases ,
312341    +   NumDealsPurchases ,
312342    +   NumWebVisitsMonth ,
312343    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
312344    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
312345    +
312346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312347    +END;
MPRINT(EM_DIAGRAM):   END;
312348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312349    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
312350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312351    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312352    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312353    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
312354    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312355    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312356    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312357    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
312358    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
312359    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
312360    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
312361    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
312362    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
312363    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
312364    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312365    +END;
MPRINT(EM_DIAGRAM):   END;
312366    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312367    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
312368    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312369    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
312370    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
312371    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312372    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
312373    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312374    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
312375    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312376    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
312377    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
312378    +   ELSE S_NumCatalogPurchases
312379    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
312380    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
312381    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
312382    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
312383    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
312384    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
312385    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
312386    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
312387    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
312388    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312389    +END;
MPRINT(EM_DIAGRAM):   END;
312390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312391    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
312392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312394    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
312395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312396    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312397    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
312398    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
312399    +          +     0.02561809182055 * S_MntMeatProducts
312400    +          +     -0.1793288912734 * S_NumCatalogPurchases
312401    +          +    -0.37563080213093 * S_NumDealsPurchases
312402    +          +    -0.48858578777845 * S_NumWebVisitsMonth
312403    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 *
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 *
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 *
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
312404    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
312405    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
312406    +          +     1.94302986779634 * S_MntMeatProducts
312407    +          +      0.2669037763846 * S_NumCatalogPurchases
312408    +          +     0.29313104233947 * S_NumDealsPurchases
312409    +          +    -0.30591479309812 * S_NumWebVisitsMonth
312410    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 *
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 *
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 *
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
312411    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
312412    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
312413    +          +    -0.76055629383789 * S_MntMeatProducts
312414    +          +    -0.40114802991127 * S_NumCatalogPurchases
312415    +          +    -1.12215966034372 * S_NumDealsPurchases
312416    +          +    -0.30978133586417 * S_NumWebVisitsMonth
312417    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 *
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 *
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 *
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
312418    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
312419    +          +     0.20445663414925 * Marital_StatusMarried
312420    +          +     0.16369117386202 * Marital_StatusSingle
312421    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced +
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle +
0.24678692955726 * Marital_StatusTogether ;
312422    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
312423    +          +     0.09645374599508 * Marital_StatusMarried
312424    +          +     -0.0816282741981 * Marital_StatusSingle
312425    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced +
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle +
0.097160394807 * Marital_StatusTogether ;
312426    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
312427    +          +     -3.9031880089591 * Marital_StatusMarried
312428    +          +      1.6995748309328 * Marital_StatusSingle
312429    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced +
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle +
-0.60356952072267 * Marital_StatusTogether ;
312430    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
312431    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
312432    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
312433    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
312434    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
312435    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
312436    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
312437    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
312438    +END;
MPRINT(EM_DIAGRAM):   END;
312439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312440    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
312441    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
312442    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
312443    +END;
MPRINT(EM_DIAGRAM):   END;
312444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312445    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
312446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312447    +
312448    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
312449    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
312450    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312451    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
312452    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
312453    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312454    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
312455    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312456    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312457    +end;
MPRINT(EM_DIAGRAM):   end;
312458    +else do;
MPRINT(EM_DIAGRAM):   else do;
312459    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
312460    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
312461    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
312462    +   end;
MPRINT(EM_DIAGRAM):   end;
312463    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
312464    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
312465    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
312466    +   end;
MPRINT(EM_DIAGRAM):   end;
312467    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312468    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312469    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312470    +   end;
MPRINT(EM_DIAGRAM):   end;
312471    +end;
MPRINT(EM_DIAGRAM):   end;
312472    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312473    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
312474    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 +
44.7070762374356 * H1x1_3 ;
312475    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
312476    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
312477    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
312478    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312479    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
312480    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
312481    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
312482    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
312483    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
312484    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
312485    +END;
MPRINT(EM_DIAGRAM):   END;
312486    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312487    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
312488    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
312489    +END;
MPRINT(EM_DIAGRAM):   END;
312490    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
312491    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
312492    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
312493    +END;
MPRINT(EM_DIAGRAM):   END;
312494    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
312495    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
312496    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
312497    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
312498    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
312499    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
312500    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
312501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312502    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
312503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312504    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
312505    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
312506    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
312507    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
312508    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
312509    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
312510    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
312511    +END;
MPRINT(EM_DIAGRAM):   END;
312512    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312513    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
312514    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312515    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
312516    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
312517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312518    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
312519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312520    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
312521    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
312522    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
312523    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
312524    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312525    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
312526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312527    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
312528    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
312529    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
312530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312531    +* Ensmbl55: Scoring Code of model 4 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 4 of 6;
312532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312533    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312534    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
312535    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
312536    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
312537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312538    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312539    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
312540    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312541    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
312542    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
312543    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
312544    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
312545    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
312546    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
312547    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
312548    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
312549    +LENGTH _WARN_ $4
312550    +      F_DepVar  $ 12
312551    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
312552    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
312553    +
312554    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
312555    +
312556    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
312557    +
312558    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
312559    +
312560    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
312561    +
312562    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
312563    +
312564    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
312565    +
312566    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
312567    +
312568    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
312569    +
312570    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
312571    +
312572    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
312573    +
312574    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
312575    +
312576    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
312577    +
312578    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
312579    +
312580    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
312581    +
312582    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
312583    +
312584    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
312585    +
312586    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312587    +
312588    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
312589    +
312590    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
312591    +
312592    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
312593    +
312594    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
312595    +
312596    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
312597    +
312598    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
312599    +
312600    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
312601    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
312602    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
312603    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312604    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
312605    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
312606    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
312607    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
312608    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
312609    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312610    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312611    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312612    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312615    +end;
MPRINT(EM_DIAGRAM):   end;
312616    +else do;
MPRINT(EM_DIAGRAM):   else do;
312617    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
312618    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
312619    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312620    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
312621    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
312622    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
312623    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
312624    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
312625    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312626    +         end;
MPRINT(EM_DIAGRAM):   end;
312627    +         else do;
MPRINT(EM_DIAGRAM):   else do;
312628    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
312629    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
312630    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312631    +            end;
MPRINT(EM_DIAGRAM):   end;
312632    +         end;
MPRINT(EM_DIAGRAM):   end;
312633    +      end;
MPRINT(EM_DIAGRAM):   end;
312634    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312635    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
312636    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
312637    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312638    +         end;
MPRINT(EM_DIAGRAM):   end;
312639    +      end;
MPRINT(EM_DIAGRAM):   end;
312640    +   end;
MPRINT(EM_DIAGRAM):   end;
312641    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312642    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
312643    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
312644    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312645    +      end;
MPRINT(EM_DIAGRAM):   end;
312646    +      else do;
MPRINT(EM_DIAGRAM):   else do;
312647    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
312648    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
312649    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
312650    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
312651    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
312652    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312653    +         end;
MPRINT(EM_DIAGRAM):   end;
312654    +      end;
MPRINT(EM_DIAGRAM):   end;
312655    +   end;
MPRINT(EM_DIAGRAM):   end;
312656    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
312657    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312658    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312659    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312660    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312661    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
312662    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312663    +   end;
MPRINT(EM_DIAGRAM):   end;
312664    +end;
MPRINT(EM_DIAGRAM):   end;
312665    +
312666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312667    +*** Checking missing input Interval
312668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
312669    +
312670    +IF NMISS(
312671    +   AcceptedCmpTotal ,
312672    +   Frq ,
312673    +   Mnt ,
312674    +   MntMeatProducts ,
312675    +   NumCatalogPurchases ,
312676    +   NumDealsPurchases ,
312677    +   NumWebVisitsMonth ,
312678    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
312679    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
312680    +
312681    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312682    +END;
MPRINT(EM_DIAGRAM):   END;
312683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312684    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
312685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312686    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312687    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312688    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
312689    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312690    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312691    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312692    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
312693    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
312694    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
312695    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
312696    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
312697    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
312698    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
312699    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312700    +END;
MPRINT(EM_DIAGRAM):   END;
312701    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312702    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
312703    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
312704    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
312705    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
312706    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
312707    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
312708    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
312709    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
312710    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
312711    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
312712    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
312713    +   ELSE S_NumCatalogPurchases
312714    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
312715    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
312716    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
312717    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
312718    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
312719    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
312720    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
312721    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
312722    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
312723    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
312724    +END;
MPRINT(EM_DIAGRAM):   END;
312725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312726    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
312727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312729    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
312730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312731    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312732    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
312733    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
312734    +          +      0.2338265945616 * S_MntMeatProducts
312735    +          +     0.01564313414142 * S_NumCatalogPurchases
312736    +          +    -0.07464304384577 * S_NumDealsPurchases
312737    +          +    -0.08299095200051 * S_NumWebVisitsMonth
312738    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
312739    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
312740    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
312741    +          +     -0.3893643428589 * S_MntMeatProducts
312742    +          +    -0.11487225011852 * S_NumCatalogPurchases
312743    +          +       0.001237145136 * S_NumDealsPurchases
312744    +          +    -0.04234500703321 * S_NumWebVisitsMonth
312745    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
312746    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
312747    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
312748    +          +    -0.27963474874984 * S_MntMeatProducts
312749    +          +     0.01939450840376 * S_NumCatalogPurchases
312750    +          +    -0.03907394757592 * S_NumDealsPurchases
312751    +          +     0.06752842740103 * S_NumWebVisitsMonth
312752    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
312753    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
312754    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
312755    +          +     0.09842717305515 * S_MntMeatProducts
312756    +          +     0.48040050668836 * S_NumCatalogPurchases
312757    +          +     0.55911507039756 * S_NumDealsPurchases
312758    +          +     0.35441361757916 * S_NumWebVisitsMonth
312759    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
312760    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
312761    +          +     0.13423943689575 * Marital_StatusMarried
312762    +          +    -0.01496857872487 * Marital_StatusSingle
312763    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
312764    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
312765    +          +     0.03005244373637 * Marital_StatusMarried
312766    +          +    -0.06891231360799 * Marital_StatusSingle
312767    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
312768    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
312769    +          +     0.01694145364157 * Marital_StatusMarried
312770    +          +    -0.05183794192194 * Marital_StatusSingle
312771    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
312772    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
312773    +          +     0.44185773223966 * Marital_StatusMarried
312774    +          +     -0.6351733171702 * Marital_StatusSingle
312775    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
312776    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
312777    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
312778    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
312779    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
312780    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
312781    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
312782    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
312783    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
312784    +END;
MPRINT(EM_DIAGRAM):   END;
312785    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312786    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
312787    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
312788    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
312789    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
312790    +END;
MPRINT(EM_DIAGRAM):   END;
312791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312792    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
312793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312794    +
312795    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
312796    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
312797    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312798    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
312799    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
312800    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312801    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
312802    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312803    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312804    +end;
MPRINT(EM_DIAGRAM):   end;
312805    +else do;
MPRINT(EM_DIAGRAM):   else do;
312806    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
312807    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
312808    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
312809    +   end;
MPRINT(EM_DIAGRAM):   end;
312810    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
312811    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
312812    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
312813    +   end;
MPRINT(EM_DIAGRAM):   end;
312814    +   else do;
MPRINT(EM_DIAGRAM):   else do;
312815    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
312816    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
312817    +   end;
MPRINT(EM_DIAGRAM):   end;
312818    +end;
MPRINT(EM_DIAGRAM):   end;
312819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
312820    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
312821    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
312822    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
312823    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
312824    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
312825    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
312826    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
312827    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
312828    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
312829    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
312830    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
312831    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
312832    +END;
MPRINT(EM_DIAGRAM):   END;
312833    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
312834    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
312835    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
312836    +END;
MPRINT(EM_DIAGRAM):   END;
312837    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
312838    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
312839    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
312840    +END;
MPRINT(EM_DIAGRAM):   END;
312841    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
312842    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
312843    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
312844    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
312845    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
312846    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
312847    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
312848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312849    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
312850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
312851    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
312852    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
312853    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
312854    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
312855    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
312856    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
312857    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
312858    +END;
MPRINT(EM_DIAGRAM):   END;
312859    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312860    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
312861    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
312862    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
312863    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
312864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312865    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
312866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312867    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
312868    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
312869    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
312870    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
312871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312872    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
312873    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312874    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
312875    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
312876    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
312877    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312878    +* Ensmbl55: Scoring Code of model 5 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 5 of 6;
312879    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312881    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
312882    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
312883    +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
312884    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
312885    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312886    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
312887    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
312888    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
312889    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
312890    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
312891    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
312892    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
312893    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
312894    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
312895    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
312896    +LENGTH _WARN_ $4
312897    +      F_DepVar  $ 12
312898    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
312899    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
312900    +
312901    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
312902    +
312903    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
312904    +
312905    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
312906    +
312907    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
312908    +
312909    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
312910    +
312911    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
312912    +
312913    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
312914    +
312915    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
312916    +
312917    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
312918    +
312919    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
312920    +
312921    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
312922    +
312923    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
312924    +
312925    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
312926    +
312927    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
312928    +
312929    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
312930    +
312931    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
312932    +
312933    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
312934    +
312935    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
312936    +
312937    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
312938    +
312939    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
312940    +
312941    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
312942    +
312943    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
312944    +
312945    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
312946    +
312947    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
312948    +
312949    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
312950    +
312951    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
312952    +
312953    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
312954    +
312955    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
312956    +
312957    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
312958    +
312959    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
312960    +
312961    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
312962    +
312963    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
312964    +
312965    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
312966    +
312967    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
312968    +
312969    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
312970    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
312971    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
312972    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
312973    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
312974    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
312975    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
312976    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
312977    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
312978    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
312979    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
312980    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
312981    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
312982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
312983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
312984    +end;
MPRINT(EM_DIAGRAM):   end;
312985    +else do;
MPRINT(EM_DIAGRAM):   else do;
312986    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
312987    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
312988    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
312989    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
312990    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
312991    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
312992    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
312993    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
312994    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
312995    +         end;
MPRINT(EM_DIAGRAM):   end;
312996    +         else do;
MPRINT(EM_DIAGRAM):   else do;
312997    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
312998    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
312999    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313000    +            end;
MPRINT(EM_DIAGRAM):   end;
313001    +         end;
MPRINT(EM_DIAGRAM):   end;
313002    +      end;
MPRINT(EM_DIAGRAM):   end;
313003    +      else do;
MPRINT(EM_DIAGRAM):   else do;
313004    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
313005    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
313006    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313007    +         end;
MPRINT(EM_DIAGRAM):   end;
313008    +      end;
MPRINT(EM_DIAGRAM):   end;
313009    +   end;
MPRINT(EM_DIAGRAM):   end;
313010    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313011    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
313012    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
313013    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313014    +      end;
MPRINT(EM_DIAGRAM):   end;
313015    +      else do;
MPRINT(EM_DIAGRAM):   else do;
313016    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
313017    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
313018    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
313019    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
313020    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
313021    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313022    +         end;
MPRINT(EM_DIAGRAM):   end;
313023    +      end;
MPRINT(EM_DIAGRAM):   end;
313024    +   end;
MPRINT(EM_DIAGRAM):   end;
313025    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
313026    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
313027    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
313028    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
313029    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
313030    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313031    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313032    +   end;
MPRINT(EM_DIAGRAM):   end;
313033    +end;
MPRINT(EM_DIAGRAM):   end;
313034    +
313035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313036    +*** Checking missing input Interval
313037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
313038    +
313039    +IF NMISS(
313040    +   AcceptedCmpTotal ,
313041    +   Frq ,
313042    +   Mnt ,
313043    +   MntMeatProducts ,
313044    +   NumCatalogPurchases ,
313045    +   NumDealsPurchases ,
313046    +   NumWebVisitsMonth ,
313047    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
313048    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
313049    +
313050    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313051    +END;
MPRINT(EM_DIAGRAM):   END;
313052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313053    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
313054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313055    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313056    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313057    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
313058    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313059    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313060    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313061    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
313062    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
313063    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
313064    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313065    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
313066    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313067    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
313068    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313069    +END;
MPRINT(EM_DIAGRAM):   END;
313070    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313071    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
313072    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313073    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
313074    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
313075    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313076    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
313077    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313078    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
313079    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313080    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
313081    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
313082    +   ELSE S_NumCatalogPurchases
313083    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
313084    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
313085    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
313086    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313087    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
313088    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
313089    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313090    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
313091    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
313092    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313093    +END;
MPRINT(EM_DIAGRAM):   END;
313094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313095    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
313096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313098    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
313099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313100    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313101    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
313102    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
313103    +          +    -1.92258561684999 * S_MntMeatProducts
313104    +          +     -1.7098915194593 * S_NumCatalogPurchases
313105    +          +    -0.73092398706652 * S_NumDealsPurchases
313106    +          +    -1.52371325097768 * S_NumWebVisitsMonth
313107    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 *
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 *
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 *
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
313108    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
313109    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
313110    +          +     3.63686708458831 * S_MntMeatProducts
313111    +          +     0.32632650897658 * S_NumCatalogPurchases
313112    +          +     1.27820262549135 * S_NumDealsPurchases
313113    +          +    -0.18941034658667 * S_NumWebVisitsMonth
313114    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 *
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 *
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 *
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
313115    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
313116    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
313117    +          +    -0.10252809999866 * S_MntMeatProducts
313118    +          +    -2.01730745054613 * S_NumCatalogPurchases
313119    +          +     0.36276273056202 * S_NumDealsPurchases
313120    +          +    -2.03441379397145 * S_NumWebVisitsMonth
313121    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 *
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 *
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 *
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
313122    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
313123    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
313124    +          +     8.03567059273376 * S_MntMeatProducts
313125    +          +     2.16664649845379 * S_NumCatalogPurchases
313126    +          +     0.84009978401032 * S_NumDealsPurchases
313127    +          +     0.11354933533503 * S_NumWebVisitsMonth
313128    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 *
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 *
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 *
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
313129    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
313130    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
313131    +          +     1.87107978843927 * S_MntMeatProducts
313132    +          +    -0.31123291719979 * S_NumCatalogPurchases
313133    +          +    -2.80886037303887 * S_NumDealsPurchases
313134    +          +     0.08829426076164 * S_NumWebVisitsMonth
313135    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 *
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 *
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
313136    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
313137    +          +     0.50838467240268 * Marital_StatusMarried
313138    +          +    -0.57765911295879 * Marital_StatusSingle
313139    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced +
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle +
-0.24222335065155 * Marital_StatusTogether ;
313140    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
313141    +          +     0.03531168852657 * Marital_StatusMarried
313142    +          +    -0.34417109081648 * Marital_StatusSingle
313143    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced +
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle +
-0.31315325265885 * Marital_StatusTogether ;
313144    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
313145    +          +      1.9516301625913 * Marital_StatusMarried
313146    +          +    -0.24904237582097 * Marital_StatusSingle
313147    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced +
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle +
1.51668241109596 * Marital_StatusTogether ;
313148    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
313149    +          +     0.06718550412505 * Marital_StatusMarried
313150    +          +    -0.16735434131197 * Marital_StatusSingle
313151    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced +
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle +
1.06963270761532 * Marital_StatusTogether ;
313152    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
313153    +          +    -1.79498797741807 * Marital_StatusMarried
313154    +          +     2.86341746904333 * Marital_StatusSingle
313155    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced +
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle +
-2.44061593695879 * Marital_StatusTogether ;
313156    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
313157    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
313158    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
313159    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
313160    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
313161    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
313162    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
313163    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
313164    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
313165    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
313166    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
313167    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
313168    +END;
MPRINT(EM_DIAGRAM):   END;
313169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313170    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
313171    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
313172    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
313173    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
313174    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
313175    +END;
MPRINT(EM_DIAGRAM):   END;
313176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313177    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
313178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313179    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313180    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
313181    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
313182    +          +    -0.19914740985847 * S_MntMeatProducts
313183    +          +    -0.96920717464092 * S_NumCatalogPurchases
313184    +          +    -1.68508588177508 * S_NumDealsPurchases
313185    +          +     -0.9404284924488 * S_NumWebVisitsMonth
313186    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 *
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 *
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
313187    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
313188    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
313189    +          +    -1.60286606361912 * S_MntMeatProducts
313190    +          +    -0.05010796315816 * S_NumCatalogPurchases
313191    +          +      1.1380574488234 * S_NumDealsPurchases
313192    +          +     0.25426721345204 * S_NumWebVisitsMonth
313193    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 *
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 *
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
313194    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
313195    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
313196    +          +     2.58979830897092 * S_MntMeatProducts
313197    +          +      1.2569773545009 * S_NumCatalogPurchases
313198    +          +     0.21119951191653 * S_NumDealsPurchases
313199    +          +    -0.40993456334326 * S_NumWebVisitsMonth
313200    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 *
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 *
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 *
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
313201    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
313202    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
313203    +          +     1.58324428521578 * S_MntMeatProducts
313204    +          +    -0.64140579988939 * S_NumCatalogPurchases
313205    +          +    -0.07557073365385 * S_NumDealsPurchases
313206    +          +     0.27159109297915 * S_NumWebVisitsMonth
313207    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 *
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 *
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 *
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
313208    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
313209    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
313210    +          +     0.02133290318048 * S_MntMeatProducts
313211    +          +    -0.37682732019302 * S_NumCatalogPurchases
313212    +          +     2.57483962426003 * S_NumDealsPurchases
313213    +          +    -0.76651867011773 * S_NumWebVisitsMonth
313214    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 *
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 *
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 *
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
313215    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
313216    +          +     1.00798219323102 * Marital_StatusMarried
313217    +          +     -1.3878630687005 * Marital_StatusSingle
313218    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced +
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle +
0.38993646858937 * Marital_StatusTogether ;
313219    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
313220    +          +    -0.99149540204741 * Marital_StatusMarried
313221    +          +    -0.22772928542301 * Marital_StatusSingle
313222    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced +
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle +
2.92746205796719 * Marital_StatusTogether ;
313223    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
313224    +          +     1.54170826840021 * Marital_StatusMarried
313225    +          +    -0.09937587953829 * Marital_StatusSingle
313226    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced +
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle +
0.56302999728519 * Marital_StatusTogether ;
313227    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
313228    +          +    -0.48775794259019 * Marital_StatusMarried
313229    +          +     0.87075561905397 * Marital_StatusSingle
313230    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced +
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle +
0.04810416118778 * Marital_StatusTogether ;
313231    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
313232    +          +     0.01260332236695 * Marital_StatusMarried
313233    +          +     1.18815076116703 * Marital_StatusSingle
313234    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced +
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle +
0.48437203261339 * Marital_StatusTogether ;
313235    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
313236    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
313237    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
313238    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
313239    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
313240    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
313241    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
313242    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
313243    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
313244    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
313245    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
313246    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
313247    +END;
MPRINT(EM_DIAGRAM):   END;
313248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313249    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
313250    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
313251    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
313252    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
313253    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
313254    +END;
MPRINT(EM_DIAGRAM):   END;
313255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313256    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
313257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313258    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313259    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
313260    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
313261    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 +
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
313262    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
313263    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
313264    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 +
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
313265    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
313266    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
313267    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 +
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
313268    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
313269    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
313270    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 +
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
313271    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
313272    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
313273    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 +
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
313274    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
313275    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
313276    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
313277    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
313278    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
313279    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
313280    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
313281    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
313282    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
313283    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
313284    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
313285    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
313286    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
313287    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
313288    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
313289    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
313290    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
313291    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
313292    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
313293    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
313294    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
313295    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
313296    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
313297    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
313298    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
313299    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
313300    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
313301    +END;
MPRINT(EM_DIAGRAM):   END;
313302    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313303    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
313304    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
313305    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
313306    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
313307    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
313308    +END;
MPRINT(EM_DIAGRAM):   END;
313309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313310    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
313311    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313312    +
313313    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
313314    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
313315    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
313316    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
313317    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
313318    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313319    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
313320    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
313321    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
313322    +end;
MPRINT(EM_DIAGRAM):   end;
313323    +else do;
MPRINT(EM_DIAGRAM):   else do;
313324    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
313325    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
313326    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
313327    +   end;
MPRINT(EM_DIAGRAM):   end;
313328    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
313329    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
313330    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
313331    +   end;
MPRINT(EM_DIAGRAM):   end;
313332    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313333    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
313334    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
313335    +   end;
MPRINT(EM_DIAGRAM):   end;
313336    +end;
MPRINT(EM_DIAGRAM):   end;
313337    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313338    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
313339    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
313340    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 +
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
313341    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
313342    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
313343    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
313344    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
313345    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
313346    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
313347    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
313348    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
313349    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
313350    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
313351    +END;
MPRINT(EM_DIAGRAM):   END;
313352    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313353    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
313354    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
313355    +END;
MPRINT(EM_DIAGRAM):   END;
313356    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
313357    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
313358    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
313359    +END;
MPRINT(EM_DIAGRAM):   END;
313360    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
313361    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
313362    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
313363    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
313364    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
313365    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
313366    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
313367    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313368    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
313369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313370    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
313371    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
313372    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
313373    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
313374    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
313375    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
313376    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
313377    +END;
MPRINT(EM_DIAGRAM):   END;
313378    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313379    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
313380    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
313381    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
313382    +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
313383    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313384    +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
313385    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313386    +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
313387    +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
313388    +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
313389    +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
313390    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313391    +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
313392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313393    +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
313394    +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
313395    +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
313396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313397    +* Ensmbl55: Scoring Code of model 6 of 6;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 6 of 6;
313398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313400    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
313401    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
313402    +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
313403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
313404    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
313405    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
313406    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
313407    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
313408    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
313409    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
313410    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
313411    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
313412    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
313413    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
313414    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
313415    +LENGTH _WARN_ $4
313416    +      F_DepVar  $ 12
313417    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
313418    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
313419    +
313420    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
313421    +
313422    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
313423    +
313424    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
313425    +
313426    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
313427    +
313428    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
313429    +
313430    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
313431    +
313432    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
313433    +
313434    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
313435    +
313436    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
313437    +
313438    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
313439    +
313440    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
313441    +
313442    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
313443    +
313444    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
313445    +
313446    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
313447    +
313448    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
313449    +
313450    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
313451    +
313452    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
313453    +
313454    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
313455    +
313456    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
313457    +
313458    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
313459    +
313460    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
313461    +
313462    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
313463    +
313464    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
313465    +
313466    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
313467    +
313468    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
313469    +
313470    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
313471    +
313472    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
313473    +
313474    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
313475    +
313476    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
313477    +
313478    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
313479    +
313480    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
313481    +
313482    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
313483    +
313484    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
313485    +
313486    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
313487    +
313488    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
313489    +
313490    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
313491    +
313492    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
313493    +
313494    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
313495    +
313496    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
313497    +
313498    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
313499    +
313500    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
313501    +
313502    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
313503    +
313504    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
313505    +
313506    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
313507    +
313508    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
313509    +
313510    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
313511    +
313512    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
313513    +
313514    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
313515    +
313516    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
313517    +
313518    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
313519    +
313520    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
313521    +
313522    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
313523    +
313524    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
313525    +
313526    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
313527    +
313528    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
313529    +
313530    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
313531    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
313532    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
313533    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
313534    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
313535    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
313536    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
313537    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
313538    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
313539    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
313540    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
313541    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
313542    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
313543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
313544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313545    +end;
MPRINT(EM_DIAGRAM):   end;
313546    +else do;
MPRINT(EM_DIAGRAM):   else do;
313547    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
313548    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
313549    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
313550    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
313551    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
313552    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
313553    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
313554    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
313555    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313556    +         end;
MPRINT(EM_DIAGRAM):   end;
313557    +         else do;
MPRINT(EM_DIAGRAM):   else do;
313558    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
313559    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
313560    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313561    +            end;
MPRINT(EM_DIAGRAM):   end;
313562    +         end;
MPRINT(EM_DIAGRAM):   end;
313563    +      end;
MPRINT(EM_DIAGRAM):   end;
313564    +      else do;
MPRINT(EM_DIAGRAM):   else do;
313565    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
313566    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
313567    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313568    +         end;
MPRINT(EM_DIAGRAM):   end;
313569    +      end;
MPRINT(EM_DIAGRAM):   end;
313570    +   end;
MPRINT(EM_DIAGRAM):   end;
313571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
313572    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
313573    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
313574    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313575    +      end;
MPRINT(EM_DIAGRAM):   end;
313576    +      else do;
MPRINT(EM_DIAGRAM):   else do;
313577    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
313578    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
313579    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
313580    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
313581    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
313582    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
313583    +         end;
MPRINT(EM_DIAGRAM):   end;
313584    +      end;
MPRINT(EM_DIAGRAM):   end;
313585    +   end;
MPRINT(EM_DIAGRAM):   end;
313586    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
313587    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
313588    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
313589    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
313590    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
313591    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
313592    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313593    +   end;
MPRINT(EM_DIAGRAM):   end;
313594    +end;
MPRINT(EM_DIAGRAM):   end;
313595    +
313596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313597    +*** Checking missing input Interval
313598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
313599    +
313600    +IF NMISS(
313601    +   AcceptedCmpTotal ,
313602    +   Frq ,
313603    +   Mnt ,
313604    +   MntMeatProducts ,
313605    +   NumCatalogPurchases ,
313606    +   NumDealsPurchases ,
313607    +   NumWebVisitsMonth ,
313608    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
313609    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
313610    +
313611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
313612    +END;
MPRINT(EM_DIAGRAM):   END;
313613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313614    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
313615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313616    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313617    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313618    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
313619    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313620    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313621    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313622    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
313623    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
313624    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
313625    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313626    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
313627    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313628    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
313629    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313630    +END;
MPRINT(EM_DIAGRAM):   END;
313631    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313632    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
313633    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
313634    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
313635    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
313636    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
313637    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
313638    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
313639    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
313640    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
313641    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
313642    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
313643    +   ELSE S_NumCatalogPurchases
313644    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
313645    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
313646    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
313647    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
313648    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
313649    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
313650    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
313651    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
313652    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
313653    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
313654    +END;
MPRINT(EM_DIAGRAM):   END;
313655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313656    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
313657    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313659    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
313660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313661    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313662    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
313663    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
313664    +          +     2.79168320854924 * S_MntMeatProducts
313665    +          +    -1.09894266401589 * S_NumCatalogPurchases
313666    +          +    -0.32966417347551 * S_NumDealsPurchases
313667    +          +    -0.72195034767343 * S_NumWebVisitsMonth
313668    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
313669    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
313670    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
313671    +          +     9.02469430152189 * S_MntMeatProducts
313672    +          +     1.42644521887241 * S_NumCatalogPurchases
313673    +          +      0.6475058577302 * S_NumDealsPurchases
313674    +          +     0.08123225110233 * S_NumWebVisitsMonth
313675    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
313676    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
313677    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
313678    +          +     5.40567027331821 * S_MntMeatProducts
313679    +          +     0.21404551755506 * S_NumCatalogPurchases
313680    +          +    -3.79184634796332 * S_NumDealsPurchases
313681    +          +     0.64355102802571 * S_NumWebVisitsMonth
313682    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
313683    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
313684    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
313685    +          +     2.35287601364019 * S_MntMeatProducts
313686    +          +    -3.27198648531912 * S_NumCatalogPurchases
313687    +          +    -0.16046880718311 * S_NumDealsPurchases
313688    +          +     -3.7025327830273 * S_NumWebVisitsMonth
313689    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
313690    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
313691    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
313692    +          +     8.39312647460766 * S_MntMeatProducts
313693    +          +     3.07026872536137 * S_NumCatalogPurchases
313694    +          +     2.03045608124213 * S_NumDealsPurchases
313695    +          +     3.86452915398414 * S_NumWebVisitsMonth
313696    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
313697    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
313698    +          +     0.14979485299347 * Marital_StatusMarried
313699    +          +    -0.09166445391312 * Marital_StatusSingle
313700    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
313701    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
313702    +          +      0.1646484112393 * Marital_StatusMarried
313703    +          +     0.01074681811884 * Marital_StatusSingle
313704    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
313705    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
313706    +          +    -0.28313626645981 * Marital_StatusMarried
313707    +          +      2.8257446964988 * Marital_StatusSingle
313708    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
313709    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
313710    +          +     3.05775024202559 * Marital_StatusMarried
313711    +          +    -0.23539571945671 * Marital_StatusSingle
313712    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
313713    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
313714    +          +    -0.48359916542157 * Marital_StatusMarried
313715    +          +    -1.64182316823237 * Marital_StatusSingle
313716    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
313717    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
313718    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
313719    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
313720    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
313721    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
313722    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
313723    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
313724    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
313725    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
313726    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
313727    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
313728    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
313729    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
313730    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
313731    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
313732    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
313733    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
313734    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
313735    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
313736    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
313737    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
313738    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
313739    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
313740    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
313741    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
313742    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
313743    +END;
MPRINT(EM_DIAGRAM):   END;
313744    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313745    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
313746    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
313747    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
313748    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
313749    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
313750    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
313751    +END;
MPRINT(EM_DIAGRAM):   END;
313752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313753    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
313754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313755    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313756    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
313757    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
313758    +          +     0.55999885697493 * S_MntMeatProducts
313759    +          +      0.2225207563207 * S_NumCatalogPurchases
313760    +          +     -1.0233439835205 * S_NumDealsPurchases
313761    +          +    -0.35430585878397 * S_NumWebVisitsMonth
313762    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
313763    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
313764    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
313765    +          +    -1.04508919964747 * S_MntMeatProducts
313766    +          +     -0.6758665249546 * S_NumCatalogPurchases
313767    +          +    -0.24215201937497 * S_NumDealsPurchases
313768    +          +    -1.02736823453312 * S_NumWebVisitsMonth
313769    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
313770    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
313771    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
313772    +          +    -3.97854305593999 * S_MntMeatProducts
313773    +          +    -2.05331728407593 * S_NumCatalogPurchases
313774    +          +    -0.48841403720827 * S_NumDealsPurchases
313775    +          +     0.25411498590567 * S_NumWebVisitsMonth
313776    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
313777    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
313778    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
313779    +          +     -0.7071400781557 * S_MntMeatProducts
313780    +          +     1.20780208787296 * S_NumCatalogPurchases
313781    +          +    -0.58152407834402 * S_NumDealsPurchases
313782    +          +     2.15567925539399 * S_NumWebVisitsMonth
313783    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
313784    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
313785    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
313786    +          +    -1.07023271439686 * S_MntMeatProducts
313787    +          +     0.31952847185507 * S_NumCatalogPurchases
313788    +          +     0.97232557455358 * S_NumDealsPurchases
313789    +          +     1.40227284681788 * S_NumWebVisitsMonth
313790    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
313791    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
313792    +          +    -1.54860787754125 * Marital_StatusMarried
313793    +          +     3.07164083530731 * Marital_StatusSingle
313794    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
313795    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
313796    +          +     1.93404037878036 * Marital_StatusMarried
313797    +          +    -1.33159061927866 * Marital_StatusSingle
313798    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
313799    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
313800    +          +    -1.20603561095549 * Marital_StatusMarried
313801    +          +     1.40927693179184 * Marital_StatusSingle
313802    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
313803    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
313804    +          +     -0.1442863204197 * Marital_StatusMarried
313805    +          +     0.60523055771734 * Marital_StatusSingle
313806    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
313807    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
313808    +          +     0.09024082077945 * Marital_StatusMarried
313809    +          +     0.46315219527454 * Marital_StatusSingle
313810    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
313811    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
313812    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
313813    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
313814    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
313815    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
313816    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
313817    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
313818    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
313819    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
313820    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
313821    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
313822    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
313823    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
313824    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
313825    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
313826    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
313827    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
313828    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
313829    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
313830    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
313831    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
313832    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
313833    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
313834    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
313835    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
313836    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
313837    +END;
MPRINT(EM_DIAGRAM):   END;
313838    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313839    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
313840    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
313841    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
313842    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
313843    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
313844    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
313845    +END;
MPRINT(EM_DIAGRAM):   END;
313846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313847    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
313848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313849    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313850    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
313851    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
313852    +          +    -1.02461177883701 * S_MntMeatProducts
313853    +          +     0.58245198640098 * S_NumCatalogPurchases
313854    +          +    -0.23780276328844 * S_NumDealsPurchases
313855    +          +     1.28202459687231 * S_NumWebVisitsMonth
313856    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
313857    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
313858    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
313859    +          +     0.13875330330852 * S_MntMeatProducts
313860    +          +    -0.22996544763814 * S_NumCatalogPurchases
313861    +          +    -0.36599639965399 * S_NumDealsPurchases
313862    +          +     1.99081506581768 * S_NumWebVisitsMonth
313863    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
313864    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
313865    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
313866    +          +     0.94472031892058 * S_MntMeatProducts
313867    +          +     0.27511909854912 * S_NumCatalogPurchases
313868    +          +    -0.55526545857693 * S_NumDealsPurchases
313869    +          +    -0.61544688091302 * S_NumWebVisitsMonth
313870    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
313871    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
313872    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
313873    +          +     1.61403840093612 * S_MntMeatProducts
313874    +          +    -0.34382576245292 * S_NumCatalogPurchases
313875    +          +     0.70213159483637 * S_NumDealsPurchases
313876    +          +    -0.39731145628175 * S_NumWebVisitsMonth
313877    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
313878    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
313879    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
313880    +          +    -0.33974847531229 * S_MntMeatProducts
313881    +          +     1.74350962571519 * S_NumCatalogPurchases
313882    +          +     0.41098583446208 * S_NumDealsPurchases
313883    +          +    -0.66305298743409 * S_NumWebVisitsMonth
313884    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
313885    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
313886    +          +    -0.29510060772746 * Marital_StatusMarried
313887    +          +     1.74124353401891 * Marital_StatusSingle
313888    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
313889    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
313890    +          +    -0.61203463567014 * Marital_StatusMarried
313891    +          +     1.95705767804118 * Marital_StatusSingle
313892    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
313893    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
313894    +          +      1.7151906515185 * Marital_StatusMarried
313895    +          +     0.70376524929742 * Marital_StatusSingle
313896    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
313897    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
313898    +          +    -1.27088213578872 * Marital_StatusMarried
313899    +          +    -0.91253966593459 * Marital_StatusSingle
313900    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
313901    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
313902    +          +     -0.5308059771847 * Marital_StatusMarried
313903    +          +    -0.11208078645904 * Marital_StatusSingle
313904    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
313905    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
313906    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
313907    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
313908    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
313909    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
313910    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
313911    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
313912    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
313913    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
313914    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
313915    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
313916    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
313917    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
313918    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
313919    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
313920    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
313921    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
313922    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
313923    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
313924    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
313925    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
313926    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
313927    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
313928    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
313929    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
313930    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
313931    +END;
MPRINT(EM_DIAGRAM):   END;
313932    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
313933    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
313934    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
313935    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
313936    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
313937    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
313938    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
313939    +END;
MPRINT(EM_DIAGRAM):   END;
313940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313941    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
313942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
313943    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
313944    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
313945    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
313946    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
313947    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
313948    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
313949    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
313950    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
313951    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
313952    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
313953    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
313954    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
313955    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
313956    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
313957    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
313958    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
313959    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
313960    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
313961    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
313962    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
313963    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
313964    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
313965    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
313966    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
313967    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
313968    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
313969    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
313970    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
313971    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
313972    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
313973    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
313974    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
313975    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
313976    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
313977    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
313978    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
313979    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
313980    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
313981    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
313982    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
313983    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
313984    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
313985    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
313986    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
313987    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
313988    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
313989    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
313990    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
313991    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
313992    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
313993    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
313994    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
313995    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
313996    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
313997    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
313998    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
313999    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
314000    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
314001    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
314002    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
314003    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
314004    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
314005    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
314006    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
314007    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
314008    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
314009    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
314010    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
314011    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
314012    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
314013    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
314014    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
314015    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
314016    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
314017    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
314018    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
314019    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
314020    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
314021    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
314022    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
314023    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
314024    +END;
MPRINT(EM_DIAGRAM):   END;
314025    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314026    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
314027    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
314028    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
314029    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
314030    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
314031    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
314032    +END;
MPRINT(EM_DIAGRAM):   END;
314033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314034    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
314035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314036    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314037    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
314038    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
314039    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
314040    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
314041    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
314042    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
314043    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
314044    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
314045    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
314046    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
314047    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
314048    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
314049    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
314050    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
314051    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
314052    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
314053    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
314054    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
314055    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
314056    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
314057    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
314058    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
314059    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
314060    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
314061    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
314062    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
314063    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
314064    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
314065    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
314066    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
314067    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
314068    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
314069    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
314070    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
314071    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
314072    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
314073    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
314074    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
314075    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
314076    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
314077    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
314078    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
314079    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
314080    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
314081    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
314082    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
314083    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
314084    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
314085    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
314086    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
314087    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
314088    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
314089    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
314090    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
314091    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
314092    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
314093    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
314094    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
314095    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
314096    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
314097    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
314098    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
314099    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
314100    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
314101    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
314102    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
314103    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
314104    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
314105    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
314106    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
314107    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
314108    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
314109    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
314110    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
314111    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
314112    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
314113    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
314114    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
314115    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
314116    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
314117    +END;
MPRINT(EM_DIAGRAM):   END;
314118    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314119    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
314120    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
314121    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
314122    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
314123    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
314124    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
314125    +END;
MPRINT(EM_DIAGRAM):   END;
314126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314127    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
314128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314129    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314130    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
314131    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
314132    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
314133    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
314134    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
314135    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
314136    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
314137    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
314138    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
314139    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
314140    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
314141    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
314142    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
314143    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
314144    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
314145    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
314146    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
314147    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
314148    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
314149    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
314150    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
314151    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
314152    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
314153    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
314154    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
314155    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
314156    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
314157    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
314158    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
314159    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
314160    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
314161    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
314162    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
314163    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
314164    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
314165    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
314166    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
314167    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
314168    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
314169    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
314170    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
314171    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
314172    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
314173    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
314174    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
314175    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
314176    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
314177    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
314178    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
314179    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
314180    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
314181    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
314182    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
314183    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
314184    +END;
MPRINT(EM_DIAGRAM):   END;
314185    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314186    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
314187    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
314188    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
314189    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
314190    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
314191    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
314192    +END;
MPRINT(EM_DIAGRAM):   END;
314193    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314194    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
314195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314196    +
314197    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
314198    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
314199    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
314200    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
314201    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
314202    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314203    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
314204    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
314205    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
314206    +end;
MPRINT(EM_DIAGRAM):   end;
314207    +else do;
MPRINT(EM_DIAGRAM):   else do;
314208    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
314209    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
314210    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
314211    +   end;
MPRINT(EM_DIAGRAM):   end;
314212    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
314213    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
314214    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
314215    +   end;
MPRINT(EM_DIAGRAM):   end;
314216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314217    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
314218    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
314219    +   end;
MPRINT(EM_DIAGRAM):   end;
314220    +end;
MPRINT(EM_DIAGRAM):   end;
314221    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314222    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
314223    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
314224    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
314225    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
314226    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
314227    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
314228    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
314229    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
314230    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
314231    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
314232    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
314233    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
314234    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
314235    +END;
MPRINT(EM_DIAGRAM):   END;
314236    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314237    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
314238    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
314239    +END;
MPRINT(EM_DIAGRAM):   END;
314240    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
314241    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
314242    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
314243    +END;
MPRINT(EM_DIAGRAM):   END;
314244    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
314245    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
314246    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
314247    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
314248    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
314249    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
314250    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
314251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314252    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
314253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314254    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
314255    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
314256    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
314257    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
314258    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
314259    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
314260    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
314261    +END;
MPRINT(EM_DIAGRAM):   END;
314262    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314263    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
314264    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314265    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
314266    +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
314267    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314268    +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
314269    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314270    +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
314271    +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
314272    +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
314273    +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
314274    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314275    +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
314276    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314277    +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
314278    +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
314279    +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
314280    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314281    +* Ensmbl55: Maximum Posteriors of 6 models;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Maximum Posteriors of 6 models;
314282    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314283    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
314284    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
314285    +P_DepVar1 = max(
314286    +AutoNeural37_P_DepVar1 ,
314287    +AutoNeural38_P_DepVar1 ,
314288    +AutoNeural39_P_DepVar1 ,
314289    +AutoNeural40_P_DepVar1 ,
314290    +AutoNeural34_P_DepVar1 ,
314291    +AutoNeural35_P_DepVar1
314292    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural37_P_DepVar1 , AutoNeural38_P_DepVar1 ,
AutoNeural39_P_DepVar1 , AutoNeural40_P_DepVar1 , AutoNeural34_P_DepVar1 ,
AutoNeural35_P_DepVar1 );
314293    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
314294    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
314295    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
314296    +end;
MPRINT(EM_DIAGRAM):   end;
314297    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
314298    +P_DepVar0 = max(
314299    +AutoNeural37_P_DepVar0 ,
314300    +AutoNeural38_P_DepVar0 ,
314301    +AutoNeural39_P_DepVar0 ,
314302    +AutoNeural40_P_DepVar0 ,
314303    +AutoNeural34_P_DepVar0 ,
314304    +AutoNeural35_P_DepVar0
314305    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural37_P_DepVar0 , AutoNeural38_P_DepVar0 ,
AutoNeural39_P_DepVar0 , AutoNeural40_P_DepVar0 , AutoNeural34_P_DepVar0 ,
AutoNeural35_P_DepVar0 );
314306    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
314307    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
314308    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
314309    +end;
MPRINT(EM_DIAGRAM):   end;
314310    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
314311    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314312    +* Ensmbl55: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Classification Vars;
314313    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314314    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
314315    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
314316    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
314317    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
314318    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
314319    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
314320    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
314321    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
314322    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
314323    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
314324    +end;
MPRINT(EM_DIAGRAM):   end;
314325    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
314326    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
314327    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
314328    +end;
MPRINT(EM_DIAGRAM):   end;
314329    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314331    +* Ensmbl55: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Producing Unformatted variable;
314332    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314333    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
314334    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
314335    +else
314336    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
314337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314338    +* Ensmbl55: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing _WARN_ Variable;
314339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314340    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
314341    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
314342    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
314343    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
314343   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
314344    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
314344   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
314345    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
314345   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
314346    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
314346   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
314347    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
314347   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
314348    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
314348   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
314349    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
314349   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
314350    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
314350   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
314351    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
314351   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
314352    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
314352   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
314353    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
314353   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
314354    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
314354   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
314355    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
314355   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
314356    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
314356   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
314357    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
314357   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
314358    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
314358   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
314359    +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
314359   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
314360    +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
314360   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
314361    +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
314361   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
314362    +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
314362   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
314363    +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
314363   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
314364    +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
314364   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
314365    +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
314365   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
314366    +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
314366   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
314367    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314368    +* Ensmbl55: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Residual Vars;
314369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314370    +if
314371    +F_DepVar NE '1'
314372    +AND F_DepVar NE '0'
314373    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
314374    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
314375    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
314376    +end;
MPRINT(EM_DIAGRAM):   end;
314377    +else do;
MPRINT(EM_DIAGRAM):   else do;
314378    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
314379    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
314380    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
314381    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
314382    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
314383    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
314384    +END;
MPRINT(EM_DIAGRAM):   END;
314385    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314386     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL55_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL37_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
314387     quit;
314388     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl55_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl55_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl55_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
314448     filename _pref
314448   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
314449     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314450     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
314451    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314452    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
314453    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314454    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
314455    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
314456    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
314457    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
314458    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
314459    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
314460    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
314461    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
314462    +LENGTH _WARN_ $4
314463    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
314464    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
314465    +
314466    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
314467    +
314468    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
314469    +
314470    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
314471    +
314472    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
314473    +
314474    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
314475    +
314476    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
314477    +
314478    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
314479    +
314480    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
314481    +
314482    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
314483    +
314484    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
314485    +
314486    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
314487    +
314488    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
314489    +
314490    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
314491    +
314492    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
314493    +
314494    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
314495    +
314496    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
314497    +
314498    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
314499    +
314500    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
314501    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
314502    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
314503    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
314504    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
314505    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
314506    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
314507    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
314508    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
314509    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
314510    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
314511    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
314512    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
314513    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
314514    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314515    +end;
MPRINT(EM_DIAGRAM):   end;
314516    +else do;
MPRINT(EM_DIAGRAM):   else do;
314517    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
314518    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
314519    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
314520    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
314521    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
314522    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
314523    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
314524    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
314525    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314526    +         end;
MPRINT(EM_DIAGRAM):   end;
314527    +         else do;
MPRINT(EM_DIAGRAM):   else do;
314528    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
314529    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
314530    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314531    +            end;
MPRINT(EM_DIAGRAM):   end;
314532    +         end;
MPRINT(EM_DIAGRAM):   end;
314533    +      end;
MPRINT(EM_DIAGRAM):   end;
314534    +      else do;
MPRINT(EM_DIAGRAM):   else do;
314535    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
314536    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
314537    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314538    +         end;
MPRINT(EM_DIAGRAM):   end;
314539    +      end;
MPRINT(EM_DIAGRAM):   end;
314540    +   end;
MPRINT(EM_DIAGRAM):   end;
314541    +   else do;
MPRINT(EM_DIAGRAM):   else do;
314542    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
314543    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
314544    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314545    +      end;
MPRINT(EM_DIAGRAM):   end;
314546    +      else do;
MPRINT(EM_DIAGRAM):   else do;
314547    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
314548    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
314549    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
314550    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
314551    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
314552    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
314553    +         end;
MPRINT(EM_DIAGRAM):   end;
314554    +      end;
MPRINT(EM_DIAGRAM):   end;
314555    +   end;
MPRINT(EM_DIAGRAM):   end;
314556    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
314557    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
314558    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
314559    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
314560    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
314561    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
314562    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314563    +   end;
MPRINT(EM_DIAGRAM):   end;
314564    +end;
MPRINT(EM_DIAGRAM):   end;
314565    +
314566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314567    +*** Checking missing input Interval
314568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
314569    +
314570    +IF NMISS(
314571    +   AcceptedCmpTotal ,
314572    +   Frq ,
314573    +   Mnt ,
314574    +   MntMeatProducts ,
314575    +   NumCatalogPurchases ,
314576    +   NumDealsPurchases ,
314577    +   NumWebVisitsMonth ,
314578    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
314579    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
314580    +
314581    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
314582    +END;
MPRINT(EM_DIAGRAM):   END;
314583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314584    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
314585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314586    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314587    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
314588    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
314589    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
314590    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
314591    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
314592    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
314593    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
314594    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
314595    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
314596    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
314597    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
314598    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
314599    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
314600    +END;
MPRINT(EM_DIAGRAM):   END;
314601    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314602    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
314603    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
314604    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
314605    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
314606    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
314607    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
314608    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
314609    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
314610    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
314611    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
314612    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
314613    +   ELSE S_NumCatalogPurchases
314614    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
314615    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
314616    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
314617    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
314618    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
314619    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
314620    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
314621    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
314622    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
314623    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
314624    +END;
MPRINT(EM_DIAGRAM):   END;
314625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314626    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
314627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314629    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
314630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314631    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314632    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
314633    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
314634    +          +     6.08901143667375 * S_MntMeatProducts
314635    +          +     2.21464286693249 * S_NumCatalogPurchases
314636    +          +     0.88693497635794 * S_NumDealsPurchases
314637    +          +    -0.16352347343851 * S_NumWebVisitsMonth
314638    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 *
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 *
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 *
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
314639    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
314640    +          +     0.97693281807676 * Marital_StatusMarried
314641    +          +    -0.47353913752833 * Marital_StatusSingle
314642    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced +
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle +
0.72993998289048 * Marital_StatusTogether ;
314643    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
314644    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
314645    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
314646    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
314647    +END;
MPRINT(EM_DIAGRAM):   END;
314648    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314649    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
314650    +END;
MPRINT(EM_DIAGRAM):   END;
314651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314652    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
314653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314654    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
314655    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
314656    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
314657    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
314658    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
314659    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
314660    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
314661    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
314662    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
314663    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
314664    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
314665    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
314666    +END;
MPRINT(EM_DIAGRAM):   END;
314667    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
314668    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
314669    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
314670    +END;
MPRINT(EM_DIAGRAM):   END;
314671    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
314672    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
314673    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
314674    +END;
MPRINT(EM_DIAGRAM):   END;
314675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314676    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
314677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
314678    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
314679    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
314680    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
314681    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
314682    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
314683    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
314684    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
314685    +END;
MPRINT(EM_DIAGRAM):   END;
314686    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314687    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
314688    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
314689    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314690     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
314691     quit;
314692     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314693     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314694     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314695     retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
314696     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314698     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314699     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314700     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
314701     proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME
CREATOR);
314702     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314704     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314705     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314706     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314707     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314708     proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
314709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314710     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314711     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314712     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314713     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314714     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314715     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314716     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314717     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314718     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314718   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 245 rows and 5 columns.
 
314719     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314720     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
314721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 245 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314722     filename _pref
314722   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
314723     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314724     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
314725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314726    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
314727    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314728    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
314729    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
314730    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314731     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
314732     quit;
314733     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314734     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314735     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314736     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
314737     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314738     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314739     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314740     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314741     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314742     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
314743     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314745     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314746     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314747     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314748     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314749     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
314750     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
314751     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314752     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314754     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314755     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314756     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314757     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314758     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314759     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314759   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
314760     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314761     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
314762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314763     filename _pref
314763   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
314764     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314765     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
314766    +
314767    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
314768    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
314768   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
314769    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
314770    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
314771    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
314772    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
314773    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314774     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
314775     quit;
314776     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314777     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314778     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314779     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
314780     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314782     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314783     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314785     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
314786     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314788     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314789     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314790     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314792     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
314793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314794     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314795     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314796     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314797     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314798     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314799     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314800     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314801     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314802     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314802   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
314803     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
314804     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
314805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 288 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314806     filename _pref
314806   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
314807     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
314808     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
314809    +
314810    +
314811    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
314812    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
314813    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
314814    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
314815    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
314816    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314817    +
314818    +
314819    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
314820    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
314821    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
314822    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
314823    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
314824    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314825    +
314826    +
314827    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
314828    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
314829    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
314830    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
314831    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
314832    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314833    +
314834    +
314835    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
314836    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
314837    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
314838    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
314839    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
314840    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314841    +
314842    +
314843    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
314844    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
314845    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
314846    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
314847    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
314848    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314849    +
314850    +
314851    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
314852    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
314853    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
314854    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
314855    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
314856    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314857    +
314858    +
314859    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
314860    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
314861    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
314862    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
314863    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
314864    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314865    +
314866    +
314867    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
314868    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
314869    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
314870    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
314871    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
314872    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
314873    +if
314874    +_FILTERNORM1 not in ( '.')
314875    + and
314876    +_FILTERNORM2 not in ( '.')
314877    + and
314878    +_FILTERNORM3 not in ( '.')
314879    + and
314880    +_FILTERNORM4 not in ( '.')
314881    + and
314882    +_FILTERNORM5 not in ( '.')
314883    + and
314884    +_FILTERNORM6 not in ( '.')
314885    + and
314886    +_FILTERNORM7 not in ( ' ')
314887    + and
314888    +_FILTERNORM8 not in ( ' ')
314889    +and
314890    +( Dt_Customer ne .)
314891    +and ( Income ne . and (Income<=107000))
314892    +and ( Kidhome ne .)
314893    +and ( MntFishProducts ne .)
314894    +and ( MntFruits ne .)
314895    +and ( MntGoldProds ne .)
314896    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
314897    +and ( MntSweetProducts ne .)
314898    +and ( MntWines ne .)
314899    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
314900    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
314901    +and ( NumStorePurchases ne .)
314902    +and ( NumWebPurchases ne .)
314903    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
314904    +and ( Recency ne .)
314905    +and ( Teenhome ne .)
314906    +and ( Year_Birth ne .)
314907    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
314908    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
314909    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
314910    +end;
MPRINT(EM_DIAGRAM):   end;
314911    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
314912    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
314913     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
314914     quit;
314915     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
314916     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
314917     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
314918     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
314919     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
314920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314921     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
314922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314924     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
314925     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314927     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314928     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
314929     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
314930     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314931     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
314932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
314933     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
314934     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
314936     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
314937     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
314938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
314939     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314940     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
314941     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
314941   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
314942     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
314943     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
314944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 354 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
314945     %macro varDept(fcmpdata=,id=);
314946     %global nobs&id scoreFlag&id;
314947     %let scoreFlag&id = 0;
314948     %if &id=1 or ^&fcmpStart %then %do;
314949     proc sort data=&fcmpdata out=_temp&id nodupkey;
314950     by NAME;
314951     where id=&id and LHS in( %let j=1;
314952     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
314953     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
314954     "&var" %let j = %eval(&j+1);
314955     %end;
314956     );
314957     run;
314958     %let dsid = %sysfunc(open(_temp&id));
314959     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314960     %let dsid = %sysfunc(close(&dsid));
314961     %if &&nobs&id %then %do;
314962     %let scoreFlag&id = 1;
314963     %let fcmpStart = 1;
314964     %end;
314965     %else %let fcmpStart = 0;
314966     %end;
314967     %else %do;
314968     proc sort data=&fcmpdata out=_tempid;
314969     where id=&id;
314970     by LHS;
314971     run;
314972     %let dsid = %sysfunc(open(_tempid));
314973     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
314974     %let dsid = %sysfunc(close(&dsid));
314975     %if ^&&nobs&id %then %do;
314976     proc datasets lib=work nolist;
314977     delete _tempid;
314978     run;
314979     quit;
314980     %end;
314981     %else %do;
314982     data _tempAll;
314983     set %let j=%eval(&id-1);
314984     %do x=1 %to &j;
314985     %if &&nobs&x %then %do;
314986     _temp&x %end;
314987     %end;
314988     ;
314989     run;
314990     proc sql;
314991     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
314991   ! work._tempid p2 where p.name=p2.lhs;
314992     quit;
314993     data _temp&id;
314994     set _temp&id;
314995     where LHS ne '' and NAME ne '' and Node ne '';
314996     run;
314997     proc datasets lib=work nolist;
314998     delete _tempAll;
314999     run;
315000     %let dsid = %sysfunc(open(_temp&id));
315001     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315002     %let dsid = %sysfunc(close(&dsid));
315003     %if ^&&nobs&id %then %do;
315004     proc datasets lib=work nolist;
315005     delete _temp&id;
315006     run;
315007     quit;
315008     %end;
315009     %else %do;
315010     %let scoreFlag&id = 1;
315011     data _temp&id;
315012     set _temp&id;
315013     where LHS ne NAME and node ne '';
315014     run;
315015     %let dsid = %sysfunc(open(_temp&id));
315016     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315017     %let dsid = %sysfunc(close(&dsid));
315018     %if ^&&nobs&id %then %do;
315019     proc datasets lib=work nolist;
315020     delete _temp&id;
315021     run;
315022     quit;
315023     %end;
315024     %else %do;
315025     proc sort data=_temp&id nodupkey;
315026     by LHS NAME;
315027     run;
315028     %end;
315029     %end;
315030     %end;
315031     %end;
315032     %mend varDept;
315033     %macro optCode(outdata=fcmpdata);
315034     %global fcmpStart;
315035     %let fcmpStart = 0;
315036     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
315037     %let NumNodes=9;
315038     %do k=1 %to &NumNodes;
315039     %vardept(fcmpdata=&outdata, id=&k);
315040     %end;
315041     %mend optCode;
315042     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 45 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
315043     filename _pref
315043   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
315044     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315045     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
315046    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315047    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
315048    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315049    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
315050    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
315051    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
315052    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
315053    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
315054    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
315055    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
315056    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
315057    +LENGTH _WARN_ $4
315058    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
315059    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
315060    +
315061    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
315062    +
315063    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
315064    +
315065    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
315066    +
315067    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
315068    +
315069    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
315070    +
315071    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
315072    +
315073    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
315074    +
315075    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
315076    +
315077    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
315078    +
315079    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
315080    +
315081    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
315082    +
315083    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
315084    +
315085    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
315086    +
315087    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
315088    +
315089    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
315090    +
315091    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
315092    +
315093    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
315094    +
315095    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
315096    +
315097    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
315098    +
315099    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
315100    +
315101    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
315102    +
315103    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
315104    +
315105    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
315106    +
315107    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
315108    +
315109    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
315110    +
315111    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
315112    +
315113    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
315114    +
315115    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
315116    +
315117    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
315118    +
315119    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
315120    +
315121    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
315122    +
315123    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
315124    +
315125    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
315126    +
315127    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
315128    +
315129    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
315130    +
315131    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
315132    +
315133    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
315134    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
315135    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
315136    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315137    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
315138    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
315139    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
315140    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
315141    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
315142    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315143    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315144    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315145    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315146    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315147    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315148    +end;
MPRINT(EM_DIAGRAM):   end;
315149    +else do;
MPRINT(EM_DIAGRAM):   else do;
315150    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
315151    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
315152    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315153    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
315154    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
315155    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
315156    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
315157    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
315158    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315159    +         end;
MPRINT(EM_DIAGRAM):   end;
315160    +         else do;
MPRINT(EM_DIAGRAM):   else do;
315161    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
315162    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
315163    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315164    +            end;
MPRINT(EM_DIAGRAM):   end;
315165    +         end;
MPRINT(EM_DIAGRAM):   end;
315166    +      end;
MPRINT(EM_DIAGRAM):   end;
315167    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315168    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
315169    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
315170    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315171    +         end;
MPRINT(EM_DIAGRAM):   end;
315172    +      end;
MPRINT(EM_DIAGRAM):   end;
315173    +   end;
MPRINT(EM_DIAGRAM):   end;
315174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315175    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
315176    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
315177    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315178    +      end;
MPRINT(EM_DIAGRAM):   end;
315179    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315180    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
315181    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
315182    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
315183    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
315184    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
315185    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315186    +         end;
MPRINT(EM_DIAGRAM):   end;
315187    +      end;
MPRINT(EM_DIAGRAM):   end;
315188    +   end;
MPRINT(EM_DIAGRAM):   end;
315189    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
315190    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315191    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315192    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315193    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315194    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315195    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315196    +   end;
MPRINT(EM_DIAGRAM):   end;
315197    +end;
MPRINT(EM_DIAGRAM):   end;
315198    +
315199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315200    +*** Checking missing input Interval
315201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
315202    +
315203    +IF NMISS(
315204    +   AcceptedCmpTotal ,
315205    +   Frq ,
315206    +   Mnt ,
315207    +   MntMeatProducts ,
315208    +   NumCatalogPurchases ,
315209    +   NumDealsPurchases ,
315210    +   NumWebVisitsMonth ,
315211    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
315212    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
315213    +
315214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315215    +END;
MPRINT(EM_DIAGRAM):   END;
315216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315217    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
315218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315219    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315220    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315221    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
315222    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315223    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315224    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315225    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
315226    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
315227    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
315228    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315229    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
315230    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315231    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
315232    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315233    +END;
MPRINT(EM_DIAGRAM):   END;
315234    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315235    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
315236    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315237    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
315238    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
315239    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315240    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
315241    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315242    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
315243    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315244    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
315245    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
315246    +   ELSE S_NumCatalogPurchases
315247    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
315248    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
315249    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
315250    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315251    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
315252    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
315253    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315254    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
315255    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
315256    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315257    +END;
MPRINT(EM_DIAGRAM):   END;
315258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315259    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
315260    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315262    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
315263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315264    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315265    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
315266    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
315267    +          +     3.02405267314398 * S_MntMeatProducts
315268    +          +     0.25422172488707 * S_NumCatalogPurchases
315269    +          +     0.25977266371328 * S_NumDealsPurchases
315270    +          +    -0.26865365728773 * S_NumWebVisitsMonth
315271    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 *
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 *
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 *
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
315272    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
315273    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
315274    +          +    -0.64419071408502 * S_MntMeatProducts
315275    +          +    -0.49060224303044 * S_NumCatalogPurchases
315276    +          +    -0.04840762943457 * S_NumDealsPurchases
315277    +          +     -0.7656247386051 * S_NumWebVisitsMonth
315278    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 *
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 *
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 *
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
315279    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
315280    +          +    -0.05888536499281 * Marital_StatusMarried
315281    +          +    -0.22627441829205 * Marital_StatusSingle
315282    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced +
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle +
0.52348719245564 * Marital_StatusTogether ;
315283    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
315284    +          +     0.82536605771339 * Marital_StatusMarried
315285    +          +    -0.97196770004098 * Marital_StatusSingle
315286    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced +
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle +
1.2063947269032 * Marital_StatusTogether ;
315287    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
315288    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
315289    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
315290    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
315291    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
315292    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
315293    +END;
MPRINT(EM_DIAGRAM):   END;
315294    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315295    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
315296    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
315297    +END;
MPRINT(EM_DIAGRAM):   END;
315298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315299    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
315300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315301    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315302    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
315303    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
315304    +          +    -1.52187144029368 * S_MntMeatProducts
315305    +          +    -0.17233011764417 * S_NumCatalogPurchases
315306    +          +     0.08681674245114 * S_NumDealsPurchases
315307    +          +     0.13308256651831 * S_NumWebVisitsMonth
315308    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 *
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 *
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 *
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
315309    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
315310    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
315311    +          +     0.66187267823731 * S_MntMeatProducts
315312    +          +     1.52530454111654 * S_NumCatalogPurchases
315313    +          +     0.73982889008686 * S_NumDealsPurchases
315314    +          +     1.03760708665776 * S_NumWebVisitsMonth
315315    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 *
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 *
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 *
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
315316    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
315317    +          +    -0.57121500191985 * Marital_StatusMarried
315318    +          +     0.00575301863466 * Marital_StatusSingle
315319    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced +
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle +
0.58606212168272 * Marital_StatusTogether ;
315320    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
315321    +          +     0.68382990555761 * Marital_StatusMarried
315322    +          +    -0.40241665873988 * Marital_StatusSingle
315323    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced +
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle +
0.66274709598028 * Marital_StatusTogether ;
315324    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
315325    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
315326    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
315327    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
315328    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
315329    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
315330    +END;
MPRINT(EM_DIAGRAM):   END;
315331    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315332    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
315333    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
315334    +END;
MPRINT(EM_DIAGRAM):   END;
315335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315336    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
315337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315338    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315339    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
315340    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
315341    +          +    -2.40830591527574 * S_MntMeatProducts
315342    +          +    -0.89296864866675 * S_NumCatalogPurchases
315343    +          +     1.79889409325514 * S_NumDealsPurchases
315344    +          +    -0.33765715793031 * S_NumWebVisitsMonth
315345    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 *
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 *
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
315346    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
315347    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
315348    +          +     0.04224245417831 * S_MntMeatProducts
315349    +          +     0.25836861794607 * S_NumCatalogPurchases
315350    +          +     2.47909264202917 * S_NumDealsPurchases
315351    +          +     0.14790226792406 * S_NumWebVisitsMonth
315352    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 *
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 *
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 *
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
315353    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
315354    +          +     0.39103795234666 * Marital_StatusMarried
315355    +          +    -0.52822284221545 * Marital_StatusSingle
315356    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced +
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle +
-1.86494928221959 * Marital_StatusTogether ;
315357    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
315358    +          +       1.975579060233 * Marital_StatusMarried
315359    +          +     0.15028521746762 * Marital_StatusSingle
315360    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced +
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle +
0.92005975380984 * Marital_StatusTogether ;
315361    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
315362    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
315363    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
315364    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
315365    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
315366    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
315367    +END;
MPRINT(EM_DIAGRAM):   END;
315368    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315369    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
315370    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
315371    +END;
MPRINT(EM_DIAGRAM):   END;
315372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315373    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
315374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315375    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315376    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
315377    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
315378    +          +     0.16060225059391 * S_MntMeatProducts
315379    +          +     1.53093292630033 * S_NumCatalogPurchases
315380    +          +     0.39573641806699 * S_NumDealsPurchases
315381    +          +    -0.95387142126649 * S_NumWebVisitsMonth
315382    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 *
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 *
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 *
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
315383    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
315384    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
315385    +          +     0.71628478327205 * S_MntMeatProducts
315386    +          +     0.15890352363556 * S_NumCatalogPurchases
315387    +          +    -1.12928875468011 * S_NumDealsPurchases
315388    +          +    -0.30108145274307 * S_NumWebVisitsMonth
315389    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 *
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 *
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 *
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
315390    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
315391    +          +     0.91966160839643 * Marital_StatusMarried
315392    +          +    -0.63411090570397 * Marital_StatusSingle
315393    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced +
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle +
-0.54635673224032 * Marital_StatusTogether ;
315394    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
315395    +          +     0.77230489026504 * Marital_StatusMarried
315396    +          +     0.20456495503812 * Marital_StatusSingle
315397    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced +
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle +
-0.94791841887496 * Marital_StatusTogether ;
315398    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
315399    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
315400    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
315401    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
315402    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
315403    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
315404    +END;
MPRINT(EM_DIAGRAM):   END;
315405    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315406    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
315407    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
315408    +END;
MPRINT(EM_DIAGRAM):   END;
315409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315410    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
315411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315412    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315413    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
315414    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
315415    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
315416    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2
;
315417    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
315418    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 *
H1x2_2 ;
315419    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
315420    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2
;
315421    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
315422    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 *
H1x3_2 ;
315423    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
315424    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2
;
315425    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
315426    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
315427    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
315428    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
315429    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
315430    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
315431    +END;
MPRINT(EM_DIAGRAM):   END;
315432    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315433    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
315434    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
315435    +END;
MPRINT(EM_DIAGRAM):   END;
315436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315437    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
315438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315439    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315440    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
315441    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
315442    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
315443    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2
;
315444    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
315445    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2
;
315446    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
315447    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
315448    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
315449    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2
;
315450    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
315451    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
315452    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
315453    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2
;
315454    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
315455    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
315456    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
315457    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
315458    +END;
MPRINT(EM_DIAGRAM):   END;
315459    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315460    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
315461    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
315462    +END;
MPRINT(EM_DIAGRAM):   END;
315463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315464    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
315465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315466    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315467    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
315468    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
315469    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
315470    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2
;
315471    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
315472    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
315473    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
315474    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 *
H1x3_2 ;
315475    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
315476    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
315477    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
315478    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2
;
315479    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
315480    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
315481    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
315482    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
315483    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
315484    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
315485    +END;
MPRINT(EM_DIAGRAM):   END;
315486    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315487    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
315488    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
315489    +END;
MPRINT(EM_DIAGRAM):   END;
315490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315491    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
315492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315493    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315494    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
315495    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
315496    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2
;
315497    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
315498    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
315499    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
315500    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
315501    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
315502    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315503    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
315504    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
315505    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
315506    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
315507    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
315508    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
315509    +END;
MPRINT(EM_DIAGRAM):   END;
315510    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315511    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
315512    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
315513    +END;
MPRINT(EM_DIAGRAM):   END;
315514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315515    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
315516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315517    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315518    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
315519    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
315520    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
315521    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
315522    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 *
H2x3_2 ;
315523    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
315524    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
315525    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
315526    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315527    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
315528    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
315529    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
315530    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
315531    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
315532    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
315533    +END;
MPRINT(EM_DIAGRAM):   END;
315534    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315535    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
315536    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
315537    +END;
MPRINT(EM_DIAGRAM):   END;
315538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315539    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
315540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315541    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315542    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
315543    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
315544    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
315545    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
315546    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
315547    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
315548    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315549    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
315550    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
315551    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
315552    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
315553    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
315554    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
315555    +END;
MPRINT(EM_DIAGRAM):   END;
315556    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315557    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
315558    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
315559    +END;
MPRINT(EM_DIAGRAM):   END;
315560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315561    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
315562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315563    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315564    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
315565    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
315566    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
315567    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
315568    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
315569    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315570    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
315571    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
315572    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
315573    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
315574    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
315575    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
315576    +END;
MPRINT(EM_DIAGRAM):   END;
315577    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315578    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
315579    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
315580    +END;
MPRINT(EM_DIAGRAM):   END;
315581    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
315582    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
315583    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
315584    +END;
MPRINT(EM_DIAGRAM):   END;
315585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315586    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
315587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315588    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
315589    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
315590    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
315591    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
315592    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
315593    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
315594    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
315595    +END;
MPRINT(EM_DIAGRAM):   END;
315596    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315597    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
315598    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315599    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315600     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
315601     quit;
315602     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315603     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315604     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315605     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
315606     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315608     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315609     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315610     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315611     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME
CREATOR);
315612     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315613     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315614     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315615     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315616     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315617     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315618     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
315619     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
315620     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315621     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315623     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315624     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315625     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315626     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315627     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315628     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315628   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1163 rows and 5 columns.
 
315629     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315630     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
315631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1163 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1163 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315632     filename _pref
315632   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
315633     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315634     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
315635    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315636    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
315637    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315638    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
315639    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
315640    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315641     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
315642     quit;
315643     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315644     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315645     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315646     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
315647     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315649     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315650     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315651     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315652     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
315653     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315655     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315656     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315657     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315659     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
315660     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
315661     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315662     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315663     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315664     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315665     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315666     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315667     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315668     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315669     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315669   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
315670     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315671     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
315672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1167 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315673     filename _pref
315673   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
315674     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315675     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
315676    +
315677    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
315678    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
315678   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
315679    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
315680    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
315681    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
315682    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
315683    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315684     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
315685     quit;
315686     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315687     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315688     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315689     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
315690     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315692     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315694     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315695     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
315696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315698     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315699     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315700     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315702     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
315703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315704     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315706     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315707     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315708     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315709     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315710     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315711     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315712     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315712   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
315713     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315714     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
315715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315716     filename _pref
315716   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
315717     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315718     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
315719    +
315720    +
315721    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
315722    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
315723    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
315724    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
315725    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
315726    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315727    +
315728    +
315729    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
315730    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
315731    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
315732    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
315733    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
315734    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315735    +
315736    +
315737    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
315738    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
315739    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
315740    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
315741    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
315742    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315743    +
315744    +
315745    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
315746    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
315747    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
315748    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
315749    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
315750    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315751    +
315752    +
315753    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
315754    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
315755    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
315756    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
315757    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
315758    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315759    +
315760    +
315761    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
315762    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
315763    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
315764    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
315765    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
315766    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315767    +
315768    +
315769    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
315770    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
315771    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
315772    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
315773    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
315774    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315775    +
315776    +
315777    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
315778    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
315779    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
315780    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
315781    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
315782    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
315783    +if
315784    +_FILTERNORM1 not in ( '.')
315785    + and
315786    +_FILTERNORM2 not in ( '.')
315787    + and
315788    +_FILTERNORM3 not in ( '.')
315789    + and
315790    +_FILTERNORM4 not in ( '.')
315791    + and
315792    +_FILTERNORM5 not in ( '.')
315793    + and
315794    +_FILTERNORM6 not in ( '.')
315795    + and
315796    +_FILTERNORM7 not in ( ' ')
315797    + and
315798    +_FILTERNORM8 not in ( ' ')
315799    +and
315800    +( Dt_Customer ne .)
315801    +and ( Income ne . and (Income<=107000))
315802    +and ( Kidhome ne .)
The SAS System
 
315803    +and ( MntFishProducts ne .)
315804    +and ( MntFruits ne .)
315805    +and ( MntGoldProds ne .)
315806    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
315807    +and ( MntSweetProducts ne .)
315808    +and ( MntWines ne .)
315809    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
315810    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
315811    +and ( NumStorePurchases ne .)
315812    +and ( NumWebPurchases ne .)
315813    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
315814    +and ( Recency ne .)
315815    +and ( Teenhome ne .)
315816    +and ( Year_Birth ne .)
315817    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
315818    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
315819    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
315820    +end;
MPRINT(EM_DIAGRAM):   end;
315821    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
315822    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315823     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
315824     quit;
315825     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
315826     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
315827     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
315828     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
315829     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
315830     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315831     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
315832     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315833     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315834     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
315835     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315837     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315838     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
315839     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
315840     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315841     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
315842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
315843     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
315844     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315845     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315846     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
315847     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
315848     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
315849     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315850     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
315851     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
315851   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
315852     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
315853     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
315854     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1272 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
315855     %macro varDept(fcmpdata=,id=);
315856     %global nobs&id scoreFlag&id;
315857     %let scoreFlag&id = 0;
315858     %if &id=1 or ^&fcmpStart %then %do;
315859     proc sort data=&fcmpdata out=_temp&id nodupkey;
315860     by NAME;
315861     where id=&id and LHS in( %let j=1;
315862     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
315863     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
315864     "&var" %let j = %eval(&j+1);
315865     %end;
315866     );
315867     run;
315868     %let dsid = %sysfunc(open(_temp&id));
315869     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315870     %let dsid = %sysfunc(close(&dsid));
315871     %if &&nobs&id %then %do;
315872     %let scoreFlag&id = 1;
315873     %let fcmpStart = 1;
315874     %end;
315875     %else %let fcmpStart = 0;
315876     %end;
315877     %else %do;
315878     proc sort data=&fcmpdata out=_tempid;
315879     where id=&id;
315880     by LHS;
315881     run;
315882     %let dsid = %sysfunc(open(_tempid));
315883     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315884     %let dsid = %sysfunc(close(&dsid));
315885     %if ^&&nobs&id %then %do;
315886     proc datasets lib=work nolist;
315887     delete _tempid;
315888     run;
315889     quit;
315890     %end;
315891     %else %do;
315892     data _tempAll;
315893     set %let j=%eval(&id-1);
315894     %do x=1 %to &j;
315895     %if &&nobs&x %then %do;
315896     _temp&x %end;
315897     %end;
315898     ;
315899     run;
315900     proc sql;
315901     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
315901   ! work._tempid p2 where p.name=p2.lhs;
315902     quit;
315903     data _temp&id;
315904     set _temp&id;
315905     where LHS ne '' and NAME ne '' and Node ne '';
315906     run;
315907     proc datasets lib=work nolist;
315908     delete _tempAll;
315909     run;
315910     %let dsid = %sysfunc(open(_temp&id));
315911     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315912     %let dsid = %sysfunc(close(&dsid));
315913     %if ^&&nobs&id %then %do;
315914     proc datasets lib=work nolist;
315915     delete _temp&id;
315916     run;
315917     quit;
315918     %end;
315919     %else %do;
315920     %let scoreFlag&id = 1;
315921     data _temp&id;
315922     set _temp&id;
315923     where LHS ne NAME and node ne '';
315924     run;
315925     %let dsid = %sysfunc(open(_temp&id));
315926     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
315927     %let dsid = %sysfunc(close(&dsid));
315928     %if ^&&nobs&id %then %do;
315929     proc datasets lib=work nolist;
315930     delete _temp&id;
315931     run;
315932     quit;
315933     %end;
315934     %else %do;
315935     proc sort data=_temp&id nodupkey;
315936     by LHS NAME;
315937     run;
315938     %end;
315939     %end;
315940     %end;
315941     %end;
315942     %mend varDept;
315943     %macro optCode(outdata=fcmpdata);
315944     %global fcmpStart;
315945     %let fcmpStart = 0;
315946     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
315947     %let NumNodes=9;
315948     %do k=1 %to &NumNodes;
315949     %vardept(fcmpdata=&outdata, id=&k);
315950     %end;
315951     %mend optCode;
315952     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 102 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 71 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
315953     filename _pref
315953   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
315954     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
315955     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
315956    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315957    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
315958    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315959    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
315960    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
315961    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
315962    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
315963    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
315964    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
315965    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
315966    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
315967    +LENGTH _WARN_ $4
315968    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
315969    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
315970    +
315971    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
315972    +
315973    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
315974    +
315975    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
315976    +
315977    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
315978    +
315979    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
315980    +
315981    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
315982    +
315983    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
315984    +
315985    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
315986    +
315987    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
315988    +
315989    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
315990    +
315991    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
315992    +
315993    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
315994    +
315995    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
315996    +
315997    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
315998    +
315999    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
316000    +
316001    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
316002    +
316003    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
316004    +
316005    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
316006    +
316007    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
316008    +
316009    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
316010    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
316011    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
316012    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
316013    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
316014    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
316015    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
316016    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
316017    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
316018    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316019    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316020    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316021    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316022    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316023    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316024    +end;
MPRINT(EM_DIAGRAM):   end;
316025    +else do;
MPRINT(EM_DIAGRAM):   else do;
316026    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
316027    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
316028    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316029    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
316030    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
316031    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
316032    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
316033    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
316034    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316035    +         end;
MPRINT(EM_DIAGRAM):   end;
316036    +         else do;
MPRINT(EM_DIAGRAM):   else do;
316037    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
316038    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
316039    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316040    +            end;
MPRINT(EM_DIAGRAM):   end;
316041    +         end;
MPRINT(EM_DIAGRAM):   end;
316042    +      end;
MPRINT(EM_DIAGRAM):   end;
316043    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316044    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
316045    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
316046    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316047    +         end;
MPRINT(EM_DIAGRAM):   end;
316048    +      end;
MPRINT(EM_DIAGRAM):   end;
316049    +   end;
MPRINT(EM_DIAGRAM):   end;
316050    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316051    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
316052    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
316053    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316054    +      end;
MPRINT(EM_DIAGRAM):   end;
316055    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316056    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
316057    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
316058    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
316059    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
316060    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
316061    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316062    +         end;
MPRINT(EM_DIAGRAM):   end;
316063    +      end;
MPRINT(EM_DIAGRAM):   end;
316064    +   end;
MPRINT(EM_DIAGRAM):   end;
316065    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
316066    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316067    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316068    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316069    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316070    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316071    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316072    +   end;
MPRINT(EM_DIAGRAM):   end;
316073    +end;
MPRINT(EM_DIAGRAM):   end;
316074    +
316075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316076    +*** Checking missing input Interval
316077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
316078    +
316079    +IF NMISS(
316080    +   AcceptedCmpTotal ,
316081    +   Frq ,
316082    +   Mnt ,
316083    +   MntMeatProducts ,
316084    +   NumCatalogPurchases ,
316085    +   NumDealsPurchases ,
316086    +   NumWebVisitsMonth ,
316087    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
316088    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
316089    +
316090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316091    +END;
MPRINT(EM_DIAGRAM):   END;
316092    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316093    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
316094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316095    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316096    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
316097    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
316098    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
316099    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
316100    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316101    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
316102    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
316103    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
316104    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316105    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
316106    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316107    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
316108    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316109    +END;
MPRINT(EM_DIAGRAM):   END;
316110    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316111    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
316112    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
316113    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
316114    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
316115    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
316116    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
316117    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
316118    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
316119    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316120    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
316121    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
316122    +   ELSE S_NumCatalogPurchases
316123    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
316124    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
316125    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
316126    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316127    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
316128    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
316129    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316130    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
316131    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
316132    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316133    +END;
MPRINT(EM_DIAGRAM):   END;
316134    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316135    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
316136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316138    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
316139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316140    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316141    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
316142    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
316143    +          +     0.02561809182055 * S_MntMeatProducts
316144    +          +     -0.1793288912734 * S_NumCatalogPurchases
316145    +          +    -0.37563080213093 * S_NumDealsPurchases
316146    +          +    -0.48858578777845 * S_NumWebVisitsMonth
316147    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 *
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 *
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 *
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
316148    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
316149    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
316150    +          +     1.94302986779634 * S_MntMeatProducts
316151    +          +      0.2669037763846 * S_NumCatalogPurchases
316152    +          +     0.29313104233947 * S_NumDealsPurchases
316153    +          +    -0.30591479309812 * S_NumWebVisitsMonth
316154    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 *
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 *
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 *
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
316155    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
316156    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
316157    +          +    -0.76055629383789 * S_MntMeatProducts
316158    +          +    -0.40114802991127 * S_NumCatalogPurchases
316159    +          +    -1.12215966034372 * S_NumDealsPurchases
316160    +          +    -0.30978133586417 * S_NumWebVisitsMonth
316161    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 *
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 *
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 *
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
316162    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
316163    +          +     0.20445663414925 * Marital_StatusMarried
316164    +          +     0.16369117386202 * Marital_StatusSingle
316165    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced +
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle +
0.24678692955726 * Marital_StatusTogether ;
316166    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
316167    +          +     0.09645374599508 * Marital_StatusMarried
316168    +          +     -0.0816282741981 * Marital_StatusSingle
316169    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced +
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle +
0.097160394807 * Marital_StatusTogether ;
316170    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
316171    +          +     -3.9031880089591 * Marital_StatusMarried
316172    +          +      1.6995748309328 * Marital_StatusSingle
316173    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced +
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle +
-0.60356952072267 * Marital_StatusTogether ;
316174    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
316175    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
316176    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
316177    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
316178    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
316179    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
316180    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
316181    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
316182    +END;
MPRINT(EM_DIAGRAM):   END;
316183    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316184    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
316185    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
316186    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
316187    +END;
MPRINT(EM_DIAGRAM):   END;
316188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316189    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
316190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316191    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316192    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
316193    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 +
44.7070762374356 * H1x1_3 ;
316194    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
316195    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
316196    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
316197    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
316198    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
316199    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
316200    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
316201    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
316202    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
316203    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
316204    +END;
MPRINT(EM_DIAGRAM):   END;
316205    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316206    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
316207    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
316208    +END;
MPRINT(EM_DIAGRAM):   END;
316209    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
316210    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
316211    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
316212    +END;
MPRINT(EM_DIAGRAM):   END;
316213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316214    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
316215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316216    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
316217    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
316218    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
316219    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
316220    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
316221    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
316222    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
316223    +END;
MPRINT(EM_DIAGRAM):   END;
316224    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316225    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
316226    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316227    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316228     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316229     quit;
316230     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316231     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316232     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316233     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
316234     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316235     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316236     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316237     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316238     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316239     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME
CREATOR);
316240     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316241     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316242     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316243     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316244     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316246     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
316247     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
316248     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316249     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316250     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316251     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316252     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316253     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316254     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316255     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316256     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316256   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 305 rows and 5 columns.
 
316257     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316258     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316259     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 305 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 305 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316260     filename _pref
316260   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
316261     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316262     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
316263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316264    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
316265    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316266    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
316267    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
316268    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316269     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316270     quit;
316271     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316272     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316273     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316274     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
316275     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316276     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316277     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316279     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316280     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
316281     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316282     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316283     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316284     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316285     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316286     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316287     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
316288     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
316289     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316290     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316292     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316293     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316295     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316296     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316297     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316297   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
316298     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316299     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 309 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316301     filename _pref
316301   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
316302     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316303     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
316304    +
316305    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
316306    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
316306   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
316307    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
316308    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
316309    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
316310    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
316311    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316312     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316313     quit;
316314     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316315     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316316     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316317     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
316318     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316319     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316320     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316321     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316322     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316323     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
316324     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316326     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316327     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316328     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
316330     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
316331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316332     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316333     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316335     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316336     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316337     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316338     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316339     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316340     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316340   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
316341     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316342     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316343     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 348 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316344     filename _pref
316344   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
316345     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316346     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
316347    +
316348    +
316349    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
316350    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
316351    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
316352    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
316353    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
316354    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316355    +
316356    +
316357    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
316358    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
316359    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
316360    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
316361    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
316362    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316363    +
316364    +
316365    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
316366    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
316367    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
316368    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
316369    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
316370    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316371    +
316372    +
316373    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
316374    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
316375    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
316376    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
316377    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
316378    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316379    +
316380    +
316381    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
316382    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
316383    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
316384    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
316385    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
316386    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316387    +
316388    +
316389    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
316390    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
316391    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
316392    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
316393    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
316394    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316395    +
316396    +
316397    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
316398    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
316399    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
316400    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
316401    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
316402    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316403    +
316404    +
316405    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
316406    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
316407    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
316408    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
316409    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
316410    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316411    +if
316412    +_FILTERNORM1 not in ( '.')
316413    + and
316414    +_FILTERNORM2 not in ( '.')
316415    + and
316416    +_FILTERNORM3 not in ( '.')
316417    + and
316418    +_FILTERNORM4 not in ( '.')
316419    + and
316420    +_FILTERNORM5 not in ( '.')
316421    + and
316422    +_FILTERNORM6 not in ( '.')
316423    + and
316424    +_FILTERNORM7 not in ( ' ')
316425    + and
316426    +_FILTERNORM8 not in ( ' ')
316427    +and
316428    +( Dt_Customer ne .)
316429    +and ( Income ne . and (Income<=107000))
316430    +and ( Kidhome ne .)
316431    +and ( MntFishProducts ne .)
316432    +and ( MntFruits ne .)
316433    +and ( MntGoldProds ne .)
316434    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
316435    +and ( MntSweetProducts ne .)
316436    +and ( MntWines ne .)
316437    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
316438    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
316439    +and ( NumStorePurchases ne .)
316440    +and ( NumWebPurchases ne .)
316441    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
316442    +and ( Recency ne .)
316443    +and ( Teenhome ne .)
316444    +and ( Year_Birth ne .)
316445    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
316446    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
316447    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
316448    +end;
MPRINT(EM_DIAGRAM):   end;
316449    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
316450    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316451     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316452     quit;
316453     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316454     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316455     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316456     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
316457     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316458     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316459     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316460     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316462     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
316463     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316464     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316465     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316466     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316467     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316468     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316469     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
316470     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316471     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316472     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316473     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316474     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316475     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316476     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316477     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316478     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316479     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316479   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
316480     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316481     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316482     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 414 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316483     %macro varDept(fcmpdata=,id=);
316484     %global nobs&id scoreFlag&id;
316485     %let scoreFlag&id = 0;
316486     %if &id=1 or ^&fcmpStart %then %do;
316487     proc sort data=&fcmpdata out=_temp&id nodupkey;
316488     by NAME;
316489     where id=&id and LHS in( %let j=1;
316490     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
316491     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
316492     "&var" %let j = %eval(&j+1);
316493     %end;
316494     );
316495     run;
316496     %let dsid = %sysfunc(open(_temp&id));
316497     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316498     %let dsid = %sysfunc(close(&dsid));
316499     %if &&nobs&id %then %do;
316500     %let scoreFlag&id = 1;
316501     %let fcmpStart = 1;
316502     %end;
316503     %else %let fcmpStart = 0;
316504     %end;
316505     %else %do;
316506     proc sort data=&fcmpdata out=_tempid;
316507     where id=&id;
316508     by LHS;
316509     run;
316510     %let dsid = %sysfunc(open(_tempid));
316511     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316512     %let dsid = %sysfunc(close(&dsid));
316513     %if ^&&nobs&id %then %do;
316514     proc datasets lib=work nolist;
316515     delete _tempid;
316516     run;
316517     quit;
316518     %end;
316519     %else %do;
316520     data _tempAll;
316521     set %let j=%eval(&id-1);
316522     %do x=1 %to &j;
316523     %if &&nobs&x %then %do;
316524     _temp&x %end;
316525     %end;
316526     ;
316527     run;
316528     proc sql;
316529     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
316529   ! work._tempid p2 where p.name=p2.lhs;
316530     quit;
316531     data _temp&id;
316532     set _temp&id;
316533     where LHS ne '' and NAME ne '' and Node ne '';
316534     run;
316535     proc datasets lib=work nolist;
316536     delete _tempAll;
316537     run;
316538     %let dsid = %sysfunc(open(_temp&id));
316539     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316540     %let dsid = %sysfunc(close(&dsid));
316541     %if ^&&nobs&id %then %do;
316542     proc datasets lib=work nolist;
316543     delete _temp&id;
316544     run;
316545     quit;
316546     %end;
316547     %else %do;
316548     %let scoreFlag&id = 1;
316549     data _temp&id;
316550     set _temp&id;
316551     where LHS ne NAME and node ne '';
316552     run;
316553     %let dsid = %sysfunc(open(_temp&id));
316554     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
316555     %let dsid = %sysfunc(close(&dsid));
316556     %if ^&&nobs&id %then %do;
316557     proc datasets lib=work nolist;
316558     delete _temp&id;
316559     run;
316560     quit;
316561     %end;
316562     %else %do;
316563     proc sort data=_temp&id nodupkey;
316564     by LHS NAME;
316565     run;
316566     %end;
316567     %end;
316568     %end;
316569     %end;
316570     %mend varDept;
316571     %macro optCode(outdata=fcmpdata);
316572     %global fcmpStart;
316573     %let fcmpStart = 0;
316574     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
316575     %let NumNodes=9;
316576     %do k=1 %to &NumNodes;
316577     %vardept(fcmpdata=&outdata, id=&k);
316578     %end;
316579     %mend optCode;
316580     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 37 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
316581     filename _pref
316581   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
316582     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316583     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
316584    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316585    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
316586    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316587    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
316588    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
316589    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
316590    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
316591    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
316592    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
316593    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
316594    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
316595    +LENGTH _WARN_ $4
316596    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
316597    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
316598    +
316599    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
316600    +
316601    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
316602    +
316603    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
316604    +
316605    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
316606    +
316607    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
316608    +
316609    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
316610    +
316611    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
316612    +
316613    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
316614    +
316615    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
316616    +
316617    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
316618    +
316619    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
316620    +
316621    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
316622    +
316623    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
316624    +
316625    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
316626    +
316627    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
316628    +
316629    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
316630    +
316631    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
316632    +
316633    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
316634    +
316635    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
316636    +
316637    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
316638    +
316639    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
316640    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
316641    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
316642    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
316643    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
316644    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
316645    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
316646    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
316647    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
316648    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316649    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316650    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316651    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316654    +end;
MPRINT(EM_DIAGRAM):   end;
316655    +else do;
MPRINT(EM_DIAGRAM):   else do;
316656    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
316657    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
316658    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316659    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
316660    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
316661    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
316662    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
316663    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
316664    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316665    +         end;
MPRINT(EM_DIAGRAM):   end;
316666    +         else do;
MPRINT(EM_DIAGRAM):   else do;
316667    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
316668    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
316669    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316670    +            end;
MPRINT(EM_DIAGRAM):   end;
316671    +         end;
MPRINT(EM_DIAGRAM):   end;
316672    +      end;
MPRINT(EM_DIAGRAM):   end;
316673    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316674    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
316675    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
316676    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316677    +         end;
MPRINT(EM_DIAGRAM):   end;
316678    +      end;
MPRINT(EM_DIAGRAM):   end;
316679    +   end;
MPRINT(EM_DIAGRAM):   end;
316680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316681    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
316682    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
316683    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316684    +      end;
MPRINT(EM_DIAGRAM):   end;
316685    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316686    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
316687    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
316688    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
316689    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
316690    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
316691    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316692    +         end;
MPRINT(EM_DIAGRAM):   end;
316693    +      end;
MPRINT(EM_DIAGRAM):   end;
316694    +   end;
MPRINT(EM_DIAGRAM):   end;
316695    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
316696    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316697    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316698    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316699    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316700    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316701    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316702    +   end;
MPRINT(EM_DIAGRAM):   end;
316703    +end;
MPRINT(EM_DIAGRAM):   end;
316704    +
316705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316706    +*** Checking missing input Interval
316707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
316708    +
316709    +IF NMISS(
316710    +   AcceptedCmpTotal ,
316711    +   Frq ,
316712    +   Mnt ,
316713    +   MntMeatProducts ,
316714    +   NumCatalogPurchases ,
316715    +   NumDealsPurchases ,
316716    +   NumWebVisitsMonth ,
316717    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
316718    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
316719    +
316720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316721    +END;
MPRINT(EM_DIAGRAM):   END;
316722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316723    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
316724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316725    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316726    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
316727    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
316728    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
316729    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
316730    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316731    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
316732    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
316733    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
316734    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316735    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
316736    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316737    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
316738    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316739    +END;
MPRINT(EM_DIAGRAM):   END;
316740    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316741    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
316742    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
316743    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
316744    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
316745    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
316746    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
316747    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
316748    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
316749    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316750    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
316751    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
316752    +   ELSE S_NumCatalogPurchases
316753    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
316754    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
316755    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
316756    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316757    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
316758    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
316759    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316760    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
316761    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
316762    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316763    +END;
MPRINT(EM_DIAGRAM):   END;
316764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316765    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
316766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316768    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
316769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316770    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316771    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
316772    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
316773    +          +      0.2338265945616 * S_MntMeatProducts
316774    +          +     0.01564313414142 * S_NumCatalogPurchases
316775    +          +    -0.07464304384577 * S_NumDealsPurchases
316776    +          +    -0.08299095200051 * S_NumWebVisitsMonth
316777    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
316778    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
316779    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
316780    +          +     -0.3893643428589 * S_MntMeatProducts
316781    +          +    -0.11487225011852 * S_NumCatalogPurchases
316782    +          +       0.001237145136 * S_NumDealsPurchases
316783    +          +    -0.04234500703321 * S_NumWebVisitsMonth
316784    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
316785    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
316786    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
316787    +          +    -0.27963474874984 * S_MntMeatProducts
316788    +          +     0.01939450840376 * S_NumCatalogPurchases
316789    +          +    -0.03907394757592 * S_NumDealsPurchases
316790    +          +     0.06752842740103 * S_NumWebVisitsMonth
316791    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
316792    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
316793    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
316794    +          +     0.09842717305515 * S_MntMeatProducts
316795    +          +     0.48040050668836 * S_NumCatalogPurchases
316796    +          +     0.55911507039756 * S_NumDealsPurchases
316797    +          +     0.35441361757916 * S_NumWebVisitsMonth
316798    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
316799    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
316800    +          +     0.13423943689575 * Marital_StatusMarried
316801    +          +    -0.01496857872487 * Marital_StatusSingle
316802    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
316803    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
316804    +          +     0.03005244373637 * Marital_StatusMarried
316805    +          +    -0.06891231360799 * Marital_StatusSingle
316806    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
316807    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
316808    +          +     0.01694145364157 * Marital_StatusMarried
316809    +          +    -0.05183794192194 * Marital_StatusSingle
316810    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
316811    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
316812    +          +     0.44185773223966 * Marital_StatusMarried
316813    +          +     -0.6351733171702 * Marital_StatusSingle
316814    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
316815    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
316816    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
316817    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
316818    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
316819    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
316820    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
316821    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
316822    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
316823    +END;
MPRINT(EM_DIAGRAM):   END;
316824    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316825    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
316826    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
316827    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
316828    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
316829    +END;
MPRINT(EM_DIAGRAM):   END;
316830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316831    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
316832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316833    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316834    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
316835    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
316836    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
316837    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
316838    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
316839    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
316840    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
316841    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
316842    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
316843    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
316844    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
316845    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
316846    +END;
MPRINT(EM_DIAGRAM):   END;
316847    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316848    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
316849    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
316850    +END;
MPRINT(EM_DIAGRAM):   END;
316851    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
316852    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
316853    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
316854    +END;
MPRINT(EM_DIAGRAM):   END;
316855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316856    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
316857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316858    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
316859    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
316860    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
316861    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
316862    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
316863    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
316864    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
316865    +END;
MPRINT(EM_DIAGRAM):   END;
316866    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316867    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
316868    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316869    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316870     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316871     quit;
316872     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316873     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316874     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316875     retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
316876     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316877     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316878     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316881     proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME
CREATOR);
316882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316883     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316884     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316885     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316886     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316887     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316888     proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
316889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316890     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316893     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316894     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316895     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316896     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316897     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316898     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316898   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 326 rows and 5 columns.
 
316899     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316900     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 326 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 326 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316902     filename _pref
316902   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
316903     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316904     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
316905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316906    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
316907    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316908    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
316909    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
316910    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316911     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316912     quit;
316913     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316914     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316915     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316916     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
316917     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316918     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316919     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316920     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316921     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316922     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
316923     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316924     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316925     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316926     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316927     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316928     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316929     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
316930     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
316931     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316933     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316934     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316935     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316936     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316937     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316938     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316939     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316939   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
316940     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316941     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316942     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 330 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316943     filename _pref
316943   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
316944     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316945     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
316946    +
316947    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
316948    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
316948   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
316949    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
316950    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
316951    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
316952    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
316953    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316954     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
316955     quit;
316956     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
316957     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
316958     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
316959     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
316960     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
316961     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316962     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
316963     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316965     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
316966     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316968     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316969     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
316970     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
316971     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316972     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
316973     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316974     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
316975     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316976     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316977     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
316978     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
316979     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
316980     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
316981     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
316982     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
316982   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
316983     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316984     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
316985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 369 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
316986     filename _pref
316986   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
316987     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
316988     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
316989    +
316990    +
316991    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
316992    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
316993    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
316994    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
316995    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
316996    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
316997    +
316998    +
316999    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
317000    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
317001    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
317002    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
317003    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
317004    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317005    +
317006    +
317007    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
317008    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
317009    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
317010    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
317011    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
317012    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317013    +
317014    +
317015    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
317016    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
317017    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
317018    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
317019    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
317020    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317021    +
317022    +
317023    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
317024    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
317025    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
317026    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
317027    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
317028    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317029    +
317030    +
317031    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
317032    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
317033    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
317034    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
317035    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
317036    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317037    +
317038    +
317039    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
317040    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
317041    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
317042    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
317043    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
317044    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317045    +
317046    +
317047    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
317048    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
317049    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
317050    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
317051    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
317052    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317053    +if
317054    +_FILTERNORM1 not in ( '.')
317055    + and
317056    +_FILTERNORM2 not in ( '.')
317057    + and
317058    +_FILTERNORM3 not in ( '.')
317059    + and
317060    +_FILTERNORM4 not in ( '.')
317061    + and
317062    +_FILTERNORM5 not in ( '.')
317063    + and
317064    +_FILTERNORM6 not in ( '.')
317065    + and
317066    +_FILTERNORM7 not in ( ' ')
317067    + and
317068    +_FILTERNORM8 not in ( ' ')
317069    +and
317070    +( Dt_Customer ne .)
317071    +and ( Income ne . and (Income<=107000))
317072    +and ( Kidhome ne .)
317073    +and ( MntFishProducts ne .)
317074    +and ( MntFruits ne .)
317075    +and ( MntGoldProds ne .)
317076    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
317077    +and ( MntSweetProducts ne .)
317078    +and ( MntWines ne .)
317079    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
317080    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
317081    +and ( NumStorePurchases ne .)
317082    +and ( NumWebPurchases ne .)
317083    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
317084    +and ( Recency ne .)
317085    +and ( Teenhome ne .)
317086    +and ( Year_Birth ne .)
317087    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
317088    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
317089    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
317090    +end;
MPRINT(EM_DIAGRAM):   end;
317091    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
317092    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317093     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
317094     quit;
317095     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
317096     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
317097     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
317098     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
317099     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
317100     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
317101     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
317102     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317104     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
317105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317106     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317107     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317108     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
317109     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
317110     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317111     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
317112     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317113     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
317114     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317116     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317117     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
317118     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317119     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317120     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317121     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
317121   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
317122     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317123     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
317124     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317125     %macro varDept(fcmpdata=,id=);
317126     %global nobs&id scoreFlag&id;
317127     %let scoreFlag&id = 0;
317128     %if &id=1 or ^&fcmpStart %then %do;
317129     proc sort data=&fcmpdata out=_temp&id nodupkey;
317130     by NAME;
317131     where id=&id and LHS in( %let j=1;
317132     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
317133     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
317134     "&var" %let j = %eval(&j+1);
317135     %end;
317136     );
317137     run;
317138     %let dsid = %sysfunc(open(_temp&id));
317139     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317140     %let dsid = %sysfunc(close(&dsid));
317141     %if &&nobs&id %then %do;
317142     %let scoreFlag&id = 1;
317143     %let fcmpStart = 1;
317144     %end;
317145     %else %let fcmpStart = 0;
317146     %end;
317147     %else %do;
317148     proc sort data=&fcmpdata out=_tempid;
317149     where id=&id;
317150     by LHS;
317151     run;
317152     %let dsid = %sysfunc(open(_tempid));
317153     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317154     %let dsid = %sysfunc(close(&dsid));
317155     %if ^&&nobs&id %then %do;
317156     proc datasets lib=work nolist;
317157     delete _tempid;
317158     run;
317159     quit;
317160     %end;
317161     %else %do;
317162     data _tempAll;
317163     set %let j=%eval(&id-1);
317164     %do x=1 %to &j;
317165     %if &&nobs&x %then %do;
317166     _temp&x %end;
317167     %end;
317168     ;
317169     run;
317170     proc sql;
317171     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
317171   ! work._tempid p2 where p.name=p2.lhs;
317172     quit;
317173     data _temp&id;
317174     set _temp&id;
317175     where LHS ne '' and NAME ne '' and Node ne '';
317176     run;
317177     proc datasets lib=work nolist;
317178     delete _tempAll;
317179     run;
317180     %let dsid = %sysfunc(open(_temp&id));
317181     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317182     %let dsid = %sysfunc(close(&dsid));
317183     %if ^&&nobs&id %then %do;
317184     proc datasets lib=work nolist;
317185     delete _temp&id;
317186     run;
317187     quit;
317188     %end;
317189     %else %do;
317190     %let scoreFlag&id = 1;
317191     data _temp&id;
317192     set _temp&id;
317193     where LHS ne NAME and node ne '';
317194     run;
317195     %let dsid = %sysfunc(open(_temp&id));
317196     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317197     %let dsid = %sysfunc(close(&dsid));
317198     %if ^&&nobs&id %then %do;
317199     proc datasets lib=work nolist;
317200     delete _temp&id;
317201     run;
317202     quit;
317203     %end;
317204     %else %do;
317205     proc sort data=_temp&id nodupkey;
317206     by LHS NAME;
317207     run;
317208     %end;
317209     %end;
317210     %end;
317211     %end;
317212     %mend varDept;
317213     %macro optCode(outdata=fcmpdata);
317214     %global fcmpStart;
317215     %let fcmpStart = 0;
317216     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
317217     %let NumNodes=9;
317218     %do k=1 %to &NumNodes;
317219     %vardept(fcmpdata=&outdata, id=&k);
317220     %end;
317221     %mend optCode;
317222     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
317223     filename _pref
317223   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
317224     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
317225     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas.
317226    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
317227    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
317228    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
317229    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
317230    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
317231    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
317232    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
317233    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
317234    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
317235    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
317236    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
317237    +LENGTH _WARN_ $4
317238    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
317239    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
317240    +
317241    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
317242    +
317243    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
317244    +
317245    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
317246    +
317247    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
317248    +
317249    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
317250    +
317251    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
317252    +
317253    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
317254    +
317255    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
317256    +
317257    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
317258    +
317259    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
317260    +
317261    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
317262    +
317263    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
317264    +
317265    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
317266    +
317267    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
317268    +
317269    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
317270    +
317271    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
317272    +
317273    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
317274    +
317275    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
317276    +
317277    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
317278    +
317279    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
317280    +
317281    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
317282    +
317283    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
317284    +
317285    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
317286    +
317287    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
317288    +
317289    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
317290    +
317291    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
317292    +
317293    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
317294    +
317295    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
317296    +
317297    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
317298    +
317299    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
317300    +
317301    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
317302    +
317303    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
317304    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
317305    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
317306    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
317307    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
317308    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
317309    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
317310    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
317311    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
317312    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
317313    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
317314    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
317315    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
317316    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
317317    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317318    +end;
MPRINT(EM_DIAGRAM):   end;
317319    +else do;
MPRINT(EM_DIAGRAM):   else do;
317320    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
317321    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
317322    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
317323    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
317324    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
317325    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
317326    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
317327    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
317328    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317329    +         end;
MPRINT(EM_DIAGRAM):   end;
317330    +         else do;
MPRINT(EM_DIAGRAM):   else do;
317331    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
317332    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
317333    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317334    +            end;
MPRINT(EM_DIAGRAM):   end;
317335    +         end;
MPRINT(EM_DIAGRAM):   end;
317336    +      end;
MPRINT(EM_DIAGRAM):   end;
317337    +      else do;
MPRINT(EM_DIAGRAM):   else do;
317338    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
317339    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
317340    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317341    +         end;
MPRINT(EM_DIAGRAM):   end;
317342    +      end;
MPRINT(EM_DIAGRAM):   end;
317343    +   end;
MPRINT(EM_DIAGRAM):   end;
317344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
317345    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
317346    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
317347    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317348    +      end;
MPRINT(EM_DIAGRAM):   end;
317349    +      else do;
MPRINT(EM_DIAGRAM):   else do;
317350    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
317351    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
317352    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
317353    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
317354    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
317355    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
317356    +         end;
MPRINT(EM_DIAGRAM):   end;
317357    +      end;
MPRINT(EM_DIAGRAM):   end;
317358    +   end;
MPRINT(EM_DIAGRAM):   end;
317359    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
317360    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
317361    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
317362    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
317363    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
317364    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
317365    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317366    +   end;
MPRINT(EM_DIAGRAM):   end;
317367    +end;
MPRINT(EM_DIAGRAM):   end;
317368    +
317369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317370    +*** Checking missing input Interval
317371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
317372    +
317373    +IF NMISS(
317374    +   AcceptedCmpTotal ,
317375    +   Frq ,
317376    +   Mnt ,
317377    +   MntMeatProducts ,
317378    +   NumCatalogPurchases ,
317379    +   NumDealsPurchases ,
317380    +   NumWebVisitsMonth ,
317381    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
317382    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
317383    +
317384    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
317385    +END;
MPRINT(EM_DIAGRAM):   END;
317386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317387    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
317388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317389    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317390    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
317391    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
317392    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
317393    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
317394    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
317395    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
317396    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
317397    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
317398    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
317399    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
317400    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
317401    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
317402    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
317403    +END;
MPRINT(EM_DIAGRAM):   END;
317404    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317405    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
317406    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
317407    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
317408    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
317409    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
317410    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
317411    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
317412    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
317413    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
317414    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
317415    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
317416    +   ELSE S_NumCatalogPurchases
317417    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
317418    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
317419    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
317420    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
317421    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
317422    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
317423    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
317424    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
317425    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
317426    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
317427    +END;
MPRINT(EM_DIAGRAM):   END;
317428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317429    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
317430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317432    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
317433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317434    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317435    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
317436    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
317437    +          +    -1.92258561684999 * S_MntMeatProducts
317438    +          +     -1.7098915194593 * S_NumCatalogPurchases
317439    +          +    -0.73092398706652 * S_NumDealsPurchases
317440    +          +    -1.52371325097768 * S_NumWebVisitsMonth
317441    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 *
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 *
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 *
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
317442    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
317443    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
317444    +          +     3.63686708458831 * S_MntMeatProducts
317445    +          +     0.32632650897658 * S_NumCatalogPurchases
317446    +          +     1.27820262549135 * S_NumDealsPurchases
317447    +          +    -0.18941034658667 * S_NumWebVisitsMonth
317448    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 *
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 *
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 *
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
317449    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
317450    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
317451    +          +    -0.10252809999866 * S_MntMeatProducts
317452    +          +    -2.01730745054613 * S_NumCatalogPurchases
317453    +          +     0.36276273056202 * S_NumDealsPurchases
317454    +          +    -2.03441379397145 * S_NumWebVisitsMonth
317455    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 *
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 *
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 *
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
317456    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
317457    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
317458    +          +     8.03567059273376 * S_MntMeatProducts
317459    +          +     2.16664649845379 * S_NumCatalogPurchases
317460    +          +     0.84009978401032 * S_NumDealsPurchases
317461    +          +     0.11354933533503 * S_NumWebVisitsMonth
317462    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 *
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 *
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 *
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
317463    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
317464    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
317465    +          +     1.87107978843927 * S_MntMeatProducts
317466    +          +    -0.31123291719979 * S_NumCatalogPurchases
317467    +          +    -2.80886037303887 * S_NumDealsPurchases
317468    +          +     0.08829426076164 * S_NumWebVisitsMonth
317469    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 *
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 *
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
317470    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
317471    +          +     0.50838467240268 * Marital_StatusMarried
317472    +          +    -0.57765911295879 * Marital_StatusSingle
317473    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced +
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle +
-0.24222335065155 * Marital_StatusTogether ;
317474    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
317475    +          +     0.03531168852657 * Marital_StatusMarried
317476    +          +    -0.34417109081648 * Marital_StatusSingle
317477    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced +
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle +
-0.31315325265885 * Marital_StatusTogether ;
317478    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
317479    +          +      1.9516301625913 * Marital_StatusMarried
317480    +          +    -0.24904237582097 * Marital_StatusSingle
317481    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced +
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle +
1.51668241109596 * Marital_StatusTogether ;
317482    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
317483    +          +     0.06718550412505 * Marital_StatusMarried
317484    +          +    -0.16735434131197 * Marital_StatusSingle
317485    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced +
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle +
1.06963270761532 * Marital_StatusTogether ;
317486    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
317487    +          +    -1.79498797741807 * Marital_StatusMarried
317488    +          +     2.86341746904333 * Marital_StatusSingle
317489    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced +
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle +
-2.44061593695879 * Marital_StatusTogether ;
317490    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
317491    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
317492    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
317493    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
317494    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
317495    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317496    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317497    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
317498    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
317499    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
317500    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
317501    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
317502    +END;
MPRINT(EM_DIAGRAM):   END;
317503    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317504    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
317505    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
317506    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
317507    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
317508    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
317509    +END;
MPRINT(EM_DIAGRAM):   END;
317510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317511    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
317512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317514    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
317515    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
317516    +          +    -0.19914740985847 * S_MntMeatProducts
317517    +          +    -0.96920717464092 * S_NumCatalogPurchases
317518    +          +    -1.68508588177508 * S_NumDealsPurchases
317519    +          +     -0.9404284924488 * S_NumWebVisitsMonth
317520    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 *
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 *
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
317521    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
317522    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
317523    +          +    -1.60286606361912 * S_MntMeatProducts
317524    +          +    -0.05010796315816 * S_NumCatalogPurchases
317525    +          +      1.1380574488234 * S_NumDealsPurchases
317526    +          +     0.25426721345204 * S_NumWebVisitsMonth
317527    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 *
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 *
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
317528    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
317529    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
317530    +          +     2.58979830897092 * S_MntMeatProducts
317531    +          +      1.2569773545009 * S_NumCatalogPurchases
317532    +          +     0.21119951191653 * S_NumDealsPurchases
317533    +          +    -0.40993456334326 * S_NumWebVisitsMonth
317534    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 *
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 *
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 *
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
317535    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
317536    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
317537    +          +     1.58324428521578 * S_MntMeatProducts
317538    +          +    -0.64140579988939 * S_NumCatalogPurchases
317539    +          +    -0.07557073365385 * S_NumDealsPurchases
317540    +          +     0.27159109297915 * S_NumWebVisitsMonth
317541    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 *
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 *
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 *
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
317542    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
317543    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
317544    +          +     0.02133290318048 * S_MntMeatProducts
317545    +          +    -0.37682732019302 * S_NumCatalogPurchases
317546    +          +     2.57483962426003 * S_NumDealsPurchases
317547    +          +    -0.76651867011773 * S_NumWebVisitsMonth
317548    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 *
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 *
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 *
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
317549    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
317550    +          +     1.00798219323102 * Marital_StatusMarried
317551    +          +     -1.3878630687005 * Marital_StatusSingle
317552    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced +
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle +
0.38993646858937 * Marital_StatusTogether ;
317553    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
317554    +          +    -0.99149540204741 * Marital_StatusMarried
317555    +          +    -0.22772928542301 * Marital_StatusSingle
317556    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced +
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle +
2.92746205796719 * Marital_StatusTogether ;
317557    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
317558    +          +     1.54170826840021 * Marital_StatusMarried
317559    +          +    -0.09937587953829 * Marital_StatusSingle
317560    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced +
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle +
0.56302999728519 * Marital_StatusTogether ;
317561    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
317562    +          +    -0.48775794259019 * Marital_StatusMarried
317563    +          +     0.87075561905397 * Marital_StatusSingle
317564    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced +
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle +
0.04810416118778 * Marital_StatusTogether ;
317565    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
317566    +          +     0.01260332236695 * Marital_StatusMarried
317567    +          +     1.18815076116703 * Marital_StatusSingle
317568    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced +
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle +
0.48437203261339 * Marital_StatusTogether ;
317569    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
317570    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
317571    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
317572    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
317573    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
317574    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317575    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317576    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
317577    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
317578    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
317579    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
317580    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
317581    +END;
MPRINT(EM_DIAGRAM):   END;
317582    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317583    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
317584    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
317585    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
317586    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
317587    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
317588    +END;
MPRINT(EM_DIAGRAM):   END;
317589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317590    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
317591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317592    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317593    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
317594    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
317595    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 +
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
317596    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
317597    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
317598    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 +
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
317599    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
317600    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
317601    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 +
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
317602    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
317603    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
317604    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 +
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
317605    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
317606    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
317607    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 +
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
317608    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
317609    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
317610    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
317611    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
317612    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
317613    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
317614    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
317615    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
317616    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
317617    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
317618    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
317619    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
317620    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
317621    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
317622    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
317623    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
317624    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
317625    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
317626    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
317627    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
317628    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
317629    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
317630    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
317631    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
317632    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
317633    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
317634    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
317635    +END;
MPRINT(EM_DIAGRAM):   END;
317636    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317637    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
317638    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
317639    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
317640    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
317641    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
317642    +END;
MPRINT(EM_DIAGRAM):   END;
317643    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317644    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
317645    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317646    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
317647    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
317648    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
317649    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 +
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
317650    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
317651    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
317652    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
317653    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
317654    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
317655    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
317656    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
317657    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
317658    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
317659    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
317660    +END;
MPRINT(EM_DIAGRAM):   END;
317661    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
317662    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
317663    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
317664    +END;
MPRINT(EM_DIAGRAM):   END;
317665    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
317666    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
317667    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
317668    +END;
MPRINT(EM_DIAGRAM):   END;
317669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317670    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
317671    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317672    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
317673    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
317674    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
317675    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
317676    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
317677    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
317678    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
317679    +END;
MPRINT(EM_DIAGRAM):   END;
317680    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
317681    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
317682    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
317683    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317684     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
317685     quit;
317686     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
317687     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
317688     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
317689     retain ID 2 Node "AutoNeural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural34";
317690     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
317691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1777 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1777 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317692     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
317693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317694     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1777 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1777 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317695     proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME
CREATOR);
317696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317698     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317699     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
317700     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
317701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317702     proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
317703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
317704     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
317705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317706     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317707     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317708     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
317709     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317710     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317711     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317712     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
317712   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 765 rows and 5 columns.
 
317713     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317714     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
317715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 765 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 765 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317716     filename _pref
317716   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
317717     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
317718     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
317719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
317720    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
317721    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
317722    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
317723    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
317724    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317725     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
317726     quit;
317727     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
317728     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
317729     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
317730     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
317731     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
317732     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317733     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
317734     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317735     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317736     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
317737     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317738     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317739     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317740     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
317741     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
317742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317743     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
317744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317745     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
317746     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317747     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317748     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317749     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
317750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317751     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317752     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317753     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
317753   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
317754     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317755     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
317756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 769 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317757     filename _pref
317757   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
317758     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
317759     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
317760    +
317761    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
317762    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
317762   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
317763    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
317764    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
317765    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
317766    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
317767    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317768     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
317769     quit;
317770     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
317771     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
317772     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
317773     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
317774     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
317775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317776     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
317777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317779     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
317780     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317782     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317783     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
317784     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
317785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317786     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
317787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317788     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
317789     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317791     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317792     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
317793     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317794     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317795     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317796     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
317796   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
317797     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317798     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
317799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 808 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317800     filename _pref
317800   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
317801     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
317802     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
317803    +
317804    +
317805    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
317806    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
317807    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
317808    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
317809    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
317810    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317811    +
317812    +
317813    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
317814    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
317815    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
317816    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
317817    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
317818    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317819    +
317820    +
317821    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
317822    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
317823    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
317824    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
317825    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
317826    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317827    +
317828    +
317829    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
317830    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
317831    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
317832    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
317833    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
317834    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317835    +
317836    +
317837    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
317838    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
317839    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
317840    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
317841    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
317842    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317843    +
317844    +
317845    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
317846    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
317847    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
317848    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
317849    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
317850    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317851    +
317852    +
317853    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
317854    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
317855    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
317856    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
317857    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
317858    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317859    +
317860    +
317861    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
317862    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
317863    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
317864    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
317865    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
317866    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
317867    +if
317868    +_FILTERNORM1 not in ( '.')
317869    + and
317870    +_FILTERNORM2 not in ( '.')
317871    + and
317872    +_FILTERNORM3 not in ( '.')
317873    + and
317874    +_FILTERNORM4 not in ( '.')
317875    + and
317876    +_FILTERNORM5 not in ( '.')
317877    + and
317878    +_FILTERNORM6 not in ( '.')
317879    + and
317880    +_FILTERNORM7 not in ( ' ')
317881    + and
317882    +_FILTERNORM8 not in ( ' ')
317883    +and
317884    +( Dt_Customer ne .)
317885    +and ( Income ne . and (Income<=107000))
317886    +and ( Kidhome ne .)
317887    +and ( MntFishProducts ne .)
317888    +and ( MntFruits ne .)
317889    +and ( MntGoldProds ne .)
317890    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
317891    +and ( MntSweetProducts ne .)
317892    +and ( MntWines ne .)
317893    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
317894    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
317895    +and ( NumStorePurchases ne .)
317896    +and ( NumWebPurchases ne .)
317897    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
317898    +and ( Recency ne .)
317899    +and ( Teenhome ne .)
317900    +and ( Year_Birth ne .)
317901    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
317902    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
317903    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
317904    +end;
MPRINT(EM_DIAGRAM):   end;
317905    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
317906    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317907     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
317908     quit;
317909     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
317910     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
317911     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
317912     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
317913     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
317914     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317915     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
317916     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317917     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317918     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
317919     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317921     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317922     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
317923     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
317924     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317925     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
317926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
317927     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
317928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
317930     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
317931     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
317932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
317933     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317934     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
317935     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
317935   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
317936     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317937     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
317938     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 874 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
317939     %macro varDept(fcmpdata=,id=);
317940     %global nobs&id scoreFlag&id;
317941     %let scoreFlag&id = 0;
317942     %if &id=1 or ^&fcmpStart %then %do;
317943     proc sort data=&fcmpdata out=_temp&id nodupkey;
317944     by NAME;
317945     where id=&id and LHS in( %let j=1;
317946     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
317947     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
317948     "&var" %let j = %eval(&j+1);
317949     %end;
317950     );
317951     run;
317952     %let dsid = %sysfunc(open(_temp&id));
317953     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317954     %let dsid = %sysfunc(close(&dsid));
317955     %if &&nobs&id %then %do;
317956     %let scoreFlag&id = 1;
317957     %let fcmpStart = 1;
317958     %end;
317959     %else %let fcmpStart = 0;
317960     %end;
317961     %else %do;
317962     proc sort data=&fcmpdata out=_tempid;
317963     where id=&id;
317964     by LHS;
317965     run;
317966     %let dsid = %sysfunc(open(_tempid));
317967     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317968     %let dsid = %sysfunc(close(&dsid));
317969     %if ^&&nobs&id %then %do;
317970     proc datasets lib=work nolist;
317971     delete _tempid;
317972     run;
317973     quit;
317974     %end;
317975     %else %do;
317976     data _tempAll;
317977     set %let j=%eval(&id-1);
317978     %do x=1 %to &j;
317979     %if &&nobs&x %then %do;
317980     _temp&x %end;
317981     %end;
317982     ;
317983     run;
317984     proc sql;
317985     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
317985   ! work._tempid p2 where p.name=p2.lhs;
317986     quit;
317987     data _temp&id;
317988     set _temp&id;
317989     where LHS ne '' and NAME ne '' and Node ne '';
317990     run;
317991     proc datasets lib=work nolist;
317992     delete _tempAll;
317993     run;
317994     %let dsid = %sysfunc(open(_temp&id));
317995     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
317996     %let dsid = %sysfunc(close(&dsid));
317997     %if ^&&nobs&id %then %do;
317998     proc datasets lib=work nolist;
317999     delete _temp&id;
318000     run;
318001     quit;
318002     %end;
318003     %else %do;
318004     %let scoreFlag&id = 1;
318005     data _temp&id;
318006     set _temp&id;
318007     where LHS ne NAME and node ne '';
318008     run;
318009     %let dsid = %sysfunc(open(_temp&id));
318010     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
318011     %let dsid = %sysfunc(close(&dsid));
318012     %if ^&&nobs&id %then %do;
318013     proc datasets lib=work nolist;
318014     delete _temp&id;
318015     run;
318016     quit;
318017     %end;
318018     %else %do;
318019     proc sort data=_temp&id nodupkey;
318020     by LHS NAME;
318021     run;
318022     %end;
318023     %end;
318024     %end;
318025     %end;
318026     %mend varDept;
318027     %macro optCode(outdata=fcmpdata);
318028     %global fcmpStart;
318029     %let fcmpStart = 0;
318030     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
318031     %let NumNodes=9;
318032     %do k=1 %to &NumNodes;
318033     %vardept(fcmpdata=&outdata, id=&k);
318034     %end;
318035     %mend optCode;
318036     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 61 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
318037     filename _pref
318037   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
318038     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318039     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas.
318040    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
318041    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
318042    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
318043    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
318044    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
318045    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
318046    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
318047    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
318048    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
318049    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
318050    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
318051    +LENGTH _WARN_ $4
318052    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
318053    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
318054    +
318055    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
318056    +
318057    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
318058    +
318059    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
318060    +
318061    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
318062    +
318063    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
318064    +
318065    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
318066    +
318067    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
318068    +
318069    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
318070    +
318071    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
318072    +
318073    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
318074    +
318075    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
318076    +
318077    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
318078    +
318079    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
318080    +
318081    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
318082    +
318083    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
318084    +
318085    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
318086    +
318087    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
318088    +
318089    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
318090    +
318091    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
318092    +
318093    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
318094    +
318095    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
318096    +
318097    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
318098    +
318099    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
318100    +
318101    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
318102    +
318103    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
318104    +
318105    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
318106    +
318107    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
318108    +
318109    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
318110    +
318111    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
318112    +
318113    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
318114    +
318115    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
318116    +
318117    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
318118    +
318119    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
318120    +
318121    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
318122    +
318123    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
318124    +
318125    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
318126    +
318127    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
318128    +
318129    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
318130    +
318131    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
318132    +
318133    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
318134    +
318135    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
318136    +
318137    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
318138    +
318139    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
318140    +
318141    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
318142    +
318143    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
318144    +
318145    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
318146    +
318147    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
318148    +
318149    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
318150    +
318151    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
318152    +
318153    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
318154    +
318155    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
318156    +
318157    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
318158    +
318159    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
318160    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
318161    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
318162    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
318163    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
318164    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
318165    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
318166    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
318167    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
318168    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
318169    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
318170    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
318171    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
318172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
318173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318174    +end;
MPRINT(EM_DIAGRAM):   end;
318175    +else do;
MPRINT(EM_DIAGRAM):   else do;
318176    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
318177    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
318178    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
318179    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
318180    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
318181    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
318182    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
318183    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
318184    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318185    +         end;
MPRINT(EM_DIAGRAM):   end;
318186    +         else do;
MPRINT(EM_DIAGRAM):   else do;
318187    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
318188    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
318189    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318190    +            end;
MPRINT(EM_DIAGRAM):   end;
318191    +         end;
MPRINT(EM_DIAGRAM):   end;
318192    +      end;
MPRINT(EM_DIAGRAM):   end;
318193    +      else do;
MPRINT(EM_DIAGRAM):   else do;
318194    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
318195    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
318196    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318197    +         end;
MPRINT(EM_DIAGRAM):   end;
318198    +      end;
MPRINT(EM_DIAGRAM):   end;
318199    +   end;
MPRINT(EM_DIAGRAM):   end;
318200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
318201    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
318202    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
318203    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318204    +      end;
MPRINT(EM_DIAGRAM):   end;
318205    +      else do;
MPRINT(EM_DIAGRAM):   else do;
318206    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
318207    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
318208    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
318209    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
318210    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
318211    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
318212    +         end;
MPRINT(EM_DIAGRAM):   end;
318213    +      end;
MPRINT(EM_DIAGRAM):   end;
318214    +   end;
MPRINT(EM_DIAGRAM):   end;
318215    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
318216    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
318217    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
318218    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
318219    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
318220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
318221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318222    +   end;
MPRINT(EM_DIAGRAM):   end;
318223    +end;
MPRINT(EM_DIAGRAM):   end;
318224    +
318225    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318226    +*** Checking missing input Interval
318227    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
318228    +
318229    +IF NMISS(
318230    +   AcceptedCmpTotal ,
318231    +   Frq ,
318232    +   Mnt ,
318233    +   MntMeatProducts ,
318234    +   NumCatalogPurchases ,
318235    +   NumDealsPurchases ,
318236    +   NumWebVisitsMonth ,
318237    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
318238    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
318239    +
318240    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
318241    +END;
MPRINT(EM_DIAGRAM):   END;
318242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318243    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
318244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318245    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318246    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
318247    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
318248    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
318249    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
318250    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
318251    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
318252    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
318253    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
318254    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
318255    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
318256    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
318257    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
318258    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
318259    +END;
MPRINT(EM_DIAGRAM):   END;
318260    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318261    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
318262    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
318263    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
318264    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
318265    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
318266    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
318267    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
318268    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
318269    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
318270    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
318271    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
318272    +   ELSE S_NumCatalogPurchases
318273    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
318274    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
318275    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
318276    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
318277    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
318278    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
318279    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
318280    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
318281    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
318282    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
318283    +END;
MPRINT(EM_DIAGRAM):   END;
318284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318285    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
318286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318288    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
318289    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318290    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318291    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
318292    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
318293    +          +     2.79168320854924 * S_MntMeatProducts
318294    +          +    -1.09894266401589 * S_NumCatalogPurchases
318295    +          +    -0.32966417347551 * S_NumDealsPurchases
318296    +          +    -0.72195034767343 * S_NumWebVisitsMonth
318297    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
318298    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
318299    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
318300    +          +     9.02469430152189 * S_MntMeatProducts
318301    +          +     1.42644521887241 * S_NumCatalogPurchases
318302    +          +      0.6475058577302 * S_NumDealsPurchases
318303    +          +     0.08123225110233 * S_NumWebVisitsMonth
318304    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
318305    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
318306    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
318307    +          +     5.40567027331821 * S_MntMeatProducts
318308    +          +     0.21404551755506 * S_NumCatalogPurchases
318309    +          +    -3.79184634796332 * S_NumDealsPurchases
318310    +          +     0.64355102802571 * S_NumWebVisitsMonth
318311    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
318312    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
318313    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
318314    +          +     2.35287601364019 * S_MntMeatProducts
318315    +          +    -3.27198648531912 * S_NumCatalogPurchases
318316    +          +    -0.16046880718311 * S_NumDealsPurchases
318317    +          +     -3.7025327830273 * S_NumWebVisitsMonth
318318    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
318319    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
318320    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
318321    +          +     8.39312647460766 * S_MntMeatProducts
318322    +          +     3.07026872536137 * S_NumCatalogPurchases
318323    +          +     2.03045608124213 * S_NumDealsPurchases
318324    +          +     3.86452915398414 * S_NumWebVisitsMonth
318325    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
318326    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
318327    +          +     0.14979485299347 * Marital_StatusMarried
318328    +          +    -0.09166445391312 * Marital_StatusSingle
318329    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
318330    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
318331    +          +      0.1646484112393 * Marital_StatusMarried
318332    +          +     0.01074681811884 * Marital_StatusSingle
318333    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
318334    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
318335    +          +    -0.28313626645981 * Marital_StatusMarried
318336    +          +      2.8257446964988 * Marital_StatusSingle
318337    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
318338    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
318339    +          +     3.05775024202559 * Marital_StatusMarried
318340    +          +    -0.23539571945671 * Marital_StatusSingle
318341    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
318342    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
318343    +          +    -0.48359916542157 * Marital_StatusMarried
318344    +          +    -1.64182316823237 * Marital_StatusSingle
318345    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
318346    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
318347    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
318348    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
318349    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
318350    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
318351    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
318352    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
318353    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
318354    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
318355    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
318356    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
318357    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
318358    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
318359    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
318360    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
318361    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
318362    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
318363    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
318364    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
318365    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
318366    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
318367    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
318368    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
318369    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
318370    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
318371    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
318372    +END;
MPRINT(EM_DIAGRAM):   END;
318373    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318374    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
318375    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
318376    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
318377    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
318378    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
318379    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
318380    +END;
MPRINT(EM_DIAGRAM):   END;
318381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318382    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
318383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318384    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318385    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
318386    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
318387    +          +     0.55999885697493 * S_MntMeatProducts
318388    +          +      0.2225207563207 * S_NumCatalogPurchases
318389    +          +     -1.0233439835205 * S_NumDealsPurchases
318390    +          +    -0.35430585878397 * S_NumWebVisitsMonth
318391    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
318392    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
318393    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
318394    +          +    -1.04508919964747 * S_MntMeatProducts
318395    +          +     -0.6758665249546 * S_NumCatalogPurchases
318396    +          +    -0.24215201937497 * S_NumDealsPurchases
318397    +          +    -1.02736823453312 * S_NumWebVisitsMonth
318398    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
318399    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
318400    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
318401    +          +    -3.97854305593999 * S_MntMeatProducts
318402    +          +    -2.05331728407593 * S_NumCatalogPurchases
318403    +          +    -0.48841403720827 * S_NumDealsPurchases
318404    +          +     0.25411498590567 * S_NumWebVisitsMonth
318405    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
318406    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
318407    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
318408    +          +     -0.7071400781557 * S_MntMeatProducts
318409    +          +     1.20780208787296 * S_NumCatalogPurchases
318410    +          +    -0.58152407834402 * S_NumDealsPurchases
318411    +          +     2.15567925539399 * S_NumWebVisitsMonth
318412    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
318413    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
318414    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
318415    +          +    -1.07023271439686 * S_MntMeatProducts
318416    +          +     0.31952847185507 * S_NumCatalogPurchases
318417    +          +     0.97232557455358 * S_NumDealsPurchases
318418    +          +     1.40227284681788 * S_NumWebVisitsMonth
318419    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
318420    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
318421    +          +    -1.54860787754125 * Marital_StatusMarried
318422    +          +     3.07164083530731 * Marital_StatusSingle
318423    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
318424    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
318425    +          +     1.93404037878036 * Marital_StatusMarried
318426    +          +    -1.33159061927866 * Marital_StatusSingle
318427    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
318428    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
318429    +          +    -1.20603561095549 * Marital_StatusMarried
318430    +          +     1.40927693179184 * Marital_StatusSingle
318431    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
318432    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
318433    +          +     -0.1442863204197 * Marital_StatusMarried
318434    +          +     0.60523055771734 * Marital_StatusSingle
318435    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
318436    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
318437    +          +     0.09024082077945 * Marital_StatusMarried
318438    +          +     0.46315219527454 * Marital_StatusSingle
318439    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
318440    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
318441    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
318442    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
318443    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
318444    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
318445    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
318446    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
318447    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
318448    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
318449    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
318450    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
318451    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
318452    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
318453    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
318454    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
318455    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
318456    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
318457    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
318458    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
318459    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
318460    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
318461    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
318462    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
318463    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
318464    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
318465    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
318466    +END;
MPRINT(EM_DIAGRAM):   END;
318467    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318468    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
318469    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
318470    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
318471    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
318472    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
318473    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
318474    +END;
MPRINT(EM_DIAGRAM):   END;
318475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318476    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
318477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318478    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318479    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
318480    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
318481    +          +    -1.02461177883701 * S_MntMeatProducts
318482    +          +     0.58245198640098 * S_NumCatalogPurchases
318483    +          +    -0.23780276328844 * S_NumDealsPurchases
318484    +          +     1.28202459687231 * S_NumWebVisitsMonth
318485    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
318486    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
318487    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
318488    +          +     0.13875330330852 * S_MntMeatProducts
318489    +          +    -0.22996544763814 * S_NumCatalogPurchases
318490    +          +    -0.36599639965399 * S_NumDealsPurchases
318491    +          +     1.99081506581768 * S_NumWebVisitsMonth
318492    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
318493    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
318494    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
318495    +          +     0.94472031892058 * S_MntMeatProducts
318496    +          +     0.27511909854912 * S_NumCatalogPurchases
318497    +          +    -0.55526545857693 * S_NumDealsPurchases
318498    +          +    -0.61544688091302 * S_NumWebVisitsMonth
318499    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
318500    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
318501    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
318502    +          +     1.61403840093612 * S_MntMeatProducts
318503    +          +    -0.34382576245292 * S_NumCatalogPurchases
318504    +          +     0.70213159483637 * S_NumDealsPurchases
318505    +          +    -0.39731145628175 * S_NumWebVisitsMonth
318506    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
318507    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
318508    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
318509    +          +    -0.33974847531229 * S_MntMeatProducts
318510    +          +     1.74350962571519 * S_NumCatalogPurchases
318511    +          +     0.41098583446208 * S_NumDealsPurchases
318512    +          +    -0.66305298743409 * S_NumWebVisitsMonth
318513    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
318514    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
318515    +          +    -0.29510060772746 * Marital_StatusMarried
318516    +          +     1.74124353401891 * Marital_StatusSingle
318517    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
318518    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
318519    +          +    -0.61203463567014 * Marital_StatusMarried
318520    +          +     1.95705767804118 * Marital_StatusSingle
318521    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
318522    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
318523    +          +      1.7151906515185 * Marital_StatusMarried
318524    +          +     0.70376524929742 * Marital_StatusSingle
318525    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
318526    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
318527    +          +    -1.27088213578872 * Marital_StatusMarried
318528    +          +    -0.91253966593459 * Marital_StatusSingle
318529    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
318530    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
318531    +          +     -0.5308059771847 * Marital_StatusMarried
318532    +          +    -0.11208078645904 * Marital_StatusSingle
318533    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
318534    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
318535    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
318536    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
318537    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
318538    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
318539    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
318540    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
318541    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
318542    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
318543    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
318544    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
318545    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
318546    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
318547    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
318548    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
318549    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
318550    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
318551    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
318552    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
318553    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
318554    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
318555    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
318556    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
318557    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
318558    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
318559    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
318560    +END;
MPRINT(EM_DIAGRAM):   END;
318561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318562    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
318563    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
318564    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
318565    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
318566    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
318567    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
318568    +END;
MPRINT(EM_DIAGRAM):   END;
318569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318570    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
318571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318572    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318573    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
318574    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
318575    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
318576    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
318577    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
318578    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
318579    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
318580    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
318581    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
318582    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
318583    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
318584    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
318585    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
318586    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
318587    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
318588    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
318589    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
318590    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
318591    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
318592    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
318593    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
318594    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
318595    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
318596    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
318597    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
318598    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
318599    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
318600    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
318601    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
318602    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
318603    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
318604    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
318605    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
318606    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
318607    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
318608    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
318609    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
318610    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
318611    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
318612    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
318613    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
318614    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
318615    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
318616    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
318617    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
318618    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
318619    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
318620    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
318621    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
318622    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
318623    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
318624    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
318625    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
318626    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
318627    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
318628    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
318629    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
318630    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
318631    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
318632    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
318633    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
318634    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
318635    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
318636    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
318637    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
318638    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
318639    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
318640    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
318641    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
318642    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
318643    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
318644    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
318645    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318646    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318647    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
318648    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
318649    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
318650    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
318651    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
318652    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
318653    +END;
MPRINT(EM_DIAGRAM):   END;
318654    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318655    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
318656    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
318657    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
318658    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
318659    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
318660    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
318661    +END;
MPRINT(EM_DIAGRAM):   END;
318662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318663    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
318664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318665    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318666    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
318667    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
318668    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
318669    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
318670    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
318671    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
318672    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
318673    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
318674    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
318675    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
318676    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
318677    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
318678    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
318679    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
318680    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
318681    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
318682    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
318683    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
318684    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
318685    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
318686    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
318687    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
318688    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
318689    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
318690    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
318691    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
318692    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
318693    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
318694    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
318695    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
318696    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
318697    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
318698    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
318699    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
318700    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
318701    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
318702    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
318703    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
318704    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
318705    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
318706    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
318707    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
318708    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
318709    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
318710    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
318711    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
318712    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
318713    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
318714    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
318715    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
318716    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
318717    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
318718    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
318719    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
318720    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
318721    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
318722    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
318723    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
318724    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
318725    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
318726    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
318727    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
318728    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
318729    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
318730    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
318731    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
318732    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
318733    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
318734    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
318735    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
318736    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
318737    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
318738    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
318739    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
318740    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
318741    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
318742    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
318743    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
318744    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
318745    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
318746    +END;
MPRINT(EM_DIAGRAM):   END;
318747    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318748    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
318749    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
318750    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
318751    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
318752    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
318753    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
318754    +END;
MPRINT(EM_DIAGRAM):   END;
318755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318756    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
318757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318758    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318759    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
318760    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
318761    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
318762    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
318763    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
318764    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
318765    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
318766    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
318767    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
318768    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
318769    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
318770    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
318771    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
318772    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
318773    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
318774    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
318775    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
318776    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
318777    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
318778    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
318779    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
318780    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
318781    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
318782    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
318783    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
318784    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
318785    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
318786    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
318787    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
318788    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
318789    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
318790    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
318791    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
318792    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
318793    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
318794    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
318795    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
318796    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
318797    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
318798    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
318799    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
318800    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
318801    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
318802    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
318803    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
318804    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
318805    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
318806    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
318807    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
318808    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
318809    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
318810    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
318811    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
318812    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
318813    +END;
MPRINT(EM_DIAGRAM):   END;
318814    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318815    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
318816    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
318817    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
318818    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
318819    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
318820    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
318821    +END;
MPRINT(EM_DIAGRAM):   END;
318822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318823    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
318824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318825    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
318826    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
318827    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
318828    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
318829    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
318830    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
318831    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
318832    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
318833    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
318834    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
318835    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
318836    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
318837    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
318838    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
318839    +END;
MPRINT(EM_DIAGRAM):   END;
318840    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
318841    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
318842    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
318843    +END;
MPRINT(EM_DIAGRAM):   END;
318844    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
318845    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
318846    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
318847    +END;
MPRINT(EM_DIAGRAM):   END;
318848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318849    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
318850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
318851    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
318852    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
318853    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
318854    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
318855    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
318856    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
318857    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
318858    +END;
MPRINT(EM_DIAGRAM):   END;
318859    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
318860    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
318861    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
318862    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318863     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
318864     quit;
318865     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318866     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318867     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318868     retain ID 2 Node "AutoNeural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural35";
318869     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8675 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8675 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
318871     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318872     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318873     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8675 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8675 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
318874     proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME
CREATOR);
318875     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318876     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318877     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318878     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318879     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318881     proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
318882     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
318883     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318884     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318885     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318886     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318887     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318888     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318889     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318890     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318891     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318891   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3959 rows and 5 columns.
 
318892     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
318893     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
318894     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3959 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 3959 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318895     filename _pref
318895   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
318896     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318897     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
318898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
318899    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
318900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
318901    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
318902    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
318903    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318904     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
318905     quit;
318906     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318907     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318908     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318909     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
318910     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318911     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318912     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318913     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318914     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
318915     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
318916     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318917     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318918     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318919     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318920     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318921     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318922     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
318923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
318924     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318925     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318927     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318928     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318929     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318930     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
318931     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318932     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318932   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
318933     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318934     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
318935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 3963 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318936     filename _pref
318936   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
318937     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318938     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
318939    +
318940    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
318941    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
318941   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
318942    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
318943    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
318944    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
318945    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
318946    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
318947     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
318948     quit;
318949     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
318950     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
318951     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
318952     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
318953     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
318954     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318955     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
318956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318957     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318958     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
318959     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
318961     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318962     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
318963     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
318964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318965     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
318966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318967     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
318968     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
318970     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
318971     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
318972     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
318973     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318974     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
318975     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
318975   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
318976     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318977     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
318978     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 4002 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
318979     filename _pref
318979   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
318980     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
318981     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
318982    +
318983    +
318984    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
318985    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
318986    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
318987    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
318988    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
318989    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318990    +
318991    +
318992    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
318993    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
318994    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
318995    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
318996    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
318997    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
318998    +
318999    +
319000    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
319001    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
319002    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
319003    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
319004    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
319005    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319006    +
319007    +
319008    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
319009    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
319010    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
319011    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
319012    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
319013    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319014    +
319015    +
319016    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
319017    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
319018    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
319019    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
319020    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
319021    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319022    +
319023    +
319024    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
319025    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
319026    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
319027    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
319028    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
319029    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319030    +
319031    +
319032    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
319033    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
319034    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
319035    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
319036    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
319037    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319038    +
319039    +
319040    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
319041    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
319042    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
319043    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
319044    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
319045    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
319046    +if
319047    +_FILTERNORM1 not in ( '.')
319048    + and
319049    +_FILTERNORM2 not in ( '.')
319050    + and
319051    +_FILTERNORM3 not in ( '.')
319052    + and
319053    +_FILTERNORM4 not in ( '.')
319054    + and
319055    +_FILTERNORM5 not in ( '.')
319056    + and
319057    +_FILTERNORM6 not in ( '.')
319058    + and
319059    +_FILTERNORM7 not in ( ' ')
319060    + and
319061    +_FILTERNORM8 not in ( ' ')
319062    +and
319063    +( Dt_Customer ne .)
319064    +and ( Income ne . and (Income<=107000))
319065    +and ( Kidhome ne .)
319066    +and ( MntFishProducts ne .)
319067    +and ( MntFruits ne .)
319068    +and ( MntGoldProds ne .)
319069    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
319070    +and ( MntSweetProducts ne .)
319071    +and ( MntWines ne .)
319072    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
319073    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
319074    +and ( NumStorePurchases ne .)
319075    +and ( NumWebPurchases ne .)
319076    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
319077    +and ( Recency ne .)
319078    +and ( Teenhome ne .)
319079    +and ( Year_Birth ne .)
319080    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
319081    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
319082    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
319083    +end;
MPRINT(EM_DIAGRAM):   end;
319084    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
319085    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
319086     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
319087     quit;
319088     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
319089     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
319090     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
319091     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
319092     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
319093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319094     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
319095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319096     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319097     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
319098     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319099     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319100     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319101     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
319102     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
319103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
319104     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
319105     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
319106     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
319107     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319108     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319109     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
319110     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
319111     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319112     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
319113     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
319114     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
319114   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
319115     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319116     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
319117     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 4068 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319118     %macro varDept(fcmpdata=,id=);
319119     %global nobs&id scoreFlag&id;
319120     %let scoreFlag&id = 0;
319121     %if &id=1 or ^&fcmpStart %then %do;
319122     proc sort data=&fcmpdata out=_temp&id nodupkey;
319123     by NAME;
319124     where id=&id and LHS in( %let j=1;
319125     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
319126     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
319127     "&var" %let j = %eval(&j+1);
319128     %end;
319129     );
319130     run;
319131     %let dsid = %sysfunc(open(_temp&id));
319132     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319133     %let dsid = %sysfunc(close(&dsid));
319134     %if &&nobs&id %then %do;
319135     %let scoreFlag&id = 1;
319136     %let fcmpStart = 1;
319137     %end;
319138     %else %let fcmpStart = 0;
319139     %end;
319140     %else %do;
319141     proc sort data=&fcmpdata out=_tempid;
319142     where id=&id;
319143     by LHS;
319144     run;
319145     %let dsid = %sysfunc(open(_tempid));
319146     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319147     %let dsid = %sysfunc(close(&dsid));
319148     %if ^&&nobs&id %then %do;
319149     proc datasets lib=work nolist;
319150     delete _tempid;
319151     run;
319152     quit;
319153     %end;
319154     %else %do;
319155     data _tempAll;
319156     set %let j=%eval(&id-1);
319157     %do x=1 %to &j;
319158     %if &&nobs&x %then %do;
319159     _temp&x %end;
319160     %end;
319161     ;
319162     run;
319163     proc sql;
319164     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
319164   ! work._tempid p2 where p.name=p2.lhs;
319165     quit;
319166     data _temp&id;
319167     set _temp&id;
319168     where LHS ne '' and NAME ne '' and Node ne '';
319169     run;
319170     proc datasets lib=work nolist;
319171     delete _tempAll;
319172     run;
319173     %let dsid = %sysfunc(open(_temp&id));
319174     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319175     %let dsid = %sysfunc(close(&dsid));
319176     %if ^&&nobs&id %then %do;
319177     proc datasets lib=work nolist;
319178     delete _temp&id;
319179     run;
319180     quit;
319181     %end;
319182     %else %do;
319183     %let scoreFlag&id = 1;
319184     data _temp&id;
319185     set _temp&id;
319186     where LHS ne NAME and node ne '';
319187     run;
319188     %let dsid = %sysfunc(open(_temp&id));
319189     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
319190     %let dsid = %sysfunc(close(&dsid));
319191     %if ^&&nobs&id %then %do;
319192     proc datasets lib=work nolist;
319193     delete _temp&id;
319194     run;
319195     quit;
319196     %end;
319197     %else %do;
319198     proc sort data=_temp&id nodupkey;
319199     by LHS NAME;
319200     run;
319201     %end;
319202     %end;
319203     %end;
319204     %end;
319205     %mend varDept;
319206     %macro optCode(outdata=fcmpdata);
319207     %global fcmpStart;
319208     %let fcmpStart = 0;
319209     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
319210     %let NumNodes=9;
319211     %do k=1 %to &NumNodes;
319212     %vardept(fcmpdata=&outdata, id=&k);
319213     %end;
319214     %mend optCode;
319215     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 150 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 103 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 47 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 47 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 61 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
319216     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
319217     * Ensmbl55: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing metadata for TRAIN data;
319218     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL55_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl55_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl55_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl55_TRAIN out=WORK.M2M5Q929 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2M5Q929;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2M5Q929(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2M5Q929;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2M5Q929;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M16OWHFA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20OMIMZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   set WORK.M16OWHFA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl55";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl55";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
319538     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
319539     set EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMINFO;
319540     where DATA='Ensmbl55' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl55' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
319541     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_EMINFO.
      WHERE (DATA='Ensmbl55') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319542     data EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMINFO;
319543     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
319544     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
319545     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
319549     run;
319550     data EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMINFO;
319551     set EMWS8.Ensmbl55_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMINFO WORK.MODELTEMP_INFO;
319552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL55_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
319553     proc sort data = EMWS8.Ensmbl55_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl55_EMINFO NOTHREADS;
319554     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
319555     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL55_EMINFO.
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319556     proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural37_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
319557     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
319558     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL37_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319559     proc sort data = EMWS8.Ensmbl55_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl55_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
319560     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
319561     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL55_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
319562     data EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMINFO;
319563     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
319564     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
319565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319566     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
319567     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
319568     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
319569     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL55_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL55_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2QTMS65
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2QTMS65 new;
MPRINT(EM_DIAGRAM):   run;
319593     data EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMOUTFIT;
319594     set EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMOUTFIT;
319595     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
319596     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
319596   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
319597     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
319598     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL55_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL55_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319599     proc sort data=EMWS8.Ensmbl55_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl55_EMREPORTFIT nothreads;
319600     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
319601     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL55_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL55_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319602     %let _EMwarndup = 0;
319603     %let _EMtargetdup =;
319604     %let _EMASEtargetdup =;
319605     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
319606     set EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMOUTFIT;
319607     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
319608     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
319609     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
319610     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
319611     end;
MPRINT(EM_DIAGRAM):   end;
319612     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL55_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319613     proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural37_CMeta_TRAIN out=WORK.SUBSETINMETA;
319614     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319615     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set EMWS8.AUTONEURAL37_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 45 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
319616     proc sort data=EMWS8.Ensmbl55_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl55_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
319617     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319618     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set EMWS8.ENSMBL55_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319619     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
319620     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
319621     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
319622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 35 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 45 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
319623     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
319624     set EMWS8.Ensmbl55_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_CMeta_TRAIN;
319625     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
319625   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
319626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL55_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
319627     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
319628     set EMWS8.Ensmbl55_TRAIN(keep=
319629     F_DepVar
319630     I_DepVar
319631     P_DepVar0
319632     P_DepVar1
319633     R_DepVar0
319634     R_DepVar1
319635     U_DepVar
319636     _WARN_
319637     DepVar
319638     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
319639     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: View EMWS8.ENSMBL55_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL37_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL55_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl55_1ZTIVVG nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl55_1ZTIVVG;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl55_1ZTIVVG(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl55_1ZTIVVG;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl55_1ZTIVVG;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
The SAS System
 
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001101374 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
323905     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
323906     set EMWS8.Ensmbl55_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_CMeta_TRAIN;
323907     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
323907   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
323908     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL55_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
323909     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
323910     set EMWS8.Ensmbl55_VALIDATE(keep=
323911     F_DepVar
323912     I_DepVar
323913     P_DepVar0
323914     P_DepVar1
323915     R_DepVar0
323916     R_DepVar1
323917     U_DepVar
323918     _WARN_
323919     DepVar
323920     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
323921     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: View EMWS8.ENSMBL55_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL37_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL55_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl55_3BUKY2O nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl55_3BUKY2O;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl55_3BUKY2O(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMCLASSIFICATION WORK.Ensmbl55_3BUKY2O;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl55_3BUKY2O;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural37_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.000102262 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
328196     %let _cn = %sysfunc(getoption(CENTER));
328197     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
328198     proc print data=EMWS8.Ensmbl55_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl55_EMREPORTFIT noobs label;
328199     var STAT LABEL TRAIN
328200     VALIDATE
328201     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
328202     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
328203     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
328204     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
328205     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL55_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 107.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
328206     title10;
MPRINT(EM_DIAGRAM):   title10;
328207     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
328208     proc sort data=EMWS8.Ensmbl55_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl55_EMCLASSIFICATION nothreads;
328209     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
328210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL55_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL55_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
328211     %let _cn = %sysfunc(getoption(CENTER));
328212     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
328213     proc print data=EMWS8.Ensmbl55_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl55_EMCLASSIFICATION noobs label;
328214     var from into pct_row pct_col count percent
328215     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
328216     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
328217     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
328218     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
328219     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
328220     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
328221     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
328222     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
328223     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
328224     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
328225     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
328226     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL55_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 108.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
328227     title9;
MPRINT(EM_DIAGRAM):   title9;
328228     title10;
MPRINT(EM_DIAGRAM):   title10;
328229     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
328230     %let _cn = %sysfunc(getoption(CENTER));
328231     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
328232     data EMWS8.Ensmbl55_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMEVENTREPORT;
328233     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
328233   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
328234     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
328234   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
328234   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
328234   ! FALSEEVENT
328235     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
328235   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
328235   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
328236        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
328237     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
328238     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
328239     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
328240     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
328241     set EMWS8.Ensmbl55_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMEVENTREPORT;
328242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL55_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL55_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
328243     proc print data=EMWS8.Ensmbl55_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl55_EMEVENTREPORT noobs label;
328244     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
328245     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
328246     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
328247     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL55_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 109.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
328248     title10;
MPRINT(EM_DIAGRAM):   title10;
328249     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
328250     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
328251     modify Ensmbl55_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl55_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
328252     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
328253     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
328253   ! ;
MPRINT(EM_DIAGRAM):   run;
328254     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL55_EMRANK.DATA.
328255     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
328256     %let _cn = %sysfunc(getoption(CENTER));
328257     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
328258     proc print data=EMWS8.Ensmbl55_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl55_EMRANK label noobs;
328259     var
328260     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
328261     by
328262     notsorted DATAROLE
328263     notsorted TARGET
328264     notsorted TARGETLABEL
328265     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
328266     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
328267     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
328268     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL55_EMRANK.
NOTE: The PROCEDURE PRINT printed page 110.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
328269     title10;
MPRINT(EM_DIAGRAM):   title10;
328270     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
328271     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
328272     modify Ensmbl55_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl55_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
328273     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
328273   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
328274     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
328274   ! ;
MPRINT(EM_DIAGRAM):   run;
328275     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL55_EMSCOREDIST.DATA.
328276     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl55_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
