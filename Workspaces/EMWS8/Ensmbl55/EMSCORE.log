MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O30NURLR 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O30NURLR new;
MPRINT(EM_DIAGRAM):   run;
88901      filename emflow
88901    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring AUTONEURAL36_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88902      *------------------------------------------------------------*;
88903      * Ensmbl55: Scoring AUTONEURAL36_TRAIN data;
88904      *------------------------------------------------------------*;
88905      data EMWS8.Ensmbl55_TRAIN
88906      / view=EMWS8.Ensmbl55_TRAIN
88907      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_TRAIN / view=EMWS8.Ensmbl55_TRAIN ;
88908      set EMWS8.AutoNeural36_TRAIN
88909      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural36_TRAIN ;
88910      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas.
88911     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88912     +* Ensmbl55: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Combine model for DepVar;
88913     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88914     +* Ensmbl55: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 1 of 7;
88915     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88916     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88917     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
88918     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
88919     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
88920     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88921     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88922     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
88923     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
88924     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
88925     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88926     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88927     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
88928     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
88929     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
88930     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88931     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88932     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
88933     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
88934     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
88935     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88936     +
88937     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
88938     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
88938    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
88939     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
88940     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
88941     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
88942     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
88943     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
88944     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88945     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
88946     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
88947     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
88948     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88949     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88950     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
88951     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88952     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
88953     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
88954     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
88955     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88956     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
88957     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
88958     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
88959     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88960     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88961     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
88962     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
88963     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
88964     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88965     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88966     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
88967     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
88968     +* NODE: AutoNeural36;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural36;
88969     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
88970     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
88971     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
88972     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
88973     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
88974     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
88975     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
88976     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
88977     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
88978     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
88979     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
88980     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
88981     +LENGTH _WARN_ $4
88982     +      F_DepVar  $ 12
88983     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
88984     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
88985     +
88986     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
88987     +
88988     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
88989     +
88990     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
88991     +
88992     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
88993     +
88994     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
88995     +
88996     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
88997     +
88998     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
88999     +
89000     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
89001     +
89002     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
89003     +
89004     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
89005     +
89006     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
89007     +
89008     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
89009     +
89010     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
89011     +
89012     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
89013     +
89014     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
89015     +
89016     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
89017     +
89018     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
89019     +
89020     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
89021     +
89022     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
89023     +
89024     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
89025     +
89026     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
89027     +
89028     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
89029     +
89030     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
89031     +
89032     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
89033     +
89034     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
89035     +
89036     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
89037     +
89038     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
89039     +
89040     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
89041     +
89042     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
89043     +
89044     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
89045     +
89046     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
89047     +
89048     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
89049     +
89050     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
89051     +
89052     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
89053     +
89054     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
89055     +
89056     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
89057     +
89058     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
89059     +
89060     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
89061     +
89062     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
89063     +
89064     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
89065     +
89066     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
89067     +
89068     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
89069     +
89070     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
89071     +
89072     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
89073     +
89074     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
89075     +
89076     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
89077     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
89078     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
89079     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
89080     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89081     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89082     +end;
MPRINT(EM_DIAGRAM):   end;
89083     +else do;
MPRINT(EM_DIAGRAM):   else do;
89084     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89085     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
89086     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89087     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89088     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
89089     +   end;
MPRINT(EM_DIAGRAM):   end;
89090     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89091     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
89092     +   end;
MPRINT(EM_DIAGRAM):   end;
89093     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89094     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
89095     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89096     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89097     +   end;
MPRINT(EM_DIAGRAM):   end;
89098     +end;
MPRINT(EM_DIAGRAM):   end;
89099     +
89100     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
89101     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
89102     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
89103     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
89104     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89105     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89106     +end;
MPRINT(EM_DIAGRAM):   end;
89107     +else do;
MPRINT(EM_DIAGRAM):   else do;
89108     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89109     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
89110     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89111     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89112     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
89113     +   end;
MPRINT(EM_DIAGRAM):   end;
89114     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89115     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
89116     +   end;
MPRINT(EM_DIAGRAM):   end;
89117     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89118     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
89119     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89120     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89121     +   end;
MPRINT(EM_DIAGRAM):   end;
89122     +end;
MPRINT(EM_DIAGRAM):   end;
89123     +
89124     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
89125     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
89126     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
89127     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
89128     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89129     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89130     +end;
MPRINT(EM_DIAGRAM):   end;
89131     +else do;
MPRINT(EM_DIAGRAM):   else do;
89132     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89133     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
89134     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89135     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89136     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
89137     +   end;
MPRINT(EM_DIAGRAM):   end;
89138     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89139     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
89140     +   end;
MPRINT(EM_DIAGRAM):   end;
89141     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89142     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
89143     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89144     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89145     +   end;
MPRINT(EM_DIAGRAM):   end;
89146     +end;
MPRINT(EM_DIAGRAM):   end;
89147     +
89148     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
89149     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
89150     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
89151     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
89152     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89153     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89154     +end;
MPRINT(EM_DIAGRAM):   end;
89155     +else do;
MPRINT(EM_DIAGRAM):   else do;
89156     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89157     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
89158     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89159     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89160     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
89161     +   end;
MPRINT(EM_DIAGRAM):   end;
89162     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89163     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
89164     +   end;
MPRINT(EM_DIAGRAM):   end;
89165     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89166     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
89167     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89168     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89169     +   end;
MPRINT(EM_DIAGRAM):   end;
89170     +end;
MPRINT(EM_DIAGRAM):   end;
89171     +
89172     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
89173     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
89174     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
89175     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
89176     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89177     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89178     +end;
MPRINT(EM_DIAGRAM):   end;
89179     +else do;
MPRINT(EM_DIAGRAM):   else do;
89180     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89181     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
89182     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89183     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89184     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
89185     +   end;
MPRINT(EM_DIAGRAM):   end;
89186     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89187     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
89188     +   end;
MPRINT(EM_DIAGRAM):   end;
89189     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89190     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
89191     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89192     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89193     +   end;
MPRINT(EM_DIAGRAM):   end;
89194     +end;
MPRINT(EM_DIAGRAM):   end;
89195     +
89196     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
89197     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
89198     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
89199     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
89200     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89201     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89202     +end;
MPRINT(EM_DIAGRAM):   end;
89203     +else do;
MPRINT(EM_DIAGRAM):   else do;
89204     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89205     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
89206     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89207     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89208     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
89209     +   end;
MPRINT(EM_DIAGRAM):   end;
89210     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89211     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
89212     +   end;
MPRINT(EM_DIAGRAM):   end;
89213     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89214     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
89215     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89216     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89217     +   end;
MPRINT(EM_DIAGRAM):   end;
89218     +end;
MPRINT(EM_DIAGRAM):   end;
89219     +
89220     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
89221     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
89222     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
89223     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
89224     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89225     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89226     +end;
MPRINT(EM_DIAGRAM):   end;
89227     +else do;
MPRINT(EM_DIAGRAM):   else do;
89228     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89229     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
89230     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89231     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
89232     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
89233     +   end;
MPRINT(EM_DIAGRAM):   end;
89234     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
89235     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
89236     +   end;
MPRINT(EM_DIAGRAM):   end;
89237     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89238     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
89239     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89240     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89241     +   end;
MPRINT(EM_DIAGRAM):   end;
89242     +end;
MPRINT(EM_DIAGRAM):   end;
89243     +
89244     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
89245     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
89246     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
89247     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
89248     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
89249     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
89250     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
89251     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
89252     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
89253     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
89254     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
89255     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
89256     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89257     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89258     +end;
MPRINT(EM_DIAGRAM):   end;
89259     +else do;
MPRINT(EM_DIAGRAM):   else do;
89260     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
89261     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
89262     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89263     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
89264     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
89265     +   end;
MPRINT(EM_DIAGRAM):   end;
89266     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
89267     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
89268     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
89269     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
89270     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
89271     +   end;
MPRINT(EM_DIAGRAM):   end;
89272     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
89273     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
89274     +   end;
MPRINT(EM_DIAGRAM):   end;
89275     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
89276     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
89277     +   end;
MPRINT(EM_DIAGRAM):   end;
89278     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
89279     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
89280     +   end;
MPRINT(EM_DIAGRAM):   end;
89281     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89282     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
89283     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
89284     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
89285     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
89286     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89287     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89288     +   end;
MPRINT(EM_DIAGRAM):   end;
89289     +end;
MPRINT(EM_DIAGRAM):   end;
89290     +
89291     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
89292     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
89293     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
89294     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
89295     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
89296     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
89297     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
89298     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
89299     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
89300     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
89301     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
89302     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
89303     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
89304     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89305     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89306     +end;
MPRINT(EM_DIAGRAM):   end;
89307     +else do;
MPRINT(EM_DIAGRAM):   else do;
89308     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
89309     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
89310     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89311     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
89312     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
89313     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
89314     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
89315     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
89316     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
89317     +         end;
MPRINT(EM_DIAGRAM):   end;
89318     +         else do;
MPRINT(EM_DIAGRAM):   else do;
89319     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
89320     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
89321     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
89322     +            end;
MPRINT(EM_DIAGRAM):   end;
89323     +         end;
MPRINT(EM_DIAGRAM):   end;
89324     +      end;
MPRINT(EM_DIAGRAM):   end;
89325     +      else do;
MPRINT(EM_DIAGRAM):   else do;
89326     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
89327     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
89328     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
89329     +         end;
MPRINT(EM_DIAGRAM):   end;
89330     +      end;
MPRINT(EM_DIAGRAM):   end;
89331     +   end;
MPRINT(EM_DIAGRAM):   end;
89332     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89333     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
89334     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
89335     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
89336     +      end;
MPRINT(EM_DIAGRAM):   end;
89337     +      else do;
MPRINT(EM_DIAGRAM):   else do;
89338     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
89339     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
89340     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
89341     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
89342     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
89343     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
89344     +         end;
MPRINT(EM_DIAGRAM):   end;
89345     +      end;
MPRINT(EM_DIAGRAM):   end;
89346     +   end;
MPRINT(EM_DIAGRAM):   end;
89347     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
89348     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
89349     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
89350     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
89351     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
89352     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89353     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89354     +   end;
MPRINT(EM_DIAGRAM):   end;
89355     +end;
MPRINT(EM_DIAGRAM):   end;
89356     +
89357     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89358     +*** Checking missing input Interval
89359     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
89360     +
89361     +IF NMISS(
89362     +   AcceptedCmpTotal ,
89363     +   Age ,
89364     +   Frq ,
89365     +   Income ,
89366     +   Kidhome ,
89367     +   MntFishProducts ,
89368     +   MntFruits ,
89369     +   MntGoldProds ,
89370     +   MntSweetProducts ,
89371     +   MonthsAsCustomer ,
89372     +   NumDealsPurchases ,
89373     +   NumWebVisitsMonth ,
89374     +   RFMstat ,
89375     +   RMntFrq ,
89376     +   Recency ,
89377     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
89378     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
89379     +
89380     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89381     +END;
MPRINT(EM_DIAGRAM):   END;
89382     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89383     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
89384     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89385     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
89386     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
89387     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
89388     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
89389     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
89390     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
89391     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
89392     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
89393     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
89394     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
89395     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
89396     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
89397     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
89398     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
89399     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
89400     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
89401     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
89402     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
89403     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
89404     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
89405     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
89406     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
89407     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
89408     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
89409     +END;
MPRINT(EM_DIAGRAM):   END;
89410     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
89411     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
89412     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
89413     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
89414     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
89415     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
89416     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
89417     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
89418     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
89419     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
89420     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
89421     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
89422     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
89423     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
89424     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
89425     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
89426     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
89427     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
89428     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
89429     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
89430     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
89431     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
89432     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
89433     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
89434     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
89435     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
89436     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
89437     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
89438     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
89439     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
89440     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
89441     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
89442     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
89443     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
89444     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
89445     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
89446     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
89447     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
89448     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
89449     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
89450     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
89451     +END;
MPRINT(EM_DIAGRAM):   END;
89452     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89453     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
89454     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89455     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89456     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
89457     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89458     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89459     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
89460     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89461     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
89462     +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
89463     +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
89464     +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
89465     +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
89466     +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
89467     +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
89468     +          +     1.47210732135355 * S_MonthsAsCustomer
89469     +          +     0.85741098948561 * S_NumDealsPurchases
89470     +          +     0.47124997442086 * S_NumWebVisitsMonth
89471     +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
89472     +        S_RMntFrq  +     0.42017826752434 * S_Recency
89473     +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
89474     +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
89475     +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
89476     +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
89477     +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
89478     +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
89479     +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
89480     +          +     0.74811152666015 * S_MonthsAsCustomer
89481     +          +    -0.13168708818154 * S_NumDealsPurchases
89482     +          +    -0.51935779196522 * S_NumWebVisitsMonth
89483     +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
89484     +        S_RMntFrq  +     1.96758846931972 * S_Recency
89485     +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
89486     +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
89487     +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
89488     +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
89489     +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
89490     +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
89491     +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
89492     +          +     0.11776941975292 * S_MonthsAsCustomer
89493     +          +    -0.69977862189457 * S_NumDealsPurchases
89494     +          +    -0.26676589341422 * S_NumWebVisitsMonth
89495     +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
89496     +        S_RMntFrq  +     1.53487074713045 * S_Recency
89497     +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
89498     +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
89499     +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
89500     +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
89501     +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
89502     +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
89503     +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
89504     +          +     0.46606320110885 * S_MonthsAsCustomer
89505     +          +     1.64885970718717 * S_NumDealsPurchases
89506     +          +     1.70233049691156 * S_NumWebVisitsMonth
89507     +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
89508     +        S_RMntFrq  +    -1.33025042025966 * S_Recency
89509     +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
89510     +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
89511     +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
89512     +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
89513     +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
89514     +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
89515     +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
89516     +          +     0.25703511103123 * S_MonthsAsCustomer
89517     +          +     0.81449309285524 * S_NumDealsPurchases
89518     +          +     0.65863550896078 * S_NumWebVisitsMonth
89519     +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
89520     +        S_RMntFrq  +     0.35298837231553 * S_Recency
89521     +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
89522     +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
89523     +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
89524     +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
89525     +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
89526     +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
89527     +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
89528     +          +     0.79681190434731 * S_MonthsAsCustomer
89529     +          +    -0.93973916927987 * S_NumDealsPurchases
89530     +          +     1.37415777280471 * S_NumWebVisitsMonth
89531     +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
89532     +        S_RMntFrq  +     0.25579910148098 * S_Recency
89533     +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
89534     +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
89535     +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
89536     +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
89537     +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
89538     +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
89539     +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
89540     +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
89541     +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
89542     +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
89543     +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
89544     +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
89545     +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
89546     +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
89547     +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
89548     +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
89549     +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
89550     +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
89551     +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
89552     +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
89553     +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
89554     +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
89555     +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
89556     +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
89557     +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
89558     +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
89559     +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
89560     +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
89561     +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
89562     +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
89563     +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
89564     +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
89565     +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
89566     +        EducationGraduation  +     0.53978142914157 * EducationMaster
89567     +          +    -0.28915302940579 * Marital_StatusDivorced
89568     +          +     0.36400858753372 * Marital_StatusMarried
89569     +          +     0.64088916620982 * Marital_StatusSingle
89570     +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
89571     +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
89572     +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
89573     +        EducationGraduation  +     0.31774696403611 * EducationMaster
89574     +          +    -0.48311224079569 * Marital_StatusDivorced
89575     +          +     0.78522892664414 * Marital_StatusMarried
89576     +          +    -0.52144588286939 * Marital_StatusSingle
89577     +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
89578     +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
89579     +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
89580     +        EducationGraduation  +     1.62119993408702 * EducationMaster
89581     +          +    -1.10138941531054 * Marital_StatusDivorced
89582     +          +     1.91098461544032 * Marital_StatusMarried
89583     +          +    -1.96662881570281 * Marital_StatusSingle
89584     +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
89585     +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
89586     +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
89587     +        EducationGraduation  +    -0.47265183904634 * EducationMaster
89588     +          +    -0.26938567401241 * Marital_StatusDivorced
89589     +          +      0.5252138734125 * Marital_StatusMarried
89590     +          +    -0.77744801183604 * Marital_StatusSingle
89591     +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
89592     +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
89593     +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
89594     +        EducationGraduation  +     1.34706628408556 * EducationMaster
89595     +          +    -0.49116995167497 * Marital_StatusDivorced
89596     +          +     1.22243596432371 * Marital_StatusMarried
89597     +          +    -1.22268267917833 * Marital_StatusSingle
89598     +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
89599     +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
89600     +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
89601     +        EducationGraduation  +     0.19530936178176 * EducationMaster
89602     +          +    -0.21134253419933 * Marital_StatusDivorced
89603     +          +     0.87168965818013 * Marital_StatusMarried
89604     +          +     0.07539748751767 * Marital_StatusSingle
89605     +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
89606     +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
89607     +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
89608     +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
89609     +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
89610     +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
89611     +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
89612     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
89613     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
89614     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
89615     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
89616     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
89617     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
89618     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
89619     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
89620     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
89621     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
89622     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
89623     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
89624     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
89625     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
89626     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
89627     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
89628     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
89629     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
89630     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
89631     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
89632     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
89633     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
89634     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
89635     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
89636     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
89637     +END;
MPRINT(EM_DIAGRAM):   END;
89638     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
89639     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
89640     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
89641     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
89642     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
89643     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
89644     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
89645     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
89646     +END;
MPRINT(EM_DIAGRAM):   END;
89647     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89648     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
89649     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89650     +
89651     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
89652     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
89653     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
89654     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
89655     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
89656     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89657     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
89658     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
89659     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
89660     +end;
MPRINT(EM_DIAGRAM):   end;
89661     +else do;
MPRINT(EM_DIAGRAM):   else do;
89662     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
89663     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
89664     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
89665     +   end;
MPRINT(EM_DIAGRAM):   end;
89666     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
89667     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
89668     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
89669     +   end;
MPRINT(EM_DIAGRAM):   end;
89670     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89671     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
89672     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
89673     +   end;
MPRINT(EM_DIAGRAM):   end;
89674     +end;
MPRINT(EM_DIAGRAM):   end;
89675     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
89676     +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
89677     +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
89678     +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
89679     +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
89680     +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
89681     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
89682     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
89683     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
89684     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
89685     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
89686     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
89687     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
89688     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
89689     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
89690     +END;
MPRINT(EM_DIAGRAM):   END;
89691     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
89692     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
89693     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
89694     +END;
MPRINT(EM_DIAGRAM):   END;
89695     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
89696     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
89697     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
89698     +END;
MPRINT(EM_DIAGRAM):   END;
89699     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
89700     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
89701     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
89702     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
89703     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
89704     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
89705     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
89706     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89707     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
89708     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
89709     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
89710     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
89711     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
89712     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
89713     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
89714     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
89715     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
89716     +END;
MPRINT(EM_DIAGRAM):   END;
89717     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
89718     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
89719     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
89720     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
89721     +* Renaming variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural36;
89722     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89723     +* Renaming Posterior variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural36;
89724     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89725     +drop AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar1;
89726     +AutoNeural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar1 = P_DepVar1;
89727     +drop AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar0;
89728     +AutoNeural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar0 = P_DepVar0;
89729     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89730     +* Renaming _WARN_ variable for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural36;
89731     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89732     +length AutoNeural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural36_WARN_ $4;
89733     +drop AutoNeural36_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_WARN_;
89734     +AutoNeural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural36_WARN_ = _WARN_;
89735     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89736     +* Ensmbl55: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 2 of 7;
89737     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89738     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89739     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
89740     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
89741     +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
89742     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
89743     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
89744     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
89745     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
89746     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
89747     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
89748     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
89749     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
89750     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
89751     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
89752     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
89753     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
89754     +LENGTH _WARN_ $4
89755     +      F_DepVar  $ 12
89756     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
89757     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
89758     +
89759     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
89760     +
89761     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
89762     +
89763     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
89764     +
89765     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
89766     +
89767     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
89768     +
89769     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
89770     +
89771     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
89772     +
89773     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
89774     +
89775     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
89776     +
89777     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
89778     +
89779     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
89780     +
89781     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
89782     +
89783     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
89784     +
89785     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
89786     +
89787     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
89788     +
89789     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
89790     +
89791     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
89792     +
89793     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
89794     +
89795     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
89796     +
89797     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
89798     +
89799     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
89800     +
89801     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
89802     +
89803     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
89804     +
89805     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
89806     +
89807     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
89808     +
89809     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
89810     +
89811     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
89812     +
89813     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
89814     +
89815     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
89816     +
89817     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
89818     +
89819     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
89820     +
89821     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
89822     +
89823     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
89824     +
89825     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
89826     +
89827     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
89828     +
89829     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
89830     +
89831     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
89832     +
89833     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
89834     +
89835     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
89836     +
89837     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
89838     +
89839     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
89840     +
89841     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
89842     +
89843     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
89844     +
89845     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
89846     +
89847     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
89848     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
89849     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
89850     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
89851     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89852     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89853     +end;
MPRINT(EM_DIAGRAM):   end;
89854     +else do;
MPRINT(EM_DIAGRAM):   else do;
89855     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89856     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
89857     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89858     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89859     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
89860     +   end;
MPRINT(EM_DIAGRAM):   end;
89861     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89862     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
89863     +   end;
MPRINT(EM_DIAGRAM):   end;
89864     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89865     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
89866     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89867     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89868     +   end;
MPRINT(EM_DIAGRAM):   end;
89869     +end;
MPRINT(EM_DIAGRAM):   end;
89870     +
89871     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
89872     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
89873     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
89874     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
89875     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89876     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89877     +end;
MPRINT(EM_DIAGRAM):   end;
89878     +else do;
The SAS System

MPRINT(EM_DIAGRAM):   else do;
89879     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89880     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
89881     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89882     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89883     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
89884     +   end;
MPRINT(EM_DIAGRAM):   end;
89885     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89886     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
89887     +   end;
MPRINT(EM_DIAGRAM):   end;
89888     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89889     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
89890     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89891     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89892     +   end;
MPRINT(EM_DIAGRAM):   end;
89893     +end;
MPRINT(EM_DIAGRAM):   end;
89894     +
89895     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
89896     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
89897     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
89898     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
89899     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89900     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89901     +end;
MPRINT(EM_DIAGRAM):   end;
89902     +else do;
MPRINT(EM_DIAGRAM):   else do;
89903     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89904     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
89905     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89906     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89907     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
89908     +   end;
MPRINT(EM_DIAGRAM):   end;
89909     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89910     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
89911     +   end;
MPRINT(EM_DIAGRAM):   end;
89912     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89913     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
89914     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89915     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89916     +   end;
MPRINT(EM_DIAGRAM):   end;
89917     +end;
MPRINT(EM_DIAGRAM):   end;
89918     +
89919     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
89920     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
89921     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
89922     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
89923     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89924     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89925     +end;
MPRINT(EM_DIAGRAM):   end;
89926     +else do;
MPRINT(EM_DIAGRAM):   else do;
89927     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89928     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
89929     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89930     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89931     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
89932     +   end;
MPRINT(EM_DIAGRAM):   end;
89933     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89934     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
89935     +   end;
MPRINT(EM_DIAGRAM):   end;
89936     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89937     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
89938     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89939     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89940     +   end;
MPRINT(EM_DIAGRAM):   end;
89941     +end;
MPRINT(EM_DIAGRAM):   end;
89942     +
89943     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
89944     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
89945     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
89946     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
89947     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89948     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89949     +end;
MPRINT(EM_DIAGRAM):   end;
89950     +else do;
MPRINT(EM_DIAGRAM):   else do;
89951     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89952     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
89953     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89954     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89955     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
89956     +   end;
MPRINT(EM_DIAGRAM):   end;
89957     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89958     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
89959     +   end;
MPRINT(EM_DIAGRAM):   end;
89960     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89961     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
89962     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89963     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89964     +   end;
MPRINT(EM_DIAGRAM):   end;
89965     +end;
MPRINT(EM_DIAGRAM):   end;
89966     +
89967     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
89968     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
89969     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
89970     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
89971     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89972     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89973     +end;
MPRINT(EM_DIAGRAM):   end;
89974     +else do;
MPRINT(EM_DIAGRAM):   else do;
89975     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
89976     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
89977     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
89978     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
89979     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
89980     +   end;
MPRINT(EM_DIAGRAM):   end;
89981     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
89982     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
89983     +   end;
MPRINT(EM_DIAGRAM):   end;
89984     +   else do;
MPRINT(EM_DIAGRAM):   else do;
89985     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
89986     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
89987     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89988     +   end;
MPRINT(EM_DIAGRAM):   end;
89989     +end;
MPRINT(EM_DIAGRAM):   end;
89990     +
89991     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
89992     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
89993     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
89994     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
89995     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
89996     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
89997     +end;
MPRINT(EM_DIAGRAM):   end;
89998     +else do;
MPRINT(EM_DIAGRAM):   else do;
89999     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90000     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
90001     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90002     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
90003     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
90004     +   end;
MPRINT(EM_DIAGRAM):   end;
90005     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
90006     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
90007     +   end;
MPRINT(EM_DIAGRAM):   end;
90008     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90009     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
90010     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90011     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90012     +   end;
MPRINT(EM_DIAGRAM):   end;
90013     +end;
MPRINT(EM_DIAGRAM):   end;
90014     +
90015     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
90016     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
90017     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
90018     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
90019     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
90020     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
90021     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
90022     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
90023     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
90024     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
90025     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
90026     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
90027     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90028     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90029     +end;
MPRINT(EM_DIAGRAM):   end;
90030     +else do;
MPRINT(EM_DIAGRAM):   else do;
90031     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
90032     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
90033     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90034     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
90035     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
90036     +   end;
MPRINT(EM_DIAGRAM):   end;
90037     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
90038     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
90039     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
90040     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
90041     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
90042     +   end;
MPRINT(EM_DIAGRAM):   end;
90043     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
90044     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
90045     +   end;
MPRINT(EM_DIAGRAM):   end;
90046     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
90047     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
90048     +   end;
MPRINT(EM_DIAGRAM):   end;
90049     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
90050     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
90051     +   end;
MPRINT(EM_DIAGRAM):   end;
90052     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90053     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
90054     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
90055     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
90056     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
90057     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90058     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90059     +   end;
MPRINT(EM_DIAGRAM):   end;
90060     +end;
MPRINT(EM_DIAGRAM):   end;
90061     +
90062     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
90063     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
90064     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
90065     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
90066     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
90067     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
90068     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
90069     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
90070     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
90071     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
90072     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
90073     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
90074     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
90075     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90076     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90077     +end;
MPRINT(EM_DIAGRAM):   end;
90078     +else do;
MPRINT(EM_DIAGRAM):   else do;
90079     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
90080     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
90081     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90082     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
90083     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
90084     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
90085     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
90086     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
90087     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90088     +         end;
MPRINT(EM_DIAGRAM):   end;
90089     +         else do;
MPRINT(EM_DIAGRAM):   else do;
90090     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
90091     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
90092     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90093     +            end;
MPRINT(EM_DIAGRAM):   end;
90094     +         end;
MPRINT(EM_DIAGRAM):   end;
90095     +      end;
MPRINT(EM_DIAGRAM):   end;
90096     +      else do;
MPRINT(EM_DIAGRAM):   else do;
90097     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
90098     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
90099     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90100     +         end;
MPRINT(EM_DIAGRAM):   end;
90101     +      end;
MPRINT(EM_DIAGRAM):   end;
90102     +   end;
MPRINT(EM_DIAGRAM):   end;
90103     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90104     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
90105     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
90106     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90107     +      end;
MPRINT(EM_DIAGRAM):   end;
90108     +      else do;
MPRINT(EM_DIAGRAM):   else do;
90109     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
90110     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
90111     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
90112     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
90113     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
90114     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90115     +         end;
MPRINT(EM_DIAGRAM):   end;
90116     +      end;
MPRINT(EM_DIAGRAM):   end;
90117     +   end;
MPRINT(EM_DIAGRAM):   end;
90118     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
90119     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
90120     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
90121     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
90122     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
90123     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90124     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90125     +   end;
MPRINT(EM_DIAGRAM):   end;
90126     +end;
MPRINT(EM_DIAGRAM):   end;
90127     +
90128     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90129     +*** Checking missing input Interval
90130     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
90131     +
90132     +IF NMISS(
90133     +   AcceptedCmpTotal ,
90134     +   Age ,
90135     +   Frq ,
90136     +   Income ,
90137     +   Kidhome ,
90138     +   MntFishProducts ,
90139     +   MntFruits ,
90140     +   MntGoldProds ,
90141     +   MntSweetProducts ,
90142     +   MonthsAsCustomer ,
90143     +   NumDealsPurchases ,
90144     +   NumWebVisitsMonth ,
90145     +   RFMstat ,
90146     +   RMntFrq ,
90147     +   Recency ,
90148     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
90149     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
90150     +
90151     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90152     +END;
MPRINT(EM_DIAGRAM):   END;
90153     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90154     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
90155     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90156     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
90157     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
90158     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
90159     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
90160     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
90161     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
90162     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
90163     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
90164     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
90165     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
90166     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
90167     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
90168     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
90169     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
90170     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
90171     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
90172     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
90173     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
90174     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
90175     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
90176     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
90177     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
90178     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
90179     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
90180     +END;
MPRINT(EM_DIAGRAM):   END;
90181     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
90182     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
90183     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
90184     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
90185     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
90186     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
90187     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
90188     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
90189     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
90190     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
90191     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
90192     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
90193     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
90194     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
90195     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
90196     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
90197     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
90198     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
90199     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
90200     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
90201     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
90202     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
90203     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
90204     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
90205     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
90206     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
90207     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
90208     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
90209     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
90210     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
90211     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
90212     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
90213     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
90214     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
90215     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
90216     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
90217     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
90218     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
90219     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
90220     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
90221     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
90222     +END;
MPRINT(EM_DIAGRAM):   END;
90223     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90224     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
90225     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90226     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90227     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
90228     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90229     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90230     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
90231     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90232     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
90233     +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
90234     +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
90235     +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
90236     +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
90237     +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
90238     +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
90239     +          +    -0.63886071804247 * S_MonthsAsCustomer
90240     +          +      2.3488612891037 * S_NumDealsPurchases
90241     +          +     2.32996461229282 * S_NumWebVisitsMonth
90242     +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
90243     +        S_RMntFrq  +    -3.18599476886695 * S_Recency
90244     +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
90245     +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
90246     +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
90247     +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
90248     +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
90249     +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
90250     +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
90251     +          +     0.67699646331113 * S_MonthsAsCustomer
90252     +          +     0.70523055739254 * S_NumDealsPurchases
90253     +          +    -2.06406682205141 * S_NumWebVisitsMonth
90254     +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
90255     +        S_RMntFrq  +      5.0273672656487 * S_Recency
90256     +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
90257     +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
90258     +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
90259     +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
90260     +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
90261     +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
90262     +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
90263     +          +    -0.53694216899543 * S_MonthsAsCustomer
90264     +          +     0.25908508836257 * S_NumDealsPurchases
90265     +          +    -1.18459231573601 * S_NumWebVisitsMonth
90266     +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
90267     +        S_RMntFrq  +    -1.22457627833901 * S_Recency
90268     +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
90269     +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
90270     +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
90271     +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
90272     +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
90273     +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
90274     +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
90275     +          +    -0.08931078748332 * S_MonthsAsCustomer
90276     +          +    -0.46561962814047 * S_NumDealsPurchases
90277     +          +    -0.12241295445297 * S_NumWebVisitsMonth
90278     +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
90279     +        S_RMntFrq  +     0.96804234233608 * S_Recency
90280     +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
90281     +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
90282     +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
90283     +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
90284     +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
90285     +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
90286     +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
90287     +          +     -0.9186653552138 * S_MonthsAsCustomer
90288     +          +     2.17624393037629 * S_NumDealsPurchases
90289     +          +    -0.41699900714758 * S_NumWebVisitsMonth
90290     +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
90291     +        S_RMntFrq  +    -0.28987089218356 * S_Recency
90292     +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
90293     +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
90294     +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
90295     +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
90296     +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
90297     +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
90298     +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
90299     +          +     1.32865070741283 * S_MonthsAsCustomer
90300     +          +      0.8173864987673 * S_NumDealsPurchases
90301     +          +     1.04804775338375 * S_NumWebVisitsMonth
90302     +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
90303     +        S_RMntFrq  +     0.08690587270493 * S_Recency
90304     +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
90305     +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
90306     +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
90307     +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
90308     +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
90309     +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
90310     +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
90311     +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
90312     +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
90313     +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
90314     +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
90315     +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
90316     +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
90317     +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
90318     +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
90319     +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
90320     +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
90321     +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
90322     +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
90323     +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
90324     +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
90325     +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
90326     +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
90327     +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
90328     +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
90329     +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
90330     +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
90331     +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
90332     +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
90333     +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
90334     +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
90335     +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
90336     +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
90337     +        EducationGraduation  +    -0.31624019107181 * EducationMaster
90338     +          +    -0.82783034099773 * Marital_StatusDivorced
90339     +          +     0.39651075241405 * Marital_StatusMarried
90340     +          +     0.17323156170107 * Marital_StatusSingle
90341     +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
90342     +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
90343     +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
90344     +        EducationGraduation  +    -0.05323450200928 * EducationMaster
90345     +          +    -2.42314580112302 * Marital_StatusDivorced
90346     +          +     1.72709251267075 * Marital_StatusMarried
90347     +          +    -0.94350561587168 * Marital_StatusSingle
90348     +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
90349     +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
90350     +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
90351     +        EducationGraduation  +    -1.41317064722862 * EducationMaster
90352     +          +    -1.25323701705333 * Marital_StatusDivorced
90353     +          +    -0.72618091015379 * Marital_StatusMarried
90354     +          +     0.20594885266863 * Marital_StatusSingle
90355     +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
90356     +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
90357     +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
90358     +        EducationGraduation  +     0.75559299844055 * EducationMaster
90359     +          +     -0.9159957275063 * Marital_StatusDivorced
90360     +          +     2.06164757358796 * Marital_StatusMarried
90361     +          +    -1.61544310412168 * Marital_StatusSingle
90362     +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
90363     +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
90364     +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
90365     +        EducationGraduation  +     0.27594869585414 * EducationMaster
90366     +          +    -0.72418104768251 * Marital_StatusDivorced
90367     +          +     0.51077116161056 * Marital_StatusMarried
90368     +          +     -2.0857896888723 * Marital_StatusSingle
90369     +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
90370     +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
90371     +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
90372     +        EducationGraduation  +     -0.7287361872795 * EducationMaster
90373     +          +     0.64139965212864 * Marital_StatusDivorced
90374     +          +    -1.52338846336783 * Marital_StatusMarried
90375     +          +     1.94794784762286 * Marital_StatusSingle
90376     +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
90377     +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
90378     +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
90379     +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
90380     +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
90381     +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
90382     +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
90383     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
90384     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
90385     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
90386     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
90387     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
90388     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
90389     +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
90390     +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
90391     +END;
MPRINT(EM_DIAGRAM):   END;
90392     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
90393     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
90394     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
90395     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
90396     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
90397     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
90398     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
90399     +END;
MPRINT(EM_DIAGRAM):   END;
90400     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90401     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
90402     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90403     +
90404     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
90405     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
90406     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
90407     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
90408     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
90409     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90410     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
90411     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
90412     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
90413     +end;
MPRINT(EM_DIAGRAM):   end;
90414     +else do;
MPRINT(EM_DIAGRAM):   else do;
90415     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
90416     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
90417     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
90418     +   end;
MPRINT(EM_DIAGRAM):   end;
90419     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
90420     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
90421     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
90422     +   end;
MPRINT(EM_DIAGRAM):   end;
90423     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90424     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
90425     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
90426     +   end;
MPRINT(EM_DIAGRAM):   end;
90427     +end;
MPRINT(EM_DIAGRAM):   end;
90428     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
90429     +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
90430     +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
90431     +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
90432     +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
90433     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
90434     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
90435     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
90436     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
90437     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
90438     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
90439     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
90440     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
90441     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
90442     +END;
MPRINT(EM_DIAGRAM):   END;
90443     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
90444     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
90445     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
90446     +END;
MPRINT(EM_DIAGRAM):   END;
90447     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
90448     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
90449     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
90450     +END;
MPRINT(EM_DIAGRAM):   END;
90451     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
90452     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
90453     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
90454     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
90455     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
90456     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
90457     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
90458     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90459     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
90460     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90461     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
90462     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
90463     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
90464     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
90465     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
90466     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
90467     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
90468     +END;
MPRINT(EM_DIAGRAM):   END;
90469     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
90470     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
90471     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
90472     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
90473     +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
90474     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90475     +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
90476     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90477     +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
90478     +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
90479     +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
90480     +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
90481     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90482     +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
90483     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90484     +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
90485     +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
90486     +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
90487     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90488     +* Ensmbl55: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 3 of 7;
90489     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90490     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90491     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
90492     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
90493     +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
90494     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
90495     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
90496     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
90497     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
90498     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
90499     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
90500     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
90501     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
90502     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
90503     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
90504     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
90505     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
90506     +LENGTH _WARN_ $4
90507     +      F_DepVar  $ 12
90508     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
90509     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
90510     +
90511     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
90512     +
90513     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
90514     +
90515     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
90516     +
90517     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
90518     +
90519     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
90520     +
90521     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
90522     +
90523     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
90524     +
90525     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
90526     +
90527     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
90528     +
90529     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
90530     +
90531     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
90532     +
90533     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
90534     +
90535     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
90536     +
90537     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
90538     +
90539     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
90540     +
90541     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
90542     +
90543     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
90544     +
90545     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
90546     +
90547     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
90548     +
90549     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
90550     +
90551     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
90552     +
90553     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
90554     +
90555     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
90556     +
90557     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
90558     +
90559     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
90560     +
90561     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
90562     +
90563     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
90564     +
90565     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
90566     +
90567     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
90568     +
90569     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
90570     +
90571     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
90572     +
90573     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
90574     +
90575     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
90576     +
90577     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
90578     +
90579     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
90580     +
90581     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
90582     +
90583     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
90584     +
90585     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
90586     +
90587     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
90588     +
90589     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
90590     +
90591     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
90592     +
90593     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
90594     +
90595     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
90596     +
90597     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
90598     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
90599     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
90600     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
90601     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90602     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90603     +end;
MPRINT(EM_DIAGRAM):   end;
90604     +else do;
MPRINT(EM_DIAGRAM):   else do;
90605     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90606     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
90607     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90608     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
90609     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
90610     +   end;
MPRINT(EM_DIAGRAM):   end;
90611     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
90612     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
90613     +   end;
MPRINT(EM_DIAGRAM):   end;
90614     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90615     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
90616     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90617     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90618     +   end;
MPRINT(EM_DIAGRAM):   end;
90619     +end;
MPRINT(EM_DIAGRAM):   end;
90620     +
90621     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
90622     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
90623     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
90624     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
90625     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90626     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90627     +end;
MPRINT(EM_DIAGRAM):   end;
90628     +else do;
MPRINT(EM_DIAGRAM):   else do;
90629     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90630     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
90631     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90632     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
90633     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
90634     +   end;
MPRINT(EM_DIAGRAM):   end;
90635     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
90636     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
90637     +   end;
MPRINT(EM_DIAGRAM):   end;
90638     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90639     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
90640     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90641     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90642     +   end;
MPRINT(EM_DIAGRAM):   end;
90643     +end;
MPRINT(EM_DIAGRAM):   end;
90644     +
90645     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
90646     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
90647     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
90648     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
90649     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90650     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90651     +end;
MPRINT(EM_DIAGRAM):   end;
90652     +else do;
MPRINT(EM_DIAGRAM):   else do;
90653     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90654     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
90655     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90656     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
90657     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
90658     +   end;
MPRINT(EM_DIAGRAM):   end;
90659     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
90660     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
90661     +   end;
MPRINT(EM_DIAGRAM):   end;
90662     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90663     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
90664     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90665     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90666     +   end;
MPRINT(EM_DIAGRAM):   end;
90667     +end;
MPRINT(EM_DIAGRAM):   end;
90668     +
90669     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
90670     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
90671     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
90672     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
90673     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90674     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90675     +end;
MPRINT(EM_DIAGRAM):   end;
90676     +else do;
MPRINT(EM_DIAGRAM):   else do;
90677     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90678     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
90679     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90680     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
90681     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
90682     +   end;
MPRINT(EM_DIAGRAM):   end;
90683     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
90684     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
90685     +   end;
MPRINT(EM_DIAGRAM):   end;
90686     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90687     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
90688     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90689     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90690     +   end;
MPRINT(EM_DIAGRAM):   end;
90691     +end;
MPRINT(EM_DIAGRAM):   end;
90692     +
90693     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
90694     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
90695     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
90696     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
90697     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90698     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90699     +end;
MPRINT(EM_DIAGRAM):   end;
90700     +else do;
MPRINT(EM_DIAGRAM):   else do;
90701     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90702     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
90703     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90704     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
90705     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
90706     +   end;
MPRINT(EM_DIAGRAM):   end;
90707     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
90708     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
90709     +   end;
MPRINT(EM_DIAGRAM):   end;
90710     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90711     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
90712     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90713     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90714     +   end;
MPRINT(EM_DIAGRAM):   end;
90715     +end;
MPRINT(EM_DIAGRAM):   end;
90716     +
90717     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
90718     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
90719     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
90720     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
90721     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90722     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90723     +end;
MPRINT(EM_DIAGRAM):   end;
90724     +else do;
MPRINT(EM_DIAGRAM):   else do;
90725     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90726     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
90727     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90728     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
90729     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
90730     +   end;
MPRINT(EM_DIAGRAM):   end;
90731     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
90732     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
90733     +   end;
MPRINT(EM_DIAGRAM):   end;
90734     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90735     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
90736     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90737     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90738     +   end;
MPRINT(EM_DIAGRAM):   end;
90739     +end;
MPRINT(EM_DIAGRAM):   end;
90740     +
90741     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
90742     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
90743     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
90744     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
90745     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90746     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90747     +end;
MPRINT(EM_DIAGRAM):   end;
90748     +else do;
MPRINT(EM_DIAGRAM):   else do;
90749     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
90750     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
90751     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90752     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
90753     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
90754     +   end;
MPRINT(EM_DIAGRAM):   end;
90755     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
90756     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
90757     +   end;
MPRINT(EM_DIAGRAM):   end;
90758     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90759     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
90760     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90761     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90762     +   end;
MPRINT(EM_DIAGRAM):   end;
90763     +end;
MPRINT(EM_DIAGRAM):   end;
90764     +
90765     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
90766     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
90767     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
90768     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
90769     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
90770     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
90771     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
90772     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
90773     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
90774     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
90775     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
90776     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
90777     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90778     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90779     +end;
MPRINT(EM_DIAGRAM):   end;
90780     +else do;
MPRINT(EM_DIAGRAM):   else do;
90781     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
90782     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
90783     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90784     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
90785     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
90786     +   end;
MPRINT(EM_DIAGRAM):   end;
90787     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
90788     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
90789     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
90790     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
90791     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
90792     +   end;
MPRINT(EM_DIAGRAM):   end;
90793     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
90794     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
90795     +   end;
MPRINT(EM_DIAGRAM):   end;
90796     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
90797     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
90798     +   end;
MPRINT(EM_DIAGRAM):   end;
90799     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
90800     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
90801     +   end;
MPRINT(EM_DIAGRAM):   end;
90802     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90803     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
90804     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
90805     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
90806     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
90807     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90808     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90809     +   end;
MPRINT(EM_DIAGRAM):   end;
90810     +end;
MPRINT(EM_DIAGRAM):   end;
90811     +
90812     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
90813     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
90814     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
90815     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
90816     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
90817     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
90818     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
90819     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
90820     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
90821     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
90822     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
90823     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
90824     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
90825     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
90826     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90827     +end;
MPRINT(EM_DIAGRAM):   end;
90828     +else do;
MPRINT(EM_DIAGRAM):   else do;
90829     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
90830     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
90831     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
90832     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
90833     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
90834     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
90835     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
90836     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
90837     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90838     +         end;
MPRINT(EM_DIAGRAM):   end;
90839     +         else do;
MPRINT(EM_DIAGRAM):   else do;
90840     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
90841     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
90842     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90843     +            end;
MPRINT(EM_DIAGRAM):   end;
90844     +         end;
MPRINT(EM_DIAGRAM):   end;
90845     +      end;
MPRINT(EM_DIAGRAM):   end;
90846     +      else do;
MPRINT(EM_DIAGRAM):   else do;
90847     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
90848     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
90849     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90850     +         end;
MPRINT(EM_DIAGRAM):   end;
90851     +      end;
MPRINT(EM_DIAGRAM):   end;
90852     +   end;
MPRINT(EM_DIAGRAM):   end;
90853     +   else do;
MPRINT(EM_DIAGRAM):   else do;
90854     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
90855     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
90856     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90857     +      end;
MPRINT(EM_DIAGRAM):   end;
90858     +      else do;
MPRINT(EM_DIAGRAM):   else do;
90859     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
90860     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
90861     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
90862     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
90863     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
90864     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
90865     +         end;
MPRINT(EM_DIAGRAM):   end;
90866     +      end;
MPRINT(EM_DIAGRAM):   end;
90867     +   end;
MPRINT(EM_DIAGRAM):   end;
90868     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
90869     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
90870     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
90871     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
90872     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
90873     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
90874     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90875     +   end;
MPRINT(EM_DIAGRAM):   end;
90876     +end;
MPRINT(EM_DIAGRAM):   end;
90877     +
90878     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90879     +*** Checking missing input Interval
90880     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
90881     +
90882     +IF NMISS(
90883     +   AcceptedCmpTotal ,
90884     +   Age ,
90885     +   Frq ,
90886     +   Income ,
90887     +   Kidhome ,
90888     +   MntFishProducts ,
90889     +   MntFruits ,
90890     +   MntGoldProds ,
90891     +   MntSweetProducts ,
90892     +   MonthsAsCustomer ,
90893     +   NumDealsPurchases ,
90894     +   NumWebVisitsMonth ,
90895     +   RFMstat ,
90896     +   RMntFrq ,
90897     +   Recency ,
90898     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
90899     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
90900     +
90901     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
90902     +END;
MPRINT(EM_DIAGRAM):   END;
90903     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90904     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
90905     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90906     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
90907     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
90908     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
90909     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
90910     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
90911     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
90912     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
90913     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
90914     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
90915     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
90916     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
90917     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
90918     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
90919     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
90920     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
90921     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
90922     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
90923     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
90924     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
90925     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
90926     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
90927     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
90928     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
90929     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
90930     +END;
MPRINT(EM_DIAGRAM):   END;
90931     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
90932     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
90933     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
90934     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
90935     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
90936     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
90937     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
90938     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
90939     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
90940     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
90941     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
90942     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
90943     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
90944     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
90945     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
90946     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
90947     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
90948     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
90949     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
90950     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
90951     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
90952     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
90953     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
90954     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
90955     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
90956     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
90957     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
90958     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
90959     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
90960     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
90961     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
90962     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
90963     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
90964     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
90965     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
90966     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
90967     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
90968     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
90969     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
90970     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
90971     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
90972     +END;
MPRINT(EM_DIAGRAM):   END;
90973     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90974     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
90975     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90976     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90977     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
90978     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90979     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90980     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
90981     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
90982     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
90983     +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
90984     +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
90985     +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
90986     +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
90987     +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
90988     +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
90989     +          +     0.04740894983714 * S_MonthsAsCustomer
90990     +          +     1.39008006467326 * S_NumDealsPurchases
90991     +          +     0.21608999126738 * S_NumWebVisitsMonth
90992     +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
90993     +        S_RMntFrq  +    -0.30830265825486 * S_Recency
90994     +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
90995     +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
90996     +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
90997     +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
90998     +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
90999     +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
91000     +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
91001     +          +     0.11090137331567 * S_MonthsAsCustomer
91002     +          +     0.22617410760471 * S_NumDealsPurchases
91003     +          +    -1.50612324994247 * S_NumWebVisitsMonth
91004     +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
91005     +        S_RMntFrq  +     1.36064773168913 * S_Recency
91006     +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
91007     +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
91008     +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
91009     +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
91010     +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
91011     +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
91012     +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
91013     +          +     1.12489244540865 * S_MonthsAsCustomer
91014     +          +     0.65186273365438 * S_NumDealsPurchases
91015     +          +    -2.32770073685469 * S_NumWebVisitsMonth
91016     +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
91017     +        S_RMntFrq  +     2.60277611818411 * S_Recency
91018     +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
91019     +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
91020     +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
91021     +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
91022     +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
91023     +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
91024     +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
91025     +          +     0.30886829972356 * S_MonthsAsCustomer
91026     +          +     0.65492907685123 * S_NumDealsPurchases
91027     +          +     0.10822300736498 * S_NumWebVisitsMonth
91028     +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
91029     +        S_RMntFrq  +     -0.7378392134822 * S_Recency
91030     +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
91031     +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
91032     +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
91033     +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
91034     +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
91035     +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
91036     +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
91037     +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
91038     +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
91039     +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
91040     +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
91041     +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
91042     +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
91043     +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
91044     +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
91045     +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
91046     +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
91047     +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
91048     +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
91049     +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
91050     +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
91051     +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
91052     +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
91053     +        EducationGraduation  +     0.30922934477029 * EducationMaster
91054     +          +     0.01556098790048 * Marital_StatusDivorced
91055     +          +     0.00512523764645 * Marital_StatusMarried
91056     +          +    -0.33980799511448 * Marital_StatusSingle
91057     +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
91058     +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
91059     +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
91060     +        EducationGraduation  +     0.69751348344321 * EducationMaster
91061     +          +     0.01069434029942 * Marital_StatusDivorced
91062     +          +      0.3116587285334 * Marital_StatusMarried
91063     +          +    -0.98635795023549 * Marital_StatusSingle
91064     +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
91065     +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
91066     +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
91067     +        EducationGraduation  +     -0.8155628950024 * EducationMaster
91068     +          +    -0.60393077836174 * Marital_StatusDivorced
91069     +          +    -0.18138878944937 * Marital_StatusMarried
91070     +          +     0.53013032587101 * Marital_StatusSingle
91071     +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
91072     +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
91073     +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
91074     +        EducationGraduation  +    -0.40675219343984 * EducationMaster
91075     +          +     0.43223311502025 * Marital_StatusDivorced
91076     +          +    -1.15741416919552 * Marital_StatusMarried
91077     +          +     0.83939799284264 * Marital_StatusSingle
91078     +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
91079     +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
91080     +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
91081     +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
91082     +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
91083     +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
91084     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
91085     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
91086     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
91087     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
91088     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
91089     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
91090     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
91091     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
91092     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
91093     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
91094     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
91095     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
91096     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
91097     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
91098     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
91099     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
91100     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
91101     +END;
MPRINT(EM_DIAGRAM):   END;
91102     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91103     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
91104     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
91105     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
91106     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
91107     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
91108     +END;
MPRINT(EM_DIAGRAM):   END;
91109     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91110     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
91111     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91112     +
91113     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
91114     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
91115     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
91116     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
91117     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
91118     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91119     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
91120     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
91121     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
91122     +end;
MPRINT(EM_DIAGRAM):   end;
91123     +else do;
MPRINT(EM_DIAGRAM):   else do;
91124     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
91125     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
91126     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
91127     +   end;
MPRINT(EM_DIAGRAM):   end;
91128     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
91129     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
91130     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
91131     +   end;
MPRINT(EM_DIAGRAM):   end;
91132     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91133     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
91134     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
91135     +   end;
MPRINT(EM_DIAGRAM):   end;
91136     +end;
MPRINT(EM_DIAGRAM):   end;
91137     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
91138     +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
91139     +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
91140     +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
91141     +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
91142     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
91143     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
91144     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
91145     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
91146     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
91147     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
91148     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
91149     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
91150     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
91151     +END;
MPRINT(EM_DIAGRAM):   END;
91152     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91153     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
91154     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
91155     +END;
MPRINT(EM_DIAGRAM):   END;
91156     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
91157     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
91158     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
91159     +END;
MPRINT(EM_DIAGRAM):   END;
91160     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
91161     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
91162     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
91163     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
91164     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
91165     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
91166     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
91167     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91168     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
91169     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91170     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
91171     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
91172     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
91173     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
91174     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
91175     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
91176     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91177     +END;
MPRINT(EM_DIAGRAM):   END;
91178     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
91179     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
91180     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
91181     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
91182     +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
91183     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91184     +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
91185     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91186     +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
91187     +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
91188     +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
91189     +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
91190     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91191     +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
91192     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91193     +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
91194     +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
91195     +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
91196     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91197     +* Ensmbl55: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 4 of 7;
91198     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91199     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91200     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
91201     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
91202     +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
91203     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91204     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
91205     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
91206     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
91207     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
91208     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
91209     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
91210     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
91211     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
91212     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
91213     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
91214     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
91215     +LENGTH _WARN_ $4
91216     +      F_DepVar  $ 12
91217     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
91218     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
91219     +
91220     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
91221     +
91222     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
91223     +
91224     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
91225     +
91226     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
91227     +
91228     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
91229     +
91230     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
91231     +
91232     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
91233     +
91234     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
91235     +
91236     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
91237     +
91238     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
91239     +
91240     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
91241     +
91242     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
91243     +
91244     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
91245     +
91246     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
91247     +
91248     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
91249     +
91250     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
91251     +
91252     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
91253     +
91254     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
91255     +
91256     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
91257     +
91258     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
91259     +
91260     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
91261     +
91262     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
91263     +
91264     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
91265     +
91266     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
91267     +
91268     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
91269     +
91270     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
91271     +
91272     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
91273     +
91274     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
91275     +
91276     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
91277     +
91278     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
91279     +
91280     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
91281     +
91282     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
91283     +
91284     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
91285     +
91286     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
91287     +
91288     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
91289     +
91290     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
91291     +
91292     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
91293     +
91294     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
91295     +
91296     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
91297     +
91298     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
91299     +
91300     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
91301     +
91302     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
91303     +
91304     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
91305     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
91306     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
91307     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
91308     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91309     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91310     +end;
MPRINT(EM_DIAGRAM):   end;
91311     +else do;
MPRINT(EM_DIAGRAM):   else do;
91312     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91313     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
91314     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91315     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91316     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
91317     +   end;
MPRINT(EM_DIAGRAM):   end;
91318     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91319     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
91320     +   end;
MPRINT(EM_DIAGRAM):   end;
91321     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91322     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
91323     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91324     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91325     +   end;
MPRINT(EM_DIAGRAM):   end;
91326     +end;
MPRINT(EM_DIAGRAM):   end;
91327     +
91328     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
91329     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
91330     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
91331     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
91332     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91333     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91334     +end;
MPRINT(EM_DIAGRAM):   end;
91335     +else do;
MPRINT(EM_DIAGRAM):   else do;
91336     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91337     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
91338     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91339     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91340     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
91341     +   end;
MPRINT(EM_DIAGRAM):   end;
91342     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91343     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
91344     +   end;
MPRINT(EM_DIAGRAM):   end;
91345     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91346     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
91347     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91348     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91349     +   end;
MPRINT(EM_DIAGRAM):   end;
91350     +end;
MPRINT(EM_DIAGRAM):   end;
91351     +
91352     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
91353     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
91354     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
91355     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
91356     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91357     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91358     +end;
MPRINT(EM_DIAGRAM):   end;
91359     +else do;
MPRINT(EM_DIAGRAM):   else do;
91360     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91361     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
91362     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91363     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91364     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
91365     +   end;
MPRINT(EM_DIAGRAM):   end;
91366     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91367     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
91368     +   end;
MPRINT(EM_DIAGRAM):   end;
91369     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91370     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
91371     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91372     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91373     +   end;
MPRINT(EM_DIAGRAM):   end;
91374     +end;
MPRINT(EM_DIAGRAM):   end;
91375     +
91376     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
91377     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
91378     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
91379     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
91380     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91381     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91382     +end;
MPRINT(EM_DIAGRAM):   end;
91383     +else do;
MPRINT(EM_DIAGRAM):   else do;
91384     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91385     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
91386     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91387     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91388     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
91389     +   end;
MPRINT(EM_DIAGRAM):   end;
91390     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91391     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
91392     +   end;
MPRINT(EM_DIAGRAM):   end;
91393     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91394     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
91395     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91396     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91397     +   end;
MPRINT(EM_DIAGRAM):   end;
91398     +end;
MPRINT(EM_DIAGRAM):   end;
91399     +
91400     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
91401     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
91402     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
91403     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
91404     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91405     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91406     +end;
MPRINT(EM_DIAGRAM):   end;
91407     +else do;
MPRINT(EM_DIAGRAM):   else do;
91408     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91409     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
91410     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91411     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91412     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
91413     +   end;
MPRINT(EM_DIAGRAM):   end;
91414     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91415     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
91416     +   end;
MPRINT(EM_DIAGRAM):   end;
91417     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91418     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
91419     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91420     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91421     +   end;
MPRINT(EM_DIAGRAM):   end;
91422     +end;
MPRINT(EM_DIAGRAM):   end;
91423     +
91424     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
91425     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
91426     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
91427     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
91428     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91429     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91430     +end;
MPRINT(EM_DIAGRAM):   end;
91431     +else do;
MPRINT(EM_DIAGRAM):   else do;
91432     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91433     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
91434     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91435     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91436     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
91437     +   end;
MPRINT(EM_DIAGRAM):   end;
91438     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91439     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
91440     +   end;
MPRINT(EM_DIAGRAM):   end;
91441     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91442     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
91443     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91444     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91445     +   end;
MPRINT(EM_DIAGRAM):   end;
91446     +end;
MPRINT(EM_DIAGRAM):   end;
91447     +
91448     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
91449     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
91450     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
91451     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
91452     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91453     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91454     +end;
MPRINT(EM_DIAGRAM):   end;
91455     +else do;
MPRINT(EM_DIAGRAM):   else do;
91456     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91457     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
91458     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91459     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
91460     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
91461     +   end;
MPRINT(EM_DIAGRAM):   end;
91462     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
91463     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
91464     +   end;
MPRINT(EM_DIAGRAM):   end;
91465     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91466     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
91467     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91468     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91469     +   end;
MPRINT(EM_DIAGRAM):   end;
91470     +end;
MPRINT(EM_DIAGRAM):   end;
91471     +
91472     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
91473     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
91474     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
91475     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
91476     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
91477     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
91478     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
91479     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
91480     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
91481     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
91482     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
91483     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
91484     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91485     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91486     +end;
MPRINT(EM_DIAGRAM):   end;
91487     +else do;
MPRINT(EM_DIAGRAM):   else do;
91488     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
91489     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
91490     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91491     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
91492     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
91493     +   end;
MPRINT(EM_DIAGRAM):   end;
91494     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
91495     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
91496     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
91497     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
91498     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
91499     +   end;
MPRINT(EM_DIAGRAM):   end;
91500     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
91501     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
91502     +   end;
MPRINT(EM_DIAGRAM):   end;
91503     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
91504     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
91505     +   end;
MPRINT(EM_DIAGRAM):   end;
91506     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
91507     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
91508     +   end;
MPRINT(EM_DIAGRAM):   end;
91509     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91510     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
91511     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
91512     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
91513     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
91514     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91515     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91516     +   end;
MPRINT(EM_DIAGRAM):   end;
91517     +end;
MPRINT(EM_DIAGRAM):   end;
91518     +
91519     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
91520     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
91521     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
91522     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
91523     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
91524     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
91525     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
91526     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
91527     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
91528     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
91529     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
91530     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
91531     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
91532     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91533     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91534     +end;
MPRINT(EM_DIAGRAM):   end;
91535     +else do;
MPRINT(EM_DIAGRAM):   else do;
91536     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
91537     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
91538     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91539     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
91540     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
91541     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
91542     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
91543     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
91544     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
91545     +         end;
MPRINT(EM_DIAGRAM):   end;
91546     +         else do;
MPRINT(EM_DIAGRAM):   else do;
91547     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
91548     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
91549     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
91550     +            end;
MPRINT(EM_DIAGRAM):   end;
91551     +         end;
MPRINT(EM_DIAGRAM):   end;
91552     +      end;
MPRINT(EM_DIAGRAM):   end;
91553     +      else do;
MPRINT(EM_DIAGRAM):   else do;
91554     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
91555     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
91556     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
91557     +         end;
MPRINT(EM_DIAGRAM):   end;
91558     +      end;
MPRINT(EM_DIAGRAM):   end;
91559     +   end;
MPRINT(EM_DIAGRAM):   end;
91560     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91561     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
91562     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
91563     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
91564     +      end;
MPRINT(EM_DIAGRAM):   end;
91565     +      else do;
MPRINT(EM_DIAGRAM):   else do;
91566     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
91567     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
91568     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
91569     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
91570     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
91571     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
91572     +         end;
MPRINT(EM_DIAGRAM):   end;
91573     +      end;
MPRINT(EM_DIAGRAM):   end;
91574     +   end;
MPRINT(EM_DIAGRAM):   end;
91575     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
91576     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
91577     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
91578     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
91579     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
91580     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91581     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91582     +   end;
MPRINT(EM_DIAGRAM):   end;
91583     +end;
MPRINT(EM_DIAGRAM):   end;
91584     +
91585     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91586     +*** Checking missing input Interval
91587     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
91588     +
91589     +IF NMISS(
91590     +   AcceptedCmpTotal ,
91591     +   Age ,
91592     +   Frq ,
91593     +   Income ,
91594     +   Kidhome ,
91595     +   MntFishProducts ,
91596     +   MntFruits ,
91597     +   MntGoldProds ,
91598     +   MntSweetProducts ,
91599     +   MonthsAsCustomer ,
91600     +   NumDealsPurchases ,
91601     +   NumWebVisitsMonth ,
91602     +   RFMstat ,
91603     +   RMntFrq ,
91604     +   Recency ,
91605     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
91606     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
91607     +
91608     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91609     +END;
MPRINT(EM_DIAGRAM):   END;
91610     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91611     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
91612     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91613     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
91614     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
91615     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
91616     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
91617     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
91618     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
91619     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
91620     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
91621     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
91622     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
91623     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
91624     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
91625     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
91626     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
91627     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
91628     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
91629     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
91630     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
91631     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
91632     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
91633     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
91634     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
91635     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
91636     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
91637     +END;
MPRINT(EM_DIAGRAM):   END;
91638     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91639     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
91640     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
91641     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
91642     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
91643     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
91644     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
91645     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
91646     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
91647     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
91648     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
91649     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
91650     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
91651     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
91652     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
91653     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
91654     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
91655     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
91656     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
91657     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
91658     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
91659     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
91660     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
91661     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
91662     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
91663     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
91664     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
91665     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
91666     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
91667     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
91668     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
91669     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
91670     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
91671     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
91672     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
91673     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
91674     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
91675     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
91676     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
91677     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
91678     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
91679     +END;
MPRINT(EM_DIAGRAM):   END;
91680     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91681     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
91682     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91683     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91684     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
91685     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91686     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91687     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
91688     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91689     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
91690     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
91691     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
91692     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
91693     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
91694     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
91695     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
91696     +          +     -0.6473961304074 * S_MonthsAsCustomer
91697     +          +     0.68960902951007 * S_NumDealsPurchases
91698     +          +    -0.03600585273268 * S_NumWebVisitsMonth
91699     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
91700     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
91701     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
91702     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
91703     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
91704     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
91705     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
91706     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
91707     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
91708     +          +    -0.70674764548268 * S_MonthsAsCustomer
91709     +          +     0.03761139203619 * S_NumDealsPurchases
91710     +          +    -0.69359662485747 * S_NumWebVisitsMonth
91711     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
91712     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
91713     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
91714     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
91715     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
91716     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
91717     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
91718     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
91719     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
91720     +          +    -0.47559913836984 * S_MonthsAsCustomer
91721     +          +    -0.26961781245749 * S_NumDealsPurchases
91722     +          +    -0.67017962977412 * S_NumWebVisitsMonth
91723     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
91724     +        S_RMntFrq  +     0.67120737584665 * S_Recency
91725     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
91726     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
91727     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
91728     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
91729     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
91730     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
91731     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
91732     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
91733     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
91734     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
91735     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
91736     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
91737     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
91738     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
91739     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
91740     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
91741     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
91742     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
91743     +        EducationGraduation  +     0.46172475127934 * EducationMaster
91744     +          +    -0.18858032329482 * Marital_StatusDivorced
91745     +          +     0.16067956508072 * Marital_StatusMarried
91746     +          +    -0.90926406046237 * Marital_StatusSingle
91747     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
91748     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
91749     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
91750     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
91751     +          +     0.71998738170149 * Marital_StatusDivorced
91752     +          +    -1.53543515752013 * Marital_StatusMarried
91753     +          +     0.44068743694663 * Marital_StatusSingle
91754     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
91755     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
91756     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
91757     +        EducationGraduation  +     0.11252156068047 * EducationMaster
91758     +          +    -0.31683932084863 * Marital_StatusDivorced
91759     +          +     0.17674162427585 * Marital_StatusMarried
91760     +          +    -0.67064017247711 * Marital_StatusSingle
91761     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
91762     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
91763     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
91764     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
91765     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
91766     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
91767     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
91768     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
91769     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
91770     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
91771     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
91772     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
91773     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
91774     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
91775     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
91776     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
91777     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
91778     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
91779     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
91780     +END;
MPRINT(EM_DIAGRAM):   END;
91781     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91782     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
91783     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
91784     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
91785     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
91786     +END;
MPRINT(EM_DIAGRAM):   END;
91787     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91788     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
91789     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91790     +
91791     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
91792     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
91793     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
91794     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
91795     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
91796     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91797     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
91798     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
91799     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
91800     +end;
MPRINT(EM_DIAGRAM):   end;
91801     +else do;
MPRINT(EM_DIAGRAM):   else do;
91802     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
91803     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
91804     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
91805     +   end;
MPRINT(EM_DIAGRAM):   end;
91806     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
91807     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
91808     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
91809     +   end;
MPRINT(EM_DIAGRAM):   end;
91810     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91811     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
91812     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
91813     +   end;
MPRINT(EM_DIAGRAM):   end;
91814     +end;
MPRINT(EM_DIAGRAM):   end;
91815     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
91816     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
91817     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
91818     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
91819     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
91820     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
91821     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
91822     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
91823     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
91824     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
91825     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
91826     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
91827     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
91828     +END;
MPRINT(EM_DIAGRAM):   END;
91829     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
91830     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
91831     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
91832     +END;
MPRINT(EM_DIAGRAM):   END;
91833     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
91834     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
91835     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
91836     +END;
MPRINT(EM_DIAGRAM):   END;
91837     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
91838     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
91839     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
91840     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
91841     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
91842     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
91843     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
91844     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91845     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
91846     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
91847     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
91848     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
91849     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
91850     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
91851     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
91852     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
91853     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
91854     +END;
MPRINT(EM_DIAGRAM):   END;
91855     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
91856     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
91857     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
91858     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
91859     +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
91860     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91861     +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
91862     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91863     +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
91864     +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
91865     +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
91866     +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
91867     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91868     +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
91869     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91870     +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
91871     +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
91872     +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
91873     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91874     +* Ensmbl55: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 5 of 7;
91875     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91876     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91877     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
91878     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
91879     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
91880     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
91881     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
91882     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
91883     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
91884     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
91885     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
91886     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
91887     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
91888     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
91889     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
91890     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
91891     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
91892     +LENGTH _WARN_ $4
91893     +      F_DepVar  $ 12
91894     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
91895     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
91896     +
91897     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
91898     +
91899     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
91900     +
91901     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
91902     +
91903     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
91904     +
91905     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
91906     +
91907     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
91908     +
91909     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
91910     +
91911     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
91912     +
91913     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
91914     +
91915     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
91916     +
91917     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
91918     +
91919     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
91920     +
91921     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
91922     +
91923     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
91924     +
91925     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
91926     +
91927     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
91928     +
91929     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
91930     +
91931     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
91932     +
91933     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
91934     +
91935     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
91936     +
91937     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
91938     +
91939     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
91940     +
91941     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
91942     +
91943     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
91944     +
91945     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
91946     +
91947     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
91948     +
91949     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
91950     +
91951     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
91952     +
91953     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
91954     +
91955     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
91956     +
91957     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
91958     +
91959     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
91960     +
91961     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
91962     +
91963     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
91964     +
91965     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
91966     +
91967     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
91968     +
91969     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
91970     +
91971     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
91972     +
91973     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
91974     +
91975     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
91976     +
91977     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
91978     +
91979     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
91980     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
91981     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
91982     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
91983     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
91984     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
91985     +end;
MPRINT(EM_DIAGRAM):   end;
91986     +else do;
MPRINT(EM_DIAGRAM):   else do;
91987     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
91988     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
91989     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
91990     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
91991     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
91992     +   end;
MPRINT(EM_DIAGRAM):   end;
91993     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
91994     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
91995     +   end;
MPRINT(EM_DIAGRAM):   end;
91996     +   else do;
MPRINT(EM_DIAGRAM):   else do;
91997     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
91998     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
91999     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92000     +   end;
MPRINT(EM_DIAGRAM):   end;
92001     +end;
MPRINT(EM_DIAGRAM):   end;
92002     +
92003     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
92004     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
92005     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
92006     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
92007     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92008     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92009     +end;
MPRINT(EM_DIAGRAM):   end;
92010     +else do;
MPRINT(EM_DIAGRAM):   else do;
92011     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92012     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
92013     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92014     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92015     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
92016     +   end;
MPRINT(EM_DIAGRAM):   end;
92017     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92018     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
92019     +   end;
MPRINT(EM_DIAGRAM):   end;
92020     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92021     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
92022     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92023     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92024     +   end;
MPRINT(EM_DIAGRAM):   end;
92025     +end;
MPRINT(EM_DIAGRAM):   end;
92026     +
92027     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
92028     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
92029     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
92030     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
92031     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92032     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92033     +end;
MPRINT(EM_DIAGRAM):   end;
92034     +else do;
MPRINT(EM_DIAGRAM):   else do;
92035     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92036     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
92037     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92038     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92039     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
92040     +   end;
MPRINT(EM_DIAGRAM):   end;
92041     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92042     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
92043     +   end;
MPRINT(EM_DIAGRAM):   end;
92044     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92045     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
92046     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92047     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92048     +   end;
MPRINT(EM_DIAGRAM):   end;
92049     +end;
MPRINT(EM_DIAGRAM):   end;
92050     +
92051     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
92052     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
92053     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
92054     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
92055     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92056     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92057     +end;
MPRINT(EM_DIAGRAM):   end;
92058     +else do;
MPRINT(EM_DIAGRAM):   else do;
92059     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92060     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
92061     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92062     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92063     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
92064     +   end;
MPRINT(EM_DIAGRAM):   end;
92065     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92066     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
92067     +   end;
MPRINT(EM_DIAGRAM):   end;
92068     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92069     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
92070     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92071     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92072     +   end;
MPRINT(EM_DIAGRAM):   end;
92073     +end;
MPRINT(EM_DIAGRAM):   end;
92074     +
92075     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
92076     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
92077     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
92078     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
92079     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92080     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92081     +end;
MPRINT(EM_DIAGRAM):   end;
92082     +else do;
MPRINT(EM_DIAGRAM):   else do;
92083     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92084     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
92085     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92086     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92087     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
92088     +   end;
MPRINT(EM_DIAGRAM):   end;
92089     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92090     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
92091     +   end;
MPRINT(EM_DIAGRAM):   end;
92092     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92093     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
92094     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92095     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92096     +   end;
MPRINT(EM_DIAGRAM):   end;
92097     +end;
MPRINT(EM_DIAGRAM):   end;
92098     +
92099     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
92100     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
92101     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
92102     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
92103     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92104     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92105     +end;
MPRINT(EM_DIAGRAM):   end;
92106     +else do;
MPRINT(EM_DIAGRAM):   else do;
92107     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92108     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
92109     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92110     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92111     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
92112     +   end;
MPRINT(EM_DIAGRAM):   end;
92113     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92114     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
92115     +   end;
MPRINT(EM_DIAGRAM):   end;
92116     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92117     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
92118     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92119     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92120     +   end;
MPRINT(EM_DIAGRAM):   end;
92121     +end;
MPRINT(EM_DIAGRAM):   end;
92122     +
92123     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
92124     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
92125     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
92126     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
92127     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92128     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92129     +end;
MPRINT(EM_DIAGRAM):   end;
92130     +else do;
MPRINT(EM_DIAGRAM):   else do;
92131     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92132     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
92133     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92134     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
92135     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
92136     +   end;
MPRINT(EM_DIAGRAM):   end;
92137     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
92138     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
92139     +   end;
MPRINT(EM_DIAGRAM):   end;
92140     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92141     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
92142     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92143     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92144     +   end;
MPRINT(EM_DIAGRAM):   end;
92145     +end;
MPRINT(EM_DIAGRAM):   end;
92146     +
92147     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
92148     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
92149     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
92150     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
92151     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
92152     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
92153     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
92154     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
92155     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
92156     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
92157     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
92158     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
92159     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92160     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92161     +end;
MPRINT(EM_DIAGRAM):   end;
92162     +else do;
MPRINT(EM_DIAGRAM):   else do;
92163     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
92164     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
92165     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92166     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
92167     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
92168     +   end;
MPRINT(EM_DIAGRAM):   end;
92169     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
92170     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
92171     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
92172     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
92173     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
92174     +   end;
MPRINT(EM_DIAGRAM):   end;
92175     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
92176     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
92177     +   end;
MPRINT(EM_DIAGRAM):   end;
92178     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
92179     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
92180     +   end;
MPRINT(EM_DIAGRAM):   end;
92181     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
92182     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
92183     +   end;
MPRINT(EM_DIAGRAM):   end;
92184     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92185     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
92186     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
92187     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
92188     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
92189     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92190     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92191     +   end;
MPRINT(EM_DIAGRAM):   end;
92192     +end;
MPRINT(EM_DIAGRAM):   end;
92193     +
92194     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
92195     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
92196     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
92197     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
92198     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
92199     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
92200     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
92201     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
92202     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
92203     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
92204     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
92205     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
92206     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
92207     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92208     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92209     +end;
MPRINT(EM_DIAGRAM):   end;
92210     +else do;
MPRINT(EM_DIAGRAM):   else do;
92211     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
92212     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
92213     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92214     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
92215     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
92216     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
92217     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
92218     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
92219     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92220     +         end;
MPRINT(EM_DIAGRAM):   end;
92221     +         else do;
MPRINT(EM_DIAGRAM):   else do;
92222     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
92223     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
92224     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92225     +            end;
MPRINT(EM_DIAGRAM):   end;
92226     +         end;
MPRINT(EM_DIAGRAM):   end;
92227     +      end;
MPRINT(EM_DIAGRAM):   end;
92228     +      else do;
MPRINT(EM_DIAGRAM):   else do;
92229     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
92230     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
92231     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92232     +         end;
MPRINT(EM_DIAGRAM):   end;
92233     +      end;
MPRINT(EM_DIAGRAM):   end;
92234     +   end;
MPRINT(EM_DIAGRAM):   end;
92235     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92236     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
92237     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
92238     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92239     +      end;
MPRINT(EM_DIAGRAM):   end;
92240     +      else do;
MPRINT(EM_DIAGRAM):   else do;
92241     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
92242     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
92243     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
92244     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
92245     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
92246     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92247     +         end;
MPRINT(EM_DIAGRAM):   end;
92248     +      end;
MPRINT(EM_DIAGRAM):   end;
92249     +   end;
MPRINT(EM_DIAGRAM):   end;
92250     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
92251     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
92252     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
92253     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
92254     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
92255     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92256     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92257     +   end;
MPRINT(EM_DIAGRAM):   end;
92258     +end;
MPRINT(EM_DIAGRAM):   end;
92259     +
92260     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92261     +*** Checking missing input Interval
92262     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
92263     +
92264     +IF NMISS(
92265     +   AcceptedCmpTotal ,
92266     +   Age ,
92267     +   Frq ,
92268     +   Income ,
92269     +   Kidhome ,
92270     +   MntFishProducts ,
92271     +   MntFruits ,
92272     +   MntGoldProds ,
92273     +   MntSweetProducts ,
92274     +   MonthsAsCustomer ,
92275     +   NumDealsPurchases ,
92276     +   NumWebVisitsMonth ,
92277     +   RFMstat ,
92278     +   RMntFrq ,
92279     +   Recency ,
92280     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
92281     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
92282     +
92283     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92284     +END;
MPRINT(EM_DIAGRAM):   END;
92285     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92286     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
92287     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92288     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
92289     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
92290     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
92291     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
92292     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
92293     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
92294     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
92295     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
92296     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
92297     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
92298     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
92299     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
92300     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
92301     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
92302     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
92303     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
92304     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
92305     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
92306     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
92307     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
92308     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
92309     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
92310     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
92311     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
92312     +END;
MPRINT(EM_DIAGRAM):   END;
92313     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
92314     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
92315     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
92316     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
92317     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
92318     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
92319     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
92320     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
92321     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
92322     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
92323     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
92324     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
92325     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
92326     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
92327     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
92328     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
92329     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
92330     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
92331     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
92332     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
92333     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
92334     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
92335     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
92336     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
92337     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
92338     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
92339     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
92340     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
92341     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
92342     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
92343     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
92344     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
92345     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
92346     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
92347     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
92348     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
92349     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
92350     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
92351     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
92352     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
92353     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
92354     +END;
MPRINT(EM_DIAGRAM):   END;
92355     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92356     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
92357     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92358     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92359     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
92360     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92361     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92362     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
92363     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92364     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
92365     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
92366     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
92367     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
92368     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
92369     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
92370     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
92371     +          +     -0.1740957673716 * S_MonthsAsCustomer
92372     +          +     0.66565026405117 * S_NumDealsPurchases
92373     +          +     0.43247206282836 * S_NumWebVisitsMonth
92374     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
92375     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
92376     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
92377     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
92378     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
92379     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
92380     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
92381     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
92382     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
92383     +          +    -0.06176784990963 * S_MonthsAsCustomer
92384     +          +    -0.11740415005833 * S_NumDealsPurchases
92385     +          +    -0.17084845478672 * S_NumWebVisitsMonth
92386     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
92387     +        S_RMntFrq  +     0.54983271222574 * S_Recency
92388     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
92389     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
92390     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
92391     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
92392     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
92393     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
92394     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
92395     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
92396     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
92397     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
92398     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
92399     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
92400     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
92401     +        EducationGraduation  +     0.22632282500966 * EducationMaster
92402     +          +     -0.0800438380883 * Marital_StatusDivorced
92403     +          +     0.44505766937623 * Marital_StatusMarried
92404     +          +    -0.57546515626468 * Marital_StatusSingle
92405     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
92406     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
92407     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
92408     +        EducationGraduation  +      0.0794165981215 * EducationMaster
92409     +          +    -0.20291653465543 * Marital_StatusDivorced
92410     +          +     0.39547414450617 * Marital_StatusMarried
92411     +          +    -0.37001331184001 * Marital_StatusSingle
92412     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
92413     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
92414     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
92415     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
92416     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
92417     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
92418     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
92419     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
92420     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
92421     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
92422     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
92423     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
92424     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
92425     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
92426     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
92427     +END;
MPRINT(EM_DIAGRAM):   END;
92428     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
92429     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
92430     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
92431     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
92432     +END;
MPRINT(EM_DIAGRAM):   END;
92433     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92434     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
92435     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92436     +
92437     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
92438     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
92439     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
92440     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
92441     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
92442     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92443     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
92444     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
92445     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
92446     +end;
MPRINT(EM_DIAGRAM):   end;
92447     +else do;
MPRINT(EM_DIAGRAM):   else do;
92448     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
92449     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
92450     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
92451     +   end;
MPRINT(EM_DIAGRAM):   end;
92452     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
92453     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
92454     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
92455     +   end;
MPRINT(EM_DIAGRAM):   end;
92456     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92457     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
92458     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
92459     +   end;
MPRINT(EM_DIAGRAM):   end;
92460     +end;
MPRINT(EM_DIAGRAM):   end;
92461     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
92462     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
92463     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
92464     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
92465     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
92466     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
92467     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
92468     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
92469     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
92470     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
92471     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
92472     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
92473     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
92474     +END;
MPRINT(EM_DIAGRAM):   END;
92475     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
92476     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
92477     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
92478     +END;
MPRINT(EM_DIAGRAM):   END;
92479     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
92480     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
92481     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
92482     +END;
MPRINT(EM_DIAGRAM):   END;
92483     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
92484     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
92485     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
92486     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
92487     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
92488     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
92489     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
92490     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92491     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
92492     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92493     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
92494     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
92495     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
92496     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
92497     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
92498     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
92499     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
92500     +END;
MPRINT(EM_DIAGRAM):   END;
92501     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
92502     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
92503     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
92504     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
92505     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
92506     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92507     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
92508     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92509     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
92510     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
92511     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
92512     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
92513     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92514     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
92515     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92516     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
92517     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
92518     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
92519     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92520     +* Ensmbl55: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 6 of 7;
92521     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92522     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92523     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
92524     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
92525     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
92526     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92527     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
92528     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
92529     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
92530     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
92531     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
92532     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
92533     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
92534     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
92535     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
92536     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
92537     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
92538     +LENGTH _WARN_ $4
92539     +      F_DepVar  $ 12
92540     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
92541     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
92542     +
92543     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
92544     +
92545     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
92546     +
92547     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
92548     +
92549     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
92550     +
92551     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
92552     +
92553     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
92554     +
92555     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
92556     +
92557     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
92558     +
92559     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
92560     +
92561     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
92562     +
92563     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
92564     +
92565     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
92566     +
92567     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
92568     +
92569     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
92570     +
92571     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
92572     +
92573     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
92574     +
92575     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
92576     +
92577     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
92578     +
92579     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
92580     +
92581     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
92582     +
92583     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
92584     +
92585     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
92586     +
92587     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
92588     +
92589     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
92590     +
92591     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
92592     +
92593     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
92594     +
92595     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
92596     +
92597     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
92598     +
92599     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
92600     +
92601     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
92602     +
92603     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
92604     +
92605     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
92606     +
92607     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
92608     +
92609     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
92610     +
92611     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
92612     +
92613     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
92614     +
92615     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
92616     +
92617     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
92618     +
92619     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
92620     +
92621     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
92622     +
92623     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
92624     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
92625     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
92626     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
92627     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92628     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92629     +end;
MPRINT(EM_DIAGRAM):   end;
92630     +else do;
MPRINT(EM_DIAGRAM):   else do;
92631     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92632     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
92633     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92634     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92635     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
92636     +   end;
MPRINT(EM_DIAGRAM):   end;
92637     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92638     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
92639     +   end;
MPRINT(EM_DIAGRAM):   end;
92640     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92641     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
92642     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92643     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92644     +   end;
MPRINT(EM_DIAGRAM):   end;
92645     +end;
MPRINT(EM_DIAGRAM):   end;
92646     +
92647     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
92648     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
92649     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
92650     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
92651     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92652     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92653     +end;
MPRINT(EM_DIAGRAM):   end;
92654     +else do;
MPRINT(EM_DIAGRAM):   else do;
92655     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92656     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
92657     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92658     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92659     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
92660     +   end;
MPRINT(EM_DIAGRAM):   end;
92661     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92662     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
92663     +   end;
MPRINT(EM_DIAGRAM):   end;
92664     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92665     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
92666     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92667     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92668     +   end;
MPRINT(EM_DIAGRAM):   end;
92669     +end;
MPRINT(EM_DIAGRAM):   end;
92670     +
92671     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
92672     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
92673     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
92674     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
92675     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92676     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92677     +end;
MPRINT(EM_DIAGRAM):   end;
92678     +else do;
MPRINT(EM_DIAGRAM):   else do;
92679     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92680     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
92681     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92682     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92683     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
92684     +   end;
MPRINT(EM_DIAGRAM):   end;
92685     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92686     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
92687     +   end;
MPRINT(EM_DIAGRAM):   end;
92688     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92689     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
92690     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92691     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92692     +   end;
MPRINT(EM_DIAGRAM):   end;
92693     +end;
MPRINT(EM_DIAGRAM):   end;
92694     +
92695     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
92696     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
92697     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
92698     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
92699     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92700     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92701     +end;
MPRINT(EM_DIAGRAM):   end;
92702     +else do;
MPRINT(EM_DIAGRAM):   else do;
92703     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92704     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
92705     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92706     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92707     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
92708     +   end;
MPRINT(EM_DIAGRAM):   end;
92709     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92710     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
92711     +   end;
MPRINT(EM_DIAGRAM):   end;
92712     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92713     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
92714     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92715     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92716     +   end;
MPRINT(EM_DIAGRAM):   end;
92717     +end;
MPRINT(EM_DIAGRAM):   end;
92718     +
92719     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
92720     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
92721     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
92722     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
92723     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92724     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92725     +end;
MPRINT(EM_DIAGRAM):   end;
92726     +else do;
MPRINT(EM_DIAGRAM):   else do;
92727     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92728     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
92729     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92730     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92731     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
92732     +   end;
MPRINT(EM_DIAGRAM):   end;
92733     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92734     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
92735     +   end;
MPRINT(EM_DIAGRAM):   end;
92736     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92737     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
92738     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92739     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92740     +   end;
MPRINT(EM_DIAGRAM):   end;
92741     +end;
MPRINT(EM_DIAGRAM):   end;
92742     +
92743     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
92744     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
92745     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
92746     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
92747     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92748     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92749     +end;
MPRINT(EM_DIAGRAM):   end;
92750     +else do;
MPRINT(EM_DIAGRAM):   else do;
92751     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92752     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
92753     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92754     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
92755     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
92756     +   end;
MPRINT(EM_DIAGRAM):   end;
92757     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
92758     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
92759     +   end;
MPRINT(EM_DIAGRAM):   end;
92760     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92761     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
92762     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92763     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92764     +   end;
MPRINT(EM_DIAGRAM):   end;
92765     +end;
MPRINT(EM_DIAGRAM):   end;
92766     +
92767     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
92768     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
92769     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
92770     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
92771     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92772     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92773     +end;
MPRINT(EM_DIAGRAM):   end;
92774     +else do;
MPRINT(EM_DIAGRAM):   else do;
92775     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
92776     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
92777     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92778     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
92779     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
92780     +   end;
MPRINT(EM_DIAGRAM):   end;
92781     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
92782     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
92783     +   end;
MPRINT(EM_DIAGRAM):   end;
92784     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92785     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
92786     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92787     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92788     +   end;
MPRINT(EM_DIAGRAM):   end;
92789     +end;
MPRINT(EM_DIAGRAM):   end;
92790     +
92791     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
92792     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
92793     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
92794     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
92795     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
92796     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
92797     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
92798     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
92799     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
92800     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
92801     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
92802     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
92803     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92804     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92805     +end;
MPRINT(EM_DIAGRAM):   end;
92806     +else do;
MPRINT(EM_DIAGRAM):   else do;
92807     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
92808     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
92809     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92810     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
92811     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
92812     +   end;
MPRINT(EM_DIAGRAM):   end;
92813     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
92814     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
92815     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
92816     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
92817     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
92818     +   end;
MPRINT(EM_DIAGRAM):   end;
92819     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
92820     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
92821     +   end;
MPRINT(EM_DIAGRAM):   end;
92822     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
92823     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
92824     +   end;
MPRINT(EM_DIAGRAM):   end;
92825     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
92826     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
92827     +   end;
MPRINT(EM_DIAGRAM):   end;
92828     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92829     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
92830     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
92831     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
92832     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
92833     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92834     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92835     +   end;
MPRINT(EM_DIAGRAM):   end;
92836     +end;
MPRINT(EM_DIAGRAM):   end;
92837     +
92838     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
92839     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
92840     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
92841     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
92842     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
92843     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
92844     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
92845     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
92846     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
92847     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
92848     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
92849     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
92850     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
92851     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
92852     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92853     +end;
MPRINT(EM_DIAGRAM):   end;
92854     +else do;
MPRINT(EM_DIAGRAM):   else do;
92855     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
92856     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
92857     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
92858     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
92859     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
92860     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
92861     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
92862     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
92863     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92864     +         end;
MPRINT(EM_DIAGRAM):   end;
92865     +         else do;
MPRINT(EM_DIAGRAM):   else do;
92866     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
92867     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
92868     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92869     +            end;
MPRINT(EM_DIAGRAM):   end;
92870     +         end;
MPRINT(EM_DIAGRAM):   end;
92871     +      end;
MPRINT(EM_DIAGRAM):   end;
92872     +      else do;
MPRINT(EM_DIAGRAM):   else do;
92873     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
92874     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
92875     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92876     +         end;
MPRINT(EM_DIAGRAM):   end;
92877     +      end;
MPRINT(EM_DIAGRAM):   end;
92878     +   end;
MPRINT(EM_DIAGRAM):   end;
92879     +   else do;
MPRINT(EM_DIAGRAM):   else do;
92880     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
92881     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
92882     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92883     +      end;
MPRINT(EM_DIAGRAM):   end;
92884     +      else do;
MPRINT(EM_DIAGRAM):   else do;
92885     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
92886     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
92887     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
92888     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
92889     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
92890     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
92891     +         end;
MPRINT(EM_DIAGRAM):   end;
92892     +      end;
MPRINT(EM_DIAGRAM):   end;
92893     +   end;
MPRINT(EM_DIAGRAM):   end;
92894     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
92895     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
92896     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
92897     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
92898     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
92899     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
92900     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92901     +   end;
MPRINT(EM_DIAGRAM):   end;
92902     +end;
MPRINT(EM_DIAGRAM):   end;
92903     +
92904     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92905     +*** Checking missing input Interval
92906     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
92907     +
92908     +IF NMISS(
92909     +   AcceptedCmpTotal ,
92910     +   Age ,
92911     +   Frq ,
92912     +   Income ,
92913     +   Kidhome ,
92914     +   MntFishProducts ,
92915     +   MntFruits ,
92916     +   MntGoldProds ,
92917     +   MntSweetProducts ,
92918     +   MonthsAsCustomer ,
92919     +   NumDealsPurchases ,
92920     +   NumWebVisitsMonth ,
92921     +   RFMstat ,
92922     +   RMntFrq ,
92923     +   Recency ,
92924     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
92925     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
92926     +
92927     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
92928     +END;
MPRINT(EM_DIAGRAM):   END;
92929     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92930     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
92931     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
92932     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
92933     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
92934     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
92935     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
92936     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
92937     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
92938     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
92939     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
92940     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
92941     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
92942     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
92943     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
92944     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
92945     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
92946     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
92947     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
92948     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
92949     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
92950     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
92951     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
92952     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
92953     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
92954     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
92955     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
92956     +END;
MPRINT(EM_DIAGRAM):   END;
92957     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
92958     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
92959     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
92960     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
92961     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
92962     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
92963     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
92964     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
92965     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
92966     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
92967     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
92968     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
92969     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
92970     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
92971     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
92972     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
92973     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
92974     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
92975     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
92976     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
92977     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
92978     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
92979     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
92980     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
92981     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
92982     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
92983     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
92984     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
92985     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
92986     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
92987     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
92988     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
92989     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
92990     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
92991     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
92992     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
92993     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
92994     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
92995     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
92996     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
92997     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
92998     +END;
MPRINT(EM_DIAGRAM):   END;
92999     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93000     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
93001     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93002     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93003     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
93004     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93005     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93006     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
93007     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93008     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93009     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
93010     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
93011     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
93012     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
93013     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
93014     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
93015     +          +     0.07696704519183 * S_MonthsAsCustomer
93016     +          +     0.06885982009617 * S_NumDealsPurchases
93017     +          +     0.18284147478918 * S_NumWebVisitsMonth
93018     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
93019     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
93020     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
93021     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
93022     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
93023     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
93024     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
93025     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
93026     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
93027     +          +     0.19400730773464 * S_MonthsAsCustomer
93028     +          +    -1.36455521037197 * S_NumDealsPurchases
93029     +          +    -1.07068059346196 * S_NumWebVisitsMonth
93030     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
93031     +        S_RMntFrq  +     1.36066079800227 * S_Recency
93032     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
93033     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
93034     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
93035     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
93036     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
93037     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
93038     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
93039     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
93040     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
93041     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
93042     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
93043     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
93044     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
93045     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
93046     +          +     0.23432241402098 * Marital_StatusDivorced
93047     +          +    -0.46302700269027 * Marital_StatusMarried
93048     +          +      0.4032168653504 * Marital_StatusSingle
93049     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
93050     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
93051     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
93052     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
93053     +          +    -0.31347503340603 * Marital_StatusDivorced
93054     +          +    -0.20319530959178 * Marital_StatusMarried
93055     +          +     0.48298350411196 * Marital_StatusSingle
93056     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
93057     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
93058     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
93059     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
93060     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
93061     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
93062     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
93063     +END;
MPRINT(EM_DIAGRAM):   END;
93064     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93065     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
93066     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
93067     +END;
MPRINT(EM_DIAGRAM):   END;
93068     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93069     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
93070     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93071     +
93072     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
93073     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
93074     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
93075     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
93076     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
93077     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93078     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
93079     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
93080     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
93081     +end;
MPRINT(EM_DIAGRAM):   end;
93082     +else do;
MPRINT(EM_DIAGRAM):   else do;
93083     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
93084     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
93085     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
93086     +   end;
MPRINT(EM_DIAGRAM):   end;
93087     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
93088     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
93089     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
93090     +   end;
MPRINT(EM_DIAGRAM):   end;
93091     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93092     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
93093     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
93094     +   end;
MPRINT(EM_DIAGRAM):   end;
93095     +end;
MPRINT(EM_DIAGRAM):   end;
93096     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93097     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
93098     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
93099     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
93100     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
93101     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
93102     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
93103     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
93104     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
93105     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
93106     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
93107     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
93108     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
93109     +END;
MPRINT(EM_DIAGRAM):   END;
93110     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93111     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
93112     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
93113     +END;
MPRINT(EM_DIAGRAM):   END;
93114     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
93115     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
93116     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
93117     +END;
MPRINT(EM_DIAGRAM):   END;
93118     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
93119     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
93120     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
93121     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
93122     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
93123     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
93124     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
93125     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93126     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
93127     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93128     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
93129     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
93130     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
93131     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
93132     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
93133     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
93134     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
93135     +END;
MPRINT(EM_DIAGRAM):   END;
93136     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
93137     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
93138     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
93139     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
93140     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
93141     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93142     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
93143     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93144     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
93145     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
93146     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
93147     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
93148     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93149     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
93150     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93151     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
93152     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
93153     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
93154     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93155     +* Ensmbl55: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 7 of 7;
93156     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93157     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93158     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
93159     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
93160     +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
93161     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93162     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
93163     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
93164     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
93165     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
93166     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
93167     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
93168     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
93169     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
93170     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
93171     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
93172     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
93173     +LENGTH _WARN_ $4
93174     +      F_DepVar  $ 12
93175     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
93176     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
93177     +
93178     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
93179     +
93180     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
93181     +
93182     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
93183     +
93184     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
93185     +
93186     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
93187     +
93188     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
93189     +
93190     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
93191     +
93192     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
93193     +
93194     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
93195     +
93196     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
93197     +
93198     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
93199     +
93200     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
93201     +
93202     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
93203     +
93204     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
93205     +
93206     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
93207     +
93208     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
93209     +
93210     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
93211     +
93212     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
93213     +
93214     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
93215     +
93216     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
93217     +
93218     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
93219     +
93220     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
93221     +
93222     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
93223     +
93224     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
93225     +
93226     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
93227     +
93228     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
93229     +
93230     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
93231     +
93232     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
93233     +
93234     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
93235     +
93236     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
93237     +
93238     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
93239     +
93240     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
93241     +
93242     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
93243     +
93244     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
93245     +
93246     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
93247     +
93248     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
93249     +
93250     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
93251     +
93252     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
93253     +
93254     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
93255     +
93256     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
93257     +
93258     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
93259     +
93260     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
93261     +
93262     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
93263     +
93264     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
93265     +
93266     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
93267     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
93268     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
93269     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
93270     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93271     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93272     +end;
MPRINT(EM_DIAGRAM):   end;
93273     +else do;
MPRINT(EM_DIAGRAM):   else do;
93274     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93275     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
93276     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93277     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93278     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
93279     +   end;
MPRINT(EM_DIAGRAM):   end;
93280     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93281     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
93282     +   end;
MPRINT(EM_DIAGRAM):   end;
93283     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93284     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
93285     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93286     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93287     +   end;
MPRINT(EM_DIAGRAM):   end;
93288     +end;
MPRINT(EM_DIAGRAM):   end;
93289     +
93290     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
93291     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
93292     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
93293     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
93294     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93295     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93296     +end;
MPRINT(EM_DIAGRAM):   end;
93297     +else do;
MPRINT(EM_DIAGRAM):   else do;
93298     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93299     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
93300     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93301     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93302     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
93303     +   end;
MPRINT(EM_DIAGRAM):   end;
93304     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93305     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
93306     +   end;
MPRINT(EM_DIAGRAM):   end;
93307     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93308     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
93309     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93310     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93311     +   end;
MPRINT(EM_DIAGRAM):   end;
93312     +end;
MPRINT(EM_DIAGRAM):   end;
93313     +
93314     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
93315     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
93316     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
93317     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
93318     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93319     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93320     +end;
MPRINT(EM_DIAGRAM):   end;
93321     +else do;
MPRINT(EM_DIAGRAM):   else do;
93322     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93323     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
93324     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93325     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93326     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
93327     +   end;
MPRINT(EM_DIAGRAM):   end;
93328     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93329     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
93330     +   end;
MPRINT(EM_DIAGRAM):   end;
93331     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93332     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
93333     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93334     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93335     +   end;
MPRINT(EM_DIAGRAM):   end;
93336     +end;
MPRINT(EM_DIAGRAM):   end;
93337     +
93338     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
93339     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
93340     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
93341     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
93342     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93343     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93344     +end;
MPRINT(EM_DIAGRAM):   end;
93345     +else do;
MPRINT(EM_DIAGRAM):   else do;
93346     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93347     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
93348     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93349     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93350     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
93351     +   end;
MPRINT(EM_DIAGRAM):   end;
93352     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93353     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
93354     +   end;
MPRINT(EM_DIAGRAM):   end;
93355     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93356     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
93357     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93358     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93359     +   end;
MPRINT(EM_DIAGRAM):   end;
93360     +end;
MPRINT(EM_DIAGRAM):   end;
93361     +
93362     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
93363     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
93364     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
93365     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
93366     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93367     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93368     +end;
MPRINT(EM_DIAGRAM):   end;
93369     +else do;
MPRINT(EM_DIAGRAM):   else do;
93370     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93371     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
93372     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93373     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93374     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
93375     +   end;
MPRINT(EM_DIAGRAM):   end;
93376     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93377     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
93378     +   end;
MPRINT(EM_DIAGRAM):   end;
93379     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93380     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
93381     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93382     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93383     +   end;
MPRINT(EM_DIAGRAM):   end;
93384     +end;
MPRINT(EM_DIAGRAM):   end;
93385     +
93386     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
93387     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
93388     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
93389     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
93390     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93391     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93392     +end;
MPRINT(EM_DIAGRAM):   end;
93393     +else do;
MPRINT(EM_DIAGRAM):   else do;
93394     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93395     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
93396     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93397     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
93398     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
93399     +   end;
MPRINT(EM_DIAGRAM):   end;
93400     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
93401     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
93402     +   end;
MPRINT(EM_DIAGRAM):   end;
93403     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93404     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
93405     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93406     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93407     +   end;
MPRINT(EM_DIAGRAM):   end;
93408     +end;
MPRINT(EM_DIAGRAM):   end;
93409     +
93410     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
93411     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
93412     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
93413     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
93414     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93415     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93416     +end;
MPRINT(EM_DIAGRAM):   end;
93417     +else do;
MPRINT(EM_DIAGRAM):   else do;
93418     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
93419     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
93420     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93421     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
93422     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
93423     +   end;
MPRINT(EM_DIAGRAM):   end;
93424     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
93425     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
93426     +   end;
MPRINT(EM_DIAGRAM):   end;
93427     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93428     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
93429     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93430     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93431     +   end;
MPRINT(EM_DIAGRAM):   end;
93432     +end;
MPRINT(EM_DIAGRAM):   end;
93433     +
93434     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
93435     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
93436     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
93437     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
93438     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
93439     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
93440     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
93441     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
93442     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
93443     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
93444     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
93445     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
93446     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93447     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93448     +end;
MPRINT(EM_DIAGRAM):   end;
93449     +else do;
MPRINT(EM_DIAGRAM):   else do;
93450     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
93451     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
93452     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93453     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
93454     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
93455     +   end;
MPRINT(EM_DIAGRAM):   end;
93456     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
93457     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
93458     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
93459     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
93460     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
93461     +   end;
MPRINT(EM_DIAGRAM):   end;
93462     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
93463     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
93464     +   end;
MPRINT(EM_DIAGRAM):   end;
93465     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
93466     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
93467     +   end;
MPRINT(EM_DIAGRAM):   end;
93468     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
93469     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
93470     +   end;
MPRINT(EM_DIAGRAM):   end;
93471     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93472     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
93473     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
93474     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
93475     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
93476     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93477     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93478     +   end;
MPRINT(EM_DIAGRAM):   end;
93479     +end;
MPRINT(EM_DIAGRAM):   end;
93480     +
93481     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
93482     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
93483     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
93484     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
93485     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
93486     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
93487     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
93488     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
93489     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
93490     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
93491     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
93492     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
93493     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
93494     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
93495     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93496     +end;
MPRINT(EM_DIAGRAM):   end;
93497     +else do;
MPRINT(EM_DIAGRAM):   else do;
93498     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
93499     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
93500     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93501     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
93502     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
93503     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
93504     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
93505     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
93506     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93507     +         end;
MPRINT(EM_DIAGRAM):   end;
93508     +         else do;
MPRINT(EM_DIAGRAM):   else do;
93509     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
93510     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
93511     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93512     +            end;
MPRINT(EM_DIAGRAM):   end;
93513     +         end;
MPRINT(EM_DIAGRAM):   end;
93514     +      end;
MPRINT(EM_DIAGRAM):   end;
93515     +      else do;
MPRINT(EM_DIAGRAM):   else do;
93516     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
93517     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
93518     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93519     +         end;
MPRINT(EM_DIAGRAM):   end;
93520     +      end;
MPRINT(EM_DIAGRAM):   end;
93521     +   end;
MPRINT(EM_DIAGRAM):   end;
93522     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93523     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
93524     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
93525     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93526     +      end;
MPRINT(EM_DIAGRAM):   end;
93527     +      else do;
MPRINT(EM_DIAGRAM):   else do;
93528     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
93529     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
93530     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
93531     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
93532     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
93533     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
93534     +         end;
MPRINT(EM_DIAGRAM):   end;
93535     +      end;
MPRINT(EM_DIAGRAM):   end;
93536     +   end;
MPRINT(EM_DIAGRAM):   end;
93537     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
93538     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
93539     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
93540     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
93541     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
93542     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
93543     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93544     +   end;
MPRINT(EM_DIAGRAM):   end;
93545     +end;
MPRINT(EM_DIAGRAM):   end;
93546     +
93547     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93548     +*** Checking missing input Interval
93549     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
93550     +
93551     +IF NMISS(
93552     +   AcceptedCmpTotal ,
93553     +   Age ,
93554     +   Frq ,
93555     +   Income ,
93556     +   Kidhome ,
93557     +   MntFishProducts ,
93558     +   MntFruits ,
93559     +   MntGoldProds ,
93560     +   MntSweetProducts ,
93561     +   MonthsAsCustomer ,
93562     +   NumDealsPurchases ,
93563     +   NumWebVisitsMonth ,
93564     +   RFMstat ,
93565     +   RMntFrq ,
93566     +   Recency ,
93567     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
93568     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
93569     +
93570     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
93571     +END;
MPRINT(EM_DIAGRAM):   END;
93572     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93573     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
93574     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93575     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93576     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
93577     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
93578     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
93579     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
93580     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
93581     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
93582     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
93583     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
93584     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
93585     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
93586     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
93587     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
93588     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
93589     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
93590     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
93591     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
93592     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
93593     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
93594     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
93595     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
93596     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
93597     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
93598     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
93599     +END;
MPRINT(EM_DIAGRAM):   END;
93600     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93601     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
93602     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
93603     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
93604     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
93605     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
93606     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
93607     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
93608     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
93609     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
93610     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
93611     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
93612     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
93613     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
93614     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
93615     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
93616     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
93617     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
93618     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
93619     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
93620     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
93621     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
93622     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
93623     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
93624     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
93625     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
93626     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
93627     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
93628     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
93629     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
93630     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
93631     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
93632     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
93633     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
93634     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
93635     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
93636     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
93637     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
93638     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
93639     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
93640     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
93641     +END;
MPRINT(EM_DIAGRAM):   END;
93642     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93643     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
93644     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93645     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93646     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
93647     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93648     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93649     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
93650     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93651     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93652     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
93653     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
93654     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
93655     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
93656     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
93657     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
93658     +          +    -0.01191239814261 * S_MonthsAsCustomer
93659     +          +      -0.307259983666 * S_NumDealsPurchases
93660     +          +    -0.23972300101674 * S_NumWebVisitsMonth
93661     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
93662     +        S_RMntFrq  +     0.32671320165482 * S_Recency
93663     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
93664     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
93665     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
93666     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
93667     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
93668     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
93669     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
93670     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
93671     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
93672     +          +     -0.0692762335753 * Marital_StatusDivorced
93673     +          +     0.02472293911071 * Marital_StatusMarried
93674     +          +     0.04038393550437 * Marital_StatusSingle
93675     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
93676     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
93677     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
93678     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
93679     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
93680     +END;
MPRINT(EM_DIAGRAM):   END;
93681     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93682     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
93683     +END;
MPRINT(EM_DIAGRAM):   END;
93684     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93685     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
93686     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93687     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93688     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
93689     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
93690     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
93691     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
93692     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
93693     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
93694     +          +     0.14524334187971 * S_MonthsAsCustomer
93695     +          +    -0.58464031025411 * S_NumDealsPurchases
93696     +          +    -0.10768856151333 * S_NumWebVisitsMonth
93697     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
93698     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
93699     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
93700     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
93701     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
93702     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
93703     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
93704     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
93705     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
93706     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
93707     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
93708     +          +     0.07007941100006 * Marital_StatusDivorced
93709     +          +     -0.7850554528889 * Marital_StatusMarried
93710     +          +     1.17661634109847 * Marital_StatusSingle
93711     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
93712     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
93713     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
93714     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
93715     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
93716     +END;
MPRINT(EM_DIAGRAM):   END;
93717     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93718     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
93719     +END;
MPRINT(EM_DIAGRAM):   END;
93720     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93721     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
93722     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93723     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93724     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
93725     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
93726     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
93727     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
93728     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
93729     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
93730     +          +    -2.17154324602167 * S_MonthsAsCustomer
93731     +          +    -1.39930460918007 * S_NumDealsPurchases
93732     +          +    -0.16044576482901 * S_NumWebVisitsMonth
93733     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
93734     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
93735     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
93736     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
93737     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
93738     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
93739     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
93740     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
93741     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
93742     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
93743     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
93744     +          +     0.83271778325587 * Marital_StatusDivorced
93745     +          +     0.79137899511518 * Marital_StatusMarried
93746     +          +    -0.51320080030576 * Marital_StatusSingle
93747     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
93748     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
93749     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
93750     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
93751     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
93752     +END;
MPRINT(EM_DIAGRAM):   END;
93753     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93754     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
93755     +END;
MPRINT(EM_DIAGRAM):   END;
93756     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93757     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
93758     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93759     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93760     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
93761     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
93762     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
93763     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
93764     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
93765     +END;
MPRINT(EM_DIAGRAM):   END;
93766     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93767     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
93768     +END;
MPRINT(EM_DIAGRAM):   END;
93769     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93770     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
93771     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93772     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93773     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
93774     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
93775     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
93776     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
93777     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
93778     +END;
MPRINT(EM_DIAGRAM):   END;
93779     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93780     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
93781     +END;
MPRINT(EM_DIAGRAM):   END;
93782     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93783     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
93784     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93785     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93786     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
93787     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
93788     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
93789     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
93790     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
93791     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
93792     +END;
MPRINT(EM_DIAGRAM):   END;
93793     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93794     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
93795     +END;
MPRINT(EM_DIAGRAM):   END;
93796     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93797     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
93798     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93799     +
93800     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
93801     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
93802     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
93803     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
93804     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
93805     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
93806     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
93807     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
93808     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
93809     +end;
MPRINT(EM_DIAGRAM):   end;
93810     +else do;
MPRINT(EM_DIAGRAM):   else do;
93811     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
93812     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
93813     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
93814     +   end;
MPRINT(EM_DIAGRAM):   end;
93815     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
93816     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
93817     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
93818     +   end;
MPRINT(EM_DIAGRAM):   end;
93819     +   else do;
MPRINT(EM_DIAGRAM):   else do;
93820     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
93821     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
93822     +   end;
MPRINT(EM_DIAGRAM):   end;
93823     +end;
MPRINT(EM_DIAGRAM):   end;
93824     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
93825     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
93826     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
93827     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
93828     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
93829     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
93830     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
93831     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
93832     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
93833     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
93834     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
93835     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
93836     +END;
MPRINT(EM_DIAGRAM):   END;
93837     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
93838     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
93839     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
93840     +END;
MPRINT(EM_DIAGRAM):   END;
93841     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
93842     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
93843     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
93844     +END;
MPRINT(EM_DIAGRAM):   END;
93845     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
93846     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
93847     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
93848     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
93849     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
93850     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
93851     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
93852     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93853     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
93854     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
93855     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
93856     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
93857     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
93858     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
93859     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
93860     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
93861     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
93862     +END;
MPRINT(EM_DIAGRAM):   END;
93863     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
93864     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
93865     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
93866     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
93867     +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
93868     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93869     +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
93870     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93871     +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
93872     +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
93873     +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
93874     +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
93875     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93876     +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
93877     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93878     +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
93879     +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
93880     +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
93881     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93882     +* Ensmbl55: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Maximum Posteriors of 7 models;
93883     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93884     +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
93885     +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
93886     +P_DepVar1 = max(
93887     +AutoNeural36_P_DepVar1 ,
93888     +AutoNeural35_P_DepVar1 ,
93889     +AutoNeural34_P_DepVar1 ,
93890     +AutoNeural40_P_DepVar1 ,
93891     +AutoNeural39_P_DepVar1 ,
93892     +AutoNeural38_P_DepVar1 ,
93893     +AutoNeural37_P_DepVar1
93894     +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural36_P_DepVar1 , AutoNeural35_P_DepVar1 , 
AutoNeural34_P_DepVar1 , AutoNeural40_P_DepVar1 , AutoNeural39_P_DepVar1 , 
AutoNeural38_P_DepVar1 , AutoNeural37_P_DepVar1 );
93895     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
93896     +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
93897     +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
93898     +end;
MPRINT(EM_DIAGRAM):   end;
93899     +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
93900     +P_DepVar0 = max(
93901     +AutoNeural36_P_DepVar0 ,
93902     +AutoNeural35_P_DepVar0 ,
93903     +AutoNeural34_P_DepVar0 ,
93904     +AutoNeural40_P_DepVar0 ,
93905     +AutoNeural39_P_DepVar0 ,
93906     +AutoNeural38_P_DepVar0 ,
93907     +AutoNeural37_P_DepVar0
93908     +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural36_P_DepVar0 , AutoNeural35_P_DepVar0 , 
AutoNeural34_P_DepVar0 , AutoNeural40_P_DepVar0 , AutoNeural39_P_DepVar0 , 
AutoNeural38_P_DepVar0 , AutoNeural37_P_DepVar0 );
93909     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
93910     +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
93911     +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
93912     +end;
MPRINT(EM_DIAGRAM):   end;
93913     +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
93914     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93915     +* Ensmbl55: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Classification Vars;
93916     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93917     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
93918     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
93919     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
93920     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
93921     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
93922     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
93923     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
93924     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
93925     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
93926     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
93927     +end;
MPRINT(EM_DIAGRAM):   end;
93928     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
93929     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
93930     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
93931     +end;
MPRINT(EM_DIAGRAM):   end;
93932     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
93933     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93934     +* Ensmbl55: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Producing Unformatted variable;
93935     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93936     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
93937     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
93938     +else
93939     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
93940     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93941     +* Ensmbl55: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing _WARN_ Variable;
93942     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93943     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
93944     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
93945     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
93946     +if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93946    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93947     +if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93947    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93948     +if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93948    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93949     +if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93949    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93950     +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93950    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93951     +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93951    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93952     +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93952    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93953     +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93953    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93954     +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93954    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93955     +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93955    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93956     +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93956    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93957     +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93957    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93958     +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93958    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93959     +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93959    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93960     +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93960    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93961     +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93961    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93962     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93962    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93963     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93963    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93964     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93964    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93965     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93965    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93966     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93966    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93967     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93967    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93968     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93968    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93969     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93969    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93970     +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
93970    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
93971     +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
93971    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
93972     +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
93972    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
93973     +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
93973    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
93974     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93975     +* Ensmbl55: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Residual Vars;
93976     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93977     +if
93978     +F_DepVar NE '1'
93979     +AND F_DepVar NE '0'
93980     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
93981     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
93982     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
93983     +end;
MPRINT(EM_DIAGRAM):   end;
93984     +else do;
MPRINT(EM_DIAGRAM):   else do;
93985     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
93986     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
93987     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
93988     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
93989     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
93990     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
93991     +END;
MPRINT(EM_DIAGRAM):   END;
93992     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
93993      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL55_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
93994      quit;
93995      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
93996      filename emflow
93996    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring AUTONEURAL36_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
93997      *------------------------------------------------------------*;
93998      * Ensmbl55: Scoring AUTONEURAL36_VALIDATE data;
93999      *------------------------------------------------------------*;
94000      data EMWS8.Ensmbl55_VALIDATE
94001      / view=EMWS8.Ensmbl55_VALIDATE
94002      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_VALIDATE / view=EMWS8.Ensmbl55_VALIDATE ;
94003      set EMWS8.AutoNeural36_VALIDATE
94004      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural36_VALIDATE ;
94005      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\EMFLOWSCORE.sas.
94006     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94007     +* Ensmbl55: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Combine model for DepVar;
94008     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94009     +* Ensmbl55: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 1 of 7;
94010     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94012     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
94013     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
94014     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
94015     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94016     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94017     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
94018     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
94019     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
94020     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94022     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
94023     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
94024     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
94025     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94026     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94027     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
94028     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
94029     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
94030     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94031     +
94032     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
94033     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
94033    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
94034     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
94035     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
94036     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
94037     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
94038     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
94039     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94040     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
94041     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
94042     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
94043     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94044     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94045     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
94046     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94047     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
94048     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
94049     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
94050     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94051     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
94052     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
94053     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
94054     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94055     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94056     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
94057     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
94058     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
94059     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94060     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94061     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
94062     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
94063     +* NODE: AutoNeural36;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural36;
94064     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94065     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
94066     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
94067     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
94068     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
94069     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
94070     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
94071     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
94072     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
94073     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
94074     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
94075     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
94076     +LENGTH _WARN_ $4
94077     +      F_DepVar  $ 12
94078     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
94079     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
94080     +
94081     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
94082     +
94083     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
94084     +
94085     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
94086     +
94087     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
94088     +
94089     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
94090     +
94091     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
94092     +
94093     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
94094     +
94095     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
94096     +
94097     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
94098     +
94099     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
94100     +
94101     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
94102     +
94103     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
94104     +
94105     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
94106     +
94107     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
94108     +
94109     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
94110     +
94111     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
94112     +
94113     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
94114     +
94115     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
94116     +
94117     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
94118     +
94119     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
94120     +
94121     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
94122     +
94123     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
94124     +
94125     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
94126     +
94127     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
94128     +
94129     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
94130     +
94131     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
94132     +
94133     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
94134     +
94135     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
94136     +
94137     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
94138     +
94139     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
94140     +
94141     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
94142     +
94143     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
94144     +
94145     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
94146     +
94147     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
94148     +
94149     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
94150     +
94151     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
94152     +
94153     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
94154     +
94155     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
94156     +
94157     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
94158     +
94159     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
94160     +
94161     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
94162     +
94163     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
94164     +
94165     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
94166     +
94167     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
94168     +
94169     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
94170     +
94171     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
94172     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
94173     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
94174     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
94175     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94176     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94177     +end;
MPRINT(EM_DIAGRAM):   end;
94178     +else do;
MPRINT(EM_DIAGRAM):   else do;
94179     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94180     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
94181     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94182     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94183     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
94184     +   end;
MPRINT(EM_DIAGRAM):   end;
94185     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94186     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
94187     +   end;
MPRINT(EM_DIAGRAM):   end;
94188     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94189     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
94190     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94191     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94192     +   end;
MPRINT(EM_DIAGRAM):   end;
94193     +end;
MPRINT(EM_DIAGRAM):   end;
94194     +
94195     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
94196     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
94197     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
94198     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
94199     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94200     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94201     +end;
MPRINT(EM_DIAGRAM):   end;
94202     +else do;
MPRINT(EM_DIAGRAM):   else do;
94203     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94204     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
94205     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94206     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94207     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
94208     +   end;
MPRINT(EM_DIAGRAM):   end;
94209     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94210     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
94211     +   end;
MPRINT(EM_DIAGRAM):   end;
94212     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94213     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
94214     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94215     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94216     +   end;
MPRINT(EM_DIAGRAM):   end;
94217     +end;
MPRINT(EM_DIAGRAM):   end;
94218     +
94219     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
94220     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
94221     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
94222     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
94223     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94224     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94225     +end;
MPRINT(EM_DIAGRAM):   end;
94226     +else do;
MPRINT(EM_DIAGRAM):   else do;
94227     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94228     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
94229     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94230     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94231     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
94232     +   end;
MPRINT(EM_DIAGRAM):   end;
94233     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94234     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
94235     +   end;
MPRINT(EM_DIAGRAM):   end;
94236     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94237     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
94238     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94239     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94240     +   end;
MPRINT(EM_DIAGRAM):   end;
94241     +end;
MPRINT(EM_DIAGRAM):   end;
94242     +
94243     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
94244     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
94245     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
94246     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
94247     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94248     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94249     +end;
MPRINT(EM_DIAGRAM):   end;
94250     +else do;
MPRINT(EM_DIAGRAM):   else do;
94251     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94252     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
94253     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94254     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94255     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
94256     +   end;
MPRINT(EM_DIAGRAM):   end;
94257     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94258     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
94259     +   end;
MPRINT(EM_DIAGRAM):   end;
94260     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94261     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
94262     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94263     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94264     +   end;
MPRINT(EM_DIAGRAM):   end;
94265     +end;
MPRINT(EM_DIAGRAM):   end;
94266     +
94267     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
94268     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
94269     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
94270     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
94271     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94272     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94273     +end;
MPRINT(EM_DIAGRAM):   end;
94274     +else do;
MPRINT(EM_DIAGRAM):   else do;
94275     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94276     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
94277     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94278     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94279     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
94280     +   end;
MPRINT(EM_DIAGRAM):   end;
94281     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94282     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
94283     +   end;
MPRINT(EM_DIAGRAM):   end;
94284     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94285     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
94286     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94287     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94288     +   end;
MPRINT(EM_DIAGRAM):   end;
94289     +end;
MPRINT(EM_DIAGRAM):   end;
94290     +
94291     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
94292     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
94293     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
94294     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
94295     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94296     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94297     +end;
MPRINT(EM_DIAGRAM):   end;
94298     +else do;
MPRINT(EM_DIAGRAM):   else do;
94299     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94300     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
94301     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94302     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94303     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
94304     +   end;
MPRINT(EM_DIAGRAM):   end;
94305     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94306     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
94307     +   end;
MPRINT(EM_DIAGRAM):   end;
94308     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94309     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
94310     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94311     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94312     +   end;
MPRINT(EM_DIAGRAM):   end;
94313     +end;
MPRINT(EM_DIAGRAM):   end;
94314     +
94315     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
94316     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
94317     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
94318     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
94319     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94320     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94321     +end;
MPRINT(EM_DIAGRAM):   end;
94322     +else do;
MPRINT(EM_DIAGRAM):   else do;
94323     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94324     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
94325     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94326     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
94327     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
94328     +   end;
MPRINT(EM_DIAGRAM):   end;
94329     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
94330     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
94331     +   end;
MPRINT(EM_DIAGRAM):   end;
94332     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94333     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
94334     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94335     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94336     +   end;
MPRINT(EM_DIAGRAM):   end;
94337     +end;
MPRINT(EM_DIAGRAM):   end;
94338     +
94339     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
94340     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
94341     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
94342     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
94343     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
94344     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
94345     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
94346     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
94347     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
94348     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
94349     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
94350     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
94351     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94352     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94353     +end;
MPRINT(EM_DIAGRAM):   end;
94354     +else do;
MPRINT(EM_DIAGRAM):   else do;
94355     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
94356     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
94357     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94358     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
94359     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
94360     +   end;
MPRINT(EM_DIAGRAM):   end;
94361     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
94362     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
94363     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
94364     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
94365     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
94366     +   end;
MPRINT(EM_DIAGRAM):   end;
94367     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
94368     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
94369     +   end;
MPRINT(EM_DIAGRAM):   end;
94370     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
94371     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
94372     +   end;
MPRINT(EM_DIAGRAM):   end;
94373     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
94374     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
94375     +   end;
MPRINT(EM_DIAGRAM):   end;
94376     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94377     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
94378     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
94379     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
94380     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
94381     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94382     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94383     +   end;
MPRINT(EM_DIAGRAM):   end;
94384     +end;
MPRINT(EM_DIAGRAM):   end;
94385     +
94386     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
94387     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
94388     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
94389     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
94390     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
94391     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
94392     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
94393     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
94394     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
94395     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
94396     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
94397     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
94398     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
94399     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94400     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94401     +end;
MPRINT(EM_DIAGRAM):   end;
94402     +else do;
MPRINT(EM_DIAGRAM):   else do;
94403     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
94404     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
94405     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94406     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
94407     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
94408     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
94409     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
94410     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
94411     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94412     +         end;
MPRINT(EM_DIAGRAM):   end;
94413     +         else do;
MPRINT(EM_DIAGRAM):   else do;
94414     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
94415     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
94416     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94417     +            end;
MPRINT(EM_DIAGRAM):   end;
94418     +         end;
MPRINT(EM_DIAGRAM):   end;
94419     +      end;
MPRINT(EM_DIAGRAM):   end;
94420     +      else do;
MPRINT(EM_DIAGRAM):   else do;
94421     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
94422     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
94423     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94424     +         end;
MPRINT(EM_DIAGRAM):   end;
94425     +      end;
MPRINT(EM_DIAGRAM):   end;
94426     +   end;
MPRINT(EM_DIAGRAM):   end;
94427     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94428     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
94429     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
94430     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94431     +      end;
MPRINT(EM_DIAGRAM):   end;
94432     +      else do;
MPRINT(EM_DIAGRAM):   else do;
94433     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
94434     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
94435     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
94436     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
94437     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
94438     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
94439     +         end;
MPRINT(EM_DIAGRAM):   end;
94440     +      end;
MPRINT(EM_DIAGRAM):   end;
94441     +   end;
MPRINT(EM_DIAGRAM):   end;
94442     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
94443     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
94444     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
94445     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
94446     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
94447     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94448     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94449     +   end;
MPRINT(EM_DIAGRAM):   end;
94450     +end;
MPRINT(EM_DIAGRAM):   end;
94451     +
94452     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94453     +*** Checking missing input Interval
94454     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
94455     +
94456     +IF NMISS(
94457     +   AcceptedCmpTotal ,
94458     +   Age ,
94459     +   Frq ,
94460     +   Income ,
94461     +   Kidhome ,
94462     +   MntFishProducts ,
94463     +   MntFruits ,
94464     +   MntGoldProds ,
94465     +   MntSweetProducts ,
94466     +   MonthsAsCustomer ,
94467     +   NumDealsPurchases ,
94468     +   NumWebVisitsMonth ,
94469     +   RFMstat ,
94470     +   RMntFrq ,
94471     +   Recency ,
94472     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
94473     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
94474     +
94475     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94476     +END;
MPRINT(EM_DIAGRAM):   END;
94477     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94478     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
94479     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94480     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94481     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
94482     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
94483     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
94484     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
94485     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
94486     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
94487     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
94488     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
94489     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
94490     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
94491     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
94492     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
94493     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
94494     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
94495     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
94496     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
94497     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
94498     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
94499     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
94500     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
94501     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
94502     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
94503     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
94504     +END;
MPRINT(EM_DIAGRAM):   END;
94505     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94506     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
94507     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
94508     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
94509     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
94510     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
94511     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
94512     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
94513     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
94514     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
94515     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
94516     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
94517     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
94518     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
94519     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
94520     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
94521     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
94522     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
94523     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
94524     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
94525     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
94526     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
94527     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
94528     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
94529     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
94530     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
94531     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
94532     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
94533     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
94534     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
94535     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
94536     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
94537     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
94538     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
94539     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
94540     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
94541     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
94542     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
94543     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
94544     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
94545     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
94546     +END;
MPRINT(EM_DIAGRAM):   END;
94547     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94548     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
94549     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94550     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94551     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
94552     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94554     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
94555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94556     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94557     +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
94558     +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
94559     +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
94560     +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
94561     +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
94562     +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
94563     +          +     1.47210732135355 * S_MonthsAsCustomer
94564     +          +     0.85741098948561 * S_NumDealsPurchases
94565     +          +     0.47124997442086 * S_NumWebVisitsMonth
94566     +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
94567     +        S_RMntFrq  +     0.42017826752434 * S_Recency
94568     +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
94569     +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
94570     +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
94571     +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
94572     +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
94573     +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
94574     +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
94575     +          +     0.74811152666015 * S_MonthsAsCustomer
94576     +          +    -0.13168708818154 * S_NumDealsPurchases
94577     +          +    -0.51935779196522 * S_NumWebVisitsMonth
94578     +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
94579     +        S_RMntFrq  +     1.96758846931972 * S_Recency
94580     +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
94581     +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
94582     +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
94583     +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
94584     +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
94585     +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
94586     +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
94587     +          +     0.11776941975292 * S_MonthsAsCustomer
94588     +          +    -0.69977862189457 * S_NumDealsPurchases
94589     +          +    -0.26676589341422 * S_NumWebVisitsMonth
94590     +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
94591     +        S_RMntFrq  +     1.53487074713045 * S_Recency
94592     +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
94593     +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
94594     +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
94595     +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
94596     +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
94597     +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
94598     +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
94599     +          +     0.46606320110885 * S_MonthsAsCustomer
94600     +          +     1.64885970718717 * S_NumDealsPurchases
94601     +          +     1.70233049691156 * S_NumWebVisitsMonth
94602     +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
94603     +        S_RMntFrq  +    -1.33025042025966 * S_Recency
94604     +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
94605     +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
94606     +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
94607     +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
94608     +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
94609     +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
94610     +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
94611     +          +     0.25703511103123 * S_MonthsAsCustomer
94612     +          +     0.81449309285524 * S_NumDealsPurchases
94613     +          +     0.65863550896078 * S_NumWebVisitsMonth
94614     +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
94615     +        S_RMntFrq  +     0.35298837231553 * S_Recency
94616     +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
94617     +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
94618     +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
94619     +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
94620     +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
94621     +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
94622     +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
94623     +          +     0.79681190434731 * S_MonthsAsCustomer
94624     +          +    -0.93973916927987 * S_NumDealsPurchases
94625     +          +     1.37415777280471 * S_NumWebVisitsMonth
94626     +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
94627     +        S_RMntFrq  +     0.25579910148098 * S_Recency
94628     +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
94629     +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
94630     +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
94631     +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
94632     +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
94633     +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
94634     +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
94635     +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
94636     +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
94637     +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
94638     +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
94639     +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
94640     +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
94641     +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
94642     +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
94643     +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
94644     +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
94645     +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
94646     +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
94647     +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
94648     +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
94649     +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
94650     +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
94651     +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
94652     +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
94653     +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
94654     +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
94655     +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
94656     +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
94657     +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
94658     +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
94659     +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
94660     +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
94661     +        EducationGraduation  +     0.53978142914157 * EducationMaster
94662     +          +    -0.28915302940579 * Marital_StatusDivorced
94663     +          +     0.36400858753372 * Marital_StatusMarried
94664     +          +     0.64088916620982 * Marital_StatusSingle
94665     +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
94666     +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
94667     +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
94668     +        EducationGraduation  +     0.31774696403611 * EducationMaster
94669     +          +    -0.48311224079569 * Marital_StatusDivorced
94670     +          +     0.78522892664414 * Marital_StatusMarried
94671     +          +    -0.52144588286939 * Marital_StatusSingle
94672     +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
94673     +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
94674     +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
94675     +        EducationGraduation  +     1.62119993408702 * EducationMaster
94676     +          +    -1.10138941531054 * Marital_StatusDivorced
94677     +          +     1.91098461544032 * Marital_StatusMarried
94678     +          +    -1.96662881570281 * Marital_StatusSingle
94679     +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
94680     +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
94681     +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
94682     +        EducationGraduation  +    -0.47265183904634 * EducationMaster
94683     +          +    -0.26938567401241 * Marital_StatusDivorced
94684     +          +      0.5252138734125 * Marital_StatusMarried
94685     +          +    -0.77744801183604 * Marital_StatusSingle
94686     +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
94687     +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
94688     +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
94689     +        EducationGraduation  +     1.34706628408556 * EducationMaster
94690     +          +    -0.49116995167497 * Marital_StatusDivorced
94691     +          +     1.22243596432371 * Marital_StatusMarried
94692     +          +    -1.22268267917833 * Marital_StatusSingle
94693     +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
94694     +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
94695     +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
94696     +        EducationGraduation  +     0.19530936178176 * EducationMaster
94697     +          +    -0.21134253419933 * Marital_StatusDivorced
94698     +          +     0.87168965818013 * Marital_StatusMarried
94699     +          +     0.07539748751767 * Marital_StatusSingle
94700     +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
94701     +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
94702     +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
94703     +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
94704     +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
94705     +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
94706     +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
94707     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
94708     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
94709     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
94710     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
94711     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
94712     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
94713     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
94714     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
94715     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
94716     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
94717     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
94718     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
94719     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
94720     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
94721     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
94722     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
94723     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
94724     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
94725     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
94726     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
94727     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
94728     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
94729     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
94730     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
94731     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
94732     +END;
MPRINT(EM_DIAGRAM):   END;
94733     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94734     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
94735     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
94736     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
94737     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
94738     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
94739     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
94740     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
94741     +END;
MPRINT(EM_DIAGRAM):   END;
94742     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94743     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
94744     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94745     +
94746     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
94747     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
94748     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
94749     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
94750     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
94751     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94752     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
94753     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
94754     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
94755     +end;
MPRINT(EM_DIAGRAM):   end;
94756     +else do;
MPRINT(EM_DIAGRAM):   else do;
94757     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
94758     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
94759     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
94760     +   end;
MPRINT(EM_DIAGRAM):   end;
94761     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
94762     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
94763     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
94764     +   end;
MPRINT(EM_DIAGRAM):   end;
94765     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94766     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
94767     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
94768     +   end;
MPRINT(EM_DIAGRAM):   end;
94769     +end;
MPRINT(EM_DIAGRAM):   end;
94770     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
94771     +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
94772     +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
94773     +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
94774     +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
94775     +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
94776     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
94777     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
94778     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
94779     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
94780     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
94781     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
94782     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
94783     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
94784     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
94785     +END;
MPRINT(EM_DIAGRAM):   END;
94786     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94787     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
94788     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
94789     +END;
MPRINT(EM_DIAGRAM):   END;
94790     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
94791     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
94792     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
94793     +END;
MPRINT(EM_DIAGRAM):   END;
94794     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
94795     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
94796     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
94797     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
94798     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
94799     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
94800     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
94801     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94802     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
94803     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
94804     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
94805     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
94806     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
94807     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
94808     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
94809     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
94810     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
94811     +END;
MPRINT(EM_DIAGRAM):   END;
94812     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
94813     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
94814     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
94815     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
94816     +* Renaming variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural36;
94817     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94818     +* Renaming Posterior variables for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural36;
94819     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94820     +drop AutoNeural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar1;
94821     +AutoNeural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar1 = P_DepVar1;
94822     +drop AutoNeural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_P_DepVar0;
94823     +AutoNeural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural36_P_DepVar0 = P_DepVar0;
94824     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94825     +* Renaming _WARN_ variable for AutoNeural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural36;
94826     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94827     +length AutoNeural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural36_WARN_ $4;
94828     +drop AutoNeural36_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural36_WARN_;
94829     +AutoNeural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural36_WARN_ = _WARN_;
94830     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94831     +* Ensmbl55: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 2 of 7;
94832     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94833     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94834     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
94835     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
94836     +* NODE: AutoNeural35;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural35;
94837     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94838     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
94839     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
94840     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
94841     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
94842     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
94843     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
94844     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
94845     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
94846     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
94847     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
94848     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
94849     +LENGTH _WARN_ $4
94850     +      F_DepVar  $ 12
94851     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
94852     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
94853     +
94854     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
94855     +
94856     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
94857     +
94858     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
94859     +
94860     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
94861     +
94862     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
94863     +
94864     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
94865     +
94866     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
94867     +
94868     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
94869     +
94870     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
94871     +
94872     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
94873     +
94874     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
94875     +
94876     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
94877     +
94878     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
94879     +
94880     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
94881     +
94882     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
94883     +
94884     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
94885     +
94886     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
94887     +
94888     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
94889     +
94890     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
94891     +
94892     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
94893     +
94894     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
94895     +
94896     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
94897     +
94898     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
94899     +
94900     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
94901     +
94902     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
94903     +
94904     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
94905     +
94906     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
94907     +
94908     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
94909     +
94910     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
94911     +
94912     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
94913     +
94914     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
94915     +
94916     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
94917     +
94918     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
94919     +
94920     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
94921     +
94922     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
94923     +
94924     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
94925     +
94926     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
94927     +
94928     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
94929     +
94930     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
94931     +
94932     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
94933     +
94934     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
94935     +
94936     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
94937     +
94938     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
94939     +
94940     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
94941     +
94942     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
94943     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
94944     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
94945     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
94946     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94947     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94948     +end;
MPRINT(EM_DIAGRAM):   end;
94949     +else do;
MPRINT(EM_DIAGRAM):   else do;
94950     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94951     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
94952     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94953     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94954     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
94955     +   end;
MPRINT(EM_DIAGRAM):   end;
94956     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94957     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
94958     +   end;
MPRINT(EM_DIAGRAM):   end;
94959     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94960     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
94961     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94962     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94963     +   end;
MPRINT(EM_DIAGRAM):   end;
94964     +end;
MPRINT(EM_DIAGRAM):   end;
94965     +
94966     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
94967     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
94968     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
94969     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
94970     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94971     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94972     +end;
MPRINT(EM_DIAGRAM):   end;
94973     +else do;
MPRINT(EM_DIAGRAM):   else do;
94974     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94975     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
94976     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
94977     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
94978     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
94979     +   end;
MPRINT(EM_DIAGRAM):   end;
94980     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
94981     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
94982     +   end;
MPRINT(EM_DIAGRAM):   end;
94983     +   else do;
MPRINT(EM_DIAGRAM):   else do;
94984     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
94985     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
94986     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94987     +   end;
MPRINT(EM_DIAGRAM):   end;
94988     +end;
MPRINT(EM_DIAGRAM):   end;
94989     +
94990     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
94991     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
94992     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
94993     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
94994     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
94995     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
94996     +end;
MPRINT(EM_DIAGRAM):   end;
94997     +else do;
MPRINT(EM_DIAGRAM):   else do;
94998     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
94999     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
95000     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95001     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95002     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
95003     +   end;
MPRINT(EM_DIAGRAM):   end;
95004     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95005     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
95006     +   end;
MPRINT(EM_DIAGRAM):   end;
95007     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95008     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95009     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95010     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95011     +   end;
MPRINT(EM_DIAGRAM):   end;
95012     +end;
MPRINT(EM_DIAGRAM):   end;
95013     +
95014     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
95015     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
95016     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
95017     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95018     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95019     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95020     +end;
MPRINT(EM_DIAGRAM):   end;
95021     +else do;
MPRINT(EM_DIAGRAM):   else do;
95022     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95023     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
95024     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95025     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95026     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
95027     +   end;
MPRINT(EM_DIAGRAM):   end;
95028     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95029     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
95030     +   end;
MPRINT(EM_DIAGRAM):   end;
95031     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95032     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95033     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95034     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95035     +   end;
MPRINT(EM_DIAGRAM):   end;
95036     +end;
MPRINT(EM_DIAGRAM):   end;
95037     +
95038     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
95039     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
95040     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
95041     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95042     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95043     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95044     +end;
MPRINT(EM_DIAGRAM):   end;
95045     +else do;
MPRINT(EM_DIAGRAM):   else do;
95046     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95047     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
95048     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95049     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95050     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
95051     +   end;
MPRINT(EM_DIAGRAM):   end;
95052     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95053     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
95054     +   end;
MPRINT(EM_DIAGRAM):   end;
95055     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95056     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95057     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95058     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95059     +   end;
MPRINT(EM_DIAGRAM):   end;
95060     +end;
MPRINT(EM_DIAGRAM):   end;
95061     +
95062     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
95063     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
95064     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
95065     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95066     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95067     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95068     +end;
MPRINT(EM_DIAGRAM):   end;
95069     +else do;
MPRINT(EM_DIAGRAM):   else do;
95070     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95071     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
95072     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95073     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95074     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
95075     +   end;
MPRINT(EM_DIAGRAM):   end;
95076     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95077     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
95078     +   end;
MPRINT(EM_DIAGRAM):   end;
95079     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95080     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95081     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95082     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95083     +   end;
MPRINT(EM_DIAGRAM):   end;
95084     +end;
MPRINT(EM_DIAGRAM):   end;
95085     +
95086     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
95087     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
95088     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
95089     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95090     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95091     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95092     +end;
MPRINT(EM_DIAGRAM):   end;
95093     +else do;
MPRINT(EM_DIAGRAM):   else do;
95094     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95095     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
95096     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95097     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
95098     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
The SAS System

95099     +   end;
MPRINT(EM_DIAGRAM):   end;
95100     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
95101     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
95102     +   end;
MPRINT(EM_DIAGRAM):   end;
95103     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95104     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95105     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95106     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95107     +   end;
MPRINT(EM_DIAGRAM):   end;
95108     +end;
MPRINT(EM_DIAGRAM):   end;
95109     +
95110     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
95111     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
95112     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
95113     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
95114     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
95115     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
95116     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
95117     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
95118     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
95119     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
95120     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
95121     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
95122     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95123     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95124     +end;
MPRINT(EM_DIAGRAM):   end;
95125     +else do;
MPRINT(EM_DIAGRAM):   else do;
95126     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
95127     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
95128     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95129     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
95130     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
95131     +   end;
MPRINT(EM_DIAGRAM):   end;
95132     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
95133     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
95134     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
95135     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
95136     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
95137     +   end;
MPRINT(EM_DIAGRAM):   end;
95138     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
95139     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
95140     +   end;
MPRINT(EM_DIAGRAM):   end;
95141     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
95142     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
95143     +   end;
MPRINT(EM_DIAGRAM):   end;
95144     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
95145     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
95146     +   end;
MPRINT(EM_DIAGRAM):   end;
95147     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95148     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
95149     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
95150     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
95151     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
95152     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95153     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95154     +   end;
MPRINT(EM_DIAGRAM):   end;
95155     +end;
MPRINT(EM_DIAGRAM):   end;
95156     +
95157     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
95158     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
95159     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
95160     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
95161     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
95162     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
95163     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
95164     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
95165     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
95166     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
95167     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
95168     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
95169     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
95170     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95171     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95172     +end;
MPRINT(EM_DIAGRAM):   end;
95173     +else do;
MPRINT(EM_DIAGRAM):   else do;
95174     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
95175     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
95176     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95177     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
95178     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
95179     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
95180     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
95181     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
95182     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95183     +         end;
MPRINT(EM_DIAGRAM):   end;
95184     +         else do;
MPRINT(EM_DIAGRAM):   else do;
95185     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
95186     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
95187     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95188     +            end;
MPRINT(EM_DIAGRAM):   end;
95189     +         end;
MPRINT(EM_DIAGRAM):   end;
95190     +      end;
MPRINT(EM_DIAGRAM):   end;
95191     +      else do;
MPRINT(EM_DIAGRAM):   else do;
95192     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
95193     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
95194     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95195     +         end;
MPRINT(EM_DIAGRAM):   end;
95196     +      end;
MPRINT(EM_DIAGRAM):   end;
95197     +   end;
MPRINT(EM_DIAGRAM):   end;
95198     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95199     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
95200     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
95201     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95202     +      end;
MPRINT(EM_DIAGRAM):   end;
95203     +      else do;
MPRINT(EM_DIAGRAM):   else do;
95204     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
95205     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
95206     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
95207     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
95208     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
95209     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95210     +         end;
MPRINT(EM_DIAGRAM):   end;
95211     +      end;
MPRINT(EM_DIAGRAM):   end;
95212     +   end;
MPRINT(EM_DIAGRAM):   end;
95213     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
95214     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
95215     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
95216     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
95217     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
95218     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95219     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95220     +   end;
MPRINT(EM_DIAGRAM):   end;
95221     +end;
MPRINT(EM_DIAGRAM):   end;
95222     +
95223     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95224     +*** Checking missing input Interval
95225     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
95226     +
95227     +IF NMISS(
95228     +   AcceptedCmpTotal ,
95229     +   Age ,
95230     +   Frq ,
95231     +   Income ,
95232     +   Kidhome ,
95233     +   MntFishProducts ,
95234     +   MntFruits ,
95235     +   MntGoldProds ,
95236     +   MntSweetProducts ,
95237     +   MonthsAsCustomer ,
95238     +   NumDealsPurchases ,
95239     +   NumWebVisitsMonth ,
95240     +   RFMstat ,
95241     +   RMntFrq ,
95242     +   Recency ,
95243     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
95244     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
95245     +
95246     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95247     +END;
MPRINT(EM_DIAGRAM):   END;
95248     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95249     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
95250     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95251     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
95252     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
95253     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
95254     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
95255     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
95256     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
95257     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
95258     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
95259     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
95260     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
95261     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
95262     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
95263     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
95264     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
95265     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
95266     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
95267     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
95268     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
95269     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
95270     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
95271     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
95272     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
95273     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
95274     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
95275     +END;
MPRINT(EM_DIAGRAM):   END;
95276     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
95277     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
95278     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
95279     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
95280     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
95281     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
95282     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
95283     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
95284     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
95285     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
95286     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
95287     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
95288     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
95289     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
95290     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
95291     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
95292     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
95293     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
95294     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
95295     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
95296     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
95297     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
95298     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
95299     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
95300     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
95301     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
95302     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
95303     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
95304     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
95305     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
95306     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
95307     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
95308     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
95309     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
95310     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
95311     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
95312     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
95313     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
95314     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
95315     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
95316     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
95317     +END;
MPRINT(EM_DIAGRAM):   END;
95318     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95319     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
95320     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95321     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95322     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
95323     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95324     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95325     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
95326     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95327     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
95328     +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
95329     +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
95330     +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
95331     +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
95332     +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
95333     +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
95334     +          +    -0.63886071804247 * S_MonthsAsCustomer
95335     +          +      2.3488612891037 * S_NumDealsPurchases
95336     +          +     2.32996461229282 * S_NumWebVisitsMonth
95337     +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
95338     +        S_RMntFrq  +    -3.18599476886695 * S_Recency
95339     +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
95340     +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
95341     +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
95342     +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
95343     +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
95344     +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
95345     +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
95346     +          +     0.67699646331113 * S_MonthsAsCustomer
95347     +          +     0.70523055739254 * S_NumDealsPurchases
95348     +          +    -2.06406682205141 * S_NumWebVisitsMonth
95349     +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
95350     +        S_RMntFrq  +      5.0273672656487 * S_Recency
95351     +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
95352     +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
95353     +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
95354     +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
95355     +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
95356     +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
95357     +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
95358     +          +    -0.53694216899543 * S_MonthsAsCustomer
95359     +          +     0.25908508836257 * S_NumDealsPurchases
95360     +          +    -1.18459231573601 * S_NumWebVisitsMonth
95361     +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
95362     +        S_RMntFrq  +    -1.22457627833901 * S_Recency
95363     +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
95364     +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
95365     +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
95366     +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
95367     +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
95368     +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
95369     +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
95370     +          +    -0.08931078748332 * S_MonthsAsCustomer
95371     +          +    -0.46561962814047 * S_NumDealsPurchases
95372     +          +    -0.12241295445297 * S_NumWebVisitsMonth
95373     +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
95374     +        S_RMntFrq  +     0.96804234233608 * S_Recency
95375     +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
95376     +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
95377     +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
95378     +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
95379     +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
95380     +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
95381     +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
95382     +          +     -0.9186653552138 * S_MonthsAsCustomer
95383     +          +     2.17624393037629 * S_NumDealsPurchases
95384     +          +    -0.41699900714758 * S_NumWebVisitsMonth
95385     +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
95386     +        S_RMntFrq  +    -0.28987089218356 * S_Recency
95387     +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
95388     +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
95389     +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
95390     +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
95391     +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
95392     +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
95393     +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
95394     +          +     1.32865070741283 * S_MonthsAsCustomer
95395     +          +      0.8173864987673 * S_NumDealsPurchases
95396     +          +     1.04804775338375 * S_NumWebVisitsMonth
95397     +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
95398     +        S_RMntFrq  +     0.08690587270493 * S_Recency
95399     +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
95400     +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
95401     +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
95402     +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
95403     +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
95404     +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
95405     +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
95406     +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
95407     +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
95408     +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
95409     +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
95410     +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
95411     +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
95412     +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
95413     +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
95414     +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
95415     +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
95416     +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
95417     +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
95418     +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
95419     +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
95420     +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
95421     +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
95422     +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
95423     +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
95424     +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
95425     +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
95426     +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
95427     +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
95428     +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
95429     +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
95430     +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
95431     +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
95432     +        EducationGraduation  +    -0.31624019107181 * EducationMaster
95433     +          +    -0.82783034099773 * Marital_StatusDivorced
95434     +          +     0.39651075241405 * Marital_StatusMarried
95435     +          +     0.17323156170107 * Marital_StatusSingle
95436     +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
95437     +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
95438     +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
95439     +        EducationGraduation  +    -0.05323450200928 * EducationMaster
95440     +          +    -2.42314580112302 * Marital_StatusDivorced
95441     +          +     1.72709251267075 * Marital_StatusMarried
95442     +          +    -0.94350561587168 * Marital_StatusSingle
95443     +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
95444     +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
95445     +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
95446     +        EducationGraduation  +    -1.41317064722862 * EducationMaster
95447     +          +    -1.25323701705333 * Marital_StatusDivorced
95448     +          +    -0.72618091015379 * Marital_StatusMarried
95449     +          +     0.20594885266863 * Marital_StatusSingle
95450     +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
95451     +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
95452     +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
95453     +        EducationGraduation  +     0.75559299844055 * EducationMaster
95454     +          +     -0.9159957275063 * Marital_StatusDivorced
95455     +          +     2.06164757358796 * Marital_StatusMarried
95456     +          +    -1.61544310412168 * Marital_StatusSingle
95457     +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
95458     +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
95459     +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
95460     +        EducationGraduation  +     0.27594869585414 * EducationMaster
95461     +          +    -0.72418104768251 * Marital_StatusDivorced
95462     +          +     0.51077116161056 * Marital_StatusMarried
95463     +          +     -2.0857896888723 * Marital_StatusSingle
95464     +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
95465     +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
95466     +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
95467     +        EducationGraduation  +     -0.7287361872795 * EducationMaster
95468     +          +     0.64139965212864 * Marital_StatusDivorced
95469     +          +    -1.52338846336783 * Marital_StatusMarried
95470     +          +     1.94794784762286 * Marital_StatusSingle
95471     +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
95472     +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
95473     +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
95474     +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
95475     +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
95476     +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
95477     +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
95478     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
95479     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
95480     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
95481     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
95482     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
95483     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
95484     +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
95485     +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
95486     +END;
MPRINT(EM_DIAGRAM):   END;
95487     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
95488     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
95489     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
95490     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
95491     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
95492     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
95493     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
95494     +END;
MPRINT(EM_DIAGRAM):   END;
95495     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95496     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
95497     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95498     +
95499     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
95500     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
95501     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
95502     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
95503     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
95504     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95505     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
95506     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
95507     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
95508     +end;
MPRINT(EM_DIAGRAM):   end;
95509     +else do;
MPRINT(EM_DIAGRAM):   else do;
95510     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
95511     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
95512     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
95513     +   end;
MPRINT(EM_DIAGRAM):   end;
95514     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
95515     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
95516     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
95517     +   end;
MPRINT(EM_DIAGRAM):   end;
95518     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95519     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
95520     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
95521     +   end;
MPRINT(EM_DIAGRAM):   end;
95522     +end;
MPRINT(EM_DIAGRAM):   end;
95523     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
95524     +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
95525     +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
95526     +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
95527     +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
95528     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
95529     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
95530     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
95531     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
95532     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
95533     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
95534     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
95535     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
95536     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
95537     +END;
MPRINT(EM_DIAGRAM):   END;
95538     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
95539     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
95540     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
95541     +END;
MPRINT(EM_DIAGRAM):   END;
95542     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
95543     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
95544     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
95545     +END;
MPRINT(EM_DIAGRAM):   END;
95546     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
95547     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
95548     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
95549     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
95550     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
95551     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
95552     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
95553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95554     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
95555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95556     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
95557     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
95558     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
95559     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
95560     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
95561     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
95562     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
95563     +END;
MPRINT(EM_DIAGRAM):   END;
95564     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
95565     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
95566     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
95567     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
95568     +* Renaming variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural35;
95569     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95570     +* Renaming Posterior variables for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural35;
95571     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95572     +drop AutoNeural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar1;
95573     +AutoNeural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar1 = P_DepVar1;
95574     +drop AutoNeural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_P_DepVar0;
95575     +AutoNeural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural35_P_DepVar0 = P_DepVar0;
95576     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95577     +* Renaming _WARN_ variable for AutoNeural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural35;
95578     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95579     +length AutoNeural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural35_WARN_ $4;
95580     +drop AutoNeural35_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural35_WARN_;
95581     +AutoNeural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural35_WARN_ = _WARN_;
95582     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95583     +* Ensmbl55: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 3 of 7;
95584     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95585     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95586     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
95587     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
95588     +* NODE: AutoNeural34;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural34;
95589     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95590     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
95591     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
95592     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
95593     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
95594     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
95595     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
95596     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
95597     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
95598     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
95599     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
95600     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
95601     +LENGTH _WARN_ $4
95602     +      F_DepVar  $ 12
95603     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
95604     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
95605     +
95606     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
95607     +
95608     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
95609     +
95610     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
95611     +
95612     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
95613     +
95614     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
95615     +
95616     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
95617     +
95618     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
95619     +
95620     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
95621     +
95622     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
95623     +
95624     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
95625     +
95626     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
95627     +
95628     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
95629     +
95630     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
95631     +
95632     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
95633     +
95634     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
95635     +
95636     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
95637     +
95638     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
95639     +
95640     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
95641     +
95642     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
95643     +
95644     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
95645     +
95646     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
95647     +
95648     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
95649     +
95650     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
95651     +
95652     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
95653     +
95654     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
95655     +
95656     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
95657     +
95658     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
95659     +
95660     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
95661     +
95662     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
95663     +
95664     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
95665     +
95666     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
95667     +
95668     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
95669     +
95670     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
95671     +
95672     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
95673     +
95674     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
95675     +
95676     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
95677     +
95678     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
95679     +
95680     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
95681     +
95682     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
95683     +
95684     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
95685     +
95686     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
95687     +
95688     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
95689     +
95690     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
95691     +
95692     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
95693     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
95694     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
95695     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
95696     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95697     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95698     +end;
MPRINT(EM_DIAGRAM):   end;
95699     +else do;
MPRINT(EM_DIAGRAM):   else do;
95700     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95701     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
95702     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95703     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95704     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
95705     +   end;
MPRINT(EM_DIAGRAM):   end;
95706     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95707     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
95708     +   end;
MPRINT(EM_DIAGRAM):   end;
95709     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95710     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
95711     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95712     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95713     +   end;
MPRINT(EM_DIAGRAM):   end;
95714     +end;
MPRINT(EM_DIAGRAM):   end;
95715     +
95716     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
95717     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
95718     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
95719     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
95720     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95721     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95722     +end;
MPRINT(EM_DIAGRAM):   end;
95723     +else do;
MPRINT(EM_DIAGRAM):   else do;
95724     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95725     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
95726     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95727     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95728     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
95729     +   end;
MPRINT(EM_DIAGRAM):   end;
95730     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95731     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
95732     +   end;
MPRINT(EM_DIAGRAM):   end;
95733     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95734     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
95735     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95736     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95737     +   end;
MPRINT(EM_DIAGRAM):   end;
95738     +end;
MPRINT(EM_DIAGRAM):   end;
95739     +
95740     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
95741     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
95742     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
95743     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95744     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95745     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95746     +end;
MPRINT(EM_DIAGRAM):   end;
95747     +else do;
MPRINT(EM_DIAGRAM):   else do;
95748     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95749     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
95750     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95751     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95752     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
95753     +   end;
MPRINT(EM_DIAGRAM):   end;
95754     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95755     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
95756     +   end;
MPRINT(EM_DIAGRAM):   end;
95757     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95758     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
95759     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95760     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95761     +   end;
MPRINT(EM_DIAGRAM):   end;
95762     +end;
MPRINT(EM_DIAGRAM):   end;
95763     +
95764     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
95765     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
95766     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
95767     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95768     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95769     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95770     +end;
MPRINT(EM_DIAGRAM):   end;
95771     +else do;
MPRINT(EM_DIAGRAM):   else do;
95772     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95773     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
95774     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95775     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95776     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
95777     +   end;
MPRINT(EM_DIAGRAM):   end;
95778     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95779     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
95780     +   end;
MPRINT(EM_DIAGRAM):   end;
95781     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95782     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
95783     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95784     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95785     +   end;
MPRINT(EM_DIAGRAM):   end;
95786     +end;
MPRINT(EM_DIAGRAM):   end;
95787     +
95788     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
95789     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
95790     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
95791     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95792     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95793     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95794     +end;
MPRINT(EM_DIAGRAM):   end;
95795     +else do;
MPRINT(EM_DIAGRAM):   else do;
95796     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95797     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
95798     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95799     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95800     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
95801     +   end;
MPRINT(EM_DIAGRAM):   end;
95802     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95803     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
95804     +   end;
MPRINT(EM_DIAGRAM):   end;
95805     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95806     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
95807     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95808     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95809     +   end;
MPRINT(EM_DIAGRAM):   end;
95810     +end;
MPRINT(EM_DIAGRAM):   end;
95811     +
95812     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
95813     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
95814     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
95815     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95816     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95817     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95818     +end;
MPRINT(EM_DIAGRAM):   end;
95819     +else do;
MPRINT(EM_DIAGRAM):   else do;
95820     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95821     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
95822     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95823     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
95824     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
95825     +   end;
MPRINT(EM_DIAGRAM):   end;
95826     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
95827     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
95828     +   end;
MPRINT(EM_DIAGRAM):   end;
95829     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95830     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
95831     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95832     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95833     +   end;
MPRINT(EM_DIAGRAM):   end;
95834     +end;
MPRINT(EM_DIAGRAM):   end;
95835     +
95836     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
95837     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
95838     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
95839     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95840     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95841     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95842     +end;
MPRINT(EM_DIAGRAM):   end;
95843     +else do;
MPRINT(EM_DIAGRAM):   else do;
95844     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
95845     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
95846     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95847     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
95848     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
95849     +   end;
MPRINT(EM_DIAGRAM):   end;
95850     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
95851     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
95852     +   end;
MPRINT(EM_DIAGRAM):   end;
95853     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95854     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
95855     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95856     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95857     +   end;
MPRINT(EM_DIAGRAM):   end;
95858     +end;
MPRINT(EM_DIAGRAM):   end;
95859     +
95860     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
95861     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
95862     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
95863     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
95864     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
95865     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
95866     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
95867     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
95868     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
95869     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
95870     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
95871     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
95872     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95873     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95874     +end;
MPRINT(EM_DIAGRAM):   end;
95875     +else do;
MPRINT(EM_DIAGRAM):   else do;
95876     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
95877     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
95878     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95879     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
95880     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
95881     +   end;
MPRINT(EM_DIAGRAM):   end;
95882     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
95883     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
95884     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
95885     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
95886     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
95887     +   end;
MPRINT(EM_DIAGRAM):   end;
95888     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
95889     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
95890     +   end;
MPRINT(EM_DIAGRAM):   end;
95891     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
95892     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
95893     +   end;
MPRINT(EM_DIAGRAM):   end;
95894     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
95895     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
95896     +   end;
MPRINT(EM_DIAGRAM):   end;
95897     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95898     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
95899     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
95900     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
95901     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
95902     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95903     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95904     +   end;
MPRINT(EM_DIAGRAM):   end;
95905     +end;
MPRINT(EM_DIAGRAM):   end;
95906     +
95907     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
95908     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
95909     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
95910     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
95911     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
95912     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
95913     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
95914     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
95915     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
95916     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
95917     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
95918     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
95919     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
95920     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
95921     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95922     +end;
MPRINT(EM_DIAGRAM):   end;
95923     +else do;
MPRINT(EM_DIAGRAM):   else do;
95924     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
95925     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
95926     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
95927     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
95928     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
95929     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
95930     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
95931     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
95932     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95933     +         end;
MPRINT(EM_DIAGRAM):   end;
95934     +         else do;
MPRINT(EM_DIAGRAM):   else do;
95935     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
95936     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
95937     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95938     +            end;
MPRINT(EM_DIAGRAM):   end;
95939     +         end;
MPRINT(EM_DIAGRAM):   end;
95940     +      end;
MPRINT(EM_DIAGRAM):   end;
95941     +      else do;
MPRINT(EM_DIAGRAM):   else do;
95942     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
95943     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
95944     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95945     +         end;
MPRINT(EM_DIAGRAM):   end;
95946     +      end;
MPRINT(EM_DIAGRAM):   end;
95947     +   end;
MPRINT(EM_DIAGRAM):   end;
95948     +   else do;
MPRINT(EM_DIAGRAM):   else do;
95949     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
95950     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
95951     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95952     +      end;
MPRINT(EM_DIAGRAM):   end;
95953     +      else do;
MPRINT(EM_DIAGRAM):   else do;
95954     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
95955     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
95956     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
95957     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
95958     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
95959     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
95960     +         end;
MPRINT(EM_DIAGRAM):   end;
95961     +      end;
MPRINT(EM_DIAGRAM):   end;
95962     +   end;
MPRINT(EM_DIAGRAM):   end;
95963     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
95964     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
95965     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
95966     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
95967     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
95968     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
95969     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95970     +   end;
MPRINT(EM_DIAGRAM):   end;
95971     +end;
MPRINT(EM_DIAGRAM):   end;
95972     +
95973     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95974     +*** Checking missing input Interval
95975     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
95976     +
95977     +IF NMISS(
95978     +   AcceptedCmpTotal ,
95979     +   Age ,
95980     +   Frq ,
95981     +   Income ,
95982     +   Kidhome ,
95983     +   MntFishProducts ,
95984     +   MntFruits ,
95985     +   MntGoldProds ,
95986     +   MntSweetProducts ,
95987     +   MonthsAsCustomer ,
95988     +   NumDealsPurchases ,
95989     +   NumWebVisitsMonth ,
95990     +   RFMstat ,
95991     +   RMntFrq ,
95992     +   Recency ,
95993     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
95994     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
95995     +
95996     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
95997     +END;
MPRINT(EM_DIAGRAM):   END;
95998     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
95999     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
96000     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96001     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96002     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
96003     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
96004     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
96005     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
96006     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
96007     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
96008     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
96009     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
96010     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
96011     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
96012     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
96013     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
96014     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
96015     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
96016     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
96017     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
96018     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
96019     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
96020     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
96021     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
96022     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
96023     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
96024     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
96025     +END;
MPRINT(EM_DIAGRAM):   END;
96026     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96027     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
96028     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
96029     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
96030     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
96031     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
96032     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
96033     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
96034     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
96035     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
96036     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
96037     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
96038     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
96039     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
96040     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
96041     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
96042     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
96043     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
96044     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
96045     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
96046     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
96047     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
96048     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
96049     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
96050     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
96051     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
96052     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
96053     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
96054     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
96055     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
96056     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
96057     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
96058     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
96059     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
96060     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
96061     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
96062     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
96063     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
96064     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
96065     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
96066     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
96067     +END;
MPRINT(EM_DIAGRAM):   END;
96068     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96069     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
96070     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96071     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96072     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
96073     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96074     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96075     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
96076     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96077     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96078     +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
96079     +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
96080     +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
96081     +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
96082     +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
96083     +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
96084     +          +     0.04740894983714 * S_MonthsAsCustomer
96085     +          +     1.39008006467326 * S_NumDealsPurchases
96086     +          +     0.21608999126738 * S_NumWebVisitsMonth
96087     +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
96088     +        S_RMntFrq  +    -0.30830265825486 * S_Recency
96089     +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
96090     +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
96091     +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
96092     +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
96093     +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
96094     +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
96095     +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
96096     +          +     0.11090137331567 * S_MonthsAsCustomer
96097     +          +     0.22617410760471 * S_NumDealsPurchases
96098     +          +    -1.50612324994247 * S_NumWebVisitsMonth
96099     +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
96100     +        S_RMntFrq  +     1.36064773168913 * S_Recency
96101     +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
96102     +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
96103     +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
96104     +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
96105     +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
96106     +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
96107     +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
96108     +          +     1.12489244540865 * S_MonthsAsCustomer
96109     +          +     0.65186273365438 * S_NumDealsPurchases
96110     +          +    -2.32770073685469 * S_NumWebVisitsMonth
96111     +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
96112     +        S_RMntFrq  +     2.60277611818411 * S_Recency
96113     +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
96114     +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
96115     +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
96116     +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
96117     +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
96118     +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
96119     +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
96120     +          +     0.30886829972356 * S_MonthsAsCustomer
96121     +          +     0.65492907685123 * S_NumDealsPurchases
96122     +          +     0.10822300736498 * S_NumWebVisitsMonth
96123     +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
96124     +        S_RMntFrq  +     -0.7378392134822 * S_Recency
96125     +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
96126     +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
96127     +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
96128     +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
96129     +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
96130     +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
96131     +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
96132     +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
96133     +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
96134     +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
96135     +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
96136     +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
96137     +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
96138     +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
96139     +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
96140     +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
96141     +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
96142     +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
96143     +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
96144     +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
96145     +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
96146     +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
96147     +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
96148     +        EducationGraduation  +     0.30922934477029 * EducationMaster
96149     +          +     0.01556098790048 * Marital_StatusDivorced
96150     +          +     0.00512523764645 * Marital_StatusMarried
96151     +          +    -0.33980799511448 * Marital_StatusSingle
96152     +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
96153     +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
96154     +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
96155     +        EducationGraduation  +     0.69751348344321 * EducationMaster
96156     +          +     0.01069434029942 * Marital_StatusDivorced
96157     +          +      0.3116587285334 * Marital_StatusMarried
96158     +          +    -0.98635795023549 * Marital_StatusSingle
96159     +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
96160     +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
96161     +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
96162     +        EducationGraduation  +     -0.8155628950024 * EducationMaster
96163     +          +    -0.60393077836174 * Marital_StatusDivorced
96164     +          +    -0.18138878944937 * Marital_StatusMarried
96165     +          +     0.53013032587101 * Marital_StatusSingle
96166     +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
96167     +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
96168     +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
96169     +        EducationGraduation  +    -0.40675219343984 * EducationMaster
96170     +          +     0.43223311502025 * Marital_StatusDivorced
96171     +          +    -1.15741416919552 * Marital_StatusMarried
96172     +          +     0.83939799284264 * Marital_StatusSingle
96173     +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
96174     +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
96175     +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
96176     +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
96177     +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
96178     +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
96179     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
96180     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
96181     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
96182     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
96183     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
96184     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
96185     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
96186     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
96187     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
96188     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
96189     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
96190     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
96191     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
96192     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
96193     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
96194     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
96195     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
96196     +END;
MPRINT(EM_DIAGRAM):   END;
96197     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96198     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
96199     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
96200     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
96201     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
96202     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
96203     +END;
MPRINT(EM_DIAGRAM):   END;
96204     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96205     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
96206     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96207     +
96208     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
96209     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
96210     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
96211     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
96212     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
96213     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96214     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
96215     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
96216     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
96217     +end;
MPRINT(EM_DIAGRAM):   end;
96218     +else do;
MPRINT(EM_DIAGRAM):   else do;
96219     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
96220     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
96221     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
96222     +   end;
MPRINT(EM_DIAGRAM):   end;
96223     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
96224     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
96225     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
96226     +   end;
MPRINT(EM_DIAGRAM):   end;
96227     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96228     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
96229     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
96230     +   end;
MPRINT(EM_DIAGRAM):   end;
96231     +end;
MPRINT(EM_DIAGRAM):   end;
96232     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96233     +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
96234     +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
96235     +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
96236     +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
96237     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
96238     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
96239     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
96240     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
96241     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
96242     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
96243     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
96244     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
96245     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
96246     +END;
MPRINT(EM_DIAGRAM):   END;
96247     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96248     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
96249     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
96250     +END;
MPRINT(EM_DIAGRAM):   END;
96251     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
96252     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
96253     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
96254     +END;
MPRINT(EM_DIAGRAM):   END;
96255     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
96256     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
96257     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
96258     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
96259     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
96260     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
96261     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
96262     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96263     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
96264     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96265     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
96266     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
96267     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
96268     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
96269     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
96270     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
96271     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
96272     +END;
MPRINT(EM_DIAGRAM):   END;
96273     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
96274     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
96275     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
96276     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
96277     +* Renaming variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural34;
96278     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96279     +* Renaming Posterior variables for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural34;
96280     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96281     +drop AutoNeural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar1;
96282     +AutoNeural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar1 = P_DepVar1;
96283     +drop AutoNeural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_P_DepVar0;
96284     +AutoNeural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural34_P_DepVar0 = P_DepVar0;
96285     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96286     +* Renaming _WARN_ variable for AutoNeural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural34;
96287     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96288     +length AutoNeural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural34_WARN_ $4;
96289     +drop AutoNeural34_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural34_WARN_;
96290     +AutoNeural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural34_WARN_ = _WARN_;
96291     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96292     +* Ensmbl55: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 4 of 7;
96293     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96294     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96295     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
96296     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
96297     +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
96298     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96299     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
96300     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
96301     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
96302     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
96303     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
96304     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
96305     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
96306     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
96307     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
96308     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
96309     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
96310     +LENGTH _WARN_ $4
96311     +      F_DepVar  $ 12
96312     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
96313     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
96314     +
96315     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
96316     +
96317     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
96318     +
96319     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
96320     +
96321     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
96322     +
96323     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
96324     +
96325     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
96326     +
96327     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
96328     +
96329     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
96330     +
96331     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
96332     +
96333     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
96334     +
96335     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
96336     +
96337     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
96338     +
96339     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
96340     +
96341     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
96342     +
96343     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
96344     +
96345     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
96346     +
96347     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
96348     +
96349     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
96350     +
96351     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
96352     +
96353     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
96354     +
96355     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
96356     +
96357     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
96358     +
96359     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
96360     +
96361     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
96362     +
96363     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
96364     +
96365     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
96366     +
96367     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
96368     +
96369     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
96370     +
96371     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
96372     +
96373     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
96374     +
96375     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
96376     +
96377     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
96378     +
96379     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
96380     +
96381     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
96382     +
96383     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
96384     +
96385     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
96386     +
96387     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
96388     +
96389     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
96390     +
96391     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
96392     +
96393     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
96394     +
96395     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
96396     +
96397     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
96398     +
96399     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
96400     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
96401     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
96402     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
96403     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96404     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96405     +end;
MPRINT(EM_DIAGRAM):   end;
96406     +else do;
MPRINT(EM_DIAGRAM):   else do;
96407     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96408     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
96409     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96410     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96411     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
96412     +   end;
MPRINT(EM_DIAGRAM):   end;
96413     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96414     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
96415     +   end;
MPRINT(EM_DIAGRAM):   end;
96416     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96417     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
96418     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96419     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96420     +   end;
MPRINT(EM_DIAGRAM):   end;
96421     +end;
MPRINT(EM_DIAGRAM):   end;
96422     +
96423     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
96424     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
96425     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
96426     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
96427     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96428     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96429     +end;
MPRINT(EM_DIAGRAM):   end;
96430     +else do;
MPRINT(EM_DIAGRAM):   else do;
96431     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96432     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
96433     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96434     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96435     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
96436     +   end;
MPRINT(EM_DIAGRAM):   end;
96437     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96438     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
96439     +   end;
MPRINT(EM_DIAGRAM):   end;
96440     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96441     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
96442     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96443     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96444     +   end;
MPRINT(EM_DIAGRAM):   end;
96445     +end;
MPRINT(EM_DIAGRAM):   end;
96446     +
96447     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
96448     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
96449     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
96450     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
96451     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96452     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96453     +end;
MPRINT(EM_DIAGRAM):   end;
96454     +else do;
MPRINT(EM_DIAGRAM):   else do;
96455     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96456     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
96457     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96458     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96459     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
96460     +   end;
MPRINT(EM_DIAGRAM):   end;
96461     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96462     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
96463     +   end;
MPRINT(EM_DIAGRAM):   end;
96464     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96465     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
96466     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96467     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96468     +   end;
MPRINT(EM_DIAGRAM):   end;
96469     +end;
MPRINT(EM_DIAGRAM):   end;
96470     +
96471     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
96472     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
96473     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
96474     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
96475     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96476     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96477     +end;
MPRINT(EM_DIAGRAM):   end;
96478     +else do;
MPRINT(EM_DIAGRAM):   else do;
96479     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96480     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
96481     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96482     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96483     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
96484     +   end;
MPRINT(EM_DIAGRAM):   end;
96485     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96486     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
96487     +   end;
MPRINT(EM_DIAGRAM):   end;
96488     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96489     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
96490     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96491     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96492     +   end;
MPRINT(EM_DIAGRAM):   end;
96493     +end;
MPRINT(EM_DIAGRAM):   end;
96494     +
96495     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
96496     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
96497     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
96498     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
96499     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96500     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96501     +end;
MPRINT(EM_DIAGRAM):   end;
96502     +else do;
MPRINT(EM_DIAGRAM):   else do;
96503     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96504     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
96505     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96506     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96507     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
96508     +   end;
MPRINT(EM_DIAGRAM):   end;
96509     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96510     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
96511     +   end;
MPRINT(EM_DIAGRAM):   end;
96512     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96513     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
96514     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96515     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96516     +   end;
MPRINT(EM_DIAGRAM):   end;
96517     +end;
MPRINT(EM_DIAGRAM):   end;
96518     +
96519     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
96520     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
96521     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
96522     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
96523     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96524     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96525     +end;
MPRINT(EM_DIAGRAM):   end;
96526     +else do;
MPRINT(EM_DIAGRAM):   else do;
96527     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96528     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
96529     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96530     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
96531     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
96532     +   end;
MPRINT(EM_DIAGRAM):   end;
96533     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
96534     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
96535     +   end;
MPRINT(EM_DIAGRAM):   end;
96536     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96537     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
96538     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96539     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96540     +   end;
MPRINT(EM_DIAGRAM):   end;
96541     +end;
MPRINT(EM_DIAGRAM):   end;
96542     +
96543     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
96544     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
96545     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
96546     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
96547     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96548     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96549     +end;
MPRINT(EM_DIAGRAM):   end;
96550     +else do;
MPRINT(EM_DIAGRAM):   else do;
96551     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
96552     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
96553     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96554     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
96555     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
96556     +   end;
MPRINT(EM_DIAGRAM):   end;
96557     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
96558     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
96559     +   end;
MPRINT(EM_DIAGRAM):   end;
96560     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96561     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
96562     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96563     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96564     +   end;
MPRINT(EM_DIAGRAM):   end;
96565     +end;
MPRINT(EM_DIAGRAM):   end;
96566     +
96567     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
96568     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
96569     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
96570     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
96571     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
96572     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
96573     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
96574     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
96575     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
96576     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
96577     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
96578     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
96579     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96580     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96581     +end;
MPRINT(EM_DIAGRAM):   end;
96582     +else do;
MPRINT(EM_DIAGRAM):   else do;
96583     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
96584     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
96585     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96586     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
96587     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
96588     +   end;
MPRINT(EM_DIAGRAM):   end;
96589     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
96590     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
96591     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
96592     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
96593     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
96594     +   end;
MPRINT(EM_DIAGRAM):   end;
96595     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
96596     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
96597     +   end;
MPRINT(EM_DIAGRAM):   end;
96598     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
96599     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
96600     +   end;
MPRINT(EM_DIAGRAM):   end;
96601     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
96602     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
96603     +   end;
MPRINT(EM_DIAGRAM):   end;
96604     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96605     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
96606     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
96607     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
96608     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
96609     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96610     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96611     +   end;
MPRINT(EM_DIAGRAM):   end;
96612     +end;
MPRINT(EM_DIAGRAM):   end;
96613     +
96614     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
96615     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
96616     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
96617     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
96618     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
96619     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
96620     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
96621     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
96622     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
96623     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
96624     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
96625     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
96626     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
96627     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
96628     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96629     +end;
MPRINT(EM_DIAGRAM):   end;
96630     +else do;
MPRINT(EM_DIAGRAM):   else do;
96631     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
96632     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
96633     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96634     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
96635     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
96636     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
96637     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
96638     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
96639     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96640     +         end;
MPRINT(EM_DIAGRAM):   end;
96641     +         else do;
MPRINT(EM_DIAGRAM):   else do;
96642     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
96643     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
96644     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96645     +            end;
MPRINT(EM_DIAGRAM):   end;
96646     +         end;
MPRINT(EM_DIAGRAM):   end;
96647     +      end;
MPRINT(EM_DIAGRAM):   end;
96648     +      else do;
MPRINT(EM_DIAGRAM):   else do;
96649     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
96650     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
96651     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96652     +         end;
MPRINT(EM_DIAGRAM):   end;
96653     +      end;
MPRINT(EM_DIAGRAM):   end;
96654     +   end;
MPRINT(EM_DIAGRAM):   end;
96655     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96656     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
96657     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
96658     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96659     +      end;
MPRINT(EM_DIAGRAM):   end;
96660     +      else do;
MPRINT(EM_DIAGRAM):   else do;
96661     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
96662     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
96663     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
96664     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
96665     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
96666     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
96667     +         end;
MPRINT(EM_DIAGRAM):   end;
96668     +      end;
MPRINT(EM_DIAGRAM):   end;
96669     +   end;
MPRINT(EM_DIAGRAM):   end;
96670     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
96671     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
96672     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
96673     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
96674     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
96675     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
96676     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96677     +   end;
MPRINT(EM_DIAGRAM):   end;
96678     +end;
MPRINT(EM_DIAGRAM):   end;
96679     +
96680     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96681     +*** Checking missing input Interval
96682     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
96683     +
96684     +IF NMISS(
96685     +   AcceptedCmpTotal ,
96686     +   Age ,
96687     +   Frq ,
96688     +   Income ,
96689     +   Kidhome ,
96690     +   MntFishProducts ,
96691     +   MntFruits ,
96692     +   MntGoldProds ,
96693     +   MntSweetProducts ,
96694     +   MonthsAsCustomer ,
96695     +   NumDealsPurchases ,
96696     +   NumWebVisitsMonth ,
96697     +   RFMstat ,
96698     +   RMntFrq ,
96699     +   Recency ,
96700     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
96701     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
96702     +
96703     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
96704     +END;
MPRINT(EM_DIAGRAM):   END;
96705     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96706     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
96707     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96708     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96709     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
96710     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
96711     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
96712     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
96713     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
96714     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
96715     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
96716     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
96717     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
96718     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
96719     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
96720     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
96721     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
96722     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
96723     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
96724     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
96725     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
96726     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
96727     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
96728     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
96729     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
96730     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
96731     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
96732     +END;
MPRINT(EM_DIAGRAM):   END;
96733     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96734     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
96735     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
96736     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
96737     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
96738     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
96739     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
96740     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
96741     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
96742     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
96743     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
96744     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
96745     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
96746     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
96747     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
96748     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
96749     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
96750     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
96751     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
96752     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
96753     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
96754     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
96755     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
96756     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
96757     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
96758     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
96759     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
96760     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
96761     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
96762     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
96763     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
96764     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
96765     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
96766     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
96767     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
96768     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
96769     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
96770     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
96771     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
96772     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
96773     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
96774     +END;
MPRINT(EM_DIAGRAM):   END;
96775     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96776     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
96777     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96778     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96779     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
96780     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96781     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96782     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
96783     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96784     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96785     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
96786     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
96787     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
96788     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
96789     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
96790     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
96791     +          +     -0.6473961304074 * S_MonthsAsCustomer
96792     +          +     0.68960902951007 * S_NumDealsPurchases
96793     +          +    -0.03600585273268 * S_NumWebVisitsMonth
96794     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
96795     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
96796     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
96797     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
96798     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
96799     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
96800     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
96801     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
96802     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
96803     +          +    -0.70674764548268 * S_MonthsAsCustomer
96804     +          +     0.03761139203619 * S_NumDealsPurchases
96805     +          +    -0.69359662485747 * S_NumWebVisitsMonth
96806     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
96807     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
96808     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
96809     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
96810     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
96811     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
96812     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
96813     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
96814     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
96815     +          +    -0.47559913836984 * S_MonthsAsCustomer
96816     +          +    -0.26961781245749 * S_NumDealsPurchases
96817     +          +    -0.67017962977412 * S_NumWebVisitsMonth
96818     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
96819     +        S_RMntFrq  +     0.67120737584665 * S_Recency
96820     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
96821     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
96822     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
96823     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
96824     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
96825     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
96826     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
96827     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
96828     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
96829     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
96830     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
96831     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
96832     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
96833     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
96834     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
96835     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
96836     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
96837     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
96838     +        EducationGraduation  +     0.46172475127934 * EducationMaster
96839     +          +    -0.18858032329482 * Marital_StatusDivorced
96840     +          +     0.16067956508072 * Marital_StatusMarried
96841     +          +    -0.90926406046237 * Marital_StatusSingle
96842     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
96843     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
96844     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
96845     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
96846     +          +     0.71998738170149 * Marital_StatusDivorced
96847     +          +    -1.53543515752013 * Marital_StatusMarried
96848     +          +     0.44068743694663 * Marital_StatusSingle
96849     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
96850     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
96851     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
96852     +        EducationGraduation  +     0.11252156068047 * EducationMaster
96853     +          +    -0.31683932084863 * Marital_StatusDivorced
96854     +          +     0.17674162427585 * Marital_StatusMarried
96855     +          +    -0.67064017247711 * Marital_StatusSingle
96856     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
96857     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
96858     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
96859     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
96860     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
96861     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
96862     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
96863     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
96864     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
96865     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
96866     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
96867     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
96868     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
96869     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
96870     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
96871     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
96872     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
96873     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
96874     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
96875     +END;
MPRINT(EM_DIAGRAM):   END;
96876     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96877     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
96878     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
96879     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
96880     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
96881     +END;
MPRINT(EM_DIAGRAM):   END;
96882     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96883     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
96884     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96885     +
96886     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
96887     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
96888     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
96889     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
96890     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
96891     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
96892     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
96893     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
96894     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
96895     +end;
MPRINT(EM_DIAGRAM):   end;
96896     +else do;
MPRINT(EM_DIAGRAM):   else do;
96897     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
96898     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
96899     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
96900     +   end;
MPRINT(EM_DIAGRAM):   end;
96901     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
96902     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
96903     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
96904     +   end;
MPRINT(EM_DIAGRAM):   end;
96905     +   else do;
MPRINT(EM_DIAGRAM):   else do;
96906     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
96907     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
96908     +   end;
MPRINT(EM_DIAGRAM):   end;
96909     +end;
MPRINT(EM_DIAGRAM):   end;
96910     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
96911     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
96912     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
96913     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
96914     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
96915     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
96916     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
96917     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
96918     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
96919     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
96920     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
96921     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
96922     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
96923     +END;
MPRINT(EM_DIAGRAM):   END;
96924     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
96925     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
96926     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
96927     +END;
MPRINT(EM_DIAGRAM):   END;
96928     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
96929     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
96930     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
96931     +END;
MPRINT(EM_DIAGRAM):   END;
96932     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
96933     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
96934     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
96935     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
96936     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
96937     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
96938     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
96939     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96940     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
96941     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
96942     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
96943     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
96944     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
96945     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
96946     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
96947     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
96948     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
96949     +END;
MPRINT(EM_DIAGRAM):   END;
96950     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
96951     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
96952     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
96953     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
96954     +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
96955     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96956     +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
96957     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96958     +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
96959     +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
96960     +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
96961     +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
96962     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96963     +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
96964     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96965     +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
96966     +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
96967     +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
96968     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96969     +* Ensmbl55: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 5 of 7;
96970     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96971     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96972     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
96973     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
96974     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
96975     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
96976     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
96977     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
96978     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
96979     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
96980     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
96981     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
96982     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
96983     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
96984     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
96985     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
96986     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
96987     +LENGTH _WARN_ $4
96988     +      F_DepVar  $ 12
96989     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
96990     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
96991     +
96992     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
96993     +
96994     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
96995     +
96996     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
96997     +
96998     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
96999     +
97000     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
97001     +
97002     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
97003     +
97004     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
97005     +
97006     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
97007     +
97008     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
97009     +
97010     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
97011     +
97012     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
97013     +
97014     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
97015     +
97016     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
97017     +
97018     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
97019     +
97020     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
97021     +
97022     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
97023     +
97024     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
97025     +
97026     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
97027     +
97028     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
97029     +
97030     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
97031     +
97032     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
97033     +
97034     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
97035     +
97036     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
97037     +
97038     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
97039     +
97040     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
97041     +
97042     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
97043     +
97044     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
97045     +
97046     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
97047     +
97048     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
97049     +
97050     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
97051     +
97052     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
97053     +
97054     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
97055     +
97056     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
97057     +
97058     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
97059     +
97060     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
97061     +
97062     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
97063     +
97064     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
97065     +
97066     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
97067     +
97068     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
97069     +
97070     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
97071     +
97072     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
97073     +
97074     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
97075     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
97076     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
97077     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
97078     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97079     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97080     +end;
MPRINT(EM_DIAGRAM):   end;
97081     +else do;
MPRINT(EM_DIAGRAM):   else do;
97082     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97083     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
97084     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97085     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97086     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
97087     +   end;
MPRINT(EM_DIAGRAM):   end;
97088     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97089     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
97090     +   end;
MPRINT(EM_DIAGRAM):   end;
97091     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97092     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
97093     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97094     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97095     +   end;
MPRINT(EM_DIAGRAM):   end;
97096     +end;
MPRINT(EM_DIAGRAM):   end;
97097     +
97098     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
97099     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
97100     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
97101     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
97102     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97103     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97104     +end;
MPRINT(EM_DIAGRAM):   end;
97105     +else do;
MPRINT(EM_DIAGRAM):   else do;
97106     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97107     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
97108     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97109     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97110     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
97111     +   end;
MPRINT(EM_DIAGRAM):   end;
97112     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97113     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
97114     +   end;
MPRINT(EM_DIAGRAM):   end;
97115     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97116     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
97117     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97118     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97119     +   end;
MPRINT(EM_DIAGRAM):   end;
97120     +end;
MPRINT(EM_DIAGRAM):   end;
97121     +
97122     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
97123     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
97124     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
97125     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
97126     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97127     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97128     +end;
MPRINT(EM_DIAGRAM):   end;
97129     +else do;
MPRINT(EM_DIAGRAM):   else do;
97130     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97131     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
97132     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97133     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97134     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
97135     +   end;
MPRINT(EM_DIAGRAM):   end;
97136     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97137     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
97138     +   end;
MPRINT(EM_DIAGRAM):   end;
97139     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97140     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
97141     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97142     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97143     +   end;
MPRINT(EM_DIAGRAM):   end;
97144     +end;
MPRINT(EM_DIAGRAM):   end;
97145     +
97146     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
97147     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
97148     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
97149     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
97150     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97151     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97152     +end;
MPRINT(EM_DIAGRAM):   end;
97153     +else do;
MPRINT(EM_DIAGRAM):   else do;
97154     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97155     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
97156     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97157     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97158     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
97159     +   end;
MPRINT(EM_DIAGRAM):   end;
97160     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97161     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
97162     +   end;
MPRINT(EM_DIAGRAM):   end;
97163     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97164     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
97165     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97166     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97167     +   end;
MPRINT(EM_DIAGRAM):   end;
97168     +end;
MPRINT(EM_DIAGRAM):   end;
97169     +
97170     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
97171     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
97172     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
97173     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
97174     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97175     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97176     +end;
MPRINT(EM_DIAGRAM):   end;
97177     +else do;
MPRINT(EM_DIAGRAM):   else do;
97178     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97179     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
97180     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97181     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97182     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
97183     +   end;
MPRINT(EM_DIAGRAM):   end;
97184     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97185     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
97186     +   end;
MPRINT(EM_DIAGRAM):   end;
97187     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97188     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
97189     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97190     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97191     +   end;
MPRINT(EM_DIAGRAM):   end;
97192     +end;
MPRINT(EM_DIAGRAM):   end;
97193     +
97194     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
97195     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
97196     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
97197     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
97198     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97199     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97200     +end;
MPRINT(EM_DIAGRAM):   end;
97201     +else do;
MPRINT(EM_DIAGRAM):   else do;
97202     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97203     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
97204     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97205     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97206     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
97207     +   end;
MPRINT(EM_DIAGRAM):   end;
97208     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97209     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
97210     +   end;
MPRINT(EM_DIAGRAM):   end;
97211     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97212     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
97213     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97214     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97215     +   end;
MPRINT(EM_DIAGRAM):   end;
97216     +end;
MPRINT(EM_DIAGRAM):   end;
97217     +
97218     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
97219     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
97220     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
97221     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
97222     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97223     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97224     +end;
MPRINT(EM_DIAGRAM):   end;
97225     +else do;
MPRINT(EM_DIAGRAM):   else do;
97226     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97227     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
97228     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97229     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
97230     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
97231     +   end;
MPRINT(EM_DIAGRAM):   end;
97232     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
97233     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
97234     +   end;
MPRINT(EM_DIAGRAM):   end;
97235     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97236     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
97237     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97238     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97239     +   end;
MPRINT(EM_DIAGRAM):   end;
97240     +end;
MPRINT(EM_DIAGRAM):   end;
97241     +
97242     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
97243     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
97244     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
97245     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
97246     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
97247     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
97248     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
97249     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
97250     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
97251     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
97252     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
97253     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
97254     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97255     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97256     +end;
MPRINT(EM_DIAGRAM):   end;
97257     +else do;
MPRINT(EM_DIAGRAM):   else do;
97258     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
97259     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
97260     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97261     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
97262     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
97263     +   end;
MPRINT(EM_DIAGRAM):   end;
97264     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
97265     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
97266     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
97267     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
97268     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
97269     +   end;
MPRINT(EM_DIAGRAM):   end;
97270     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
97271     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
97272     +   end;
MPRINT(EM_DIAGRAM):   end;
97273     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
97274     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
97275     +   end;
MPRINT(EM_DIAGRAM):   end;
97276     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
97277     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
97278     +   end;
MPRINT(EM_DIAGRAM):   end;
97279     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97280     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
97281     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
97282     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
97283     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
97284     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97285     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97286     +   end;
MPRINT(EM_DIAGRAM):   end;
97287     +end;
MPRINT(EM_DIAGRAM):   end;
97288     +
97289     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
97290     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
97291     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
97292     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
97293     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
97294     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
97295     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
97296     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
97297     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
97298     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97299     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97300     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97301     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97302     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97303     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97304     +end;
MPRINT(EM_DIAGRAM):   end;
97305     +else do;
MPRINT(EM_DIAGRAM):   else do;
97306     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
97307     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
97308     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97309     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
97310     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
97311     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
97312     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
97313     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
97314     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97315     +         end;
MPRINT(EM_DIAGRAM):   end;
97316     +         else do;
MPRINT(EM_DIAGRAM):   else do;
97317     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
97318     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
97319     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97320     +            end;
MPRINT(EM_DIAGRAM):   end;
97321     +         end;
MPRINT(EM_DIAGRAM):   end;
97322     +      end;
MPRINT(EM_DIAGRAM):   end;
97323     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97324     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
97325     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
97326     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97327     +         end;
MPRINT(EM_DIAGRAM):   end;
97328     +      end;
MPRINT(EM_DIAGRAM):   end;
97329     +   end;
MPRINT(EM_DIAGRAM):   end;
97330     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97331     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
97332     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
97333     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97334     +      end;
MPRINT(EM_DIAGRAM):   end;
97335     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97336     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
97337     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
97338     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
97339     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
97340     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
97341     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97342     +         end;
MPRINT(EM_DIAGRAM):   end;
97343     +      end;
MPRINT(EM_DIAGRAM):   end;
97344     +   end;
MPRINT(EM_DIAGRAM):   end;
97345     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
97346     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97347     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97348     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97349     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97350     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97351     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97352     +   end;
MPRINT(EM_DIAGRAM):   end;
97353     +end;
MPRINT(EM_DIAGRAM):   end;
97354     +
97355     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97356     +*** Checking missing input Interval
97357     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
97358     +
97359     +IF NMISS(
97360     +   AcceptedCmpTotal ,
97361     +   Age ,
97362     +   Frq ,
97363     +   Income ,
97364     +   Kidhome ,
97365     +   MntFishProducts ,
97366     +   MntFruits ,
97367     +   MntGoldProds ,
97368     +   MntSweetProducts ,
97369     +   MonthsAsCustomer ,
97370     +   NumDealsPurchases ,
97371     +   NumWebVisitsMonth ,
97372     +   RFMstat ,
97373     +   RMntFrq ,
97374     +   Recency ,
97375     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
97376     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
97377     +
97378     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97379     +END;
MPRINT(EM_DIAGRAM):   END;
97380     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97381     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
97382     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97383     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97384     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
97385     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
97386     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
97387     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
97388     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
97389     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
97390     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
97391     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
97392     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
97393     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
97394     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
97395     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
97396     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
97397     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
97398     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
97399     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
97400     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
97401     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
97402     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
97403     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
97404     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
97405     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
97406     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
97407     +END;
MPRINT(EM_DIAGRAM):   END;
97408     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97409     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
97410     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
97411     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
97412     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
97413     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
97414     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
97415     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
97416     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
97417     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
97418     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
97419     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
97420     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
97421     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
97422     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
97423     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
97424     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
97425     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
97426     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
97427     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
97428     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
97429     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
97430     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
97431     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
97432     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
97433     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
97434     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
97435     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
97436     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
97437     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
97438     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
97439     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
97440     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
97441     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
97442     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
97443     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
97444     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
97445     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
97446     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
97447     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
97448     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
97449     +END;
MPRINT(EM_DIAGRAM):   END;
97450     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97451     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
97452     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97453     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97454     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
97455     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97456     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97457     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
97458     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97459     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97460     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
97461     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
97462     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
97463     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
97464     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
97465     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
97466     +          +     -0.1740957673716 * S_MonthsAsCustomer
97467     +          +     0.66565026405117 * S_NumDealsPurchases
97468     +          +     0.43247206282836 * S_NumWebVisitsMonth
97469     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
97470     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
97471     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
97472     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
97473     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
97474     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
97475     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
97476     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
97477     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
97478     +          +    -0.06176784990963 * S_MonthsAsCustomer
97479     +          +    -0.11740415005833 * S_NumDealsPurchases
97480     +          +    -0.17084845478672 * S_NumWebVisitsMonth
97481     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
97482     +        S_RMntFrq  +     0.54983271222574 * S_Recency
97483     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
97484     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
97485     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
97486     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
97487     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
97488     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
97489     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
97490     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
97491     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
97492     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
97493     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
97494     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
97495     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
97496     +        EducationGraduation  +     0.22632282500966 * EducationMaster
97497     +          +     -0.0800438380883 * Marital_StatusDivorced
97498     +          +     0.44505766937623 * Marital_StatusMarried
97499     +          +    -0.57546515626468 * Marital_StatusSingle
97500     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
97501     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
97502     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
97503     +        EducationGraduation  +      0.0794165981215 * EducationMaster
97504     +          +    -0.20291653465543 * Marital_StatusDivorced
97505     +          +     0.39547414450617 * Marital_StatusMarried
97506     +          +    -0.37001331184001 * Marital_StatusSingle
97507     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
97508     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
97509     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
97510     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
97511     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
97512     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
97513     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
97514     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
97515     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
97516     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
97517     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
97518     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
97519     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
97520     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
97521     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
97522     +END;
MPRINT(EM_DIAGRAM):   END;
97523     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97524     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
97525     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
97526     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
97527     +END;
MPRINT(EM_DIAGRAM):   END;
97528     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97529     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
97530     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97531     +
97532     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
97533     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
97534     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
97535     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
97536     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
97537     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97538     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
97539     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
97540     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
97541     +end;
MPRINT(EM_DIAGRAM):   end;
97542     +else do;
MPRINT(EM_DIAGRAM):   else do;
97543     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
97544     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
97545     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
97546     +   end;
MPRINT(EM_DIAGRAM):   end;
97547     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
97548     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
97549     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
97550     +   end;
MPRINT(EM_DIAGRAM):   end;
97551     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97552     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
97553     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
97554     +   end;
MPRINT(EM_DIAGRAM):   end;
97555     +end;
MPRINT(EM_DIAGRAM):   end;
97556     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
97557     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
97558     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
97559     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
97560     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
97561     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
97562     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
97563     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
97564     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
97565     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
97566     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
97567     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
97568     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
97569     +END;
MPRINT(EM_DIAGRAM):   END;
97570     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
97571     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
97572     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
97573     +END;
MPRINT(EM_DIAGRAM):   END;
97574     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
97575     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
97576     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
97577     +END;
MPRINT(EM_DIAGRAM):   END;
97578     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
97579     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
97580     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
97581     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
97582     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
97583     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
97584     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
97585     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97586     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
97587     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
97588     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
97589     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
97590     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
97591     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
97592     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
97593     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
97594     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
97595     +END;
MPRINT(EM_DIAGRAM):   END;
97596     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
97597     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
97598     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
97599     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
97600     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
97601     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97602     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
97603     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97604     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
97605     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
97606     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
97607     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
97608     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97609     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
97610     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97611     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
97612     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
97613     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
97614     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97615     +* Ensmbl55: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 6 of 7;
97616     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97617     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97618     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
97619     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
97620     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
97621     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97622     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
97623     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
97624     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
97625     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
97626     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
97627     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
97628     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
97629     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
97630     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
97631     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
97632     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
97633     +LENGTH _WARN_ $4
97634     +      F_DepVar  $ 12
97635     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
97636     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
97637     +
97638     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
97639     +
97640     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
97641     +
97642     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
97643     +
97644     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
97645     +
97646     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
97647     +
97648     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
97649     +
97650     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
97651     +
97652     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
97653     +
97654     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
97655     +
97656     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
97657     +
97658     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
97659     +
97660     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
97661     +
97662     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
97663     +
97664     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
97665     +
97666     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
97667     +
97668     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
97669     +
97670     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
97671     +
97672     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
97673     +
97674     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
97675     +
97676     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
97677     +
97678     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
97679     +
97680     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
97681     +
97682     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
97683     +
97684     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
97685     +
97686     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
97687     +
97688     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
97689     +
97690     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
97691     +
97692     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
97693     +
97694     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
97695     +
97696     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
97697     +
97698     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
97699     +
97700     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
97701     +
97702     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
97703     +
97704     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
97705     +
97706     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
97707     +
97708     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
97709     +
97710     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
97711     +
97712     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
97713     +
97714     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
97715     +
97716     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
97717     +
97718     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
97719     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
97720     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
97721     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
97722     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97723     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97724     +end;
MPRINT(EM_DIAGRAM):   end;
97725     +else do;
MPRINT(EM_DIAGRAM):   else do;
97726     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97727     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
97728     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97729     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97730     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
97731     +   end;
MPRINT(EM_DIAGRAM):   end;
97732     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97733     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
97734     +   end;
MPRINT(EM_DIAGRAM):   end;
97735     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97736     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
97737     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97738     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97739     +   end;
MPRINT(EM_DIAGRAM):   end;
97740     +end;
MPRINT(EM_DIAGRAM):   end;
97741     +
97742     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
97743     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
97744     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
97745     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
97746     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97747     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97748     +end;
MPRINT(EM_DIAGRAM):   end;
97749     +else do;
MPRINT(EM_DIAGRAM):   else do;
97750     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97751     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
97752     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97753     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97754     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
97755     +   end;
MPRINT(EM_DIAGRAM):   end;
97756     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97757     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
97758     +   end;
MPRINT(EM_DIAGRAM):   end;
97759     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97760     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
97761     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97762     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97763     +   end;
MPRINT(EM_DIAGRAM):   end;
97764     +end;
MPRINT(EM_DIAGRAM):   end;
97765     +
97766     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
97767     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
97768     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
97769     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
97770     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97771     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97772     +end;
MPRINT(EM_DIAGRAM):   end;
97773     +else do;
MPRINT(EM_DIAGRAM):   else do;
97774     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97775     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
97776     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97777     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97778     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
97779     +   end;
MPRINT(EM_DIAGRAM):   end;
97780     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97781     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
97782     +   end;
MPRINT(EM_DIAGRAM):   end;
97783     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97784     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
97785     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97786     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97787     +   end;
MPRINT(EM_DIAGRAM):   end;
97788     +end;
MPRINT(EM_DIAGRAM):   end;
97789     +
97790     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
97791     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
97792     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
97793     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
97794     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97795     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97796     +end;
MPRINT(EM_DIAGRAM):   end;
97797     +else do;
MPRINT(EM_DIAGRAM):   else do;
97798     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97799     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
97800     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97801     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97802     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
97803     +   end;
MPRINT(EM_DIAGRAM):   end;
97804     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97805     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
97806     +   end;
MPRINT(EM_DIAGRAM):   end;
97807     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97808     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
97809     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97810     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97811     +   end;
MPRINT(EM_DIAGRAM):   end;
97812     +end;
MPRINT(EM_DIAGRAM):   end;
97813     +
97814     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
97815     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
97816     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
97817     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
97818     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97819     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97820     +end;
MPRINT(EM_DIAGRAM):   end;
97821     +else do;
MPRINT(EM_DIAGRAM):   else do;
97822     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97823     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
97824     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97825     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97826     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
97827     +   end;
MPRINT(EM_DIAGRAM):   end;
97828     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97829     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
97830     +   end;
MPRINT(EM_DIAGRAM):   end;
97831     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97832     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
97833     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97834     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97835     +   end;
MPRINT(EM_DIAGRAM):   end;
97836     +end;
MPRINT(EM_DIAGRAM):   end;
97837     +
97838     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
97839     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
97840     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
97841     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
97842     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97843     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97844     +end;
MPRINT(EM_DIAGRAM):   end;
97845     +else do;
MPRINT(EM_DIAGRAM):   else do;
97846     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97847     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
97848     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97849     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
97850     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
97851     +   end;
MPRINT(EM_DIAGRAM):   end;
97852     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
97853     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
97854     +   end;
MPRINT(EM_DIAGRAM):   end;
97855     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97856     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
97857     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97858     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97859     +   end;
MPRINT(EM_DIAGRAM):   end;
97860     +end;
MPRINT(EM_DIAGRAM):   end;
97861     +
97862     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
97863     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
97864     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
97865     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
97866     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97867     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97868     +end;
MPRINT(EM_DIAGRAM):   end;
97869     +else do;
MPRINT(EM_DIAGRAM):   else do;
97870     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
97871     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
97872     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97873     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
97874     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
97875     +   end;
MPRINT(EM_DIAGRAM):   end;
97876     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
97877     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
97878     +   end;
MPRINT(EM_DIAGRAM):   end;
97879     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97880     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
97881     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97882     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97883     +   end;
MPRINT(EM_DIAGRAM):   end;
97884     +end;
MPRINT(EM_DIAGRAM):   end;
97885     +
97886     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
97887     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
97888     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
97889     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
97890     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
97891     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
97892     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
97893     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
97894     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
97895     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
97896     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
97897     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
97898     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97899     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97900     +end;
MPRINT(EM_DIAGRAM):   end;
97901     +else do;
MPRINT(EM_DIAGRAM):   else do;
97902     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
97903     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
97904     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97905     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
97906     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
97907     +   end;
MPRINT(EM_DIAGRAM):   end;
97908     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
97909     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
97910     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
97911     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
97912     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
97913     +   end;
MPRINT(EM_DIAGRAM):   end;
97914     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
97915     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
97916     +   end;
MPRINT(EM_DIAGRAM):   end;
97917     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
97918     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
97919     +   end;
MPRINT(EM_DIAGRAM):   end;
97920     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
97921     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
97922     +   end;
MPRINT(EM_DIAGRAM):   end;
97923     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97924     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
97925     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
97926     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
97927     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
97928     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97929     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97930     +   end;
MPRINT(EM_DIAGRAM):   end;
97931     +end;
MPRINT(EM_DIAGRAM):   end;
97932     +
97933     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
97934     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
97935     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
97936     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
97937     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
97938     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
97939     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
97940     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
97941     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
97942     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97943     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97944     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97945     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97946     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
97947     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97948     +end;
MPRINT(EM_DIAGRAM):   end;
97949     +else do;
MPRINT(EM_DIAGRAM):   else do;
97950     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
97951     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
97952     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
97953     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
97954     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
97955     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
97956     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
97957     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
97958     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97959     +         end;
MPRINT(EM_DIAGRAM):   end;
97960     +         else do;
MPRINT(EM_DIAGRAM):   else do;
97961     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
97962     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
97963     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97964     +            end;
MPRINT(EM_DIAGRAM):   end;
97965     +         end;
MPRINT(EM_DIAGRAM):   end;
97966     +      end;
MPRINT(EM_DIAGRAM):   end;
97967     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97968     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
97969     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
97970     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97971     +         end;
MPRINT(EM_DIAGRAM):   end;
97972     +      end;
MPRINT(EM_DIAGRAM):   end;
97973     +   end;
MPRINT(EM_DIAGRAM):   end;
97974     +   else do;
MPRINT(EM_DIAGRAM):   else do;
97975     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
97976     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
97977     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97978     +      end;
MPRINT(EM_DIAGRAM):   end;
97979     +      else do;
MPRINT(EM_DIAGRAM):   else do;
97980     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
97981     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
97982     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
97983     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
97984     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
97985     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
97986     +         end;
MPRINT(EM_DIAGRAM):   end;
97987     +      end;
MPRINT(EM_DIAGRAM):   end;
97988     +   end;
MPRINT(EM_DIAGRAM):   end;
97989     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
97990     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
97991     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
97992     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
97993     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
97994     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
97995     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
97996     +   end;
MPRINT(EM_DIAGRAM):   end;
97997     +end;
MPRINT(EM_DIAGRAM):   end;
97998     +
97999     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98000     +*** Checking missing input Interval
98001     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
98002     +
98003     +IF NMISS(
98004     +   AcceptedCmpTotal ,
98005     +   Age ,
98006     +   Frq ,
98007     +   Income ,
98008     +   Kidhome ,
98009     +   MntFishProducts ,
98010     +   MntFruits ,
98011     +   MntGoldProds ,
98012     +   MntSweetProducts ,
98013     +   MonthsAsCustomer ,
98014     +   NumDealsPurchases ,
98015     +   NumWebVisitsMonth ,
98016     +   RFMstat ,
98017     +   RMntFrq ,
98018     +   Recency ,
98019     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
98020     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
98021     +
98022     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98023     +END;
MPRINT(EM_DIAGRAM):   END;
98024     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98025     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
98026     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98027     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98028     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
98029     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
98030     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
98031     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
98032     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
98033     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
98034     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
98035     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
98036     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
98037     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
98038     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
98039     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
98040     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
98041     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
98042     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
98043     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
98044     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
98045     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
98046     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
98047     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
98048     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
98049     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
98050     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
98051     +END;
MPRINT(EM_DIAGRAM):   END;
98052     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98053     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
98054     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
98055     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
98056     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
98057     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
98058     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
98059     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
98060     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
98061     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
98062     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
98063     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
98064     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
98065     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
98066     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
98067     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
98068     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
98069     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
98070     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
98071     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
98072     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
98073     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
98074     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
98075     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
98076     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
98077     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
98078     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
98079     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
98080     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
98081     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
98082     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
98083     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
98084     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
98085     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
98086     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
98087     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
98088     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
98089     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
98090     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
98091     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
98092     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
98093     +END;
MPRINT(EM_DIAGRAM):   END;
98094     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98095     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
98096     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98097     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98098     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
98099     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98100     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98101     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
98102     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98103     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98104     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
98105     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
98106     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
98107     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
98108     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
98109     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
98110     +          +     0.07696704519183 * S_MonthsAsCustomer
98111     +          +     0.06885982009617 * S_NumDealsPurchases
98112     +          +     0.18284147478918 * S_NumWebVisitsMonth
98113     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
98114     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
98115     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
98116     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
98117     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
98118     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
98119     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
98120     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
98121     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
98122     +          +     0.19400730773464 * S_MonthsAsCustomer
98123     +          +    -1.36455521037197 * S_NumDealsPurchases
98124     +          +    -1.07068059346196 * S_NumWebVisitsMonth
98125     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
98126     +        S_RMntFrq  +     1.36066079800227 * S_Recency
98127     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
98128     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
98129     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
98130     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
98131     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
98132     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
98133     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
98134     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
98135     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
98136     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
98137     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
98138     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
98139     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
98140     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
98141     +          +     0.23432241402098 * Marital_StatusDivorced
98142     +          +    -0.46302700269027 * Marital_StatusMarried
98143     +          +      0.4032168653504 * Marital_StatusSingle
98144     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
98145     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
98146     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
98147     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
98148     +          +    -0.31347503340603 * Marital_StatusDivorced
98149     +          +    -0.20319530959178 * Marital_StatusMarried
98150     +          +     0.48298350411196 * Marital_StatusSingle
98151     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
98152     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
98153     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
98154     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
98155     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
98156     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
98157     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
98158     +END;
MPRINT(EM_DIAGRAM):   END;
98159     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98160     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
98161     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
98162     +END;
MPRINT(EM_DIAGRAM):   END;
98163     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98164     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
98165     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98166     +
98167     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
98168     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
98169     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98170     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
98171     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
98172     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98173     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
98174     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
98175     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
98176     +end;
MPRINT(EM_DIAGRAM):   end;
98177     +else do;
MPRINT(EM_DIAGRAM):   else do;
98178     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
98179     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
98180     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
98181     +   end;
MPRINT(EM_DIAGRAM):   end;
98182     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
98183     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
98184     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
98185     +   end;
MPRINT(EM_DIAGRAM):   end;
98186     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98187     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
98188     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
98189     +   end;
MPRINT(EM_DIAGRAM):   end;
98190     +end;
MPRINT(EM_DIAGRAM):   end;
98191     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98192     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
98193     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
98194     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
98195     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
98196     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
98197     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
98198     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
98199     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
98200     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
98201     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
98202     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
98203     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
98204     +END;
MPRINT(EM_DIAGRAM):   END;
98205     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98206     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
98207     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
98208     +END;
MPRINT(EM_DIAGRAM):   END;
98209     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
98210     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
98211     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
98212     +END;
MPRINT(EM_DIAGRAM):   END;
98213     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
98214     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
98215     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
98216     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
98217     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
98218     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
98219     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
98220     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98221     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
98222     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98223     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
98224     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
98225     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
98226     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
98227     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
98228     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
98229     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
98230     +END;
MPRINT(EM_DIAGRAM):   END;
98231     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
98232     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
98233     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
98234     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
98235     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
98236     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98237     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
98238     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98239     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
98240     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
98241     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
98242     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
98243     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98244     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
98245     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98246     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
98247     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
98248     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
98249     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98250     +* Ensmbl55: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Scoring Code of model 7 of 7;
98251     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98252     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98253     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
98254     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
98255     +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
98256     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98257     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98258     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
98259     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98260     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
98261     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
98262     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
98263     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
98264     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
98265     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
98266     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
98267     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
98268     +LENGTH _WARN_ $4
98269     +      F_DepVar  $ 12
98270     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
98271     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
98272     +
98273     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
98274     +
98275     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
98276     +
98277     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
98278     +
98279     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
98280     +
98281     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
98282     +
98283     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
98284     +
98285     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
98286     +
98287     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
98288     +
98289     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
98290     +
98291     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
98292     +
98293     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
98294     +
98295     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
98296     +
98297     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
98298     +
98299     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
98300     +
98301     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
98302     +
98303     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
98304     +
98305     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
98306     +
98307     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
98308     +
98309     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
98310     +
98311     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
98312     +
98313     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
98314     +
98315     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
98316     +
98317     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
98318     +
98319     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
98320     +
98321     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
98322     +
98323     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
98324     +
98325     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
98326     +
98327     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
98328     +
98329     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
98330     +
98331     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
98332     +
98333     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
98334     +
98335     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
98336     +
98337     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
98338     +
98339     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
98340     +
98341     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
98342     +
98343     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
98344     +
98345     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
98346     +
98347     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98348     +
98349     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
98350     +
98351     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
98352     +
98353     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
98354     +
98355     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
98356     +
98357     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
98358     +
98359     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
98360     +
98361     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
98362     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
98363     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
98364     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
98365     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98366     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98367     +end;
MPRINT(EM_DIAGRAM):   end;
98368     +else do;
MPRINT(EM_DIAGRAM):   else do;
98369     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98370     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
98371     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98372     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98373     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
98374     +   end;
MPRINT(EM_DIAGRAM):   end;
98375     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98376     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
98377     +   end;
MPRINT(EM_DIAGRAM):   end;
98378     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98379     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
98380     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98381     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98382     +   end;
MPRINT(EM_DIAGRAM):   end;
98383     +end;
MPRINT(EM_DIAGRAM):   end;
98384     +
98385     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
98386     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
98387     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
98388     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
98389     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98390     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98391     +end;
MPRINT(EM_DIAGRAM):   end;
98392     +else do;
MPRINT(EM_DIAGRAM):   else do;
98393     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98394     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
98395     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98396     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98397     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
98398     +   end;
MPRINT(EM_DIAGRAM):   end;
98399     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98400     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
98401     +   end;
MPRINT(EM_DIAGRAM):   end;
98402     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98403     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
98404     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98405     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98406     +   end;
MPRINT(EM_DIAGRAM):   end;
98407     +end;
MPRINT(EM_DIAGRAM):   end;
98408     +
98409     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
98410     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
98411     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
98412     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
98413     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98414     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98415     +end;
MPRINT(EM_DIAGRAM):   end;
98416     +else do;
MPRINT(EM_DIAGRAM):   else do;
98417     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98418     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
98419     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98420     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98421     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
98422     +   end;
MPRINT(EM_DIAGRAM):   end;
98423     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98424     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
98425     +   end;
MPRINT(EM_DIAGRAM):   end;
98426     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98427     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
98428     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98429     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98430     +   end;
MPRINT(EM_DIAGRAM):   end;
98431     +end;
MPRINT(EM_DIAGRAM):   end;
98432     +
98433     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
98434     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
98435     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
98436     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
98437     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98438     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98439     +end;
MPRINT(EM_DIAGRAM):   end;
98440     +else do;
MPRINT(EM_DIAGRAM):   else do;
98441     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98442     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
98443     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98444     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98445     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
98446     +   end;
MPRINT(EM_DIAGRAM):   end;
98447     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98448     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
98449     +   end;
MPRINT(EM_DIAGRAM):   end;
98450     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98451     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
98452     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98453     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98454     +   end;
MPRINT(EM_DIAGRAM):   end;
98455     +end;
MPRINT(EM_DIAGRAM):   end;
98456     +
98457     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
98458     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
98459     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
98460     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
98461     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98462     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98463     +end;
MPRINT(EM_DIAGRAM):   end;
98464     +else do;
MPRINT(EM_DIAGRAM):   else do;
98465     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98466     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
98467     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98468     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98469     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
98470     +   end;
MPRINT(EM_DIAGRAM):   end;
98471     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98472     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
98473     +   end;
MPRINT(EM_DIAGRAM):   end;
98474     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98475     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
98476     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98477     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98478     +   end;
MPRINT(EM_DIAGRAM):   end;
98479     +end;
MPRINT(EM_DIAGRAM):   end;
98480     +
98481     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
98482     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
98483     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
98484     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
98485     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98486     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98487     +end;
MPRINT(EM_DIAGRAM):   end;
98488     +else do;
MPRINT(EM_DIAGRAM):   else do;
98489     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98490     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
98491     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98492     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
98493     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
98494     +   end;
MPRINT(EM_DIAGRAM):   end;
98495     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
98496     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
98497     +   end;
MPRINT(EM_DIAGRAM):   end;
98498     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98499     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
98500     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98501     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98502     +   end;
MPRINT(EM_DIAGRAM):   end;
98503     +end;
MPRINT(EM_DIAGRAM):   end;
98504     +
98505     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
98506     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
98507     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
98508     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
98509     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98510     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98511     +end;
MPRINT(EM_DIAGRAM):   end;
98512     +else do;
MPRINT(EM_DIAGRAM):   else do;
98513     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
98514     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
98515     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98516     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
98517     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
98518     +   end;
MPRINT(EM_DIAGRAM):   end;
98519     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
98520     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
98521     +   end;
MPRINT(EM_DIAGRAM):   end;
98522     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98523     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
98524     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98525     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98526     +   end;
MPRINT(EM_DIAGRAM):   end;
98527     +end;
MPRINT(EM_DIAGRAM):   end;
98528     +
98529     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
98530     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
98531     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
98532     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
98533     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
98534     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
98535     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
98536     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
98537     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
98538     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
98539     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
98540     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
98541     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98542     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98543     +end;
MPRINT(EM_DIAGRAM):   end;
98544     +else do;
MPRINT(EM_DIAGRAM):   else do;
98545     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
98546     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
98547     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98548     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
98549     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
98550     +   end;
MPRINT(EM_DIAGRAM):   end;
98551     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
98552     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
98553     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
98554     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
98555     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
98556     +   end;
MPRINT(EM_DIAGRAM):   end;
98557     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
98558     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
98559     +   end;
MPRINT(EM_DIAGRAM):   end;
98560     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
98561     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
98562     +   end;
MPRINT(EM_DIAGRAM):   end;
98563     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
98564     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
98565     +   end;
MPRINT(EM_DIAGRAM):   end;
98566     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98567     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
98568     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
98569     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
98570     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
98571     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98572     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98573     +   end;
MPRINT(EM_DIAGRAM):   end;
98574     +end;
MPRINT(EM_DIAGRAM):   end;
98575     +
98576     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
98577     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
98578     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
98579     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
98580     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
98581     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
98582     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
98583     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
98584     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
98585     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
98586     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
98587     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
98588     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
98589     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
98590     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98591     +end;
MPRINT(EM_DIAGRAM):   end;
98592     +else do;
MPRINT(EM_DIAGRAM):   else do;
98593     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
98594     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
98595     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98596     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
98597     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
98598     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
98599     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
98600     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
98601     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98602     +         end;
MPRINT(EM_DIAGRAM):   end;
98603     +         else do;
MPRINT(EM_DIAGRAM):   else do;
98604     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
98605     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
98606     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98607     +            end;
MPRINT(EM_DIAGRAM):   end;
98608     +         end;
MPRINT(EM_DIAGRAM):   end;
98609     +      end;
MPRINT(EM_DIAGRAM):   end;
98610     +      else do;
MPRINT(EM_DIAGRAM):   else do;
98611     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
98612     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
98613     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98614     +         end;
MPRINT(EM_DIAGRAM):   end;
98615     +      end;
MPRINT(EM_DIAGRAM):   end;
98616     +   end;
MPRINT(EM_DIAGRAM):   end;
98617     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98618     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
98619     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
98620     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98621     +      end;
MPRINT(EM_DIAGRAM):   end;
98622     +      else do;
MPRINT(EM_DIAGRAM):   else do;
98623     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
98624     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
98625     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
98626     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
98627     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
98628     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
98629     +         end;
MPRINT(EM_DIAGRAM):   end;
98630     +      end;
MPRINT(EM_DIAGRAM):   end;
98631     +   end;
MPRINT(EM_DIAGRAM):   end;
98632     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
98633     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
98634     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
98635     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
98636     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
98637     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
98638     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98639     +   end;
MPRINT(EM_DIAGRAM):   end;
98640     +end;
MPRINT(EM_DIAGRAM):   end;
98641     +
98642     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98643     +*** Checking missing input Interval
98644     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
98645     +
98646     +IF NMISS(
98647     +   AcceptedCmpTotal ,
98648     +   Age ,
98649     +   Frq ,
98650     +   Income ,
98651     +   Kidhome ,
98652     +   MntFishProducts ,
98653     +   MntFruits ,
98654     +   MntGoldProds ,
98655     +   MntSweetProducts ,
98656     +   MonthsAsCustomer ,
98657     +   NumDealsPurchases ,
98658     +   NumWebVisitsMonth ,
98659     +   RFMstat ,
98660     +   RMntFrq ,
98661     +   Recency ,
98662     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
98663     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
98664     +
98665     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
98666     +END;
MPRINT(EM_DIAGRAM):   END;
98667     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98668     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
98669     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98670     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98671     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
98672     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
98673     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
98674     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
98675     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
98676     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
98677     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
98678     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
98679     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
98680     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
98681     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
98682     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
98683     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
98684     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
98685     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
98686     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
98687     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
98688     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
98689     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
98690     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
98691     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
98692     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
98693     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
98694     +END;
MPRINT(EM_DIAGRAM):   END;
98695     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98696     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
98697     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
98698     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
98699     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
98700     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
98701     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
98702     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
98703     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
98704     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
98705     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
98706     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
98707     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
98708     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
98709     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
98710     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
98711     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
98712     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
98713     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
98714     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
98715     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
98716     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
98717     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
98718     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
98719     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
98720     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
98721     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
98722     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
98723     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
98724     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
98725     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
98726     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
98727     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
98728     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
98729     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
98730     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
98731     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
98732     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
98733     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
98734     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
98735     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
98736     +END;
MPRINT(EM_DIAGRAM):   END;
98737     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98738     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
98739     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98740     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98741     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
98742     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98743     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98744     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
98745     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98746     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98747     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
98748     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
98749     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
98750     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
98751     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
98752     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
98753     +          +    -0.01191239814261 * S_MonthsAsCustomer
98754     +          +      -0.307259983666 * S_NumDealsPurchases
98755     +          +    -0.23972300101674 * S_NumWebVisitsMonth
98756     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
98757     +        S_RMntFrq  +     0.32671320165482 * S_Recency
98758     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
98759     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
98760     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
98761     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
98762     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
98763     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
98764     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
98765     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
98766     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
98767     +          +     -0.0692762335753 * Marital_StatusDivorced
98768     +          +     0.02472293911071 * Marital_StatusMarried
98769     +          +     0.04038393550437 * Marital_StatusSingle
98770     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
98771     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
98772     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
98773     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
98774     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
98775     +END;
MPRINT(EM_DIAGRAM):   END;
98776     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98777     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
98778     +END;
MPRINT(EM_DIAGRAM):   END;
98779     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98780     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
98781     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98782     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98783     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
98784     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
98785     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
98786     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
98787     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
98788     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
98789     +          +     0.14524334187971 * S_MonthsAsCustomer
98790     +          +    -0.58464031025411 * S_NumDealsPurchases
98791     +          +    -0.10768856151333 * S_NumWebVisitsMonth
98792     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
98793     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
98794     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
98795     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
98796     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
98797     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
98798     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
98799     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
98800     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
98801     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
98802     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
98803     +          +     0.07007941100006 * Marital_StatusDivorced
98804     +          +     -0.7850554528889 * Marital_StatusMarried
98805     +          +     1.17661634109847 * Marital_StatusSingle
98806     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
98807     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
98808     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
98809     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
98810     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
98811     +END;
MPRINT(EM_DIAGRAM):   END;
98812     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98813     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
98814     +END;
MPRINT(EM_DIAGRAM):   END;
98815     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98816     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
98817     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98818     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98819     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
98820     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
98821     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
98822     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
98823     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
98824     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
98825     +          +    -2.17154324602167 * S_MonthsAsCustomer
98826     +          +    -1.39930460918007 * S_NumDealsPurchases
98827     +          +    -0.16044576482901 * S_NumWebVisitsMonth
98828     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
98829     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
98830     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
98831     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
98832     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
98833     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
98834     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
98835     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
98836     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
98837     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
98838     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
98839     +          +     0.83271778325587 * Marital_StatusDivorced
98840     +          +     0.79137899511518 * Marital_StatusMarried
98841     +          +    -0.51320080030576 * Marital_StatusSingle
98842     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
98843     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
98844     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
98845     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
98846     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
98847     +END;
MPRINT(EM_DIAGRAM):   END;
98848     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98849     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
98850     +END;
MPRINT(EM_DIAGRAM):   END;
98851     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98852     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
98853     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98854     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98855     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
98856     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
98857     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
98858     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
98859     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
98860     +END;
MPRINT(EM_DIAGRAM):   END;
98861     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98862     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
98863     +END;
MPRINT(EM_DIAGRAM):   END;
98864     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98865     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
98866     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98867     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98868     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
98869     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
98870     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
98871     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
98872     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
98873     +END;
MPRINT(EM_DIAGRAM):   END;
98874     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98875     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
98876     +END;
MPRINT(EM_DIAGRAM):   END;
98877     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98878     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
98879     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98880     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98881     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
98882     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
98883     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
98884     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
98885     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
98886     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
98887     +END;
MPRINT(EM_DIAGRAM):   END;
98888     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98889     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
98890     +END;
MPRINT(EM_DIAGRAM):   END;
98891     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98892     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
98893     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98894     +
98895     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
98896     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
98897     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98898     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
98899     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
98900     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
98901     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
98902     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
98903     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
98904     +end;
MPRINT(EM_DIAGRAM):   end;
98905     +else do;
MPRINT(EM_DIAGRAM):   else do;
98906     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
98907     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
98908     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
98909     +   end;
MPRINT(EM_DIAGRAM):   end;
98910     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
98911     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
98912     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
98913     +   end;
MPRINT(EM_DIAGRAM):   end;
98914     +   else do;
MPRINT(EM_DIAGRAM):   else do;
98915     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
98916     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
98917     +   end;
MPRINT(EM_DIAGRAM):   end;
98918     +end;
MPRINT(EM_DIAGRAM):   end;
98919     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
98920     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
98921     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
98922     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
98923     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
98924     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
98925     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
98926     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
98927     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
98928     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
98929     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
98930     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
98931     +END;
MPRINT(EM_DIAGRAM):   END;
98932     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
98933     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
98934     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
98935     +END;
MPRINT(EM_DIAGRAM):   END;
98936     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
98937     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
98938     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
98939     +END;
MPRINT(EM_DIAGRAM):   END;
98940     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
98941     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
98942     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
98943     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
98944     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
98945     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
98946     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
98947     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98948     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
98949     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
98950     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
98951     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
98952     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
98953     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
98954     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
98955     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
98956     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
98957     +END;
MPRINT(EM_DIAGRAM):   END;
98958     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
98959     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
98960     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
98961     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
98962     +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
98963     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98964     +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
98965     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98966     +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
98967     +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
98968     +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
98969     +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
98970     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98971     +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
98972     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98973     +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
98974     +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
98975     +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
98976     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98977     +* Ensmbl55: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Maximum Posteriors of 7 models;
98978     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98979     +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
98980     +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
98981     +P_DepVar1 = max(
98982     +AutoNeural36_P_DepVar1 ,
98983     +AutoNeural35_P_DepVar1 ,
98984     +AutoNeural34_P_DepVar1 ,
98985     +AutoNeural40_P_DepVar1 ,
98986     +AutoNeural39_P_DepVar1 ,
98987     +AutoNeural38_P_DepVar1 ,
98988     +AutoNeural37_P_DepVar1
98989     +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural36_P_DepVar1 , AutoNeural35_P_DepVar1 , 
AutoNeural34_P_DepVar1 , AutoNeural40_P_DepVar1 , AutoNeural39_P_DepVar1 , 
AutoNeural38_P_DepVar1 , AutoNeural37_P_DepVar1 );
98990     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
98991     +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
98992     +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
98993     +end;
MPRINT(EM_DIAGRAM):   end;
98994     +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
98995     +P_DepVar0 = max(
98996     +AutoNeural36_P_DepVar0 ,
98997     +AutoNeural35_P_DepVar0 ,
98998     +AutoNeural34_P_DepVar0 ,
98999     +AutoNeural40_P_DepVar0 ,
99000     +AutoNeural39_P_DepVar0 ,
99001     +AutoNeural38_P_DepVar0 ,
99002     +AutoNeural37_P_DepVar0
99003     +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural36_P_DepVar0 , AutoNeural35_P_DepVar0 , 
AutoNeural34_P_DepVar0 , AutoNeural40_P_DepVar0 , AutoNeural39_P_DepVar0 , 
AutoNeural38_P_DepVar0 , AutoNeural37_P_DepVar0 );
99004     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
99005     +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
99006     +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
99007     +end;
MPRINT(EM_DIAGRAM):   end;
99008     +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
99009     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99010     +* Ensmbl55: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Classification Vars;
99011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99012     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
99013     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
99014     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
99015     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
99016     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
99017     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
99018     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
99019     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
99020     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
99021     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
99022     +end;
MPRINT(EM_DIAGRAM):   end;
99023     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
99024     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
99025     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
99026     +end;
MPRINT(EM_DIAGRAM):   end;
99027     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
99028     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99029     +* Ensmbl55: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Producing Unformatted variable;
99030     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99031     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
99032     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
99033     +else
99034     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
99035     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99036     +* Ensmbl55: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing _WARN_ Variable;
99037     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99038     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
99039     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
99040     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
99041     +if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99041    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99042     +if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99042    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99043     +if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99043    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99044     +if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99044    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99045     +if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99045    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99046     +if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99046    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99047     +if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99047    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99048     +if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99048    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99049     +if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99049    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99050     +if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99050    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99051     +if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99051    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99052     +if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99052    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99053     +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99053    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99054     +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99054    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99055     +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99055    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99056     +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99056    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99057     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99057    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99058     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99058    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99059     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99059    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99060     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99060    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99061     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99061    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99062     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99062    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99063     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99063    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99064     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99064    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99065     +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
99065    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
99066     +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
99066    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
99067     +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
99067    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
99068     +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
99068    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
99069     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99070     +* Ensmbl55: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing Residual Vars;
99071     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99072     +if
99073     +F_DepVar NE '1'
99074     +AND F_DepVar NE '0'
99075     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
99076     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
99077     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
99078     +end;
MPRINT(EM_DIAGRAM):   end;
99079     +else do;
MPRINT(EM_DIAGRAM):   else do;
99080     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
99081     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
99082     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
99083     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
99084     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
99085     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
99086     +END;
MPRINT(EM_DIAGRAM):   END;
99087     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
99088      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL55_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
99089      quit;
99090      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl55_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl55_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl55_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
99150      filename _pref
99150    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas";
99151      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
99152      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural36\EMPUBLISHSCORE.sas.
99153     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99154     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
99155     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99156     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
99157     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
99158     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
99159     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
99160     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
99161     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
99162     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
99163     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
99164     +LENGTH _WARN_ $4
99165     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
99166     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
99167     +
99168     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
99169     +
99170     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
99171     +
99172     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
99173     +
99174     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
99175     +
99176     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
99177     +
99178     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
99179     +
99180     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
99181     +
99182     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
99183     +
99184     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
99185     +
99186     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
99187     +
99188     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
99189     +
99190     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
99191     +
99192     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
99193     +
99194     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
99195     +
99196     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
99197     +
99198     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
99199     +
99200     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
99201     +
99202     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
99203     +
99204     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
99205     +
99206     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
99207     +
99208     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
99209     +
99210     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
99211     +
99212     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
99213     +
99214     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
99215     +
99216     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
99217     +
99218     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
99219     +
99220     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
99221     +
99222     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
99223     +
99224     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
99225     +
99226     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
99227     +
99228     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
99229     +
99230     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
99231     +
99232     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
99233     +
99234     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
99235     +
99236     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
99237     +
99238     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
99239     +
99240     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
99241     +
99242     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
99243     +
99244     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
99245     +
99246     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
99247     +
99248     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
99249     +
99250     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
99251     +
99252     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
99253     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
99254     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
99255     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
99256     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99257     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99258     +end;
MPRINT(EM_DIAGRAM):   end;
99259     +else do;
MPRINT(EM_DIAGRAM):   else do;
99260     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99261     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
99262     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99263     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99264     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
99265     +   end;
MPRINT(EM_DIAGRAM):   end;
99266     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99267     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
99268     +   end;
MPRINT(EM_DIAGRAM):   end;
99269     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99270     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
99271     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99272     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99273     +   end;
MPRINT(EM_DIAGRAM):   end;
99274     +end;
MPRINT(EM_DIAGRAM):   end;
99275     +
99276     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
99277     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
99278     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
99279     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
99280     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99281     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99282     +end;
MPRINT(EM_DIAGRAM):   end;
99283     +else do;
MPRINT(EM_DIAGRAM):   else do;
99284     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99285     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
99286     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99287     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99288     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
99289     +   end;
MPRINT(EM_DIAGRAM):   end;
99290     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99291     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
99292     +   end;
MPRINT(EM_DIAGRAM):   end;
99293     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99294     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
99295     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99296     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99297     +   end;
MPRINT(EM_DIAGRAM):   end;
99298     +end;
MPRINT(EM_DIAGRAM):   end;
99299     +
99300     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
99301     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
99302     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
99303     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
99304     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99305     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99306     +end;
MPRINT(EM_DIAGRAM):   end;
99307     +else do;
MPRINT(EM_DIAGRAM):   else do;
99308     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99309     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
99310     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99311     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99312     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
99313     +   end;
MPRINT(EM_DIAGRAM):   end;
99314     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99315     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
99316     +   end;
MPRINT(EM_DIAGRAM):   end;
99317     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99318     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
99319     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99320     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99321     +   end;
MPRINT(EM_DIAGRAM):   end;
99322     +end;
MPRINT(EM_DIAGRAM):   end;
99323     +
99324     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
99325     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
99326     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
99327     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
99328     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99329     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99330     +end;
MPRINT(EM_DIAGRAM):   end;
99331     +else do;
MPRINT(EM_DIAGRAM):   else do;
99332     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99333     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
99334     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99335     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99336     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
99337     +   end;
MPRINT(EM_DIAGRAM):   end;
99338     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99339     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
99340     +   end;
MPRINT(EM_DIAGRAM):   end;
99341     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99342     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
99343     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99344     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99345     +   end;
MPRINT(EM_DIAGRAM):   end;
99346     +end;
MPRINT(EM_DIAGRAM):   end;
99347     +
99348     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
99349     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
99350     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
99351     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
99352     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99353     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99354     +end;
MPRINT(EM_DIAGRAM):   end;
99355     +else do;
MPRINT(EM_DIAGRAM):   else do;
99356     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99357     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
99358     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99359     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99360     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
99361     +   end;
MPRINT(EM_DIAGRAM):   end;
99362     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99363     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
99364     +   end;
MPRINT(EM_DIAGRAM):   end;
99365     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99366     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
99367     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99368     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99369     +   end;
MPRINT(EM_DIAGRAM):   end;
99370     +end;
MPRINT(EM_DIAGRAM):   end;
99371     +
99372     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
99373     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
99374     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
99375     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
99376     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99377     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99378     +end;
MPRINT(EM_DIAGRAM):   end;
99379     +else do;
MPRINT(EM_DIAGRAM):   else do;
99380     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99381     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
99382     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99383     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
99384     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
99385     +   end;
MPRINT(EM_DIAGRAM):   end;
99386     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
99387     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
99388     +   end;
MPRINT(EM_DIAGRAM):   end;
99389     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99390     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
99391     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99392     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99393     +   end;
MPRINT(EM_DIAGRAM):   end;
99394     +end;
MPRINT(EM_DIAGRAM):   end;
99395     +
99396     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
99397     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
99398     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
99399     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
99400     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99401     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99402     +end;
MPRINT(EM_DIAGRAM):   end;
99403     +else do;
MPRINT(EM_DIAGRAM):   else do;
99404     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
99405     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
99406     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99407     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
99408     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
99409     +   end;
MPRINT(EM_DIAGRAM):   end;
99410     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
99411     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
99412     +   end;
MPRINT(EM_DIAGRAM):   end;
99413     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99414     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
99415     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99416     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99417     +   end;
MPRINT(EM_DIAGRAM):   end;
99418     +end;
MPRINT(EM_DIAGRAM):   end;
99419     +
99420     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
99421     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
99422     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99423     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
99424     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
99425     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
99426     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
99427     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
99428     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
99429     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
99430     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
99431     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
99432     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99433     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99434     +end;
MPRINT(EM_DIAGRAM):   end;
99435     +else do;
MPRINT(EM_DIAGRAM):   else do;
99436     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
99437     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
99438     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99439     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
99440     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
99441     +   end;
MPRINT(EM_DIAGRAM):   end;
99442     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
99443     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
99444     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
99445     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
99446     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
99447     +   end;
MPRINT(EM_DIAGRAM):   end;
99448     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
99449     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
99450     +   end;
MPRINT(EM_DIAGRAM):   end;
99451     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
99452     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
99453     +   end;
MPRINT(EM_DIAGRAM):   end;
99454     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
99455     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
99456     +   end;
MPRINT(EM_DIAGRAM):   end;
99457     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99458     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
99459     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
99460     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
99461     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
99462     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99463     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99464     +   end;
MPRINT(EM_DIAGRAM):   end;
99465     +end;
MPRINT(EM_DIAGRAM):   end;
99466     +
99467     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
99468     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
99469     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
99470     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99471     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
99472     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
99473     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
99474     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
99475     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
99476     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99477     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99478     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99479     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99480     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99481     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99482     +end;
MPRINT(EM_DIAGRAM):   end;
99483     +else do;
MPRINT(EM_DIAGRAM):   else do;
99484     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
99485     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
99486     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99487     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
99488     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
99489     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
99490     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
99491     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
99492     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99493     +         end;
MPRINT(EM_DIAGRAM):   end;
99494     +         else do;
MPRINT(EM_DIAGRAM):   else do;
99495     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
99496     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
99497     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99498     +            end;
MPRINT(EM_DIAGRAM):   end;
99499     +         end;
MPRINT(EM_DIAGRAM):   end;
99500     +      end;
MPRINT(EM_DIAGRAM):   end;
99501     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99502     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
99503     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
99504     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99505     +         end;
MPRINT(EM_DIAGRAM):   end;
99506     +      end;
MPRINT(EM_DIAGRAM):   end;
99507     +   end;
MPRINT(EM_DIAGRAM):   end;
99508     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99509     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
99510     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
99511     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99512     +      end;
MPRINT(EM_DIAGRAM):   end;
99513     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99514     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
99515     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
99516     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
99517     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
99518     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
99519     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99520     +         end;
MPRINT(EM_DIAGRAM):   end;
99521     +      end;
MPRINT(EM_DIAGRAM):   end;
99522     +   end;
MPRINT(EM_DIAGRAM):   end;
99523     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
99524     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99525     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99526     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99527     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99528     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99529     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99530     +   end;
MPRINT(EM_DIAGRAM):   end;
99531     +end;
MPRINT(EM_DIAGRAM):   end;
99532     +
99533     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99534     +*** Checking missing input Interval
99535     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
99536     +
99537     +IF NMISS(
99538     +   AcceptedCmpTotal ,
99539     +   Age ,
99540     +   Frq ,
99541     +   Income ,
99542     +   Kidhome ,
99543     +   MntFishProducts ,
99544     +   MntFruits ,
99545     +   MntGoldProds ,
99546     +   MntSweetProducts ,
99547     +   MonthsAsCustomer ,
99548     +   NumDealsPurchases ,
99549     +   NumWebVisitsMonth ,
99550     +   RFMstat ,
99551     +   RMntFrq ,
99552     +   Recency ,
99553     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
99554     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
99555     +
99556     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99557     +END;
MPRINT(EM_DIAGRAM):   END;
99558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99559     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
99560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99561     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99562     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99563     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
99564     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
99565     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99566     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99567     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
99568     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
99569     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
99570     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
99571     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99572     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
99573     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
99574     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
99575     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
99576     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
99577     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99578     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
99579     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99580     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
99581     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99582     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
99583     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99584     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99585     +END;
MPRINT(EM_DIAGRAM):   END;
99586     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99587     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
99588     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99589     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
99590     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
99591     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
99592     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
99593     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99594     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
99595     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99596     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
99597     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
99598     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
99599     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
99600     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
99601     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
99602     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
99603     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
99604     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
99605     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99606     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
99607     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
99608     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
99609     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
99610     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
99611     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
99612     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
99613     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
99614     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99615     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
99616     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
99617     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99618     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
99619     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
99620     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99621     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
99622     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
99623     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
99624     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99625     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
99626     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99627     +END;
MPRINT(EM_DIAGRAM):   END;
99628     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99629     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
99630     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99631     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99632     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
99633     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99634     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99635     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
99636     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99637     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99638     +   H1x1_1  =    -0.87838996558128 * S_AcceptedCmpTotal
99639     +          +    -0.72861582704026 * S_Age  +    -0.35976933287364 * S_Frq
99640     +          +    -0.39318236650647 * S_Income  +    -0.11306426250077 *
99641     +        S_Kidhome  +    -0.01944344852899 * S_MntFishProducts
99642     +          +     0.67111744210837 * S_MntFruits  +    -1.49834452754593 *
99643     +        S_MntGoldProds  +     0.09407089078133 * S_MntSweetProducts
99644     +          +     1.47210732135355 * S_MonthsAsCustomer
99645     +          +     0.85741098948561 * S_NumDealsPurchases
99646     +          +     0.47124997442086 * S_NumWebVisitsMonth
99647     +          +     0.34804829630378 * S_RFMstat  +    -0.23886139231434 *
99648     +        S_RMntFrq  +     0.42017826752434 * S_Recency
99649     +          +    -0.54808368666243 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.87838996558128 * S_AcceptedCmpTotal + -0.72861582704026 * 
S_Age + -0.35976933287364 * S_Frq + -0.39318236650647 * S_Income + -0.11306426250077 * 
S_Kidhome + -0.01944344852899 * S_MntFishProducts + 0.67111744210837 * S_MntFruits + 
-1.49834452754593 * S_MntGoldProds + 0.09407089078133 * S_MntSweetProducts + 1.47210732135355 
* S_MonthsAsCustomer + 0.85741098948561 * S_NumDealsPurchases + 0.47124997442086 * 
S_NumWebVisitsMonth + 0.34804829630378 * S_RFMstat + -0.23886139231434 * S_RMntFrq + 
0.42017826752434 * S_Recency + -0.54808368666243 * S_Teenhome ;
99650     +   H1x1_2  =     0.35467524360791 * S_AcceptedCmpTotal
99651     +          +     -0.1088788112851 * S_Age  +    -1.36946683613363 * S_Frq
99652     +          +    -1.26725497382659 * S_Income  +     0.98129008703449 *
99653     +        S_Kidhome  +     0.14875687682486 * S_MntFishProducts
99654     +          +     0.32033599920154 * S_MntFruits  +    -0.07367593486843 *
99655     +        S_MntGoldProds  +     0.09258518253483 * S_MntSweetProducts
99656     +          +     0.74811152666015 * S_MonthsAsCustomer
99657     +          +    -0.13168708818154 * S_NumDealsPurchases
99658     +          +    -0.51935779196522 * S_NumWebVisitsMonth
99659     +          +    -1.08122601580595 * S_RFMstat  +    -1.39482117610314 *
99660     +        S_RMntFrq  +     1.96758846931972 * S_Recency
99661     +          +     1.07196031967818 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.35467524360791 * S_AcceptedCmpTotal + -0.1088788112851 * 
S_Age + -1.36946683613363 * S_Frq + -1.26725497382659 * S_Income + 0.98129008703449 * 
S_Kidhome + 0.14875687682486 * S_MntFishProducts + 0.32033599920154 * S_MntFruits + 
-0.07367593486843 * S_MntGoldProds + 0.09258518253483 * S_MntSweetProducts + 0.74811152666015 
* S_MonthsAsCustomer + -0.13168708818154 * S_NumDealsPurchases + -0.51935779196522 * 
S_NumWebVisitsMonth + -1.08122601580595 * S_RFMstat + -1.39482117610314 * S_RMntFrq + 
1.96758846931972 * S_Recency + 1.07196031967818 * S_Teenhome ;
99662     +   H1x1_3  =     0.58244239235575 * S_AcceptedCmpTotal
99663     +          +     0.26726833292979 * S_Age  +    -0.61722007550606 * S_Frq
99664     +          +     -2.0775058709831 * S_Income  +     2.03934698259906 *
99665     +        S_Kidhome  +     0.07427729378492 * S_MntFishProducts
99666     +          +     0.44813996651317 * S_MntFruits  +     -0.7827281459867 *
99667     +        S_MntGoldProds  +       0.690331955695 * S_MntSweetProducts
99668     +          +     0.11776941975292 * S_MonthsAsCustomer
99669     +          +    -0.69977862189457 * S_NumDealsPurchases
99670     +          +    -0.26676589341422 * S_NumWebVisitsMonth
99671     +          +     0.20199326764416 * S_RFMstat  +    -0.55698079997966 *
99672     +        S_RMntFrq  +     1.53487074713045 * S_Recency
99673     +          +      1.3117308982272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.58244239235575 * S_AcceptedCmpTotal + 0.26726833292979 * 
S_Age + -0.61722007550606 * S_Frq + -2.0775058709831 * S_Income + 2.03934698259906 * S_Kidhome 
+ 0.07427729378492 * S_MntFishProducts + 0.44813996651317 * S_MntFruits + -0.7827281459867 * 
S_MntGoldProds + 0.690331955695 * S_MntSweetProducts + 0.11776941975292 * S_MonthsAsCustomer + 
-0.69977862189457 * S_NumDealsPurchases + -0.26676589341422 * S_NumWebVisitsMonth + 
0.20199326764416 * S_RFMstat + -0.55698079997966 * S_RMntFrq + 1.53487074713045 * S_Recency + 
1.3117308982272 * S_Teenhome ;
99674     +   H1x1_4  =     2.22510849246632 * S_AcceptedCmpTotal
99675     +          +     0.71558360205634 * S_Age  +    -1.46728474818928 * S_Frq
99676     +          +    -1.12286067241512 * S_Income  +     -0.1580680195235 *
99677     +        S_Kidhome  +     0.68682136797377 * S_MntFishProducts
99678     +          +    -0.00630677724747 * S_MntFruits  +    -3.19429423961688 *
99679     +        S_MntGoldProds  +     0.29242741711781 * S_MntSweetProducts
99680     +          +     0.46606320110885 * S_MonthsAsCustomer
99681     +          +     1.64885970718717 * S_NumDealsPurchases
99682     +          +     1.70233049691156 * S_NumWebVisitsMonth
99683     +          +     1.15990014651932 * S_RFMstat  +    -0.40088577934374 *
99684     +        S_RMntFrq  +    -1.33025042025966 * S_Recency
99685     +          +     -0.9160526174073 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 2.22510849246632 * S_AcceptedCmpTotal + 0.71558360205634 * 
S_Age + -1.46728474818928 * S_Frq + -1.12286067241512 * S_Income + -0.1580680195235 * 
S_Kidhome + 0.68682136797377 * S_MntFishProducts + -0.00630677724747 * S_MntFruits + 
-3.19429423961688 * S_MntGoldProds + 0.29242741711781 * S_MntSweetProducts + 0.46606320110885 
* S_MonthsAsCustomer + 1.64885970718717 * S_NumDealsPurchases + 1.70233049691156 * 
S_NumWebVisitsMonth + 1.15990014651932 * S_RFMstat + -0.40088577934374 * S_RMntFrq + 
-1.33025042025966 * S_Recency + -0.9160526174073 * S_Teenhome ;
99686     +   H1x1_5  =     0.30918783645666 * S_AcceptedCmpTotal
99687     +          +    -0.29752446082739 * S_Age  +    -3.36006724068108 * S_Frq
99688     +          +    -1.51429072229567 * S_Income  +     1.55823150050807 *
99689     +        S_Kidhome  +     0.38802787611913 * S_MntFishProducts
99690     +          +     0.15620247204727 * S_MntFruits  +     0.11877023526371 *
99691     +        S_MntGoldProds  +     0.44012040203684 * S_MntSweetProducts
99692     +          +     0.25703511103123 * S_MonthsAsCustomer
99693     +          +     0.81449309285524 * S_NumDealsPurchases
99694     +          +     0.65863550896078 * S_NumWebVisitsMonth
99695     +          +    -0.22817135858684 * S_RFMstat  +    -0.54499264380965 *
99696     +        S_RMntFrq  +     0.35298837231553 * S_Recency
99697     +          +     1.18802458817287 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.30918783645666 * S_AcceptedCmpTotal + -0.29752446082739 * 
S_Age + -3.36006724068108 * S_Frq + -1.51429072229567 * S_Income + 1.55823150050807 * 
S_Kidhome + 0.38802787611913 * S_MntFishProducts + 0.15620247204727 * S_MntFruits + 
0.11877023526371 * S_MntGoldProds + 0.44012040203684 * S_MntSweetProducts + 0.25703511103123 * 
S_MonthsAsCustomer + 0.81449309285524 * S_NumDealsPurchases + 0.65863550896078 * 
S_NumWebVisitsMonth + -0.22817135858684 * S_RFMstat + -0.54499264380965 * S_RMntFrq + 
0.35298837231553 * S_Recency + 1.18802458817287 * S_Teenhome ;
99698     +   H1x1_6  =     -0.2868302514584 * S_AcceptedCmpTotal
99699     +          +     1.25880191199869 * S_Age  +    -1.32550387975072 * S_Frq
99700     +          +     1.58243208622758 * S_Income  +      0.5401269822193 *
99701     +        S_Kidhome  +     0.39615267981686 * S_MntFishProducts
99702     +          +    -0.59610608715534 * S_MntFruits  +    -0.04268143765992 *
99703     +        S_MntGoldProds  +     0.32109584564762 * S_MntSweetProducts
99704     +          +     0.79681190434731 * S_MonthsAsCustomer
99705     +          +    -0.93973916927987 * S_NumDealsPurchases
99706     +          +     1.37415777280471 * S_NumWebVisitsMonth
99707     +          +    -0.81476155575497 * S_RFMstat  +    -1.28380749251247 *
99708     +        S_RMntFrq  +     0.25579910148098 * S_Recency
99709     +          +     0.17170502426384 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2868302514584 * S_AcceptedCmpTotal + 1.25880191199869 * 
S_Age + -1.32550387975072 * S_Frq + 1.58243208622758 * S_Income + 0.5401269822193 * S_Kidhome 
+ 0.39615267981686 * S_MntFishProducts + -0.59610608715534 * S_MntFruits + -0.04268143765992 * 
S_MntGoldProds + 0.32109584564762 * S_MntSweetProducts + 0.79681190434731 * S_MonthsAsCustomer 
+ -0.93973916927987 * S_NumDealsPurchases + 1.37415777280471 * S_NumWebVisitsMonth + 
-0.81476155575497 * S_RFMstat + -1.28380749251247 * S_RMntFrq + 0.25579910148098 * S_Recency + 
0.17170502426384 * S_Teenhome ;
99710     +   H1x1_1  = H1x1_1  +    -0.32981585052698 * AcceptedCmp10
99711     +          +    -0.10070450903443 * AcceptedCmp20  +    -0.32664580764086 *
99712     +        AcceptedCmp30  +     0.25620492094938 * AcceptedCmp40
99713     +          +     -0.2493451143734 * AcceptedCmp50  +    -0.47357709251263 *
99714     +        Complain0  +     -0.9794610023378 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.32981585052698 * AcceptedCmp10 + -0.10070450903443 
* AcceptedCmp20 + -0.32664580764086 * AcceptedCmp30 + 0.25620492094938 * AcceptedCmp40 + 
-0.2493451143734 * AcceptedCmp50 + -0.47357709251263 * Complain0 + -0.9794610023378 * 
HigherEducationBinary0 ;
99715     +   H1x1_2  = H1x1_2  +      0.5364497875236 * AcceptedCmp10
99716     +          +     1.01506150862658 * AcceptedCmp20  +     1.32554231363753 *
99717     +        AcceptedCmp30  +     0.02621436950191 * AcceptedCmp40
99718     +          +     1.20891792303907 * AcceptedCmp50  +     -1.0191301862047 *
99719     +        Complain0  +    -0.66229357768492 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.5364497875236 * AcceptedCmp10 + 1.01506150862658 * 
AcceptedCmp20 + 1.32554231363753 * AcceptedCmp30 + 0.02621436950191 * AcceptedCmp40 + 
1.20891792303907 * AcceptedCmp50 + -1.0191301862047 * Complain0 + -0.66229357768492 * 
HigherEducationBinary0 ;
99720     +   H1x1_3  = H1x1_3  +     0.96724269033648 * AcceptedCmp10
99721     +          +     0.10726460217503 * AcceptedCmp20  +     0.85605493403339 *
99722     +        AcceptedCmp30  +     1.63214541621179 * AcceptedCmp40
99723     +          +     0.07415706251222 * AcceptedCmp50  +     2.12629200518429 *
99724     +        Complain0  +    -1.12574598286695 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.96724269033648 * AcceptedCmp10 + 0.10726460217503 * 
AcceptedCmp20 + 0.85605493403339 * AcceptedCmp30 + 1.63214541621179 * AcceptedCmp40 + 
0.07415706251222 * AcceptedCmp50 + 2.12629200518429 * Complain0 + -1.12574598286695 * 
HigherEducationBinary0 ;
99725     +   H1x1_4  = H1x1_4  +    -1.49581328009792 * AcceptedCmp10
99726     +          +    -0.10449763460895 * AcceptedCmp20  +    -2.27424457300151 *
99727     +        AcceptedCmp30  +    -0.39869791621089 * AcceptedCmp40
99728     +          +    -1.66755047713813 * AcceptedCmp50  +    -0.57141180485965 *
99729     +        Complain0  +    -0.68703833434137 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.49581328009792 * AcceptedCmp10 + -0.10449763460895 
* AcceptedCmp20 + -2.27424457300151 * AcceptedCmp30 + -0.39869791621089 * AcceptedCmp40 + 
-1.66755047713813 * AcceptedCmp50 + -0.57141180485965 * Complain0 + -0.68703833434137 * 
HigherEducationBinary0 ;
99730     +   H1x1_5  = H1x1_5  +    -0.14971849291703 * AcceptedCmp10
99731     +          +    -0.38993388100214 * AcceptedCmp20  +     0.09739092235162 *
99732     +        AcceptedCmp30  +     0.40637367458359 * AcceptedCmp40
99733     +          +     0.58227745136439 * AcceptedCmp50  +     1.66675944761873 *
99734     +        Complain0  +    -1.15565368750301 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14971849291703 * AcceptedCmp10 + -0.38993388100214 
* AcceptedCmp20 + 0.09739092235162 * AcceptedCmp30 + 0.40637367458359 * AcceptedCmp40 + 
0.58227745136439 * AcceptedCmp50 + 1.66675944761873 * Complain0 + -1.15565368750301 * 
HigherEducationBinary0 ;
99735     +   H1x1_6  = H1x1_6  +     0.73379063751421 * AcceptedCmp10
99736     +          +     0.54265642922411 * AcceptedCmp20  +     0.78256508185806 *
99737     +        AcceptedCmp30  +    -0.16662791271159 * AcceptedCmp40
99738     +          +    -0.41266972896321 * AcceptedCmp50  +    -0.20276730195641 *
99739     +        Complain0  +    -0.76694832159342 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.73379063751421 * AcceptedCmp10 + 0.54265642922411 * 
AcceptedCmp20 + 0.78256508185806 * AcceptedCmp30 + -0.16662791271159 * AcceptedCmp40 + 
-0.41266972896321 * AcceptedCmp50 + -0.20276730195641 * Complain0 + -0.76694832159342 * 
HigherEducationBinary0 ;
99740     +   H1x1_1  = H1x1_1  +      -0.400732927621 * Education2n_Cycle
99741     +          +     0.50602011031704 * EducationBasic  +     1.07276510373173 *
99742     +        EducationGraduation  +     0.53978142914157 * EducationMaster
99743     +          +    -0.28915302940579 * Marital_StatusDivorced
99744     +          +     0.36400858753372 * Marital_StatusMarried
99745     +          +     0.64088916620982 * Marital_StatusSingle
99746     +          +    -0.54924655944458 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.400732927621 * Education2n_Cycle + 0.50602011031704 
* EducationBasic + 1.07276510373173 * EducationGraduation + 0.53978142914157 * EducationMaster 
+ -0.28915302940579 * Marital_StatusDivorced + 0.36400858753372 * Marital_StatusMarried + 
0.64088916620982 * Marital_StatusSingle + -0.54924655944458 * Marital_StatusTogether ;
99747     +   H1x1_2  = H1x1_2  +    -0.05389569982044 * Education2n_Cycle
99748     +          +     0.13032554247329 * EducationBasic  +     0.20377312787364 *
99749     +        EducationGraduation  +     0.31774696403611 * EducationMaster
99750     +          +    -0.48311224079569 * Marital_StatusDivorced
99751     +          +     0.78522892664414 * Marital_StatusMarried
99752     +          +    -0.52144588286939 * Marital_StatusSingle
99753     +          +    -0.04491246278055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05389569982044 * Education2n_Cycle + 
0.13032554247329 * EducationBasic + 0.20377312787364 * EducationGraduation + 0.31774696403611 
* EducationMaster + -0.48311224079569 * Marital_StatusDivorced + 0.78522892664414 * 
Marital_StatusMarried + -0.52144588286939 * Marital_StatusSingle + -0.04491246278055 * 
Marital_StatusTogether ;
99754     +   H1x1_3  = H1x1_3  +     0.65789462014123 * Education2n_Cycle
99755     +          +    -0.61910504823261 * EducationBasic  +    -0.81760650903757 *
99756     +        EducationGraduation  +     1.62119993408702 * EducationMaster
99757     +          +    -1.10138941531054 * Marital_StatusDivorced
99758     +          +     1.91098461544032 * Marital_StatusMarried
99759     +          +    -1.96662881570281 * Marital_StatusSingle
99760     +          +     1.72720530696806 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.65789462014123 * Education2n_Cycle + 
-0.61910504823261 * EducationBasic + -0.81760650903757 * EducationGraduation + 
1.62119993408702 * EducationMaster + -1.10138941531054 * Marital_StatusDivorced + 
1.91098461544032 * Marital_StatusMarried + -1.96662881570281 * Marital_StatusSingle + 
1.72720530696806 * Marital_StatusTogether ;
99761     +   H1x1_4  = H1x1_4  +    -1.76159504483478 * Education2n_Cycle
99762     +          +     1.34419101951319 * EducationBasic  +     0.99605062687588 *
99763     +        EducationGraduation  +    -0.47265183904634 * EducationMaster
99764     +          +    -0.26938567401241 * Marital_StatusDivorced
99765     +          +      0.5252138734125 * Marital_StatusMarried
99766     +          +    -0.77744801183604 * Marital_StatusSingle
99767     +          +    -0.75370322503617 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.76159504483478 * Education2n_Cycle + 
1.34419101951319 * EducationBasic + 0.99605062687588 * EducationGraduation + -0.47265183904634 
* EducationMaster + -0.26938567401241 * Marital_StatusDivorced + 0.5252138734125 * 
Marital_StatusMarried + -0.77744801183604 * Marital_StatusSingle + -0.75370322503617 * 
Marital_StatusTogether ;
99768     +   H1x1_5  = H1x1_5  +     0.31531741447118 * Education2n_Cycle
99769     +          +    -0.49673458313018 * EducationBasic  +    -0.33747755702453 *
99770     +        EducationGraduation  +     1.34706628408556 * EducationMaster
99771     +          +    -0.49116995167497 * Marital_StatusDivorced
99772     +          +     1.22243596432371 * Marital_StatusMarried
99773     +          +    -1.22268267917833 * Marital_StatusSingle
99774     +          +     0.70303458050936 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.31531741447118 * Education2n_Cycle + 
-0.49673458313018 * EducationBasic + -0.33747755702453 * EducationGraduation + 
1.34706628408556 * EducationMaster + -0.49116995167497 * Marital_StatusDivorced + 
1.22243596432371 * Marital_StatusMarried + -1.22268267917833 * Marital_StatusSingle + 
0.70303458050936 * Marital_StatusTogether ;
99775     +   H1x1_6  = H1x1_6  +     0.24276071035104 * Education2n_Cycle
99776     +          +     0.31557411234249 * EducationBasic  +     1.14068984218278 *
99777     +        EducationGraduation  +     0.19530936178176 * EducationMaster
99778     +          +    -0.21134253419933 * Marital_StatusDivorced
99779     +          +     0.87168965818013 * Marital_StatusMarried
99780     +          +     0.07539748751767 * Marital_StatusSingle
99781     +          +      2.0073469497136 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.24276071035104 * Education2n_Cycle + 
0.31557411234249 * EducationBasic + 1.14068984218278 * EducationGraduation + 0.19530936178176 
* EducationMaster + -0.21134253419933 * Marital_StatusDivorced + 0.87168965818013 * 
Marital_StatusMarried + 0.07539748751767 * Marital_StatusSingle + 2.0073469497136 * 
Marital_StatusTogether ;
99782     +   H1x1_1  =    -0.98435152317316 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.98435152317316 + H1x1_1 ;
99783     +   H1x1_2  =     2.55791603338359 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.55791603338359 + H1x1_2 ;
99784     +   H1x1_3  =     0.01600462421489 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.01600462421489 + H1x1_3 ;
99785     +   H1x1_4  =    -0.49354279621031 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49354279621031 + H1x1_4 ;
99786     +   H1x1_5  =     0.53894117744381 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.53894117744381 + H1x1_5 ;
99787     +   H1x1_6  =    -1.15704011853801 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15704011853801 + H1x1_6 ;
99788     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
99789     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
99790     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
99791     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
99792     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
99793     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
99794     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
99795     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
99796     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
99797     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
99798     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
99799     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
99800     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
99801     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
99802     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
99803     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
99804     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
99805     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
99806     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
99807     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
99808     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
99809     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
99810     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
99811     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
99812     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
99813     +END;
MPRINT(EM_DIAGRAM):   END;
99814     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99815     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
99816     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
99817     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
99818     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
99819     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
99820     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
99821     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
99822     +END;
MPRINT(EM_DIAGRAM):   END;
99823     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99824     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
99825     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99826     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99827     +   P_DepVar1  =     3.18359703948471 * H1x1_1  +    -10.1784939846064 * H1x1_2
99828     +          +    -6.29940271083871 * H1x1_3  +     6.40375096503445 * H1x1_4
99829     +          +     2.01883628448723 * H1x1_5  +    -0.39011048402578 * H1x1_6
99830     +          +     7.52499467921245 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.18359703948471 * H1x1_1 + -10.1784939846064 * H1x1_2 + 
-6.29940271083871 * H1x1_3 + 6.40375096503445 * H1x1_4 + 2.01883628448723 * H1x1_5 + 
-0.39011048402578 * H1x1_6 + 7.52499467921245 * H1x1_7 ;
99831     +   P_DepVar1  =     0.53811970285539 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.53811970285539 + P_DepVar1 ;
99832     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
99833     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
99834     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
99835     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
99836     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
99837     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
99838     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
99839     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
99840     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
99841     +END;
MPRINT(EM_DIAGRAM):   END;
99842     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99843     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
99844     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
99845     +END;
MPRINT(EM_DIAGRAM):   END;
99846     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
99847     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
99848     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
99849     +END;
MPRINT(EM_DIAGRAM):   END;
99850     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99851     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
99852     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99853     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
99854     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
99855     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
99856     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
99857     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
99858     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
99859     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
99860     +END;
MPRINT(EM_DIAGRAM):   END;
99861     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99862     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
99863     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99864     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
99865      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
99866      quit;
99867      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
99868      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
99869      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
99870      retain ID 2 Node "AutoNeural36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural36";
99871      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
99872      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2595 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2595 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99873      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
99874      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99875      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2595 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2595 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99876      proc sort data=EMWS8.AutoNeural36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural36_variableset out=_temp2(keep=NAME 
CREATOR);
99877      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99878      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99879      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
99880      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
99881      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
99882      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99883      proc contents data=EMWS8.AutoNeural36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural36_train out=_meta(keep=NAME) noprint;
99884      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

99885      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
99886      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99887      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99888      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
99889      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
99890      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99891      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 60 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99892      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
99893      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
99893    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1333 rows and 5 columns.

99894      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

99895      proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
99896      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1333 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1333 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99897      filename _pref
99897    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
99898      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
99899      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
99900     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99901     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
99902     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99903     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
99904     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
99905     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
99906      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
99907      quit;
99908      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
99909      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
99910      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
99911      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
99912      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
99913      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99914      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
99915      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99916      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99917      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
99918      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99919      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

99920      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
99921      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
99922      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
99923      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99924      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
99925      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

99926      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
99927      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99928      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

99929      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
99930      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
99931      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99932      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99933      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
99934      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
99934    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

99935      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99936      proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
99937      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1337 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99938      filename _pref
99938    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
99939      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
99940      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
99941     +
99942     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
99943     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
99943    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
99944     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
99945     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
99946     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
99947     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
99948     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
99949      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
99950      quit;
99951      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
99952      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
99953      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
99954      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
99955      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
99956      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99957      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
99958      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99959      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99960      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
99961      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99962      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99963      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
99964      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
99965      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
99966      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99967      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
99968      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

99969      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
99970      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99971      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99972      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
99973      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
99974      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
99975      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99976      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
99977      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
99977    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

99978      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99979      proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
99980      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1376 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

99981      filename _pref
99981    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
99982      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
99983      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
99984     +
99985     +
99986     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
99987     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
99988     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
99989     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
99990     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
99991     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
99992     +
99993     +
99994     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
99995     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
99996     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
99997     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
99998     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
99999     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100000    +
100001    +
100002    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
100003    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
100004    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
100005    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
100006    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
100007    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100008    +
100009    +
100010    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
100011    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
100012    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
100013    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
100014    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
100015    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100016    +
100017    +
100018    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
100019    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
100020    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
100021    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
100022    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
100023    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100024    +
100025    +
100026    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
100027    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
100028    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
100029    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
100030    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
100031    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100032    +
100033    +
100034    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
100035    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
100036    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
100037    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
100038    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
100039    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100040    +
100041    +
100042    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
100043    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
100044    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
100045    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
100046    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
100047    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
100048    +if
100049    +_FILTERNORM1 not in ( '.')
100050    + and
100051    +_FILTERNORM2 not in ( '.')
100052    + and
100053    +_FILTERNORM3 not in ( '.')
100054    + and
100055    +_FILTERNORM4 not in ( '.')
100056    + and
100057    +_FILTERNORM5 not in ( '.')
100058    + and
100059    +_FILTERNORM6 not in ( '.')
100060    + and
100061    +_FILTERNORM7 not in ( ' ')
100062    + and
100063    +_FILTERNORM8 not in ( ' ')
100064    +and
100065    +( Dt_Customer ne .)
100066    +and ( Income ne . and (Income<=107000))
100067    +and ( Kidhome ne .)
100068    +and ( MntFishProducts ne .)
100069    +and ( MntFruits ne .)
100070    +and ( MntGoldProds ne .)
100071    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
100072    +and ( MntSweetProducts ne .)
100073    +and ( MntWines ne .)
100074    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
100075    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
100076    +and ( NumStorePurchases ne .)
100077    +and ( NumWebPurchases ne .)
100078    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
100079    +and ( Recency ne .)
100080    +and ( Teenhome ne .)
100081    +and ( Year_Birth ne .)
100082    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
100083    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
100084    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
100085    +end;
MPRINT(EM_DIAGRAM):   end;
100086    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
100087    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
100088     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
100089     quit;
100090     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
100091     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
100092     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
100093     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
100094     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
100095     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100096     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
100097     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100099     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
100100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100102     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100103     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
100104     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
100105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100106     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
100107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100108     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
100109     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100111     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100112     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
100113     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100114     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100115     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
100116     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
100116   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

100117     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100118     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
100119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100120     %macro varDept(fcmpdata=,id=);
100121     %global nobs&id scoreFlag&id;
100122     %let scoreFlag&id = 0;
100123     %if &id=1 or ^&fcmpStart %then %do;
100124     proc sort data=&fcmpdata out=_temp&id nodupkey;
100125     by NAME;
100126     where id=&id and LHS in( %let j=1;
100127     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
100128     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
100129     "&var" %let j = %eval(&j+1);
100130     %end;
100131     );
100132     run;
100133     %let dsid = %sysfunc(open(_temp&id));
100134     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
100135     %let dsid = %sysfunc(close(&dsid));
100136     %if &&nobs&id %then %do;
100137     %let scoreFlag&id = 1;
100138     %let fcmpStart = 1;
100139     %end;
100140     %else %let fcmpStart = 0;
100141     %end;
100142     %else %do;
100143     proc sort data=&fcmpdata out=_tempid;
100144     where id=&id;
100145     by LHS;
100146     run;
100147     %let dsid = %sysfunc(open(_tempid));
100148     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
100149     %let dsid = %sysfunc(close(&dsid));
100150     %if ^&&nobs&id %then %do;
100151     proc datasets lib=work nolist;
100152     delete _tempid;
100153     run;
100154     quit;
100155     %end;
100156     %else %do;
100157     data _tempAll;
100158     set %let j=%eval(&id-1);
100159     %do x=1 %to &j;
100160     %if &&nobs&x %then %do;
100161     _temp&x %end;
100162     %end;
100163     ;
100164     run;
100165     proc sql;
100166     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
100166   ! work._tempid p2 where p.name=p2.lhs;
100167     quit;
100168     data _temp&id;
100169     set _temp&id;
100170     where LHS ne '' and NAME ne '' and Node ne '';
100171     run;
The SAS System

100172     proc datasets lib=work nolist;
100173     delete _tempAll;
100174     run;
100175     %let dsid = %sysfunc(open(_temp&id));
100176     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
100177     %let dsid = %sysfunc(close(&dsid));
100178     %if ^&&nobs&id %then %do;
100179     proc datasets lib=work nolist;
100180     delete _temp&id;
100181     run;
100182     quit;
100183     %end;
100184     %else %do;
100185     %let scoreFlag&id = 1;
100186     data _temp&id;
100187     set _temp&id;
100188     where LHS ne NAME and node ne '';
100189     run;
100190     %let dsid = %sysfunc(open(_temp&id));
100191     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
100192     %let dsid = %sysfunc(close(&dsid));
100193     %if ^&&nobs&id %then %do;
100194     proc datasets lib=work nolist;
100195     delete _temp&id;
100196     run;
100197     quit;
100198     %end;
100199     %else %do;
100200     proc sort data=_temp&id nodupkey;
100201     by LHS NAME;
100202     run;
100203     %end;
100204     %end;
100205     %end;
100206     %end;
100207     %mend varDept;
100208     %macro optCode(outdata=fcmpdata);
100209     %global fcmpStart;
100210     %let fcmpStart = 0;
100211     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
100212     %let NumNodes=9;
100213     %do k=1 %to &NumNodes;
100214     %vardept(fcmpdata=&outdata, id=&k);
100215     %end;
100216     %mend optCode;
100217     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 127 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 93 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 69 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

100218     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
100219     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
100220     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
100221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100222     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
100223     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
100224     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
100225     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100226     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
100227     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
100227   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

100228     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100229     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
100230     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
100231     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100232     filename _pref
100232   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas";
100233     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
100234     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMPUBLISHSCORE.sas.
100235    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100236    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
100237    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100238    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
100239    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
100240    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
100241    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
100242    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
100243    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
100244    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
100245    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
100246    +LENGTH _WARN_ $4
100247    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
100248    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
100249    +
100250    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
100251    +
100252    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
100253    +
100254    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
100255    +
100256    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
100257    +
100258    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
100259    +
100260    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
100261    +
100262    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
100263    +
100264    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
100265    +
100266    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
100267    +
100268    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
100269    +
100270    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
100271    +
100272    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
100273    +
100274    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
100275    +
100276    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
100277    +
100278    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
100279    +
100280    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
100281    +
100282    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
100283    +
100284    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
100285    +
100286    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
100287    +
100288    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
100289    +
100290    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
100291    +
100292    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
100293    +
100294    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
100295    +
100296    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
100297    +
100298    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
100299    +
100300    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
100301    +
100302    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
100303    +
100304    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
100305    +
100306    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
100307    +
100308    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
100309    +
100310    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
100311    +
100312    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
100313    +
100314    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
100315    +
100316    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
100317    +
100318    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
100319    +
100320    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
100321    +
100322    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
100323    +
100324    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
100325    +
100326    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
100327    +
100328    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
100329    +
100330    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
100331    +
100332    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
100333    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
100334    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
100335    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
100336    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100338    +end;
MPRINT(EM_DIAGRAM):   end;
100339    +else do;
MPRINT(EM_DIAGRAM):   else do;
100340    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100341    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
100342    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100343    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100344    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
100345    +   end;
MPRINT(EM_DIAGRAM):   end;
100346    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100347    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
100348    +   end;
MPRINT(EM_DIAGRAM):   end;
100349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100350    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
100351    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100352    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100353    +   end;
MPRINT(EM_DIAGRAM):   end;
100354    +end;
MPRINT(EM_DIAGRAM):   end;
100355    +
100356    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
100357    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
100358    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
100359    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
100360    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100361    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100362    +end;
MPRINT(EM_DIAGRAM):   end;
100363    +else do;
MPRINT(EM_DIAGRAM):   else do;
100364    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100365    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
100366    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100367    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100368    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
100369    +   end;
MPRINT(EM_DIAGRAM):   end;
100370    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100371    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
100372    +   end;
MPRINT(EM_DIAGRAM):   end;
100373    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100374    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
100375    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100376    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100377    +   end;
MPRINT(EM_DIAGRAM):   end;
100378    +end;
MPRINT(EM_DIAGRAM):   end;
100379    +
100380    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
100381    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
100382    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
100383    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
100384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100386    +end;
MPRINT(EM_DIAGRAM):   end;
100387    +else do;
MPRINT(EM_DIAGRAM):   else do;
100388    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100389    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
100390    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100391    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100392    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
100393    +   end;
MPRINT(EM_DIAGRAM):   end;
100394    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100395    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
100396    +   end;
MPRINT(EM_DIAGRAM):   end;
100397    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100398    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
100399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100401    +   end;
MPRINT(EM_DIAGRAM):   end;
100402    +end;
MPRINT(EM_DIAGRAM):   end;
100403    +
100404    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
100405    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
100406    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
100407    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
100408    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100409    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100410    +end;
MPRINT(EM_DIAGRAM):   end;
100411    +else do;
MPRINT(EM_DIAGRAM):   else do;
100412    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100413    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
100414    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100415    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100416    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
100417    +   end;
MPRINT(EM_DIAGRAM):   end;
100418    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100419    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
100420    +   end;
MPRINT(EM_DIAGRAM):   end;
100421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100422    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
100423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100425    +   end;
MPRINT(EM_DIAGRAM):   end;
100426    +end;
MPRINT(EM_DIAGRAM):   end;
100427    +
100428    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
100429    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
100430    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
100431    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
100432    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100434    +end;
MPRINT(EM_DIAGRAM):   end;
100435    +else do;
MPRINT(EM_DIAGRAM):   else do;
100436    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100437    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
100438    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100439    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100440    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
100441    +   end;
MPRINT(EM_DIAGRAM):   end;
100442    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100443    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
100444    +   end;
MPRINT(EM_DIAGRAM):   end;
100445    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100446    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
100447    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100448    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100449    +   end;
MPRINT(EM_DIAGRAM):   end;
100450    +end;
MPRINT(EM_DIAGRAM):   end;
100451    +
100452    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
100453    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
100454    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
100455    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
100456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100458    +end;
MPRINT(EM_DIAGRAM):   end;
100459    +else do;
MPRINT(EM_DIAGRAM):   else do;
100460    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100461    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
100462    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100463    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
100464    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
100465    +   end;
MPRINT(EM_DIAGRAM):   end;
100466    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
100467    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
100468    +   end;
MPRINT(EM_DIAGRAM):   end;
100469    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100470    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
100471    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100472    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100473    +   end;
MPRINT(EM_DIAGRAM):   end;
100474    +end;
MPRINT(EM_DIAGRAM):   end;
100475    +
100476    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
100477    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
100478    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
100479    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
100480    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100481    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100482    +end;
MPRINT(EM_DIAGRAM):   end;
100483    +else do;
MPRINT(EM_DIAGRAM):   else do;
100484    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
100485    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
100486    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100487    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
100488    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
100489    +   end;
MPRINT(EM_DIAGRAM):   end;
100490    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
100491    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
100492    +   end;
MPRINT(EM_DIAGRAM):   end;
100493    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100494    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
100495    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100496    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100497    +   end;
MPRINT(EM_DIAGRAM):   end;
100498    +end;
MPRINT(EM_DIAGRAM):   end;
100499    +
100500    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
100501    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
100502    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
100503    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
100504    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
100505    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
100506    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
100507    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
100508    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
100509    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
100510    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
100511    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
100512    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100514    +end;
MPRINT(EM_DIAGRAM):   end;
100515    +else do;
MPRINT(EM_DIAGRAM):   else do;
100516    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
100517    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
100518    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100519    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
100520    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
100521    +   end;
MPRINT(EM_DIAGRAM):   end;
100522    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
100523    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
100524    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
100525    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
100526    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
100527    +   end;
MPRINT(EM_DIAGRAM):   end;
100528    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
100529    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
100530    +   end;
MPRINT(EM_DIAGRAM):   end;
100531    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
100532    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
100533    +   end;
MPRINT(EM_DIAGRAM):   end;
100534    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
100535    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
100536    +   end;
MPRINT(EM_DIAGRAM):   end;
100537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100538    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
100539    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
100540    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
100541    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
100542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100544    +   end;
MPRINT(EM_DIAGRAM):   end;
100545    +end;
MPRINT(EM_DIAGRAM):   end;
100546    +
100547    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
100548    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
100549    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
100550    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
100551    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
100552    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
100553    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
100554    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
100555    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
100556    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100557    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100558    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100559    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100560    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100561    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100562    +end;
MPRINT(EM_DIAGRAM):   end;
100563    +else do;
MPRINT(EM_DIAGRAM):   else do;
100564    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
100565    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
100566    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100567    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
100568    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
100569    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
100570    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
100571    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
100572    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100573    +         end;
MPRINT(EM_DIAGRAM):   end;
100574    +         else do;
MPRINT(EM_DIAGRAM):   else do;
100575    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
100576    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
100577    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100578    +            end;
MPRINT(EM_DIAGRAM):   end;
100579    +         end;
MPRINT(EM_DIAGRAM):   end;
100580    +      end;
MPRINT(EM_DIAGRAM):   end;
100581    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100582    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
100583    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
100584    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100585    +         end;
MPRINT(EM_DIAGRAM):   end;
100586    +      end;
MPRINT(EM_DIAGRAM):   end;
100587    +   end;
MPRINT(EM_DIAGRAM):   end;
100588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100589    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
100590    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
100591    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100592    +      end;
MPRINT(EM_DIAGRAM):   end;
100593    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100594    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
100595    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
100596    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
100597    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
100598    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
100599    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100600    +         end;
MPRINT(EM_DIAGRAM):   end;
100601    +      end;
MPRINT(EM_DIAGRAM):   end;
100602    +   end;
MPRINT(EM_DIAGRAM):   end;
100603    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
100604    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100605    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100606    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100607    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100608    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100609    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100610    +   end;
MPRINT(EM_DIAGRAM):   end;
100611    +end;
MPRINT(EM_DIAGRAM):   end;
100612    +
100613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100614    +*** Checking missing input Interval
100615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
100616    +
100617    +IF NMISS(
100618    +   AcceptedCmpTotal ,
100619    +   Age ,
100620    +   Frq ,
100621    +   Income ,
100622    +   Kidhome ,
100623    +   MntFishProducts ,
100624    +   MntFruits ,
100625    +   MntGoldProds ,
100626    +   MntSweetProducts ,
100627    +   MonthsAsCustomer ,
100628    +   NumDealsPurchases ,
100629    +   NumWebVisitsMonth ,
100630    +   RFMstat ,
100631    +   RMntFrq ,
100632    +   Recency ,
100633    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
100634    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
100635    +
100636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100637    +END;
MPRINT(EM_DIAGRAM):   END;
100638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100639    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
100640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100641    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100642    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100643    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
100644    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
100645    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100646    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100647    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
100648    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
100649    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
100650    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
100651    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100652    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
100653    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
100654    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
100655    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
100656    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
100657    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100658    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
100659    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100660    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
100661    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100662    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
100663    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100664    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100665    +END;
MPRINT(EM_DIAGRAM):   END;
100666    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100667    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
100668    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100669    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
100670    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
100671    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
100672    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
100673    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100674    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
100675    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100676    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
100677    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
100678    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
100679    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
100680    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
100681    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
100682    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
100683    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
100684    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
100685    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100686    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
100687    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
100688    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
100689    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
100690    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
100691    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
100692    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
100693    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
100694    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100695    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
100696    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
100697    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100698    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
100699    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
100700    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100701    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
100702    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
100703    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
100704    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100705    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
100706    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100707    +END;
MPRINT(EM_DIAGRAM):   END;
100708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100709    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
100710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100712    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
100713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100715    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
100716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100717    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100718    +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
100719    +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
100720    +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
100721    +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
100722    +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
100723    +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
100724    +          +    -0.63886071804247 * S_MonthsAsCustomer
100725    +          +      2.3488612891037 * S_NumDealsPurchases
100726    +          +     2.32996461229282 * S_NumWebVisitsMonth
100727    +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
100728    +        S_RMntFrq  +    -3.18599476886695 * S_Recency
100729    +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
100730    +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
100731    +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
100732    +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
100733    +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
100734    +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
100735    +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
100736    +          +     0.67699646331113 * S_MonthsAsCustomer
100737    +          +     0.70523055739254 * S_NumDealsPurchases
100738    +          +    -2.06406682205141 * S_NumWebVisitsMonth
100739    +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
100740    +        S_RMntFrq  +      5.0273672656487 * S_Recency
100741    +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
100742    +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
100743    +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
100744    +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
100745    +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
100746    +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
100747    +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
100748    +          +    -0.53694216899543 * S_MonthsAsCustomer
100749    +          +     0.25908508836257 * S_NumDealsPurchases
100750    +          +    -1.18459231573601 * S_NumWebVisitsMonth
100751    +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
100752    +        S_RMntFrq  +    -1.22457627833901 * S_Recency
100753    +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
100754    +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
100755    +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
100756    +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
100757    +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
100758    +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
100759    +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
100760    +          +    -0.08931078748332 * S_MonthsAsCustomer
100761    +          +    -0.46561962814047 * S_NumDealsPurchases
100762    +          +    -0.12241295445297 * S_NumWebVisitsMonth
100763    +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
100764    +        S_RMntFrq  +     0.96804234233608 * S_Recency
100765    +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
100766    +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
100767    +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
100768    +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
100769    +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
100770    +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
100771    +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
100772    +          +     -0.9186653552138 * S_MonthsAsCustomer
100773    +          +     2.17624393037629 * S_NumDealsPurchases
100774    +          +    -0.41699900714758 * S_NumWebVisitsMonth
100775    +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
100776    +        S_RMntFrq  +    -0.28987089218356 * S_Recency
100777    +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
100778    +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
100779    +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
100780    +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
100781    +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
100782    +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
100783    +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
100784    +          +     1.32865070741283 * S_MonthsAsCustomer
100785    +          +      0.8173864987673 * S_NumDealsPurchases
100786    +          +     1.04804775338375 * S_NumWebVisitsMonth
100787    +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
100788    +        S_RMntFrq  +     0.08690587270493 * S_Recency
100789    +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
100790    +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
100791    +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
100792    +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
100793    +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
100794    +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
100795    +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
100796    +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
100797    +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
100798    +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
100799    +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
100800    +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
100801    +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
100802    +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
100803    +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
100804    +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
100805    +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
100806    +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
100807    +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
100808    +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
100809    +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
100810    +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
100811    +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
100812    +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
100813    +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
100814    +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
100815    +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
100816    +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
100817    +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
100818    +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
100819    +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
100820    +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
100821    +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
100822    +        EducationGraduation  +    -0.31624019107181 * EducationMaster
100823    +          +    -0.82783034099773 * Marital_StatusDivorced
100824    +          +     0.39651075241405 * Marital_StatusMarried
100825    +          +     0.17323156170107 * Marital_StatusSingle
100826    +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
100827    +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
100828    +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
100829    +        EducationGraduation  +    -0.05323450200928 * EducationMaster
100830    +          +    -2.42314580112302 * Marital_StatusDivorced
100831    +          +     1.72709251267075 * Marital_StatusMarried
100832    +          +    -0.94350561587168 * Marital_StatusSingle
100833    +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
100834    +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
100835    +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
100836    +        EducationGraduation  +    -1.41317064722862 * EducationMaster
100837    +          +    -1.25323701705333 * Marital_StatusDivorced
100838    +          +    -0.72618091015379 * Marital_StatusMarried
100839    +          +     0.20594885266863 * Marital_StatusSingle
100840    +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
100841    +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
100842    +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
100843    +        EducationGraduation  +     0.75559299844055 * EducationMaster
100844    +          +     -0.9159957275063 * Marital_StatusDivorced
100845    +          +     2.06164757358796 * Marital_StatusMarried
100846    +          +    -1.61544310412168 * Marital_StatusSingle
100847    +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
100848    +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
100849    +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
100850    +        EducationGraduation  +     0.27594869585414 * EducationMaster
100851    +          +    -0.72418104768251 * Marital_StatusDivorced
100852    +          +     0.51077116161056 * Marital_StatusMarried
100853    +          +     -2.0857896888723 * Marital_StatusSingle
100854    +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
100855    +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
100856    +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
100857    +        EducationGraduation  +     -0.7287361872795 * EducationMaster
100858    +          +     0.64139965212864 * Marital_StatusDivorced
100859    +          +    -1.52338846336783 * Marital_StatusMarried
100860    +          +     1.94794784762286 * Marital_StatusSingle
100861    +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
100862    +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
100863    +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
100864    +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
100865    +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
100866    +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
100867    +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
100868    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
100869    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
100870    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
100871    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
100872    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
100873    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
100874    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
100875    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
100876    +END;
MPRINT(EM_DIAGRAM):   END;
100877    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100878    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
100879    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
100880    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
100881    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
100882    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
100883    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
100884    +END;
MPRINT(EM_DIAGRAM):   END;
100885    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100886    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
100887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100888    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100889    +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
100890    +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
100891    +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
100892    +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
100893    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
100894    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
100895    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
100896    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
100897    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
100898    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
100899    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
100900    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
100901    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
100902    +END;
MPRINT(EM_DIAGRAM):   END;
100903    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100904    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
100905    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
100906    +END;
MPRINT(EM_DIAGRAM):   END;
100907    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
100908    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
100909    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
100910    +END;
MPRINT(EM_DIAGRAM):   END;
100911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100912    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
100913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100914    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
100915    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
100916    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
100917    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
100918    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
100919    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
100920    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
100921    +END;
MPRINT(EM_DIAGRAM):   END;
100922    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100923    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
100924    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100925    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
100926     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
100927     quit;
100928     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
100929     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
100930     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
100931     retain ID 2 Node "AutoNeural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural35";
100932     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
100933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2235 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2235 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100934     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
100935     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100936     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2235 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2235 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100937     proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_variableset out=_temp2(keep=NAME 
CREATOR);
100938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100940     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100941     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
100942     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
100943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100944     proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural35_train out=_meta(keep=NAME) noprint;
100945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100946     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
100947     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

100949     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100950     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
100951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100952     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100953     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
100954     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
100954   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1184 rows and 5 columns.

100955     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100956     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
100957     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1184 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100958     filename _pref
100958   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
100959     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
100960     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
100961    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100962    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
100963    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100964    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
100965    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
100966    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
100967     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
100968     quit;
100969     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
100970     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
100971     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
100972     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
100973     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
100974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100975     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
100976     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100977     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100978     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
100979     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100980     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100981     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100982     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
100983     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
100984     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100985     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
100986     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100987     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
100988     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100989     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

100990     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
100991     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
100992     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
100993     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100994     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
100995     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
100995   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

100996     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100997     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
100998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1188 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

100999     filename _pref
100999   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
101000     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101001     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
101002    +
101003    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
101004    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
101004   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
101005    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
101006    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
101007    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
101008    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
101009    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101010     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101011     quit;
101012     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101013     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101014     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101015     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
101016     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101017     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101018     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101019     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101020     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101021     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
101022     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101023     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101024     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101025     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101026     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101028     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
101029     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

101030     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101031     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101032     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101033     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101034     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101035     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101036     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101037     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101038     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101038   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

101039     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

101040     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
101041     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1227 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101042     filename _pref
101042   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
101043     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101044     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
101045    +
101046    +
101047    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
101048    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
101049    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
101050    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
101051    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
101052    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101053    +
101054    +
101055    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
101056    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
101057    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
101058    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
101059    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
101060    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101061    +
101062    +
101063    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
101064    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
101065    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
101066    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
101067    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
101068    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101069    +
101070    +
101071    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
101072    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
101073    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
101074    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
101075    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
101076    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101077    +
101078    +
101079    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
101080    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
101081    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
101082    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
101083    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
101084    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101085    +
101086    +
101087    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
101088    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
101089    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
101090    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
101091    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
101092    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101093    +
101094    +
101095    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
101096    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
101097    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
101098    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
101099    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
101100    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101101    +
101102    +
101103    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
101104    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
101105    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
101106    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
101107    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
101108    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
101109    +if
101110    +_FILTERNORM1 not in ( '.')
101111    + and
101112    +_FILTERNORM2 not in ( '.')
101113    + and
101114    +_FILTERNORM3 not in ( '.')
101115    + and
101116    +_FILTERNORM4 not in ( '.')
101117    + and
101118    +_FILTERNORM5 not in ( '.')
101119    + and
101120    +_FILTERNORM6 not in ( '.')
101121    + and
101122    +_FILTERNORM7 not in ( ' ')
101123    + and
101124    +_FILTERNORM8 not in ( ' ')
101125    +and
101126    +( Dt_Customer ne .)
101127    +and ( Income ne . and (Income<=107000))
101128    +and ( Kidhome ne .)
101129    +and ( MntFishProducts ne .)
101130    +and ( MntFruits ne .)
101131    +and ( MntGoldProds ne .)
101132    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
101133    +and ( MntSweetProducts ne .)
101134    +and ( MntWines ne .)
101135    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
101136    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
101137    +and ( NumStorePurchases ne .)
101138    +and ( NumWebPurchases ne .)
101139    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
101140    +and ( Recency ne .)
101141    +and ( Teenhome ne .)
101142    +and ( Year_Birth ne .)
101143    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
101144    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
101145    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
101146    +end;
MPRINT(EM_DIAGRAM):   end;
101147    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
101148    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101149     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101150     quit;
101151     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101152     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101153     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101154     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
101155     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101157     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101158     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101159     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101160     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
101161     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101162     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

101163     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101164     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101165     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101166     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101167     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
101168     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

101169     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101170     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101172     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101173     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101174     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101175     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101176     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101177     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101177   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

101178     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101179     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
101180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1293 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101181     %macro varDept(fcmpdata=,id=);
101182     %global nobs&id scoreFlag&id;
101183     %let scoreFlag&id = 0;
101184     %if &id=1 or ^&fcmpStart %then %do;
101185     proc sort data=&fcmpdata out=_temp&id nodupkey;
101186     by NAME;
101187     where id=&id and LHS in( %let j=1;
101188     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
101189     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
101190     "&var" %let j = %eval(&j+1);
101191     %end;
101192     );
101193     run;
101194     %let dsid = %sysfunc(open(_temp&id));
101195     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101196     %let dsid = %sysfunc(close(&dsid));
101197     %if &&nobs&id %then %do;
101198     %let scoreFlag&id = 1;
101199     %let fcmpStart = 1;
101200     %end;
101201     %else %let fcmpStart = 0;
101202     %end;
101203     %else %do;
101204     proc sort data=&fcmpdata out=_tempid;
101205     where id=&id;
101206     by LHS;
101207     run;
101208     %let dsid = %sysfunc(open(_tempid));
101209     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101210     %let dsid = %sysfunc(close(&dsid));
101211     %if ^&&nobs&id %then %do;
101212     proc datasets lib=work nolist;
101213     delete _tempid;
101214     run;
101215     quit;
101216     %end;
101217     %else %do;
101218     data _tempAll;
101219     set %let j=%eval(&id-1);
101220     %do x=1 %to &j;
101221     %if &&nobs&x %then %do;
101222     _temp&x %end;
101223     %end;
101224     ;
101225     run;
101226     proc sql;
101227     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
101227   ! work._tempid p2 where p.name=p2.lhs;
101228     quit;
101229     data _temp&id;
101230     set _temp&id;
101231     where LHS ne '' and NAME ne '' and Node ne '';
101232     run;
101233     proc datasets lib=work nolist;
101234     delete _tempAll;
101235     run;
101236     %let dsid = %sysfunc(open(_temp&id));
101237     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101238     %let dsid = %sysfunc(close(&dsid));
101239     %if ^&&nobs&id %then %do;
101240     proc datasets lib=work nolist;
101241     delete _temp&id;
101242     run;
101243     quit;
101244     %end;
101245     %else %do;
101246     %let scoreFlag&id = 1;
101247     data _temp&id;
101248     set _temp&id;
101249     where LHS ne NAME and node ne '';
101250     run;
101251     %let dsid = %sysfunc(open(_temp&id));
101252     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
101253     %let dsid = %sysfunc(close(&dsid));
101254     %if ^&&nobs&id %then %do;
101255     proc datasets lib=work nolist;
101256     delete _temp&id;
101257     run;
101258     quit;
101259     %end;
101260     %else %do;
101261     proc sort data=_temp&id nodupkey;
101262     by LHS NAME;
101263     run;
101264     %end;
101265     %end;
101266     %end;
101267     %end;
101268     %mend varDept;
101269     %macro optCode(outdata=fcmpdata);
101270     %global fcmpStart;
101271     %let fcmpStart = 0;
101272     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
101273     %let NumNodes=9;
101274     %do k=1 %to &NumNodes;
101275     %vardept(fcmpdata=&outdata, id=&k);
101276     %end;
101277     %mend optCode;
101278     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

101279     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
101280     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
101281     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
101282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

101283     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
101284     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
101285     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
101286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101287     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101288     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
101288   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

101289     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

101290     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
101291     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
101292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101293     filename _pref
101293   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas";
101294     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101295     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMPUBLISHSCORE.sas.
101296    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
101297    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
101298    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
101299    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
101300    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
101301    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
101302    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
101303    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
101304    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
101305    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
101306    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
101307    +LENGTH _WARN_ $4
101308    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
101309    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
101310    +
101311    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
101312    +
101313    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
101314    +
101315    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
101316    +
101317    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
101318    +
101319    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
101320    +
101321    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
101322    +
101323    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
101324    +
101325    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
101326    +
101327    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
101328    +
101329    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
101330    +
101331    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
101332    +
101333    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
101334    +
101335    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
101336    +
101337    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
101338    +
101339    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
101340    +
101341    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
101342    +
101343    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
101344    +
101345    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
101346    +
101347    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
101348    +
101349    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
101350    +
101351    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
101352    +
101353    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
101354    +
101355    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
101356    +
101357    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
101358    +
101359    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
101360    +
101361    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
101362    +
101363    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
101364    +
101365    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
101366    +
101367    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
101368    +
101369    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
101370    +
101371    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
101372    +
101373    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
101374    +
101375    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
101376    +
101377    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
101378    +
101379    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
101380    +
101381    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
101382    +
101383    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
101384    +
101385    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
101386    +
101387    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
101388    +
101389    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
101390    +
101391    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
101392    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
101393    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
101394    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
101395    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101396    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101397    +end;
MPRINT(EM_DIAGRAM):   end;
101398    +else do;
MPRINT(EM_DIAGRAM):   else do;
101399    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101400    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
101401    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101402    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101403    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
101404    +   end;
MPRINT(EM_DIAGRAM):   end;
101405    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101406    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
101407    +   end;
MPRINT(EM_DIAGRAM):   end;
101408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101409    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
101410    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101411    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101412    +   end;
MPRINT(EM_DIAGRAM):   end;
101413    +end;
MPRINT(EM_DIAGRAM):   end;
101414    +
101415    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
101416    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
101417    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
101418    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
101419    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101420    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101421    +end;
MPRINT(EM_DIAGRAM):   end;
101422    +else do;
MPRINT(EM_DIAGRAM):   else do;
101423    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101424    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
101425    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101426    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101427    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
101428    +   end;
MPRINT(EM_DIAGRAM):   end;
101429    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101430    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
101431    +   end;
MPRINT(EM_DIAGRAM):   end;
101432    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101433    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
101434    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101435    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101436    +   end;
MPRINT(EM_DIAGRAM):   end;
101437    +end;
MPRINT(EM_DIAGRAM):   end;
101438    +
101439    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
101440    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
101441    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
101442    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
101443    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101444    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101445    +end;
MPRINT(EM_DIAGRAM):   end;
101446    +else do;
MPRINT(EM_DIAGRAM):   else do;
101447    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101448    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
101449    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101450    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101451    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
101452    +   end;
MPRINT(EM_DIAGRAM):   end;
101453    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101454    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
101455    +   end;
MPRINT(EM_DIAGRAM):   end;
101456    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101457    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
101458    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101459    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101460    +   end;
MPRINT(EM_DIAGRAM):   end;
101461    +end;
MPRINT(EM_DIAGRAM):   end;
101462    +
101463    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
101464    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
101465    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
101466    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
101467    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101468    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101469    +end;
MPRINT(EM_DIAGRAM):   end;
101470    +else do;
MPRINT(EM_DIAGRAM):   else do;
101471    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101472    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
101473    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101474    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101475    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
101476    +   end;
MPRINT(EM_DIAGRAM):   end;
101477    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101478    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
101479    +   end;
MPRINT(EM_DIAGRAM):   end;
101480    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101481    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
101482    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101483    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101484    +   end;
MPRINT(EM_DIAGRAM):   end;
101485    +end;
MPRINT(EM_DIAGRAM):   end;
101486    +
101487    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
101488    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
101489    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
101490    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
101491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101493    +end;
MPRINT(EM_DIAGRAM):   end;
101494    +else do;
MPRINT(EM_DIAGRAM):   else do;
101495    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101496    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
101497    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101498    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101499    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
101500    +   end;
MPRINT(EM_DIAGRAM):   end;
101501    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101502    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
101503    +   end;
MPRINT(EM_DIAGRAM):   end;
101504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101505    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
101506    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101507    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101508    +   end;
MPRINT(EM_DIAGRAM):   end;
101509    +end;
MPRINT(EM_DIAGRAM):   end;
101510    +
101511    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
101512    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
101513    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
101514    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
101515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101517    +end;
MPRINT(EM_DIAGRAM):   end;
101518    +else do;
MPRINT(EM_DIAGRAM):   else do;
101519    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101520    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
101521    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101522    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
101523    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
101524    +   end;
MPRINT(EM_DIAGRAM):   end;
101525    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
101526    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
101527    +   end;
MPRINT(EM_DIAGRAM):   end;
101528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101529    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
101530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101532    +   end;
MPRINT(EM_DIAGRAM):   end;
101533    +end;
MPRINT(EM_DIAGRAM):   end;
101534    +
101535    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
101536    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
101537    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
101538    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
101539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101541    +end;
MPRINT(EM_DIAGRAM):   end;
101542    +else do;
MPRINT(EM_DIAGRAM):   else do;
101543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
101544    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
101545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101546    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
101547    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
101548    +   end;
MPRINT(EM_DIAGRAM):   end;
101549    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
101550    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
101551    +   end;
MPRINT(EM_DIAGRAM):   end;
101552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101553    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
101554    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101555    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101556    +   end;
MPRINT(EM_DIAGRAM):   end;
101557    +end;
MPRINT(EM_DIAGRAM):   end;
101558    +
101559    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
101560    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
101561    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
101562    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
101563    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
101564    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
101565    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
101566    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
101567    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
101568    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
101569    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
101570    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
101571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101573    +end;
MPRINT(EM_DIAGRAM):   end;
101574    +else do;
MPRINT(EM_DIAGRAM):   else do;
101575    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
101576    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
101577    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101578    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
101579    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
101580    +   end;
MPRINT(EM_DIAGRAM):   end;
101581    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
101582    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
101583    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
101584    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
101585    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
101586    +   end;
MPRINT(EM_DIAGRAM):   end;
101587    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
101588    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
101589    +   end;
MPRINT(EM_DIAGRAM):   end;
101590    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
101591    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
101592    +   end;
MPRINT(EM_DIAGRAM):   end;
101593    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
101594    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
101595    +   end;
MPRINT(EM_DIAGRAM):   end;
101596    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101597    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
101598    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
101599    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
101600    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
101601    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101602    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101603    +   end;
MPRINT(EM_DIAGRAM):   end;
101604    +end;
MPRINT(EM_DIAGRAM):   end;
101605    +
101606    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
101607    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
101608    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
101609    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
101610    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
101611    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
101612    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
101613    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
101614    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
101615    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
101616    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
101617    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
101618    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
101619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101621    +end;
MPRINT(EM_DIAGRAM):   end;
101622    +else do;
MPRINT(EM_DIAGRAM):   else do;
101623    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
101624    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
101625    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101626    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
101627    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
101628    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
101629    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
101630    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
101631    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101632    +         end;
MPRINT(EM_DIAGRAM):   end;
101633    +         else do;
MPRINT(EM_DIAGRAM):   else do;
101634    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
101635    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
101636    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101637    +            end;
MPRINT(EM_DIAGRAM):   end;
101638    +         end;
MPRINT(EM_DIAGRAM):   end;
101639    +      end;
MPRINT(EM_DIAGRAM):   end;
101640    +      else do;
MPRINT(EM_DIAGRAM):   else do;
101641    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
101642    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
101643    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101644    +         end;
MPRINT(EM_DIAGRAM):   end;
101645    +      end;
MPRINT(EM_DIAGRAM):   end;
101646    +   end;
MPRINT(EM_DIAGRAM):   end;
101647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101648    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
101649    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
101650    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101651    +      end;
MPRINT(EM_DIAGRAM):   end;
101652    +      else do;
MPRINT(EM_DIAGRAM):   else do;
101653    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
101654    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
101655    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
101656    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
101657    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
101658    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101659    +         end;
MPRINT(EM_DIAGRAM):   end;
101660    +      end;
MPRINT(EM_DIAGRAM):   end;
101661    +   end;
MPRINT(EM_DIAGRAM):   end;
101662    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
101663    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
101664    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
101665    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
101666    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
101667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101669    +   end;
MPRINT(EM_DIAGRAM):   end;
101670    +end;
MPRINT(EM_DIAGRAM):   end;
101671    +
101672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101673    +*** Checking missing input Interval
101674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
101675    +
101676    +IF NMISS(
101677    +   AcceptedCmpTotal ,
101678    +   Age ,
101679    +   Frq ,
101680    +   Income ,
101681    +   Kidhome ,
101682    +   MntFishProducts ,
101683    +   MntFruits ,
101684    +   MntGoldProds ,
101685    +   MntSweetProducts ,
101686    +   MonthsAsCustomer ,
101687    +   NumDealsPurchases ,
101688    +   NumWebVisitsMonth ,
101689    +   RFMstat ,
101690    +   RMntFrq ,
101691    +   Recency ,
101692    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
101693    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
101694    +
101695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101696    +END;
MPRINT(EM_DIAGRAM):   END;
101697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101698    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
101699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101700    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101701    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
101702    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
101703    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
101704    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
101705    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
101706    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
101707    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
101708    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
101709    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
101710    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
101711    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
101712    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
101713    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
101714    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
101715    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
101716    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
101717    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
101718    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
101719    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
101720    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
101721    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
101722    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
101723    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
101724    +END;
MPRINT(EM_DIAGRAM):   END;
101725    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101726    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
101727    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
101728    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
101729    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
101730    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
101731    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
101732    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
101733    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
101734    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
101735    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
101736    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
101737    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
101738    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
101739    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
101740    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
101741    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
101742    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
101743    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
101744    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
101745    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
101746    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
101747    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
101748    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
101749    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
101750    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
101751    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
101752    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
101753    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
101754    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
101755    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
101756    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
101757    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
101758    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
101759    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
101760    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
101761    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
101762    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
101763    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
101764    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
101765    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
101766    +END;
MPRINT(EM_DIAGRAM):   END;
101767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101768    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
101769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101771    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
101772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101773    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101774    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
101775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101776    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101777    +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
101778    +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
101779    +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
101780    +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
101781    +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
101782    +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
101783    +          +     0.04740894983714 * S_MonthsAsCustomer
101784    +          +     1.39008006467326 * S_NumDealsPurchases
101785    +          +     0.21608999126738 * S_NumWebVisitsMonth
101786    +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
101787    +        S_RMntFrq  +    -0.30830265825486 * S_Recency
101788    +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
101789    +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
101790    +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
101791    +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
101792    +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
101793    +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
101794    +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
101795    +          +     0.11090137331567 * S_MonthsAsCustomer
101796    +          +     0.22617410760471 * S_NumDealsPurchases
101797    +          +    -1.50612324994247 * S_NumWebVisitsMonth
101798    +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
101799    +        S_RMntFrq  +     1.36064773168913 * S_Recency
101800    +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
101801    +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
101802    +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
101803    +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
101804    +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
101805    +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
101806    +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
101807    +          +     1.12489244540865 * S_MonthsAsCustomer
101808    +          +     0.65186273365438 * S_NumDealsPurchases
101809    +          +    -2.32770073685469 * S_NumWebVisitsMonth
101810    +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
101811    +        S_RMntFrq  +     2.60277611818411 * S_Recency
101812    +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
101813    +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
101814    +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
101815    +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
101816    +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
101817    +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
101818    +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
101819    +          +     0.30886829972356 * S_MonthsAsCustomer
101820    +          +     0.65492907685123 * S_NumDealsPurchases
101821    +          +     0.10822300736498 * S_NumWebVisitsMonth
101822    +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
101823    +        S_RMntFrq  +     -0.7378392134822 * S_Recency
101824    +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
101825    +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
101826    +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
101827    +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
101828    +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
101829    +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
101830    +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
101831    +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
101832    +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
101833    +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
101834    +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
101835    +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
101836    +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
101837    +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
101838    +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
101839    +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
101840    +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
101841    +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
101842    +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
101843    +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
101844    +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
101845    +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
101846    +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
101847    +        EducationGraduation  +     0.30922934477029 * EducationMaster
101848    +          +     0.01556098790048 * Marital_StatusDivorced
101849    +          +     0.00512523764645 * Marital_StatusMarried
101850    +          +    -0.33980799511448 * Marital_StatusSingle
101851    +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
101852    +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
101853    +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
101854    +        EducationGraduation  +     0.69751348344321 * EducationMaster
101855    +          +     0.01069434029942 * Marital_StatusDivorced
101856    +          +      0.3116587285334 * Marital_StatusMarried
101857    +          +    -0.98635795023549 * Marital_StatusSingle
101858    +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
101859    +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
101860    +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
101861    +        EducationGraduation  +     -0.8155628950024 * EducationMaster
101862    +          +    -0.60393077836174 * Marital_StatusDivorced
101863    +          +    -0.18138878944937 * Marital_StatusMarried
101864    +          +     0.53013032587101 * Marital_StatusSingle
101865    +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
101866    +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
101867    +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
101868    +        EducationGraduation  +    -0.40675219343984 * EducationMaster
101869    +          +     0.43223311502025 * Marital_StatusDivorced
101870    +          +    -1.15741416919552 * Marital_StatusMarried
101871    +          +     0.83939799284264 * Marital_StatusSingle
101872    +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
101873    +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
101874    +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
101875    +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
101876    +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
101877    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
101878    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
101879    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101880    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
101881    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
101882    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
101883    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
101884    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
101885    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
101886    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
101887    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
101888    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
101889    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
101890    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
101891    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
101892    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
101893    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
101894    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
101895    +END;
MPRINT(EM_DIAGRAM):   END;
101896    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101897    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
101898    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
101899    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
101900    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
101901    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
101902    +END;
MPRINT(EM_DIAGRAM):   END;
101903    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101904    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
101905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101906    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101907    +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
101908    +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
101909    +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
101910    +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
101911    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
101912    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
101913    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101914    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
101915    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
101916    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
101917    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
101918    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
101919    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
101920    +END;
MPRINT(EM_DIAGRAM):   END;
101921    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101922    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
101923    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
101924    +END;
MPRINT(EM_DIAGRAM):   END;
101925    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
101926    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
101927    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
101928    +END;
MPRINT(EM_DIAGRAM):   END;
101929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101930    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
101931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101932    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
101933    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
101934    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
101935    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
101936    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
101937    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
101938    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
101939    +END;
MPRINT(EM_DIAGRAM):   END;
101940    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
101941    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
101942    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
101943    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101944     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101945     quit;
101946     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101947     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101948     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101949     retain ID 2 Node "AutoNeural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural34";
101950     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2187 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2187 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101952     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101953     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2187 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2187 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

101955     proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural34_variableset out=_temp2(keep=NAME 
CREATOR);
101956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101957     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101958     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101959     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
101960     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
101961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101962     proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural34_train out=_meta(keep=NAME) noprint;
101963     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

101964     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
101965     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101967     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
101968     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
101969     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101970     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101971     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
101972     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
101972   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1157 rows and 5 columns.

101973     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

101974     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
101975     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1157 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1157 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101976     filename _pref
101976   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
101977     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
101978     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
101979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101980    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
101981    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101982    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
101983    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
101984    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
101985     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
101986     quit;
101987     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
101988     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
101989     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
101990     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
101991     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
101992     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101993     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
101994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101996     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
101997     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
101998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

101999     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102000     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102001     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102002     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102003     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
102004     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

102005     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102006     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102007     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102008     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102009     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102010     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102011     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102012     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102013     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102013   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

102014     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102015     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
102016     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1161 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102017     filename _pref
102017   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
102018     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102019     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
102020    +
102021    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
102022    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
102022   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
102023    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
102024    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
102025    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
102026    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
102027    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102028     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102029     quit;
102030     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102031     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102032     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102033     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
102034     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102035     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102036     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102037     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102038     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102039     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
102040     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102041     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102042     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102043     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102044     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102045     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102046     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
102047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102048     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102049     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

102051     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102052     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102053     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102054     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102055     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102056     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102056   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

102057     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102058     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
102059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1200 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102060     filename _pref
102060   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
102061     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102062     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
102063    +
102064    +
102065    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
102066    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
102067    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
102068    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
102069    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
102070    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102071    +
102072    +
102073    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
102074    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
102075    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
102076    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
102077    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
102078    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102079    +
102080    +
102081    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
102082    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
102083    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
102084    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
102085    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
102086    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102087    +
102088    +
102089    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
102090    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
102091    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
102092    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
102093    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
102094    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102095    +
102096    +
102097    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
102098    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
102099    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
102100    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
102101    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
102102    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102103    +
102104    +
102105    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
102106    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
102107    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
102108    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
102109    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
102110    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102111    +
102112    +
102113    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
102114    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
102115    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
102116    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
102117    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
102118    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102119    +
102120    +
102121    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
102122    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
102123    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
102124    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
102125    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
102126    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
102127    +if
102128    +_FILTERNORM1 not in ( '.')
102129    + and
102130    +_FILTERNORM2 not in ( '.')
102131    + and
102132    +_FILTERNORM3 not in ( '.')
102133    + and
102134    +_FILTERNORM4 not in ( '.')
102135    + and
102136    +_FILTERNORM5 not in ( '.')
102137    + and
102138    +_FILTERNORM6 not in ( '.')
102139    + and
102140    +_FILTERNORM7 not in ( ' ')
102141    + and
102142    +_FILTERNORM8 not in ( ' ')
102143    +and
102144    +( Dt_Customer ne .)
102145    +and ( Income ne . and (Income<=107000))
102146    +and ( Kidhome ne .)
102147    +and ( MntFishProducts ne .)
102148    +and ( MntFruits ne .)
102149    +and ( MntGoldProds ne .)
102150    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
102151    +and ( MntSweetProducts ne .)
102152    +and ( MntWines ne .)
102153    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
102154    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
102155    +and ( NumStorePurchases ne .)
102156    +and ( NumWebPurchases ne .)
102157    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
102158    +and ( Recency ne .)
102159    +and ( Teenhome ne .)
102160    +and ( Year_Birth ne .)
102161    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
102162    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
102163    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
102164    +end;
MPRINT(EM_DIAGRAM):   end;
102165    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
102166    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102167     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102168     quit;
102169     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102170     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102171     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102172     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
102173     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102175     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102176     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102178     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
102179     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102181     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102182     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102183     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102185     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
102186     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102187     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102188     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102190     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102191     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102192     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102193     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102194     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102195     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102195   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

102196     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102197     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
102198     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1266 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102199     %macro varDept(fcmpdata=,id=);
102200     %global nobs&id scoreFlag&id;
102201     %let scoreFlag&id = 0;
102202     %if &id=1 or ^&fcmpStart %then %do;
102203     proc sort data=&fcmpdata out=_temp&id nodupkey;
102204     by NAME;
102205     where id=&id and LHS in( %let j=1;
102206     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
102207     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
102208     "&var" %let j = %eval(&j+1);
102209     %end;
102210     );
102211     run;
102212     %let dsid = %sysfunc(open(_temp&id));
102213     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102214     %let dsid = %sysfunc(close(&dsid));
102215     %if &&nobs&id %then %do;
102216     %let scoreFlag&id = 1;
102217     %let fcmpStart = 1;
102218     %end;
102219     %else %let fcmpStart = 0;
102220     %end;
102221     %else %do;
102222     proc sort data=&fcmpdata out=_tempid;
102223     where id=&id;
102224     by LHS;
102225     run;
102226     %let dsid = %sysfunc(open(_tempid));
102227     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102228     %let dsid = %sysfunc(close(&dsid));
102229     %if ^&&nobs&id %then %do;
102230     proc datasets lib=work nolist;
102231     delete _tempid;
102232     run;
102233     quit;
102234     %end;
102235     %else %do;
102236     data _tempAll;
102237     set %let j=%eval(&id-1);
102238     %do x=1 %to &j;
102239     %if &&nobs&x %then %do;
102240     _temp&x %end;
102241     %end;
102242     ;
102243     run;
102244     proc sql;
102245     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
102245   ! work._tempid p2 where p.name=p2.lhs;
102246     quit;
102247     data _temp&id;
102248     set _temp&id;
102249     where LHS ne '' and NAME ne '' and Node ne '';
102250     run;
102251     proc datasets lib=work nolist;
102252     delete _tempAll;
102253     run;
102254     %let dsid = %sysfunc(open(_temp&id));
102255     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102256     %let dsid = %sysfunc(close(&dsid));
102257     %if ^&&nobs&id %then %do;
102258     proc datasets lib=work nolist;
102259     delete _temp&id;
102260     run;
102261     quit;
102262     %end;
102263     %else %do;
102264     %let scoreFlag&id = 1;
102265     data _temp&id;
102266     set _temp&id;
102267     where LHS ne NAME and node ne '';
102268     run;
102269     %let dsid = %sysfunc(open(_temp&id));
102270     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
102271     %let dsid = %sysfunc(close(&dsid));
102272     %if ^&&nobs&id %then %do;
102273     proc datasets lib=work nolist;
102274     delete _temp&id;
102275     run;
102276     quit;
102277     %end;
102278     %else %do;
102279     proc sort data=_temp&id nodupkey;
102280     by LHS NAME;
102281     run;
102282     %end;
102283     %end;
102284     %end;
102285     %end;
102286     %mend varDept;
102287     %macro optCode(outdata=fcmpdata);
102288     %global fcmpStart;
102289     %let fcmpStart = 0;
102290     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
102291     %let NumNodes=9;
102292     %do k=1 %to &NumNodes;
102293     %vardept(fcmpdata=&outdata, id=&k);
102294     %end;
102295     %mend optCode;
102296     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 121 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 89 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

102297     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
102298     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
102299     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
102300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102301     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
102302     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
102303     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
102304     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102305     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102306     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
102306   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

102307     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102308     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
102309     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
102310     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102311     filename _pref
102311   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
102312     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102313     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
102314    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102315    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
102316    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102317    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
102318    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
102319    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
102320    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
102321    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
102322    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
102323    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
102324    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
102325    +LENGTH _WARN_ $4
102326    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
102327    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
102328    +
102329    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
102330    +
102331    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
102332    +
102333    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
102334    +
102335    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
102336    +
102337    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
102338    +
102339    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
102340    +
102341    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
102342    +
102343    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
102344    +
102345    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
102346    +
102347    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
102348    +
102349    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
102350    +
102351    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
102352    +
102353    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
102354    +
102355    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
102356    +
102357    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
102358    +
102359    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
102360    +
102361    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
102362    +
102363    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
102364    +
102365    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
102366    +
102367    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
102368    +
102369    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
102370    +
102371    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
102372    +
102373    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
102374    +
102375    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
102376    +
102377    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
102378    +
102379    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
102380    +
102381    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
102382    +
102383    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
102384    +
102385    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
102386    +
102387    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
102388    +
102389    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
102390    +
102391    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
102392    +
102393    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
102394    +
102395    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
102396    +
102397    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
102398    +
102399    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
102400    +
102401    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
102402    +
102403    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
102404    +
102405    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
102406    +
102407    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
102408    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
102409    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
102410    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
102411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102413    +end;
MPRINT(EM_DIAGRAM):   end;
102414    +else do;
MPRINT(EM_DIAGRAM):   else do;
102415    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102416    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
102417    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102418    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102419    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
102420    +   end;
MPRINT(EM_DIAGRAM):   end;
102421    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102422    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
102423    +   end;
MPRINT(EM_DIAGRAM):   end;
102424    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102425    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
102426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102428    +   end;
MPRINT(EM_DIAGRAM):   end;
102429    +end;
MPRINT(EM_DIAGRAM):   end;
102430    +
102431    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
102432    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
102433    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
102434    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
102435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102437    +end;
MPRINT(EM_DIAGRAM):   end;
102438    +else do;
MPRINT(EM_DIAGRAM):   else do;
102439    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102440    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
102441    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102442    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102443    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
102444    +   end;
MPRINT(EM_DIAGRAM):   end;
102445    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102446    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
102447    +   end;
MPRINT(EM_DIAGRAM):   end;
102448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102449    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
102450    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102451    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102452    +   end;
MPRINT(EM_DIAGRAM):   end;
102453    +end;
MPRINT(EM_DIAGRAM):   end;
102454    +
102455    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
102456    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
102457    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
102458    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
102459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102461    +end;
MPRINT(EM_DIAGRAM):   end;
102462    +else do;
MPRINT(EM_DIAGRAM):   else do;
102463    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102464    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
102465    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102466    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102467    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
102468    +   end;
MPRINT(EM_DIAGRAM):   end;
102469    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102470    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
102471    +   end;
MPRINT(EM_DIAGRAM):   end;
102472    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102473    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
102474    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102475    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102476    +   end;
MPRINT(EM_DIAGRAM):   end;
102477    +end;
MPRINT(EM_DIAGRAM):   end;
102478    +
102479    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
102480    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
102481    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
102482    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
102483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102485    +end;
MPRINT(EM_DIAGRAM):   end;
102486    +else do;
MPRINT(EM_DIAGRAM):   else do;
102487    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102488    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
102489    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102490    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102491    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
102492    +   end;
MPRINT(EM_DIAGRAM):   end;
102493    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102494    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
102495    +   end;
MPRINT(EM_DIAGRAM):   end;
102496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102497    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
102498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102500    +   end;
MPRINT(EM_DIAGRAM):   end;
102501    +end;
MPRINT(EM_DIAGRAM):   end;
102502    +
102503    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
102504    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
102505    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
102506    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
102507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102509    +end;
MPRINT(EM_DIAGRAM):   end;
102510    +else do;
MPRINT(EM_DIAGRAM):   else do;
102511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102512    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
102513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102515    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
102516    +   end;
MPRINT(EM_DIAGRAM):   end;
102517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102518    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
102519    +   end;
MPRINT(EM_DIAGRAM):   end;
102520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102521    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
102522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102524    +   end;
MPRINT(EM_DIAGRAM):   end;
102525    +end;
MPRINT(EM_DIAGRAM):   end;
102526    +
102527    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
102528    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
102529    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
102530    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
102531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102533    +end;
MPRINT(EM_DIAGRAM):   end;
102534    +else do;
MPRINT(EM_DIAGRAM):   else do;
102535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102536    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
102537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102538    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
102539    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
102540    +   end;
MPRINT(EM_DIAGRAM):   end;
102541    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
102542    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
102543    +   end;
MPRINT(EM_DIAGRAM):   end;
102544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102545    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
102546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102548    +   end;
MPRINT(EM_DIAGRAM):   end;
102549    +end;
MPRINT(EM_DIAGRAM):   end;
102550    +
102551    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
102552    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
102553    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
102554    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
102555    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102557    +end;
MPRINT(EM_DIAGRAM):   end;
102558    +else do;
MPRINT(EM_DIAGRAM):   else do;
102559    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
102560    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
102561    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102562    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
102563    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
102564    +   end;
MPRINT(EM_DIAGRAM):   end;
102565    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
102566    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
102567    +   end;
MPRINT(EM_DIAGRAM):   end;
102568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102569    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
102570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102572    +   end;
MPRINT(EM_DIAGRAM):   end;
102573    +end;
MPRINT(EM_DIAGRAM):   end;
102574    +
102575    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
102576    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
102577    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
102578    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
102579    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
102580    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
102581    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
102582    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
102583    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
102584    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
102585    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
102586    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
102587    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102588    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102589    +end;
MPRINT(EM_DIAGRAM):   end;
102590    +else do;
MPRINT(EM_DIAGRAM):   else do;
102591    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
102592    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
102593    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102594    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
102595    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
102596    +   end;
MPRINT(EM_DIAGRAM):   end;
102597    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
102598    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
102599    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
102600    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
102601    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
102602    +   end;
MPRINT(EM_DIAGRAM):   end;
102603    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
102604    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
102605    +   end;
MPRINT(EM_DIAGRAM):   end;
102606    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
102607    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
102608    +   end;
MPRINT(EM_DIAGRAM):   end;
102609    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
102610    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
102611    +   end;
MPRINT(EM_DIAGRAM):   end;
102612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102613    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
102614    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
102615    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
102616    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
102617    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102618    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102619    +   end;
MPRINT(EM_DIAGRAM):   end;
102620    +end;
MPRINT(EM_DIAGRAM):   end;
102621    +
102622    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
102623    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
102624    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
102625    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
102626    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
102627    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
102628    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
102629    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
102630    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
102631    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
102632    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
102633    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
102634    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
102635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102637    +end;
MPRINT(EM_DIAGRAM):   end;
102638    +else do;
MPRINT(EM_DIAGRAM):   else do;
102639    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
102640    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
102641    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102642    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
102643    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
102644    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
102645    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
102646    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
102647    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102648    +         end;
MPRINT(EM_DIAGRAM):   end;
102649    +         else do;
MPRINT(EM_DIAGRAM):   else do;
102650    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
102651    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
102652    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102653    +            end;
MPRINT(EM_DIAGRAM):   end;
102654    +         end;
MPRINT(EM_DIAGRAM):   end;
102655    +      end;
MPRINT(EM_DIAGRAM):   end;
102656    +      else do;
MPRINT(EM_DIAGRAM):   else do;
102657    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
102658    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
102659    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102660    +         end;
MPRINT(EM_DIAGRAM):   end;
102661    +      end;
MPRINT(EM_DIAGRAM):   end;
102662    +   end;
MPRINT(EM_DIAGRAM):   end;
102663    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102664    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
102665    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
102666    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102667    +      end;
MPRINT(EM_DIAGRAM):   end;
102668    +      else do;
MPRINT(EM_DIAGRAM):   else do;
102669    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
102670    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
102671    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
102672    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
102673    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
102674    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102675    +         end;
MPRINT(EM_DIAGRAM):   end;
102676    +      end;
MPRINT(EM_DIAGRAM):   end;
102677    +   end;
MPRINT(EM_DIAGRAM):   end;
102678    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
102679    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
102680    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
102681    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
102682    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
102683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102685    +   end;
MPRINT(EM_DIAGRAM):   end;
102686    +end;
MPRINT(EM_DIAGRAM):   end;
102687    +
102688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102689    +*** Checking missing input Interval
102690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
102691    +
102692    +IF NMISS(
102693    +   AcceptedCmpTotal ,
102694    +   Age ,
102695    +   Frq ,
102696    +   Income ,
102697    +   Kidhome ,
102698    +   MntFishProducts ,
102699    +   MntFruits ,
102700    +   MntGoldProds ,
102701    +   MntSweetProducts ,
102702    +   MonthsAsCustomer ,
102703    +   NumDealsPurchases ,
102704    +   NumWebVisitsMonth ,
102705    +   RFMstat ,
102706    +   RMntFrq ,
102707    +   Recency ,
102708    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
102709    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
102710    +
102711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102712    +END;
MPRINT(EM_DIAGRAM):   END;
102713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102714    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
102715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102716    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102717    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
102718    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
102719    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
102720    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
102721    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
102722    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
102723    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
102724    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
102725    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
102726    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
102727    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
102728    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
102729    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
102730    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
102731    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
102732    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
102733    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
102734    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
102735    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
102736    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
102737    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
102738    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
102739    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
102740    +END;
MPRINT(EM_DIAGRAM):   END;
102741    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102742    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
102743    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
102744    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
102745    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
102746    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
102747    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
102748    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
102749    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
102750    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
102751    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
102752    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
102753    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
102754    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
102755    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
102756    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
102757    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
102758    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
102759    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
102760    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
102761    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
102762    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
102763    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
102764    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
102765    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
102766    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
102767    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
102768    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
102769    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
102770    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
102771    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
102772    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
102773    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
102774    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
102775    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
102776    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
102777    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
102778    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
102779    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
102780    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
102781    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
102782    +END;
MPRINT(EM_DIAGRAM):   END;
102783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102784    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
102785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102787    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
102788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102790    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
102791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102793    +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
102794    +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
102795    +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
102796    +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
102797    +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
102798    +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
102799    +          +     -0.6473961304074 * S_MonthsAsCustomer
102800    +          +     0.68960902951007 * S_NumDealsPurchases
102801    +          +    -0.03600585273268 * S_NumWebVisitsMonth
102802    +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
102803    +        S_RMntFrq  +    -0.37413569649471 * S_Recency
102804    +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
102805    +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
102806    +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
102807    +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
102808    +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
102809    +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
102810    +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
102811    +          +    -0.70674764548268 * S_MonthsAsCustomer
102812    +          +     0.03761139203619 * S_NumDealsPurchases
102813    +          +    -0.69359662485747 * S_NumWebVisitsMonth
102814    +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
102815    +        S_RMntFrq  +    -1.62720417424557 * S_Recency
102816    +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
102817    +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
102818    +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
102819    +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
102820    +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
102821    +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
102822    +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
102823    +          +    -0.47559913836984 * S_MonthsAsCustomer
102824    +          +    -0.26961781245749 * S_NumDealsPurchases
102825    +          +    -0.67017962977412 * S_NumWebVisitsMonth
102826    +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
102827    +        S_RMntFrq  +     0.67120737584665 * S_Recency
102828    +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
102829    +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
102830    +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
102831    +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
102832    +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
102833    +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
102834    +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
102835    +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
102836    +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
102837    +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
102838    +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
102839    +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
102840    +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
102841    +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
102842    +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
102843    +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
102844    +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
102845    +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
102846    +        EducationGraduation  +     0.46172475127934 * EducationMaster
102847    +          +    -0.18858032329482 * Marital_StatusDivorced
102848    +          +     0.16067956508072 * Marital_StatusMarried
102849    +          +    -0.90926406046237 * Marital_StatusSingle
102850    +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
102851    +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
102852    +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
102853    +        EducationGraduation  +    -0.74629011053947 * EducationMaster
102854    +          +     0.71998738170149 * Marital_StatusDivorced
102855    +          +    -1.53543515752013 * Marital_StatusMarried
102856    +          +     0.44068743694663 * Marital_StatusSingle
102857    +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
102858    +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
102859    +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
102860    +        EducationGraduation  +     0.11252156068047 * EducationMaster
102861    +          +    -0.31683932084863 * Marital_StatusDivorced
102862    +          +     0.17674162427585 * Marital_StatusMarried
102863    +          +    -0.67064017247711 * Marital_StatusSingle
102864    +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
102865    +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
102866    +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
102867    +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
102868    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
102869    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
102870    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
102871    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
102872    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
102873    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
102874    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
102875    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
102876    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
102877    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
102878    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
102879    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
102880    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
102881    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
102882    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
102883    +END;
MPRINT(EM_DIAGRAM):   END;
102884    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102885    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
102886    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
102887    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
102888    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
102889    +END;
MPRINT(EM_DIAGRAM):   END;
102890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102891    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
102892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102893    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102894    +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
102895    +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
102896    +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
102897    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
102898    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
102899    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
102900    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
102901    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
102902    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
102903    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
102904    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
102905    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
102906    +END;
MPRINT(EM_DIAGRAM):   END;
102907    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102908    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
102909    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
102910    +END;
MPRINT(EM_DIAGRAM):   END;
102911    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
102912    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
102913    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
102914    +END;
MPRINT(EM_DIAGRAM):   END;
102915    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102916    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
102917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102918    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
102919    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
102920    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
102921    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
102922    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
102923    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
102924    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
102925    +END;
MPRINT(EM_DIAGRAM):   END;
102926    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102927    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
102928    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102929    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102930     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102931     quit;
102932     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102933     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102934     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102935     retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
102936     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102938     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102939     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102940     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102941     proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME 
CREATOR);
102942     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102944     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102945     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102946     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102947     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102948     proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
102949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102950     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102953     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102954     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102955     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102956     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102957     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102958     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102958   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1075 rows and 5 columns.

102959     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102960     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
102961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1075 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1075 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102962     filename _pref
102962   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
102963     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
102964     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
102965    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102966    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
102967    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102968    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
102969    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
102970    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102971     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
102972     quit;
102973     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
102974     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
102975     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
102976     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
102977     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
102978     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102979     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
102980     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102981     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102982     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
102983     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102984     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102985     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102986     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
102987     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
102988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102989     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
102990     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

102991     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
102992     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102993     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

102994     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
102995     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
102996     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
102997     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

102998     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
102999     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
102999   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

103000     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103001     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
103002     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103003     filename _pref
103003   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
103004     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103005     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
103006    +
103007    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
103008    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
103008   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
103009    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
103010    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
103011    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
103012    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
103013    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103014     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103015     quit;
103016     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103017     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103018     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103019     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
103020     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103021     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103022     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103023     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103024     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103025     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
103026     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103027     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103028     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103029     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103030     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103031     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103032     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
103033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103034     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103035     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103037     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103038     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103039     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103040     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103041     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103042     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103042   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

103043     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103044     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
103045     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1118 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103046     filename _pref
103046   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
103047     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103048     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
103049    +
103050    +
103051    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
103052    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
103053    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
103054    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
103055    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
103056    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103057    +
103058    +
103059    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
103060    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
103061    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
103062    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
103063    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
103064    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103065    +
103066    +
103067    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
103068    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
103069    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
103070    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
103071    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
103072    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103073    +
103074    +
103075    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
103076    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
103077    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
103078    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
103079    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
103080    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103081    +
103082    +
103083    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
103084    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
103085    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
103086    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
103087    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
103088    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103089    +
103090    +
103091    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
103092    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
103093    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
103094    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
103095    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
103096    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103097    +
103098    +
103099    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
103100    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
103101    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
103102    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
103103    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
103104    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103105    +
103106    +
103107    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
103108    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
103109    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
103110    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
103111    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
103112    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
103113    +if
103114    +_FILTERNORM1 not in ( '.')
103115    + and
103116    +_FILTERNORM2 not in ( '.')
103117    + and
103118    +_FILTERNORM3 not in ( '.')
103119    + and
103120    +_FILTERNORM4 not in ( '.')
103121    + and
103122    +_FILTERNORM5 not in ( '.')
103123    + and
103124    +_FILTERNORM6 not in ( '.')
103125    + and
103126    +_FILTERNORM7 not in ( ' ')
103127    + and
103128    +_FILTERNORM8 not in ( ' ')
103129    +and
103130    +( Dt_Customer ne .)
103131    +and ( Income ne . and (Income<=107000))
103132    +and ( Kidhome ne .)
103133    +and ( MntFishProducts ne .)
103134    +and ( MntFruits ne .)
103135    +and ( MntGoldProds ne .)
103136    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
103137    +and ( MntSweetProducts ne .)
103138    +and ( MntWines ne .)
103139    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
103140    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
103141    +and ( NumStorePurchases ne .)
103142    +and ( NumWebPurchases ne .)
103143    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
103144    +and ( Recency ne .)
103145    +and ( Teenhome ne .)
103146    +and ( Year_Birth ne .)
103147    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
103148    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
103149    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
103150    +end;
MPRINT(EM_DIAGRAM):   end;
103151    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
103152    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103153     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103154     quit;
103155     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103156     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103157     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103158     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
103159     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103160     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103161     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103162     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103163     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103164     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
103165     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103166     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103167     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103168     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103169     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103170     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103171     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
103172     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103173     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103174     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103175     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103176     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103177     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103178     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103179     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103180     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103181     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103181   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

103182     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103183     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
103184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103185     %macro varDept(fcmpdata=,id=);
103186     %global nobs&id scoreFlag&id;
103187     %let scoreFlag&id = 0;
103188     %if &id=1 or ^&fcmpStart %then %do;
103189     proc sort data=&fcmpdata out=_temp&id nodupkey;
103190     by NAME;
103191     where id=&id and LHS in( %let j=1;
103192     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
103193     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
103194     "&var" %let j = %eval(&j+1);
103195     %end;
103196     );
103197     run;
103198     %let dsid = %sysfunc(open(_temp&id));
103199     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103200     %let dsid = %sysfunc(close(&dsid));
103201     %if &&nobs&id %then %do;
103202     %let scoreFlag&id = 1;
103203     %let fcmpStart = 1;
103204     %end;
103205     %else %let fcmpStart = 0;
103206     %end;
103207     %else %do;
103208     proc sort data=&fcmpdata out=_tempid;
103209     where id=&id;
103210     by LHS;
103211     run;
103212     %let dsid = %sysfunc(open(_tempid));
103213     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103214     %let dsid = %sysfunc(close(&dsid));
103215     %if ^&&nobs&id %then %do;
103216     proc datasets lib=work nolist;
103217     delete _tempid;
103218     run;
103219     quit;
103220     %end;
103221     %else %do;
103222     data _tempAll;
103223     set %let j=%eval(&id-1);
103224     %do x=1 %to &j;
103225     %if &&nobs&x %then %do;
103226     _temp&x %end;
103227     %end;
103228     ;
103229     run;
103230     proc sql;
103231     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
103231   ! work._tempid p2 where p.name=p2.lhs;
103232     quit;
103233     data _temp&id;
103234     set _temp&id;
103235     where LHS ne '' and NAME ne '' and Node ne '';
103236     run;
103237     proc datasets lib=work nolist;
103238     delete _tempAll;
103239     run;
103240     %let dsid = %sysfunc(open(_temp&id));
103241     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103242     %let dsid = %sysfunc(close(&dsid));
103243     %if ^&&nobs&id %then %do;
103244     proc datasets lib=work nolist;
103245     delete _temp&id;
103246     run;
103247     quit;
103248     %end;
103249     %else %do;
103250     %let scoreFlag&id = 1;
103251     data _temp&id;
103252     set _temp&id;
103253     where LHS ne NAME and node ne '';
103254     run;
103255     %let dsid = %sysfunc(open(_temp&id));
103256     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
103257     %let dsid = %sysfunc(close(&dsid));
103258     %if ^&&nobs&id %then %do;
103259     proc datasets lib=work nolist;
103260     delete _temp&id;
103261     run;
103262     quit;
103263     %end;
103264     %else %do;
103265     proc sort data=_temp&id nodupkey;
103266     by LHS NAME;
103267     run;
103268     %end;
103269     %end;
103270     %end;
103271     %end;
103272     %mend varDept;
103273     %macro optCode(outdata=fcmpdata);
103274     %global fcmpStart;
103275     %let fcmpStart = 0;
103276     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
103277     %let NumNodes=9;
103278     %do k=1 %to &NumNodes;
103279     %vardept(fcmpdata=&outdata, id=&k);
103280     %end;
103281     %mend optCode;
103282     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 118 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

103283     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
103284     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
103285     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
103286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103287     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
103288     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
103289     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
103290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103291     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103292     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
103292   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

103293     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103294     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
103295     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
103296     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103297     filename _pref
103297   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
103298     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103299     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
103300    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103301    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
103302    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103303    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
103304    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
103305    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
103306    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
103307    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
103308    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
103309    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
103310    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
103311    +LENGTH _WARN_ $4
103312    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
103313    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
103314    +
103315    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
103316    +
103317    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
103318    +
103319    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
103320    +
103321    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
103322    +
103323    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
103324    +
103325    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
103326    +
103327    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
103328    +
103329    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
103330    +
103331    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
103332    +
103333    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
103334    +
103335    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
103336    +
103337    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
103338    +
103339    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
103340    +
103341    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
103342    +
103343    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
103344    +
103345    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
103346    +
103347    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
103348    +
103349    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
103350    +
103351    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
103352    +
103353    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
103354    +
103355    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
103356    +
103357    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
103358    +
103359    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
103360    +
103361    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
103362    +
103363    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
103364    +
103365    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
103366    +
103367    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
103368    +
103369    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
103370    +
103371    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
103372    +
103373    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
103374    +
103375    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
103376    +
103377    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
103378    +
103379    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
103380    +
103381    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
103382    +
103383    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
103384    +
103385    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
103386    +
103387    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
103388    +
103389    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
103390    +
103391    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
103392    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
103393    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
103394    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
103395    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103396    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103397    +end;
MPRINT(EM_DIAGRAM):   end;
103398    +else do;
MPRINT(EM_DIAGRAM):   else do;
103399    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103400    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
103401    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103402    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103403    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
103404    +   end;
MPRINT(EM_DIAGRAM):   end;
103405    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103406    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
103407    +   end;
MPRINT(EM_DIAGRAM):   end;
103408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103409    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
103410    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103411    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103412    +   end;
MPRINT(EM_DIAGRAM):   end;
103413    +end;
MPRINT(EM_DIAGRAM):   end;
103414    +
103415    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
103416    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
103417    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
103418    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
103419    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103420    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103421    +end;
MPRINT(EM_DIAGRAM):   end;
103422    +else do;
MPRINT(EM_DIAGRAM):   else do;
103423    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103424    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
103425    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103426    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103427    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
103428    +   end;
MPRINT(EM_DIAGRAM):   end;
103429    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103430    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
103431    +   end;
MPRINT(EM_DIAGRAM):   end;
103432    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103433    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
103434    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103435    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103436    +   end;
MPRINT(EM_DIAGRAM):   end;
103437    +end;
MPRINT(EM_DIAGRAM):   end;
103438    +
103439    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
103440    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
103441    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
103442    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
103443    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103444    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103445    +end;
MPRINT(EM_DIAGRAM):   end;
103446    +else do;
MPRINT(EM_DIAGRAM):   else do;
103447    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103448    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
103449    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103450    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103451    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
103452    +   end;
MPRINT(EM_DIAGRAM):   end;
103453    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103454    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
103455    +   end;
MPRINT(EM_DIAGRAM):   end;
103456    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103457    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
103458    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103459    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103460    +   end;
MPRINT(EM_DIAGRAM):   end;
103461    +end;
MPRINT(EM_DIAGRAM):   end;
103462    +
103463    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
103464    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
103465    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
103466    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
103467    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103468    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103469    +end;
MPRINT(EM_DIAGRAM):   end;
103470    +else do;
MPRINT(EM_DIAGRAM):   else do;
103471    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103472    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
103473    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103474    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103475    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
103476    +   end;
MPRINT(EM_DIAGRAM):   end;
103477    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103478    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
103479    +   end;
MPRINT(EM_DIAGRAM):   end;
103480    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103481    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
103482    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103483    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103484    +   end;
MPRINT(EM_DIAGRAM):   end;
103485    +end;
MPRINT(EM_DIAGRAM):   end;
103486    +
103487    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
103488    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
103489    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
103490    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
103491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103493    +end;
MPRINT(EM_DIAGRAM):   end;
103494    +else do;
MPRINT(EM_DIAGRAM):   else do;
103495    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103496    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
103497    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103498    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103499    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
103500    +   end;
MPRINT(EM_DIAGRAM):   end;
103501    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103502    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
103503    +   end;
MPRINT(EM_DIAGRAM):   end;
103504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103505    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
103506    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103507    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103508    +   end;
MPRINT(EM_DIAGRAM):   end;
103509    +end;
MPRINT(EM_DIAGRAM):   end;
103510    +
103511    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
103512    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
103513    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
103514    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
103515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103517    +end;
MPRINT(EM_DIAGRAM):   end;
103518    +else do;
MPRINT(EM_DIAGRAM):   else do;
103519    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103520    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
103521    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103522    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
103523    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
103524    +   end;
MPRINT(EM_DIAGRAM):   end;
103525    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
103526    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
103527    +   end;
MPRINT(EM_DIAGRAM):   end;
103528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103529    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
103530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103532    +   end;
MPRINT(EM_DIAGRAM):   end;
103533    +end;
MPRINT(EM_DIAGRAM):   end;
103534    +
103535    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
103536    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
103537    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
103538    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
103539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103541    +end;
MPRINT(EM_DIAGRAM):   end;
103542    +else do;
MPRINT(EM_DIAGRAM):   else do;
103543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
103544    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
103545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103546    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
103547    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
103548    +   end;
MPRINT(EM_DIAGRAM):   end;
103549    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
103550    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
103551    +   end;
MPRINT(EM_DIAGRAM):   end;
103552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103553    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
103554    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103555    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103556    +   end;
MPRINT(EM_DIAGRAM):   end;
103557    +end;
MPRINT(EM_DIAGRAM):   end;
103558    +
103559    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
103560    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
103561    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103562    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
103563    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
103564    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
103565    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
103566    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
103567    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
103568    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
103569    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
103570    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
103571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103573    +end;
MPRINT(EM_DIAGRAM):   end;
103574    +else do;
MPRINT(EM_DIAGRAM):   else do;
103575    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
103576    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
103577    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103578    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
103579    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
103580    +   end;
MPRINT(EM_DIAGRAM):   end;
103581    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
103582    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
103583    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
103584    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
103585    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
103586    +   end;
MPRINT(EM_DIAGRAM):   end;
103587    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
103588    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
103589    +   end;
MPRINT(EM_DIAGRAM):   end;
103590    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
103591    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
103592    +   end;
MPRINT(EM_DIAGRAM):   end;
103593    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
103594    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
103595    +   end;
MPRINT(EM_DIAGRAM):   end;
103596    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103597    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
103598    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
103599    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
103600    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
103601    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103602    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103603    +   end;
MPRINT(EM_DIAGRAM):   end;
103604    +end;
MPRINT(EM_DIAGRAM):   end;
103605    +
103606    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
103607    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
103608    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
103609    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103610    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
103611    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
103612    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
103613    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
103614    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
103615    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103616    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103617    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103618    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103621    +end;
MPRINT(EM_DIAGRAM):   end;
103622    +else do;
MPRINT(EM_DIAGRAM):   else do;
103623    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
103624    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
103625    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103626    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
103627    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
103628    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
103629    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
103630    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
103631    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103632    +         end;
MPRINT(EM_DIAGRAM):   end;
103633    +         else do;
MPRINT(EM_DIAGRAM):   else do;
103634    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
103635    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
103636    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103637    +            end;
MPRINT(EM_DIAGRAM):   end;
103638    +         end;
MPRINT(EM_DIAGRAM):   end;
103639    +      end;
MPRINT(EM_DIAGRAM):   end;
103640    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103641    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
103642    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
103643    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103644    +         end;
MPRINT(EM_DIAGRAM):   end;
103645    +      end;
MPRINT(EM_DIAGRAM):   end;
103646    +   end;
MPRINT(EM_DIAGRAM):   end;
103647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103648    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
103649    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
103650    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103651    +      end;
MPRINT(EM_DIAGRAM):   end;
103652    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103653    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
103654    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
103655    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
103656    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
103657    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
103658    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103659    +         end;
MPRINT(EM_DIAGRAM):   end;
103660    +      end;
MPRINT(EM_DIAGRAM):   end;
103661    +   end;
MPRINT(EM_DIAGRAM):   end;
103662    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
103663    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103664    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103665    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103666    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103669    +   end;
MPRINT(EM_DIAGRAM):   end;
103670    +end;
MPRINT(EM_DIAGRAM):   end;
103671    +
103672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103673    +*** Checking missing input Interval
103674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
103675    +
103676    +IF NMISS(
103677    +   AcceptedCmpTotal ,
103678    +   Age ,
103679    +   Frq ,
103680    +   Income ,
103681    +   Kidhome ,
103682    +   MntFishProducts ,
103683    +   MntFruits ,
103684    +   MntGoldProds ,
103685    +   MntSweetProducts ,
103686    +   MonthsAsCustomer ,
103687    +   NumDealsPurchases ,
103688    +   NumWebVisitsMonth ,
103689    +   RFMstat ,
103690    +   RMntFrq ,
103691    +   Recency ,
103692    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
103693    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
103694    +
103695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103696    +END;
MPRINT(EM_DIAGRAM):   END;
103697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103698    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
103699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103700    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103701    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103702    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
103703    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
103704    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103705    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103706    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
103707    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
103708    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
103709    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
103710    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103711    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
103712    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
103713    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
103714    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
103715    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
103716    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103717    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
103718    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103719    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
103720    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103721    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
103722    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103723    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103724    +END;
MPRINT(EM_DIAGRAM):   END;
103725    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103726    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
103727    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103728    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
103729    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
103730    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
103731    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
103732    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103733    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
103734    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103735    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
103736    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
103737    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
103738    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
103739    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
103740    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
103741    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
103742    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
103743    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
103744    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103745    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
103746    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
103747    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
103748    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
103749    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
103750    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
103751    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
103752    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
103753    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103754    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
103755    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
103756    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103757    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
103758    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
103759    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103760    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
103761    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
103762    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
103763    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103764    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
103765    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103766    +END;
MPRINT(EM_DIAGRAM):   END;
103767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103768    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
103769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103771    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
103772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103773    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103774    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
103775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103776    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103777    +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
103778    +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
103779    +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
103780    +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
103781    +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
103782    +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
103783    +          +     -0.1740957673716 * S_MonthsAsCustomer
103784    +          +     0.66565026405117 * S_NumDealsPurchases
103785    +          +     0.43247206282836 * S_NumWebVisitsMonth
103786    +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
103787    +        S_RMntFrq  +    -0.28002323732518 * S_Recency
103788    +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
103789    +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
103790    +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
103791    +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
103792    +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
103793    +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
103794    +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
103795    +          +    -0.06176784990963 * S_MonthsAsCustomer
103796    +          +    -0.11740415005833 * S_NumDealsPurchases
103797    +          +    -0.17084845478672 * S_NumWebVisitsMonth
103798    +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
103799    +        S_RMntFrq  +     0.54983271222574 * S_Recency
103800    +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
103801    +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
103802    +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
103803    +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
103804    +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
103805    +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
103806    +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
103807    +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
103808    +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
103809    +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
103810    +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
103811    +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
103812    +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
103813    +        EducationGraduation  +     0.22632282500966 * EducationMaster
103814    +          +     -0.0800438380883 * Marital_StatusDivorced
103815    +          +     0.44505766937623 * Marital_StatusMarried
103816    +          +    -0.57546515626468 * Marital_StatusSingle
103817    +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
103818    +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
103819    +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
103820    +        EducationGraduation  +      0.0794165981215 * EducationMaster
103821    +          +    -0.20291653465543 * Marital_StatusDivorced
103822    +          +     0.39547414450617 * Marital_StatusMarried
103823    +          +    -0.37001331184001 * Marital_StatusSingle
103824    +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
103825    +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
103826    +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
103827    +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
103828    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
103829    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
103830    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
103831    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
103832    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
103833    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
103834    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
103835    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
103836    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
103837    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
103838    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
103839    +END;
MPRINT(EM_DIAGRAM):   END;
103840    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103841    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
103842    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
103843    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
103844    +END;
MPRINT(EM_DIAGRAM):   END;
103845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103846    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
103847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103848    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103849    +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
103850    +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
103851    +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
103852    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
103853    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
103854    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
103855    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
103856    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
103857    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
103858    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
103859    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
103860    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
103861    +END;
MPRINT(EM_DIAGRAM):   END;
103862    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103863    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
103864    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
103865    +END;
MPRINT(EM_DIAGRAM):   END;
103866    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
103867    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
103868    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
103869    +END;
MPRINT(EM_DIAGRAM):   END;
103870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103871    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
103872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103873    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
103874    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
103875    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
103876    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
103877    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
103878    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
103879    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
103880    +END;
MPRINT(EM_DIAGRAM):   END;
103881    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103882    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
103883    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103884    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103885     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103886     quit;
103887     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103888     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103889     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103890     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
103891     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103893     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103896     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
103897     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103898     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103899     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103900     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103901     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103902     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103903     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
103904     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

103905     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103906     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103908     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103909     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103911     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103912     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103913     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103913   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 997 rows and 5 columns.

103914     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103915     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
103916     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 997 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 997 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103917     filename _pref
103917   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
103918     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103919     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
103920    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103921    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
103922    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103923    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
103924    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
103925    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103926     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103927     quit;
103928     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103929     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103930     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103931     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
103932     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103934     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103935     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103936     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103937     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
103938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103940     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103941     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103942     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103944     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
103945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103946     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103947     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103949     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103950     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103952     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103953     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103954     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103954   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

103955     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103956     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
103957     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1001 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103958     filename _pref
103958   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
103959     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
103960     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
103961    +
103962    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
103963    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
103963   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
103964    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
103965    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
103966    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
103967    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
103968    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
103969     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
103970     quit;
103971     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
103972     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
103973     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
103974     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
103975     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
103976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

103977     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
103978     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103980     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
103981     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103982     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103983     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103984     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
103985     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
103986     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103987     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
103988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103989     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
103990     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103991     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

103992     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
103993     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
103994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
103995     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

103996     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
103997     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
103997   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

103998     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

103999     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
104000     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104001     filename _pref
104001   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
104002     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104003     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
104004    +
104005    +
104006    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
104007    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
104008    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
104009    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
104010    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
104011    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104012    +
104013    +
104014    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
104015    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
104016    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
104017    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
104018    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
104019    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104020    +
104021    +
104022    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
104023    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
104024    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
104025    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
104026    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
104027    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104028    +
104029    +
104030    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
104031    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
104032    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
104033    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
104034    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
104035    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104036    +
104037    +
104038    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
104039    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
104040    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
104041    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
104042    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
104043    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104044    +
104045    +
104046    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
104047    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
104048    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
104049    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
104050    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
104051    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104052    +
104053    +
104054    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
104055    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
104056    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
104057    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
104058    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
104059    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104060    +
104061    +
104062    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
104063    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
104064    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
104065    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
104066    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
104067    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104068    +if
104069    +_FILTERNORM1 not in ( '.')
104070    + and
104071    +_FILTERNORM2 not in ( '.')
104072    + and
104073    +_FILTERNORM3 not in ( '.')
104074    + and
104075    +_FILTERNORM4 not in ( '.')
104076    + and
104077    +_FILTERNORM5 not in ( '.')
104078    + and
104079    +_FILTERNORM6 not in ( '.')
104080    + and
104081    +_FILTERNORM7 not in ( ' ')
104082    + and
104083    +_FILTERNORM8 not in ( ' ')
104084    +and
104085    +( Dt_Customer ne .)
104086    +and ( Income ne . and (Income<=107000))
104087    +and ( Kidhome ne .)
104088    +and ( MntFishProducts ne .)
104089    +and ( MntFruits ne .)
104090    +and ( MntGoldProds ne .)
104091    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
104092    +and ( MntSweetProducts ne .)
104093    +and ( MntWines ne .)
104094    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
104095    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
104096    +and ( NumStorePurchases ne .)
104097    +and ( NumWebPurchases ne .)
104098    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
104099    +and ( Recency ne .)
104100    +and ( Teenhome ne .)
104101    +and ( Year_Birth ne .)
104102    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
104103    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
104104    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
104105    +end;
MPRINT(EM_DIAGRAM):   end;
104106    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
104107    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104108     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104109     quit;
104110     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104111     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104112     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104113     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
104114     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104116     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104119     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
104120     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104122     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104123     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104124     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104126     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
104127     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104128     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104129     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104131     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104132     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104134     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104135     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104136     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104136   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

104137     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104138     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
104139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1106 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104140     %macro varDept(fcmpdata=,id=);
104141     %global nobs&id scoreFlag&id;
104142     %let scoreFlag&id = 0;
104143     %if &id=1 or ^&fcmpStart %then %do;
104144     proc sort data=&fcmpdata out=_temp&id nodupkey;
104145     by NAME;
104146     where id=&id and LHS in( %let j=1;
104147     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
104148     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
104149     "&var" %let j = %eval(&j+1);
104150     %end;
104151     );
104152     run;
104153     %let dsid = %sysfunc(open(_temp&id));
104154     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104155     %let dsid = %sysfunc(close(&dsid));
104156     %if &&nobs&id %then %do;
104157     %let scoreFlag&id = 1;
104158     %let fcmpStart = 1;
104159     %end;
104160     %else %let fcmpStart = 0;
104161     %end;
104162     %else %do;
104163     proc sort data=&fcmpdata out=_tempid;
104164     where id=&id;
104165     by LHS;
104166     run;
104167     %let dsid = %sysfunc(open(_tempid));
104168     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104169     %let dsid = %sysfunc(close(&dsid));
104170     %if ^&&nobs&id %then %do;
104171     proc datasets lib=work nolist;
104172     delete _tempid;
104173     run;
104174     quit;
104175     %end;
104176     %else %do;
104177     data _tempAll;
104178     set %let j=%eval(&id-1);
104179     %do x=1 %to &j;
104180     %if &&nobs&x %then %do;
104181     _temp&x %end;
104182     %end;
104183     ;
104184     run;
104185     proc sql;
104186     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
104186   ! work._tempid p2 where p.name=p2.lhs;
104187     quit;
104188     data _temp&id;
104189     set _temp&id;
104190     where LHS ne '' and NAME ne '' and Node ne '';
104191     run;
104192     proc datasets lib=work nolist;
104193     delete _tempAll;
104194     run;
104195     %let dsid = %sysfunc(open(_temp&id));
104196     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104197     %let dsid = %sysfunc(close(&dsid));
104198     %if ^&&nobs&id %then %do;
104199     proc datasets lib=work nolist;
104200     delete _temp&id;
104201     run;
104202     quit;
104203     %end;
104204     %else %do;
104205     %let scoreFlag&id = 1;
104206     data _temp&id;
104207     set _temp&id;
104208     where LHS ne NAME and node ne '';
104209     run;
104210     %let dsid = %sysfunc(open(_temp&id));
104211     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
104212     %let dsid = %sysfunc(close(&dsid));
104213     %if ^&&nobs&id %then %do;
104214     proc datasets lib=work nolist;
104215     delete _temp&id;
104216     run;
104217     quit;
104218     %end;
104219     %else %do;
104220     proc sort data=_temp&id nodupkey;
104221     by LHS NAME;
104222     run;
104223     %end;
104224     %end;
104225     %end;
104226     %end;
104227     %mend varDept;
104228     %macro optCode(outdata=fcmpdata);
104229     %global fcmpStart;
104230     %let fcmpStart = 0;
104231     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
104232     %let NumNodes=9;
104233     %do k=1 %to &NumNodes;
104234     %vardept(fcmpdata=&outdata, id=&k);
104235     %end;
104236     %mend optCode;
104237     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 115 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.23 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

104238     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
104239     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
104240     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
104241     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104242     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
104243     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
104244     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
104245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104246     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104247     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
104247   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

104248     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104249     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
104250     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
104251     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104252     filename _pref
104252   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
104253     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104254     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
104255    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104256    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
104257    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104258    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
104259    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
104260    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
104261    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
104262    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
104263    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
104264    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
104265    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
104266    +LENGTH _WARN_ $4
104267    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
104268    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
104269    +
104270    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
104271    +
104272    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
104273    +
104274    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
104275    +
104276    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
104277    +
104278    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
104279    +
104280    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
104281    +
104282    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
104283    +
104284    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
104285    +
104286    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
104287    +
104288    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
104289    +
104290    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
104291    +
104292    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
104293    +
104294    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
104295    +
104296    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
104297    +
104298    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
104299    +
104300    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
104301    +
104302    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
104303    +
104304    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
104305    +
104306    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
104307    +
104308    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
104309    +
104310    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
104311    +
104312    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
104313    +
104314    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
104315    +
104316    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
104317    +
104318    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
104319    +
104320    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
104321    +
104322    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
104323    +
104324    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
104325    +
104326    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
104327    +
104328    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
104329    +
104330    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
104331    +
104332    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
104333    +
104334    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
104335    +
104336    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
104337    +
104338    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
104339    +
104340    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
104341    +
104342    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
104343    +
104344    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
104345    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
104346    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
104347    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
104348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104350    +end;
MPRINT(EM_DIAGRAM):   end;
104351    +else do;
MPRINT(EM_DIAGRAM):   else do;
104352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104353    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
104354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104355    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104356    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
104357    +   end;
MPRINT(EM_DIAGRAM):   end;
104358    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104359    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
104360    +   end;
MPRINT(EM_DIAGRAM):   end;
104361    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104362    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
104363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104365    +   end;
MPRINT(EM_DIAGRAM):   end;
104366    +end;
MPRINT(EM_DIAGRAM):   end;
104367    +
104368    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
104369    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
104370    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
104371    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
104372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104374    +end;
MPRINT(EM_DIAGRAM):   end;
104375    +else do;
MPRINT(EM_DIAGRAM):   else do;
104376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104377    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
104378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104379    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104380    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
104381    +   end;
MPRINT(EM_DIAGRAM):   end;
104382    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104383    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
104384    +   end;
MPRINT(EM_DIAGRAM):   end;
104385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104386    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
104387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104389    +   end;
MPRINT(EM_DIAGRAM):   end;
104390    +end;
MPRINT(EM_DIAGRAM):   end;
104391    +
104392    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
104393    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
104394    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
104395    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
104396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104398    +end;
MPRINT(EM_DIAGRAM):   end;
104399    +else do;
MPRINT(EM_DIAGRAM):   else do;
104400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104401    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
104402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104403    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104404    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
104405    +   end;
MPRINT(EM_DIAGRAM):   end;
104406    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104407    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
104408    +   end;
MPRINT(EM_DIAGRAM):   end;
104409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104410    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
104411    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104412    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104413    +   end;
MPRINT(EM_DIAGRAM):   end;
104414    +end;
MPRINT(EM_DIAGRAM):   end;
104415    +
104416    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
104417    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
104418    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
104419    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
104420    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104421    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104422    +end;
MPRINT(EM_DIAGRAM):   end;
104423    +else do;
MPRINT(EM_DIAGRAM):   else do;
104424    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104425    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
104426    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104427    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104428    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
104429    +   end;
MPRINT(EM_DIAGRAM):   end;
104430    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104431    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
104432    +   end;
MPRINT(EM_DIAGRAM):   end;
104433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104434    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
104435    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104436    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104437    +   end;
MPRINT(EM_DIAGRAM):   end;
104438    +end;
MPRINT(EM_DIAGRAM):   end;
104439    +
104440    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
104441    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
104442    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
104443    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
104444    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104445    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104446    +end;
MPRINT(EM_DIAGRAM):   end;
104447    +else do;
MPRINT(EM_DIAGRAM):   else do;
104448    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104449    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
104450    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104451    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104452    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
104453    +   end;
MPRINT(EM_DIAGRAM):   end;
104454    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104455    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
104456    +   end;
MPRINT(EM_DIAGRAM):   end;
104457    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104458    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
104459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104461    +   end;
MPRINT(EM_DIAGRAM):   end;
104462    +end;
MPRINT(EM_DIAGRAM):   end;
104463    +
104464    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
104465    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
104466    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
104467    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
104468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104470    +end;
MPRINT(EM_DIAGRAM):   end;
104471    +else do;
MPRINT(EM_DIAGRAM):   else do;
104472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104473    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
104474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104475    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
104476    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
104477    +   end;
MPRINT(EM_DIAGRAM):   end;
104478    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
104479    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
104480    +   end;
MPRINT(EM_DIAGRAM):   end;
104481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104482    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
104483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104485    +   end;
MPRINT(EM_DIAGRAM):   end;
104486    +end;
MPRINT(EM_DIAGRAM):   end;
104487    +
104488    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
104489    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
104490    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
104491    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
104492    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104494    +end;
MPRINT(EM_DIAGRAM):   end;
104495    +else do;
MPRINT(EM_DIAGRAM):   else do;
104496    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
104497    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
104498    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104499    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
104500    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
104501    +   end;
MPRINT(EM_DIAGRAM):   end;
104502    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
104503    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
104504    +   end;
MPRINT(EM_DIAGRAM):   end;
104505    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104506    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
104507    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104508    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104509    +   end;
MPRINT(EM_DIAGRAM):   end;
104510    +end;
MPRINT(EM_DIAGRAM):   end;
104511    +
104512    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
104513    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
104514    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
104515    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
104516    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
104517    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
104518    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
104519    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
104520    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
104521    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
104522    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
104523    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
104524    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104525    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104526    +end;
MPRINT(EM_DIAGRAM):   end;
104527    +else do;
MPRINT(EM_DIAGRAM):   else do;
104528    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
104529    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
104530    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104531    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
104532    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
104533    +   end;
MPRINT(EM_DIAGRAM):   end;
104534    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
104535    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
104536    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
104537    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
104538    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
104539    +   end;
MPRINT(EM_DIAGRAM):   end;
104540    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
104541    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
104542    +   end;
MPRINT(EM_DIAGRAM):   end;
104543    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
104544    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
104545    +   end;
MPRINT(EM_DIAGRAM):   end;
104546    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
104547    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
104548    +   end;
MPRINT(EM_DIAGRAM):   end;
104549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104550    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
104551    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
104552    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
104553    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
104554    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104555    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104556    +   end;
MPRINT(EM_DIAGRAM):   end;
104557    +end;
MPRINT(EM_DIAGRAM):   end;
104558    +
104559    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
104560    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
104561    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
104562    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
104563    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
104564    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
104565    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
104566    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
104567    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
104568    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104569    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104570    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104571    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104572    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104573    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104574    +end;
MPRINT(EM_DIAGRAM):   end;
104575    +else do;
MPRINT(EM_DIAGRAM):   else do;
104576    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
104577    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
104578    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104579    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
104580    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
104581    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
104582    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
104583    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
104584    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104585    +         end;
MPRINT(EM_DIAGRAM):   end;
104586    +         else do;
MPRINT(EM_DIAGRAM):   else do;
104587    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
104588    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
104589    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104590    +            end;
MPRINT(EM_DIAGRAM):   end;
104591    +         end;
MPRINT(EM_DIAGRAM):   end;
104592    +      end;
MPRINT(EM_DIAGRAM):   end;
104593    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104594    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
104595    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
104596    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104597    +         end;
MPRINT(EM_DIAGRAM):   end;
104598    +      end;
MPRINT(EM_DIAGRAM):   end;
104599    +   end;
MPRINT(EM_DIAGRAM):   end;
104600    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104601    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
104602    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
104603    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104604    +      end;
MPRINT(EM_DIAGRAM):   end;
104605    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104606    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
104607    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
104608    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
104609    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
104610    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
104611    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104612    +         end;
MPRINT(EM_DIAGRAM):   end;
104613    +      end;
MPRINT(EM_DIAGRAM):   end;
104614    +   end;
MPRINT(EM_DIAGRAM):   end;
104615    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
104616    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104617    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104618    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104619    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104620    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104621    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104622    +   end;
MPRINT(EM_DIAGRAM):   end;
104623    +end;
MPRINT(EM_DIAGRAM):   end;
104624    +
104625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104626    +*** Checking missing input Interval
104627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
104628    +
104629    +IF NMISS(
104630    +   AcceptedCmpTotal ,
104631    +   Age ,
104632    +   Frq ,
104633    +   Income ,
104634    +   Kidhome ,
104635    +   MntFishProducts ,
104636    +   MntFruits ,
104637    +   MntGoldProds ,
104638    +   MntSweetProducts ,
104639    +   MonthsAsCustomer ,
104640    +   NumDealsPurchases ,
104641    +   NumWebVisitsMonth ,
104642    +   RFMstat ,
104643    +   RMntFrq ,
104644    +   Recency ,
104645    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
104646    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
104647    +
104648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104649    +END;
MPRINT(EM_DIAGRAM):   END;
104650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104651    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
104652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104653    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104654    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104655    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
104656    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
104657    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104658    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104659    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
104660    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
104661    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
104662    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
104663    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104664    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
104665    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
104666    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
104667    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
104668    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
104669    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104670    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
104671    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104672    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
104673    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104674    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
104675    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104676    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104677    +END;
MPRINT(EM_DIAGRAM):   END;
104678    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104679    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
104680    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104681    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
104682    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
104683    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
104684    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
104685    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104686    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
104687    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104688    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
104689    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
104690    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
104691    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
104692    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
104693    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
104694    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
104695    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
104696    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
104697    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104698    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
104699    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
104700    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
104701    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
104702    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
104703    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
104704    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
104705    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
104706    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104707    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
104708    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
104709    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104710    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
104711    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
104712    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104713    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
104714    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
104715    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
104716    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104717    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
104718    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104719    +END;
MPRINT(EM_DIAGRAM):   END;
104720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104721    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
104722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104724    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
104725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104727    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
104728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104729    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104730    +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
104731    +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
104732    +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
104733    +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
104734    +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
104735    +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
104736    +          +     0.07696704519183 * S_MonthsAsCustomer
104737    +          +     0.06885982009617 * S_NumDealsPurchases
104738    +          +     0.18284147478918 * S_NumWebVisitsMonth
104739    +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
104740    +        S_RMntFrq  +    -0.65651411558717 * S_Recency
104741    +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
104742    +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
104743    +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
104744    +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
104745    +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
104746    +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
104747    +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
104748    +          +     0.19400730773464 * S_MonthsAsCustomer
104749    +          +    -1.36455521037197 * S_NumDealsPurchases
104750    +          +    -1.07068059346196 * S_NumWebVisitsMonth
104751    +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
104752    +        S_RMntFrq  +     1.36066079800227 * S_Recency
104753    +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
104754    +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
104755    +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
104756    +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
104757    +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
104758    +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
104759    +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
104760    +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
104761    +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
104762    +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
104763    +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
104764    +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
104765    +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
104766    +        EducationGraduation  +    -0.13796568916415 * EducationMaster
104767    +          +     0.23432241402098 * Marital_StatusDivorced
104768    +          +    -0.46302700269027 * Marital_StatusMarried
104769    +          +      0.4032168653504 * Marital_StatusSingle
104770    +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
104771    +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
104772    +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
104773    +        EducationGraduation  +     -0.3917553423088 * EducationMaster
104774    +          +    -0.31347503340603 * Marital_StatusDivorced
104775    +          +    -0.20319530959178 * Marital_StatusMarried
104776    +          +     0.48298350411196 * Marital_StatusSingle
104777    +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
104778    +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
104779    +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
104780    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
104781    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
104782    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
104783    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
104784    +END;
MPRINT(EM_DIAGRAM):   END;
104785    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104786    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
104787    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
104788    +END;
MPRINT(EM_DIAGRAM):   END;
104789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104790    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
104791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104793    +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
104794    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
104795    +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
104796    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
104797    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
104798    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
104799    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
104800    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
104801    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
104802    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
104803    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
104804    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
104805    +END;
MPRINT(EM_DIAGRAM):   END;
104806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104807    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
104808    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
104809    +END;
MPRINT(EM_DIAGRAM):   END;
104810    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
104811    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
104812    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
104813    +END;
MPRINT(EM_DIAGRAM):   END;
104814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104815    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
104816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104817    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
104818    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
104819    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
104820    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
104821    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
104822    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
104823    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
104824    +END;
MPRINT(EM_DIAGRAM):   END;
104825    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104826    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
104827    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104828    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104829     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104830     quit;
104831     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104832     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104833     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104834     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
104835     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104837     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104839     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104840     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
104841     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104843     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104844     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104845     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104847     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
104848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104849     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104851     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104852     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104853     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104854     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104855     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104856     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104857     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104857   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 936 rows and 5 columns.

104858     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104859     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
104860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 936 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 936 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104861     filename _pref
104861   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
104862     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104863     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
104864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104865    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
104866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104867    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
104868    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
104869    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104870     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104871     quit;
104872     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104873     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104874     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104875     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
104876     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104878     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104881     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
104882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104884     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104885     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104886     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104887     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

104888     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
104889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

104890     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104893     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104894     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104895     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104896     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104897     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104898     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104898   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

104899     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104900     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
104901     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104902     filename _pref
104902   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
104903     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104904     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
104905    +
104906    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
104907    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
104907   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
104908    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
104909    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
104910    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
104911    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
104912    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
104913     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
104914     quit;
104915     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
104916     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
104917     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
104918     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
104919     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
104920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104921     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
104922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104924     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
104925     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

104927     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104928     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
104929     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
104930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104931     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
104932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104933     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
104934     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104935     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104936     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
104937     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
104938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
104939     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104940     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
104941     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
104941   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

104942     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

104943     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
104944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 979 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

104945     filename _pref
104945   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
104946     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
104947     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
104948    +
104949    +
104950    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
104951    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
104952    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
104953    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
104954    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
104955    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104956    +
104957    +
104958    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
104959    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
104960    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
104961    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
104962    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
104963    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104964    +
104965    +
104966    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
104967    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
104968    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
104969    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
104970    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
104971    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104972    +
104973    +
104974    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
104975    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
104976    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
104977    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
104978    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
104979    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104980    +
104981    +
104982    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
104983    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
104984    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
104985    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
104986    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
104987    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104988    +
104989    +
104990    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
104991    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
104992    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
104993    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
104994    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
104995    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
104996    +
104997    +
104998    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
104999    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
105000    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
105001    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
105002    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
105003    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105004    +
105005    +
105006    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
105007    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
105008    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
105009    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
105010    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
105011    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105012    +if
105013    +_FILTERNORM1 not in ( '.')
105014    + and
105015    +_FILTERNORM2 not in ( '.')
105016    + and
105017    +_FILTERNORM3 not in ( '.')
105018    + and
105019    +_FILTERNORM4 not in ( '.')
105020    + and
105021    +_FILTERNORM5 not in ( '.')
105022    + and
105023    +_FILTERNORM6 not in ( '.')
105024    + and
105025    +_FILTERNORM7 not in ( ' ')
105026    + and
105027    +_FILTERNORM8 not in ( ' ')
105028    +and
105029    +( Dt_Customer ne .)
105030    +and ( Income ne . and (Income<=107000))
105031    +and ( Kidhome ne .)
105032    +and ( MntFishProducts ne .)
105033    +and ( MntFruits ne .)
105034    +and ( MntGoldProds ne .)
105035    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
105036    +and ( MntSweetProducts ne .)
105037    +and ( MntWines ne .)
105038    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
105039    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
105040    +and ( NumStorePurchases ne .)
105041    +and ( NumWebPurchases ne .)
105042    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
105043    +and ( Recency ne .)
105044    +and ( Teenhome ne .)
105045    +and ( Year_Birth ne .)
105046    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
105047    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
105048    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
105049    +end;
MPRINT(EM_DIAGRAM):   end;
105050    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
105051    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
105052     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
105053     quit;
105054     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
105055     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
105056     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
105057     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
105058     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
105059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105060     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
105061     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105063     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
105064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105066     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105067     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
105068     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
105069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105070     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
105071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

105072     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
105073     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105074     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105075     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105076     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
105077     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105078     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105079     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105080     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
105080   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

105081     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105082     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
105083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1045 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105084     %macro varDept(fcmpdata=,id=);
105085     %global nobs&id scoreFlag&id;
105086     %let scoreFlag&id = 0;
105087     %if &id=1 or ^&fcmpStart %then %do;
105088     proc sort data=&fcmpdata out=_temp&id nodupkey;
105089     by NAME;
105090     where id=&id and LHS in( %let j=1;
105091     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
105092     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
105093     "&var" %let j = %eval(&j+1);
105094     %end;
105095     );
105096     run;
105097     %let dsid = %sysfunc(open(_temp&id));
105098     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105099     %let dsid = %sysfunc(close(&dsid));
105100     %if &&nobs&id %then %do;
105101     %let scoreFlag&id = 1;
105102     %let fcmpStart = 1;
105103     %end;
105104     %else %let fcmpStart = 0;
105105     %end;
105106     %else %do;
105107     proc sort data=&fcmpdata out=_tempid;
105108     where id=&id;
105109     by LHS;
105110     run;
105111     %let dsid = %sysfunc(open(_tempid));
105112     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105113     %let dsid = %sysfunc(close(&dsid));
105114     %if ^&&nobs&id %then %do;
105115     proc datasets lib=work nolist;
105116     delete _tempid;
105117     run;
105118     quit;
105119     %end;
105120     %else %do;
105121     data _tempAll;
105122     set %let j=%eval(&id-1);
105123     %do x=1 %to &j;
105124     %if &&nobs&x %then %do;
105125     _temp&x %end;
105126     %end;
105127     ;
105128     run;
105129     proc sql;
105130     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
105130   ! work._tempid p2 where p.name=p2.lhs;
105131     quit;
105132     data _temp&id;
105133     set _temp&id;
105134     where LHS ne '' and NAME ne '' and Node ne '';
105135     run;
105136     proc datasets lib=work nolist;
105137     delete _tempAll;
105138     run;
105139     %let dsid = %sysfunc(open(_temp&id));
105140     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105141     %let dsid = %sysfunc(close(&dsid));
105142     %if ^&&nobs&id %then %do;
105143     proc datasets lib=work nolist;
105144     delete _temp&id;
105145     run;
105146     quit;
105147     %end;
105148     %else %do;
105149     %let scoreFlag&id = 1;
105150     data _temp&id;
105151     set _temp&id;
105152     where LHS ne NAME and node ne '';
105153     run;
105154     %let dsid = %sysfunc(open(_temp&id));
105155     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
105156     %let dsid = %sysfunc(close(&dsid));
105157     %if ^&&nobs&id %then %do;
105158     proc datasets lib=work nolist;
105159     delete _temp&id;
105160     run;
105161     quit;
105162     %end;
105163     %else %do;
105164     proc sort data=_temp&id nodupkey;
105165     by LHS NAME;
105166     run;
105167     %end;
105168     %end;
105169     %end;
105170     %end;
105171     %mend varDept;
105172     %macro optCode(outdata=fcmpdata);
105173     %global fcmpStart;
105174     %let fcmpStart = 0;
105175     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
105176     %let NumNodes=9;
105177     %do k=1 %to &NumNodes;
105178     %vardept(fcmpdata=&outdata, id=&k);
105179     %end;
105180     %mend optCode;
105181     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 112 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 29 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

105182     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
105183     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
105184     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
105185     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105186     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
105187     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
105188     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
105189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105190     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105191     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
105191   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

105192     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105193     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
105194     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
105195     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105196     filename _pref
105196   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
105197     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
105198     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
105199    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
105200    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
105201    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
105202    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
105203    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
105204    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
105205    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
105206    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
105207    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
105208    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
105209    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
105210    +LENGTH _WARN_ $4
105211    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
105212    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
105213    +
105214    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
105215    +
105216    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
105217    +
105218    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
105219    +
105220    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
105221    +
105222    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
105223    +
105224    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
105225    +
105226    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
105227    +
105228    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
105229    +
105230    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
105231    +
105232    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
105233    +
105234    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
105235    +
105236    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
105237    +
105238    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
105239    +
105240    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
105241    +
105242    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
105243    +
105244    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
105245    +
105246    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
105247    +
105248    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
105249    +
105250    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
105251    +
105252    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
105253    +
105254    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
105255    +
105256    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
105257    +
105258    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
105259    +
105260    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
105261    +
105262    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
105263    +
105264    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
105265    +
105266    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
105267    +
105268    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
105269    +
105270    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
105271    +
105272    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
105273    +
105274    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
105275    +
105276    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
105277    +
105278    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
105279    +
105280    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
105281    +
105282    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
105283    +
105284    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
105285    +
105286    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
105287    +
105288    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
105289    +
105290    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
105291    +
105292    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
105293    +
105294    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
105295    +
105296    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
105297    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
105298    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
105299    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
105300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105302    +end;
MPRINT(EM_DIAGRAM):   end;
105303    +else do;
MPRINT(EM_DIAGRAM):   else do;
105304    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105305    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
105306    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105307    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
105308    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
105309    +   end;
MPRINT(EM_DIAGRAM):   end;
105310    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
105311    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
105312    +   end;
MPRINT(EM_DIAGRAM):   end;
105313    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105314    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
105315    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105316    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105317    +   end;
MPRINT(EM_DIAGRAM):   end;
105318    +end;
MPRINT(EM_DIAGRAM):   end;
105319    +
105320    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
105321    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
105322    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
105323    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
105324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105326    +end;
MPRINT(EM_DIAGRAM):   end;
105327    +else do;
MPRINT(EM_DIAGRAM):   else do;
105328    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105329    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
105330    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105331    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
105332    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
105333    +   end;
MPRINT(EM_DIAGRAM):   end;
105334    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
105335    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
105336    +   end;
MPRINT(EM_DIAGRAM):   end;
105337    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105338    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
105339    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105340    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105341    +   end;
MPRINT(EM_DIAGRAM):   end;
105342    +end;
MPRINT(EM_DIAGRAM):   end;
105343    +
105344    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
105345    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
105346    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
105347    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
105348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105350    +end;
MPRINT(EM_DIAGRAM):   end;
105351    +else do;
MPRINT(EM_DIAGRAM):   else do;
105352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105353    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
105354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105355    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
105356    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
105357    +   end;
MPRINT(EM_DIAGRAM):   end;
105358    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
105359    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
105360    +   end;
MPRINT(EM_DIAGRAM):   end;
105361    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105362    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
105363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105365    +   end;
MPRINT(EM_DIAGRAM):   end;
105366    +end;
MPRINT(EM_DIAGRAM):   end;
105367    +
105368    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
105369    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
105370    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
105371    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
105372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105374    +end;
MPRINT(EM_DIAGRAM):   end;
105375    +else do;
MPRINT(EM_DIAGRAM):   else do;
105376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105377    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
105378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105379    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
105380    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
105381    +   end;
MPRINT(EM_DIAGRAM):   end;
105382    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
105383    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
105384    +   end;
MPRINT(EM_DIAGRAM):   end;
105385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105386    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
105387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105389    +   end;
MPRINT(EM_DIAGRAM):   end;
105390    +end;
MPRINT(EM_DIAGRAM):   end;
105391    +
105392    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
105393    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
105394    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
105395    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
105396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105398    +end;
MPRINT(EM_DIAGRAM):   end;
105399    +else do;
MPRINT(EM_DIAGRAM):   else do;
105400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105401    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
105402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105403    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
105404    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
105405    +   end;
MPRINT(EM_DIAGRAM):   end;
105406    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
105407    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
105408    +   end;
MPRINT(EM_DIAGRAM):   end;
105409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105410    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
105411    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105412    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105413    +   end;
MPRINT(EM_DIAGRAM):   end;
105414    +end;
MPRINT(EM_DIAGRAM):   end;
105415    +
105416    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
105417    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
105418    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
105419    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
105420    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105421    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105422    +end;
MPRINT(EM_DIAGRAM):   end;
105423    +else do;
MPRINT(EM_DIAGRAM):   else do;
105424    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105425    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
105426    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105427    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
105428    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
105429    +   end;
MPRINT(EM_DIAGRAM):   end;
105430    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
105431    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
105432    +   end;
MPRINT(EM_DIAGRAM):   end;
105433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105434    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
105435    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105436    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105437    +   end;
MPRINT(EM_DIAGRAM):   end;
105438    +end;
MPRINT(EM_DIAGRAM):   end;
105439    +
105440    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
105441    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
105442    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
105443    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
105444    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105445    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105446    +end;
MPRINT(EM_DIAGRAM):   end;
105447    +else do;
MPRINT(EM_DIAGRAM):   else do;
105448    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
105449    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
105450    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105451    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
105452    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
105453    +   end;
MPRINT(EM_DIAGRAM):   end;
105454    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
105455    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
105456    +   end;
MPRINT(EM_DIAGRAM):   end;
105457    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105458    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
105459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105461    +   end;
MPRINT(EM_DIAGRAM):   end;
105462    +end;
MPRINT(EM_DIAGRAM):   end;
105463    +
105464    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
105465    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
105466    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
105467    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
105468    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
105469    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
105470    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
105471    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
105472    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
105473    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
105474    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
105475    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
105476    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105477    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105478    +end;
MPRINT(EM_DIAGRAM):   end;
105479    +else do;
MPRINT(EM_DIAGRAM):   else do;
105480    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
105481    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
105482    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105483    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
105484    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
105485    +   end;
MPRINT(EM_DIAGRAM):   end;
105486    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
105487    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
105488    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
105489    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
105490    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
105491    +   end;
MPRINT(EM_DIAGRAM):   end;
105492    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
105493    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
105494    +   end;
MPRINT(EM_DIAGRAM):   end;
105495    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
105496    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
105497    +   end;
MPRINT(EM_DIAGRAM):   end;
105498    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
105499    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
105500    +   end;
MPRINT(EM_DIAGRAM):   end;
105501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105502    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
105503    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
105504    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
105505    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
105506    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105507    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105508    +   end;
MPRINT(EM_DIAGRAM):   end;
105509    +end;
MPRINT(EM_DIAGRAM):   end;
105510    +
105511    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
105512    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
105513    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
105514    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
105515    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
105516    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
105517    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
105518    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
105519    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
105520    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
105521    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
105522    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
105523    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
105524    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105525    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105526    +end;
MPRINT(EM_DIAGRAM):   end;
105527    +else do;
MPRINT(EM_DIAGRAM):   else do;
105528    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
105529    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
105530    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105531    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
105532    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
105533    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
105534    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
105535    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
105536    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105537    +         end;
MPRINT(EM_DIAGRAM):   end;
105538    +         else do;
MPRINT(EM_DIAGRAM):   else do;
105539    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
105540    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
105541    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105542    +            end;
MPRINT(EM_DIAGRAM):   end;
105543    +         end;
MPRINT(EM_DIAGRAM):   end;
105544    +      end;
MPRINT(EM_DIAGRAM):   end;
105545    +      else do;
MPRINT(EM_DIAGRAM):   else do;
105546    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
105547    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
105548    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105549    +         end;
MPRINT(EM_DIAGRAM):   end;
105550    +      end;
MPRINT(EM_DIAGRAM):   end;
105551    +   end;
MPRINT(EM_DIAGRAM):   end;
105552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105553    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
105554    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
105555    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105556    +      end;
MPRINT(EM_DIAGRAM):   end;
105557    +      else do;
MPRINT(EM_DIAGRAM):   else do;
105558    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
105559    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
105560    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
105561    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
105562    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
105563    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105564    +         end;
MPRINT(EM_DIAGRAM):   end;
105565    +      end;
MPRINT(EM_DIAGRAM):   end;
105566    +   end;
MPRINT(EM_DIAGRAM):   end;
105567    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
105568    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
105569    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
105570    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
105571    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
105572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105574    +   end;
MPRINT(EM_DIAGRAM):   end;
105575    +end;
MPRINT(EM_DIAGRAM):   end;
105576    +
105577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105578    +*** Checking missing input Interval
105579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
105580    +
105581    +IF NMISS(
105582    +   AcceptedCmpTotal ,
105583    +   Age ,
105584    +   Frq ,
105585    +   Income ,
105586    +   Kidhome ,
105587    +   MntFishProducts ,
105588    +   MntFruits ,
105589    +   MntGoldProds ,
105590    +   MntSweetProducts ,
105591    +   MonthsAsCustomer ,
105592    +   NumDealsPurchases ,
105593    +   NumWebVisitsMonth ,
105594    +   RFMstat ,
105595    +   RMntFrq ,
105596    +   Recency ,
105597    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
105598    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
105599    +
105600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105601    +END;
MPRINT(EM_DIAGRAM):   END;
105602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105603    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
105604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105605    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105606    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
105607    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
105608    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
105609    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
105610    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
105611    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
105612    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
105613    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
105614    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
105615    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
105616    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
105617    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
105618    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
105619    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
105620    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
105621    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
105622    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
105623    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
105624    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
105625    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
105626    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
105627    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
105628    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
105629    +END;
MPRINT(EM_DIAGRAM):   END;
105630    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105631    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
105632    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
105633    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
105634    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
105635    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
105636    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
105637    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
105638    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
105639    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
105640    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
105641    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
105642    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
105643    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
105644    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
105645    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
105646    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
105647    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
105648    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
105649    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
105650    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
105651    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
105652    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
105653    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
105654    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
105655    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
105656    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
105657    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
105658    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
105659    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
105660    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
105661    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
105662    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
105663    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
105664    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
105665    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
105666    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
105667    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
105668    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
105669    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
105670    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
105671    +END;
MPRINT(EM_DIAGRAM):   END;
105672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105673    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
105674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105676    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
105677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105679    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
105680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105681    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105682    +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
105683    +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
105684    +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
105685    +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
105686    +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
105687    +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
105688    +          +    -0.01191239814261 * S_MonthsAsCustomer
105689    +          +      -0.307259983666 * S_NumDealsPurchases
105690    +          +    -0.23972300101674 * S_NumWebVisitsMonth
105691    +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
105692    +        S_RMntFrq  +     0.32671320165482 * S_Recency
105693    +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
105694    +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
105695    +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
105696    +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
105697    +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
105698    +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
105699    +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
105700    +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
105701    +        EducationGraduation  +    -0.14651231631393 * EducationMaster
105702    +          +     -0.0692762335753 * Marital_StatusDivorced
105703    +          +     0.02472293911071 * Marital_StatusMarried
105704    +          +     0.04038393550437 * Marital_StatusSingle
105705    +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
105706    +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
105707    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
105708    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
105709    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
105710    +END;
MPRINT(EM_DIAGRAM):   END;
105711    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105712    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
105713    +END;
MPRINT(EM_DIAGRAM):   END;
105714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105715    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
105716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105717    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105718    +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
105719    +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
105720    +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
105721    +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
105722    +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
105723    +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
105724    +          +     0.14524334187971 * S_MonthsAsCustomer
105725    +          +    -0.58464031025411 * S_NumDealsPurchases
105726    +          +    -0.10768856151333 * S_NumWebVisitsMonth
105727    +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
105728    +        S_RMntFrq  +    -0.04430281297191 * S_Recency
105729    +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
105730    +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
105731    +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
105732    +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
105733    +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
105734    +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
105735    +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
105736    +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
105737    +        EducationGraduation  +    -0.37768027773032 * EducationMaster
105738    +          +     0.07007941100006 * Marital_StatusDivorced
105739    +          +     -0.7850554528889 * Marital_StatusMarried
105740    +          +     1.17661634109847 * Marital_StatusSingle
105741    +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
105742    +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
105743    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
105744    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
105745    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
105746    +END;
MPRINT(EM_DIAGRAM):   END;
105747    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105748    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
105749    +END;
MPRINT(EM_DIAGRAM):   END;
105750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105751    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
105752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105754    +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
105755    +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
105756    +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
105757    +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
105758    +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
105759    +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
105760    +          +    -2.17154324602167 * S_MonthsAsCustomer
105761    +          +    -1.39930460918007 * S_NumDealsPurchases
105762    +          +    -0.16044576482901 * S_NumWebVisitsMonth
105763    +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
105764    +        S_RMntFrq  +    -0.73252715992964 * S_Recency
105765    +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
105766    +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
105767    +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
105768    +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
105769    +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
105770    +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
105771    +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
105772    +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
105773    +        EducationGraduation  +    -0.35403398893388 * EducationMaster
105774    +          +     0.83271778325587 * Marital_StatusDivorced
105775    +          +     0.79137899511518 * Marital_StatusMarried
105776    +          +    -0.51320080030576 * Marital_StatusSingle
105777    +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
105778    +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
105779    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
105780    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
105781    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
105782    +END;
MPRINT(EM_DIAGRAM):   END;
105783    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105784    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
105785    +END;
MPRINT(EM_DIAGRAM):   END;
105786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105787    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
105788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105790    +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
105791    +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
105792    +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
105793    +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
105794    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
105795    +END;
MPRINT(EM_DIAGRAM):   END;
105796    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105797    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
105798    +END;
MPRINT(EM_DIAGRAM):   END;
105799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105800    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
105801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105802    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105803    +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
105804    +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
105805    +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
105806    +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
105807    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
105808    +END;
MPRINT(EM_DIAGRAM):   END;
105809    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105810    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
105811    +END;
MPRINT(EM_DIAGRAM):   END;
105812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105813    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
105814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105815    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105816    +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
105817    +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
105818    +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
105819    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
105820    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
105821    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
105822    +END;
MPRINT(EM_DIAGRAM):   END;
105823    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105824    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
105825    +END;
MPRINT(EM_DIAGRAM):   END;
105826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105827    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
105828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105829    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105830    +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
105831    +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
105832    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
105833    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
105834    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105835    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
105836    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
105837    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
105838    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
105839    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
105840    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
105841    +END;
MPRINT(EM_DIAGRAM):   END;
105842    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105843    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
105844    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
105845    +END;
MPRINT(EM_DIAGRAM):   END;
105846    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
105847    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
105848    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
105849    +END;
MPRINT(EM_DIAGRAM):   END;
105850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105851    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
105852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105853    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
105854    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
105855    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
105856    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
105857    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
105858    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
105859    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
105860    +END;
MPRINT(EM_DIAGRAM):   END;
105861    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
105862    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
105863    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
105864    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
105865     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
105866     quit;
105867     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
105868     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
105869     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
105870     retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
105871     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
105872     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105873     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
105874     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105875     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105876     proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME 
CREATOR);
105877     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105878     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105879     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105880     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
105881     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
105882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105883     proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
105884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105885     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
105886     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105887     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105888     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105889     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
105890     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105891     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105892     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105893     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
105893   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1206 rows and 5 columns.

105894     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105895     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
105896     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1206 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105897     filename _pref
105897   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
105898     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
105899     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
105900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105901    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
105902    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105903    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
105904    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
105905    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
105906     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
105907     quit;
105908     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
105909     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
105910     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
105911     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
105912     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
105913     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105914     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
105915     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105916     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105917     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
105918     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105919     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105920     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105921     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
105922     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
105923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105924     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
105925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

105926     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
105927     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105928     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105929     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105930     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
105931     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105932     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105933     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105934     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
105934   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

105935     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105936     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
105937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1210 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105938     filename _pref
105938   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
105939     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
105940     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
105941    +
105942    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
105943    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
105943   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
105944    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
105945    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
105946    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
105947    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
105948    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
105949     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
105950     quit;
105951     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
105952     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
105953     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
105954     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
105955     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
105956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105957     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
105958     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105959     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105960     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
105961     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105963     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105964     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
105965     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
105966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105967     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
105968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105969     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
105970     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105971     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105972     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
105973     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
105974     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
105975     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

105976     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
105977     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
105977   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

105978     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105979     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
105980     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

105981     filename _pref
105981   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
105982     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
105983     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
105984    +
105985    +
105986    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
105987    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
105988    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
105989    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
105990    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
105991    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
105992    +
105993    +
105994    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
105995    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
105996    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
105997    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
105998    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
105999    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106000    +
106001    +
106002    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
106003    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
106004    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
106005    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
106006    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
106007    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106008    +
106009    +
106010    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
106011    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
106012    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
106013    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
106014    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
106015    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106016    +
106017    +
106018    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
106019    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
106020    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
106021    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
106022    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
106023    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106024    +
106025    +
106026    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
106027    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
106028    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
106029    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
106030    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
106031    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106032    +
106033    +
106034    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
106035    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
106036    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
106037    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
106038    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
106039    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106040    +
106041    +
106042    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
106043    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
106044    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
106045    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
106046    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
106047    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
106048    +if
106049    +_FILTERNORM1 not in ( '.')
106050    + and
106051    +_FILTERNORM2 not in ( '.')
106052    + and
106053    +_FILTERNORM3 not in ( '.')
106054    + and
106055    +_FILTERNORM4 not in ( '.')
106056    + and
106057    +_FILTERNORM5 not in ( '.')
106058    + and
106059    +_FILTERNORM6 not in ( '.')
106060    + and
106061    +_FILTERNORM7 not in ( ' ')
106062    + and
106063    +_FILTERNORM8 not in ( ' ')
106064    +and
106065    +( Dt_Customer ne .)
106066    +and ( Income ne . and (Income<=107000))
106067    +and ( Kidhome ne .)
106068    +and ( MntFishProducts ne .)
106069    +and ( MntFruits ne .)
106070    +and ( MntGoldProds ne .)
106071    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
106072    +and ( MntSweetProducts ne .)
106073    +and ( MntWines ne .)
106074    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
106075    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
106076    +and ( NumStorePurchases ne .)
106077    +and ( NumWebPurchases ne .)
106078    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
106079    +and ( Recency ne .)
106080    +and ( Teenhome ne .)
106081    +and ( Year_Birth ne .)
106082    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
106083    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
106084    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
106085    +end;
MPRINT(EM_DIAGRAM):   end;
106086    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
106087    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
106088     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
106089     quit;
106090     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
106091     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
106092     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
106093     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
106094     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
106095     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106096     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
106097     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
106098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

106099     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
106100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
106101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106102     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
106103     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
106104     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
106105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106106     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
106107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

106108     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
106109     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
106110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106111     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
106112     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
106113     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
106114     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106115     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
106116     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
106116   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

106117     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

106118     proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl55_FCMP data=_tempx;
106119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL55_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL55_FCMP has 1315 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106120     %macro varDept(fcmpdata=,id=);
106121     %global nobs&id scoreFlag&id;
106122     %let scoreFlag&id = 0;
106123     %if &id=1 or ^&fcmpStart %then %do;
106124     proc sort data=&fcmpdata out=_temp&id nodupkey;
106125     by NAME;
106126     where id=&id and LHS in( %let j=1;
106127     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
106128     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
106129     "&var" %let j = %eval(&j+1);
106130     %end;
106131     );
106132     run;
106133     %let dsid = %sysfunc(open(_temp&id));
106134     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
106135     %let dsid = %sysfunc(close(&dsid));
106136     %if &&nobs&id %then %do;
106137     %let scoreFlag&id = 1;
106138     %let fcmpStart = 1;
106139     %end;
106140     %else %let fcmpStart = 0;
106141     %end;
106142     %else %do;
106143     proc sort data=&fcmpdata out=_tempid;
106144     where id=&id;
106145     by LHS;
106146     run;
106147     %let dsid = %sysfunc(open(_tempid));
106148     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
106149     %let dsid = %sysfunc(close(&dsid));
106150     %if ^&&nobs&id %then %do;
106151     proc datasets lib=work nolist;
106152     delete _tempid;
106153     run;
106154     quit;
106155     %end;
106156     %else %do;
106157     data _tempAll;
106158     set %let j=%eval(&id-1);
106159     %do x=1 %to &j;
106160     %if &&nobs&x %then %do;
106161     _temp&x %end;
106162     %end;
106163     ;
106164     run;
106165     proc sql;
106166     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
106166   ! work._tempid p2 where p.name=p2.lhs;
106167     quit;
106168     data _temp&id;
106169     set _temp&id;
106170     where LHS ne '' and NAME ne '' and Node ne '';
106171     run;
106172     proc datasets lib=work nolist;
106173     delete _tempAll;
106174     run;
106175     %let dsid = %sysfunc(open(_temp&id));
106176     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
106177     %let dsid = %sysfunc(close(&dsid));
106178     %if ^&&nobs&id %then %do;
106179     proc datasets lib=work nolist;
106180     delete _temp&id;
106181     run;
106182     quit;
106183     %end;
106184     %else %do;
106185     %let scoreFlag&id = 1;
106186     data _temp&id;
106187     set _temp&id;
106188     where LHS ne NAME and node ne '';
106189     run;
106190     %let dsid = %sysfunc(open(_temp&id));
106191     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
106192     %let dsid = %sysfunc(close(&dsid));
106193     %if ^&&nobs&id %then %do;
106194     proc datasets lib=work nolist;
106195     delete _temp&id;
106196     run;
106197     quit;
106198     %end;
106199     %else %do;
106200     proc sort data=_temp&id nodupkey;
106201     by LHS NAME;
106202     run;
106203     %end;
106204     %end;
106205     %end;
106206     %end;
106207     %mend varDept;
106208     %macro optCode(outdata=fcmpdata);
106209     %global fcmpStart;
106210     %let fcmpStart = 0;
106211     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
106212     %let NumNodes=9;
106213     %do k=1 %to &NumNodes;
106214     %vardept(fcmpdata=&outdata, id=&k);
106215     %end;
106216     %mend optCode;
106217     %optcode(outData=EMWS8.Ensmbl55_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl55_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

106218     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
106219     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
106220     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
106221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106222     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
106223     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
106224     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
106225     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106226     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
106227     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
106227   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

106228     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

106229     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
106230     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
106231     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106232     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
106233     * Ensmbl55: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Computing metadata for TRAIN data;
106234     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL55_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl55\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl55_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl55_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl55_TRAIN out=WORK.M3HAS0ZP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HAS0ZP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HAS0ZP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HAS0ZP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HAS0ZP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2ZDSDRX NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UBGBI_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZDSDRX;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural36_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural36_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl55";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl55";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl55: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl55";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
106554     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
106555     set EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMINFO;
106556     where DATA='Ensmbl55' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl55' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
106557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL55_EMINFO.
      WHERE (DATA='Ensmbl55') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

106558     data EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl55_EMINFO;
106559     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
106560     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
106561     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL55_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
106565     run;
106566     data EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMINFO;
106567     set EMWS8.Ensmbl55_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl55_EMINFO WORK.MODELTEMP_INFO;
106568     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL55_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106569     proc sort data = EMWS8.Ensmbl55_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl55_EMINFO NOTHREADS;
106570     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
106571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL55_EMINFO.
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

106572     proc sort data = EMWS8.AutoNeural36_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural36_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
106573     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
106574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL36_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106575     proc sort data = EMWS8.Ensmbl55_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl55_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
106576     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
106577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL55_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

106578     data EMWS8.Ensmbl55_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl55_EMINFO;
106579     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
106580     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
106581     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL55_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

106582     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
106583     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
106584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
106585     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL55_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL55_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
