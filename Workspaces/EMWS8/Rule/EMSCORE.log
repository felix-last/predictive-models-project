MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.46 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.46 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2M_ADKI 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2M_ADKI new;
MPRINT(EM_DIAGRAM):   run;
684448     filename emflow
684448   ! "C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rule: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684449     *------------------------------------------------------------*;
684450     * Rule: Scoring DATA data;
684451     *------------------------------------------------------------*;
684452     data EMWS8.Rule_TRAIN
684453     / view=EMWS8.Rule_TRAIN
684454     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_TRAIN / view=EMWS8.Rule_TRAIN ;
684455     set EMWS8.Meta_TRAIN
684456     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
684457     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMFLOWSCORE.sas.
684458    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684459    +* Rule Induction Scoring Code;
MPRINT(EM_DIAGRAM):   * Rule Induction Scoring Code;
684460    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684461    +length _bin $12 I__bin $12 I_DepVar $32;
MPRINT(EM_DIAGRAM):   length _bin $12 I__bin $12 I_DepVar $32;
684462    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
684463    +label F_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label F_DepVar = 'Into: DepVar';
684464    +*;
MPRINT(EM_DIAGRAM):   *;
684465    +drop I__bin;
MPRINT(EM_DIAGRAM):   drop I__bin;
684466    +*;
MPRINT(EM_DIAGRAM):   *;
684467    +F_DepVar=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   F_DepVar=putn(DepVar, 'best.');
684468    +%DMNORMIP(F_DepVar);
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
684469    +I_DepVar = '';
MPRINT(EM_DIAGRAM):   I_DepVar = '';
684470    +I__bin= '0';
MPRINT(EM_DIAGRAM):   I__bin= '0';
684471    +*;
MPRINT(EM_DIAGRAM):   *;
684472    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684473    +* Null Model;
MPRINT(EM_DIAGRAM):   * Null Model;
684474    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684476    +*Binary model for DepVar = 0;
MPRINT(EM_DIAGRAM):   *Binary model for DepVar = 0;
684477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
684478    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
684479    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
684480    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
684481    +
684482    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
684483    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
684484    +
684485    +length I__bin $ 12;
MPRINT(EM_DIAGRAM):   length I__bin $ 12;
684486    +label I__bin = 'Into: _bin' ;
MPRINT(EM_DIAGRAM):   label I__bin = 'Into: _bin' ;
684487    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
684488    +array RULE_1DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array RULE_1DRF [2] $12 _temporary_ ('1' '0' );
684489    +label U__bin = 'Unnormalized Into: _bin' ;
MPRINT(EM_DIAGRAM):   label U__bin = 'Unnormalized Into: _bin' ;
684490    +length U__bin $ 12;
MPRINT(EM_DIAGRAM):   length U__bin $ 12;
684491    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
684492    +array RULE_1DRU[2] $ 12 _temporary_ ('1           '  '0           ' );
MPRINT(EM_DIAGRAM):   array RULE_1DRU[2] $ 12 _temporary_ ('1           ' '0           ' );
684493    +
684494    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
684495    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
684496    +
684497    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
684498    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
684499    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684500    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684501    +end;
MPRINT(EM_DIAGRAM):   end;
684502    +
684503    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
684504    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
684505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684507    +end;
MPRINT(EM_DIAGRAM):   end;
684508    +
684509    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
684510    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
684511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684513    +end;
MPRINT(EM_DIAGRAM):   end;
684514    +
684515    +*** Check Kidhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Kidhome for missing values ;
684516    +if missing( Kidhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Kidhome ) then do;
684517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684519    +end;
MPRINT(EM_DIAGRAM):   end;
684520    +
684521    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
684522    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
684523    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684524    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684525    +end;
MPRINT(EM_DIAGRAM):   end;
684526    +
684527    +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
684528    +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
684529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684531    +end;
MPRINT(EM_DIAGRAM):   end;
684532    +
684533    +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
684534    +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
684535    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684536    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684537    +end;
MPRINT(EM_DIAGRAM):   end;
684538    +
684539    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
684540    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
684541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684543    +end;
MPRINT(EM_DIAGRAM):   end;
684544    +
684545    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
684546    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
684547    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684548    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684549    +end;
MPRINT(EM_DIAGRAM):   end;
684550    +
684551    +*** Check MntSweetProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntSweetProducts for missing values ;
684552    +if missing( MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntSweetProducts ) then do;
684553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684555    +end;
MPRINT(EM_DIAGRAM):   end;
684556    +
684557    +*** Check MonthsAsCustomer for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MonthsAsCustomer for missing values ;
684558    +if missing( MonthsAsCustomer ) then do;
MPRINT(EM_DIAGRAM):   if missing( MonthsAsCustomer ) then do;
684559    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684561    +end;
MPRINT(EM_DIAGRAM):   end;
684562    +
684563    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
684564    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
684565    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684567    +end;
MPRINT(EM_DIAGRAM):   end;
684568    +
684569    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
684570    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
684571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684573    +end;
MPRINT(EM_DIAGRAM):   end;
684574    +
684575    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
684576    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
684577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684579    +end;
MPRINT(EM_DIAGRAM):   end;
684580    +
684581    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
684582    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
684583    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684585    +end;
MPRINT(EM_DIAGRAM):   end;
684586    +
684587    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
684588    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
684589    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684590    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684591    +end;
MPRINT(EM_DIAGRAM):   end;
684592    +
684593    +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
684594    +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
684595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684597    +end;
MPRINT(EM_DIAGRAM):   end;
684598    +
684599    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
684600    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
684601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684603    +end;
MPRINT(EM_DIAGRAM):   end;
684604    +
684605    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
684606    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
684607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684609    +end;
MPRINT(EM_DIAGRAM):   end;
684610    +
684611    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
684612    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
684613    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
684614    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
684615    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684616    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684617    +end;
MPRINT(EM_DIAGRAM):   end;
684618    +else do;
MPRINT(EM_DIAGRAM):   else do;
684619    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
684620    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
684621    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684622    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
684623    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
684624    +   end;
MPRINT(EM_DIAGRAM):   end;
684625    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
684626    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
684627    +   end;
MPRINT(EM_DIAGRAM):   end;
684628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684629    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
684630    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684631    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684632    +   end;
MPRINT(EM_DIAGRAM):   end;
684633    +end;
MPRINT(EM_DIAGRAM):   end;
684634    +
684635    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
684636    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
684637    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
684638    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
684639    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684640    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684641    +end;
MPRINT(EM_DIAGRAM):   end;
684642    +else do;
MPRINT(EM_DIAGRAM):   else do;
684643    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
684644    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
684645    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684646    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
684647    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
684648    +   end;
MPRINT(EM_DIAGRAM):   end;
684649    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
684650    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
684651    +   end;
MPRINT(EM_DIAGRAM):   end;
684652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684653    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
684654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684656    +   end;
MPRINT(EM_DIAGRAM):   end;
684657    +end;
MPRINT(EM_DIAGRAM):   end;
684658    +
684659    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
684660    +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
684661    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
684662    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
684663    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684665    +end;
MPRINT(EM_DIAGRAM):   end;
684666    +else do;
MPRINT(EM_DIAGRAM):   else do;
684667    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
684668    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
684669    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684670    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
684671    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
684672    +   end;
MPRINT(EM_DIAGRAM):   end;
684673    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
684674    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
684675    +   end;
MPRINT(EM_DIAGRAM):   end;
684676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684677    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
684678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684680    +   end;
MPRINT(EM_DIAGRAM):   end;
684681    +end;
MPRINT(EM_DIAGRAM):   end;
684682    +
684683    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
684684    +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
684685    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
684686    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
684687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684689    +end;
MPRINT(EM_DIAGRAM):   end;
684690    +else do;
MPRINT(EM_DIAGRAM):   else do;
684691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
684692    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
684693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684694    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
684695    +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
684696    +   end;
MPRINT(EM_DIAGRAM):   end;
684697    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
684698    +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
684699    +   end;
MPRINT(EM_DIAGRAM):   end;
684700    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684701    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
684702    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684703    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684704    +   end;
MPRINT(EM_DIAGRAM):   end;
684705    +end;
MPRINT(EM_DIAGRAM):   end;
684706    +
684707    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
684708    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
684709    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
684710    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
684711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684713    +end;
MPRINT(EM_DIAGRAM):   end;
684714    +else do;
MPRINT(EM_DIAGRAM):   else do;
684715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
684716    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
684717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684718    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
684719    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
684720    +   end;
MPRINT(EM_DIAGRAM):   end;
684721    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
684722    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
684723    +   end;
MPRINT(EM_DIAGRAM):   end;
684724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684725    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
684726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684728    +   end;
MPRINT(EM_DIAGRAM):   end;
684729    +end;
MPRINT(EM_DIAGRAM):   end;
684730    +
684731    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
684732    +drop _6_0 ;
MPRINT(EM_DIAGRAM):   drop _6_0 ;
684733    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
684734    +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
684735    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684737    +end;
MPRINT(EM_DIAGRAM):   end;
684738    +else do;
MPRINT(EM_DIAGRAM):   else do;
684739    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
684740    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
684741    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684742    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
684743    +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
684744    +   end;
MPRINT(EM_DIAGRAM):   end;
684745    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
684746    +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
684747    +   end;
MPRINT(EM_DIAGRAM):   end;
684748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684749    +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
684750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684752    +   end;
MPRINT(EM_DIAGRAM):   end;
684753    +end;
MPRINT(EM_DIAGRAM):   end;
684754    +
684755    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
684756    +drop _7_0 _7_1 _7_2 _7_3 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 _7_3 ;
684757    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
684758    +_7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
684759    +_7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
684760    +_7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
684761    +_7_3 = 0;
MPRINT(EM_DIAGRAM):   _7_3 = 0;
684762    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
684763    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
684764    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
684765    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
684766    +   _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
684767    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684768    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684769    +end;
MPRINT(EM_DIAGRAM):   end;
684770    +else do;
MPRINT(EM_DIAGRAM):   else do;
684771    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
684772    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
684773    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684774    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
684775    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
684776    +   end;
MPRINT(EM_DIAGRAM):   end;
684777    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
684778    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
684779    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
684780    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
684781    +      _7_3 = -1;
MPRINT(EM_DIAGRAM):   _7_3 = -1;
684782    +   end;
MPRINT(EM_DIAGRAM):   end;
684783    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
684784    +      _7_3 = 1;
MPRINT(EM_DIAGRAM):   _7_3 = 1;
684785    +   end;
MPRINT(EM_DIAGRAM):   end;
684786    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
684787    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
684788    +   end;
MPRINT(EM_DIAGRAM):   end;
684789    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
684790    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
684791    +   end;
MPRINT(EM_DIAGRAM):   end;
684792    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684793    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
684794    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
684795    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
684796    +      _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
684797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684799    +   end;
MPRINT(EM_DIAGRAM):   end;
684800    +end;
MPRINT(EM_DIAGRAM):   end;
684801    +
684802    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
684803    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
684804    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
684805    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
684806    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
684807    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
684808    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
684809    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
684810    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
684811    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
684812    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
684813    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
684814    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
684815    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684816    +end;
MPRINT(EM_DIAGRAM):   end;
684817    +else do;
MPRINT(EM_DIAGRAM):   else do;
684818    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
684819    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
684820    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
684821    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
684822    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
684823    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
684824    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
684825    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
684826    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
684827    +         end;
MPRINT(EM_DIAGRAM):   end;
684828    +         else do;
MPRINT(EM_DIAGRAM):   else do;
684829    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
684830    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
684831    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
684832    +            end;
MPRINT(EM_DIAGRAM):   end;
684833    +         end;
MPRINT(EM_DIAGRAM):   end;
684834    +      end;
MPRINT(EM_DIAGRAM):   end;
684835    +      else do;
MPRINT(EM_DIAGRAM):   else do;
684836    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
684837    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
684838    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
684839    +         end;
MPRINT(EM_DIAGRAM):   end;
684840    +      end;
MPRINT(EM_DIAGRAM):   end;
684841    +   end;
MPRINT(EM_DIAGRAM):   end;
684842    +   else do;
MPRINT(EM_DIAGRAM):   else do;
684843    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
684844    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
684845    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
684846    +      end;
MPRINT(EM_DIAGRAM):   end;
684847    +      else do;
MPRINT(EM_DIAGRAM):   else do;
684848    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
684849    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
684850    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
684851    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
684852    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
684853    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
684854    +         end;
MPRINT(EM_DIAGRAM):   end;
684855    +      end;
MPRINT(EM_DIAGRAM):   end;
684856    +   end;
MPRINT(EM_DIAGRAM):   end;
684857    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
684858    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
684859    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
684860    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
684861    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
684862    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
684863    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
684864    +   end;
MPRINT(EM_DIAGRAM):   end;
684865    +end;
MPRINT(EM_DIAGRAM):   end;
684866    +
684867    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
684868    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
684869    +   _P0 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P0 = 0.848778433;
684870    +   _P1 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P1 = 0.151221567;
684871    +   goto RULE_1DR1;
MPRINT(EM_DIAGRAM):   goto RULE_1DR1;
684872    +end;
MPRINT(EM_DIAGRAM):   end;
684873    +
684874    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
684875    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
684876    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
684877    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
684878    +
684879    +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
684880    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684881    +_LP0 = _LP0 + (    1.37959490891636) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.37959490891636) * _TEMP * _1_0;
684882    +
684883    +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
684884    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684885    +_LP0 = _LP0 + (    1.38881644367343) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.38881644367343) * _TEMP * _2_0;
684886    +
684887    +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
684888    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684889    +_LP0 = _LP0 + (    1.49836425611786) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.49836425611786) * _TEMP * _3_0;
684890    +
684891    +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
684892    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684893    +_LP0 = _LP0 + (    1.18986757703774) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.18986757703774) * _TEMP * _4_0;
684894    +
684895    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
684896    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684897    +_LP0 = _LP0 + (    1.88753592135037) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.88753592135037) * _TEMP * _5_0;
684898    +
684899    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
684900    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
684901    +_LP0 = _LP0 + (    0.02031375470687 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02031375470687 * _TEMP);
684902    +
684903    +***  Effect: Complain ;
MPRINT(EM_DIAGRAM):   *** Effect: Complain ;
684904    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684905    +_LP0 = _LP0 + (   -0.40204765702117) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40204765702117) * _TEMP * _6_0;
684906    +
684907    +***  Effect: Education ;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
684908    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684909    +_LP0 = _LP0 + (    0.02225506337329) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02225506337329) * _TEMP * _7_0;
684910    +_LP0 = _LP0 + (    0.61176531164578) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.61176531164578) * _TEMP * _7_1;
684911    +_LP0 = _LP0 + (   -0.36644839378194) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36644839378194) * _TEMP * _7_2;
684912    +_LP0 = _LP0 + (   -0.12231177702126) * _TEMP * _7_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.12231177702126) * _TEMP * _7_3;
684913    +
684914    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
684915    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
684916    +_LP0 = _LP0 + (     0.3666224217102 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3666224217102 * _TEMP);
684917    +
684918    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
684919    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
684920    +_LP0 = _LP0 + (   -0.00005713252434 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00005713252434 * _TEMP);
684921    +
684922    +***  Effect: Kidhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Kidhome ;
684923    +_TEMP = Kidhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Kidhome ;
684924    +_LP0 = _LP0 + (    0.41057471857215 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.41057471857215 * _TEMP);
684925    +
684926    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
684927    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
684928    +_LP0 = _LP0 + (   -0.27437867955027) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27437867955027) * _TEMP * _9_0;
684929    +_LP0 = _LP0 + (    1.02225430661359) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.02225430661359) * _TEMP * _9_1;
684930    +_LP0 = _LP0 + (   -0.75468142744006) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.75468142744006) * _TEMP * _9_2;
684931    +_LP0 = _LP0 + (    1.04712905781542) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04712905781542) * _TEMP * _9_3;
684932    +
684933    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
684934    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
684935    +_LP0 = _LP0 + (    0.00461659402024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00461659402024 * _TEMP);
684936    +
684937    +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
684938    +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
684939    +_LP0 = _LP0 + (    0.00251764049354 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00251764049354 * _TEMP);
684940    +
684941    +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
684942    +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
684943    +_LP0 = _LP0 + (    0.00413411554031 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00413411554031 * _TEMP);
684944    +
684945    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
684946    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
684947    +_LP0 = _LP0 + (   -0.00602352418747 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00602352418747 * _TEMP);
684948    +
684949    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
684950    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
684951    +_LP0 = _LP0 + (   -0.01296976269642 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01296976269642 * _TEMP);
684952    +
684953    +***  Effect: MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntSweetProducts ;
684954    +_TEMP = MntSweetProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntSweetProducts ;
684955    +_LP0 = _LP0 + (    0.00105376667989 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00105376667989 * _TEMP);
684956    +
684957    +***  Effect: MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   *** Effect: MonthsAsCustomer ;
684958    +_TEMP = MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   _TEMP = MonthsAsCustomer ;
684959    +_LP0 = _LP0 + (    0.00973147761427 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00973147761427 * _TEMP);
684960    +
684961    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
684962    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
684963    +_LP0 = _LP0 + (   -1.19498863276998 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.19498863276998 * _TEMP);
684964    +
684965    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
684966    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
684967    +_LP0 = _LP0 + (   -0.75556665247436 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.75556665247436 * _TEMP);
684968    +
684969    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
684970    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
684971    +_LP0 = _LP0 + (    0.04468116637826 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04468116637826 * _TEMP);
684972    +
684973    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
684974    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
684975    +_LP0 = _LP0 + (   -1.08435727343224 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.08435727343224 * _TEMP);
684976    +
684977    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
684978    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
684979    +_LP0 = _LP0 + (   -0.00028375117498 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00028375117498 * _TEMP);
684980    +
684981    +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
684982    +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
684983    +_LP0 = _LP0 + (   -0.01569409100668 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01569409100668 * _TEMP);
684984    +
684985    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
684986    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
684987    +_LP0 = _LP0 + (    0.09810556470719 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09810556470719 * _TEMP);
684988    +
684989    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
684990    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
684991    +_LP0 = _LP0 + (    1.19606402340833 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19606402340833 * _TEMP);
684992    +
684993    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
684994    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
684995    +_TEMP =      0.3380565978551 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.3380565978551 + _LP0;
684996    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
684997    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
684998    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
684999    +end;
MPRINT(EM_DIAGRAM):   end;
685000    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
685001    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
685002    +
685003    +RULE_1DR1:
685004    +
685005    +
685006    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   RULE_1DR1: *** Posterior Probabilities and Predicted Level;
685007    +label P__bin1 = 'Predicted: _bin=1' ;
MPRINT(EM_DIAGRAM):   label P__bin1 = 'Predicted: _bin=1' ;
685008    +label P__bin0 = 'Predicted: _bin=0' ;
MPRINT(EM_DIAGRAM):   label P__bin0 = 'Predicted: _bin=0' ;
685009    +P__bin1 = _P0;
MPRINT(EM_DIAGRAM):   P__bin1 = _P0;
685010    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
685011    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
685012    +P__bin0 = _P1;
MPRINT(EM_DIAGRAM):   P__bin0 = _P1;
685013    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
685014    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
685015    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
685016    +end;
MPRINT(EM_DIAGRAM):   end;
685017    +I__bin = RULE_1DRF[_IY];
MPRINT(EM_DIAGRAM):   I__bin = RULE_1DRF[_IY];
685018    +U__bin = RULE_1DRU[_IY];
MPRINT(EM_DIAGRAM):   U__bin = RULE_1DRU[_IY];
685019    +
685020    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685021    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
685022    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685023    +*;
MPRINT(EM_DIAGRAM):   *;
685024    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
685025    +if I__bin eq '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin eq '1' then do;
685026    +I_DepVar = ("0");
MPRINT(EM_DIAGRAM):   I_DepVar = ("0");
685027    +%DMNORMCP(I_DepVar, I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(I_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
685028    +P_DepVar0=P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar0=P__bin1;
685029    +P_DepVar1 = 1-P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1-P__bin1;
685030    +end;
MPRINT(EM_DIAGRAM):   end;
685031    +*;
MPRINT(EM_DIAGRAM):   *;
685032    +*;
MPRINT(EM_DIAGRAM):   *;
685033    +* END Binary Model for DepVar = 0;
MPRINT(EM_DIAGRAM):   * END Binary Model for DepVar = 0;
685034    +;
MPRINT(EM_DIAGRAM):   ;
685035    +*;
MPRINT(EM_DIAGRAM):   *;
685036    +DROP P__bin1 P__bin0;
MPRINT(EM_DIAGRAM):   DROP P__bin1 P__bin0;
685037    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685038    +*Binary model for DepVar = 1;
MPRINT(EM_DIAGRAM):   *Binary model for DepVar = 1;
685039    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685040    +*;
MPRINT(EM_DIAGRAM):   *;
685041    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
685042    +if I__bin ne '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin ne '1' then do;
685043    +*;
MPRINT(EM_DIAGRAM):   *;
685044    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685045    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
685046    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685047    +
685048    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
685049    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
685050    +
685051    +length I__bin $ 12;
MPRINT(EM_DIAGRAM):   length I__bin $ 12;
685052    +label I__bin = 'Into: _bin' ;
MPRINT(EM_DIAGRAM):   label I__bin = 'Into: _bin' ;
685053    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
685054    +array RULE_2DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array RULE_2DRF [2] $12 _temporary_ ('1' '0' );
685055    +label U__bin = 'Unnormalized Into: _bin' ;
MPRINT(EM_DIAGRAM):   label U__bin = 'Unnormalized Into: _bin' ;
685056    +length U__bin $ 12;
MPRINT(EM_DIAGRAM):   length U__bin $ 12;
685057    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
685058    +array RULE_2DRU[2] $ 12 _temporary_ ('1           '  '0           ' );
MPRINT(EM_DIAGRAM):   array RULE_2DRU[2] $ 12 _temporary_ ('1           ' '0           ' );
685059    +
685060    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
685061    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
685062    +
685063    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
685064    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
685065    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685067    +end;
MPRINT(EM_DIAGRAM):   end;
685068    +
685069    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
685070    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
685071    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685072    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685073    +end;
MPRINT(EM_DIAGRAM):   end;
685074    +
685075    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
685076    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
685077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685079    +end;
MPRINT(EM_DIAGRAM):   end;
685080    +
685081    +*** Check Kidhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Kidhome for missing values ;
685082    +if missing( Kidhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Kidhome ) then do;
685083    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685085    +end;
MPRINT(EM_DIAGRAM):   end;
685086    +
685087    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
685088    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
685089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685091    +end;
MPRINT(EM_DIAGRAM):   end;
685092    +
685093    +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
685094    +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
685095    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685096    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685097    +end;
MPRINT(EM_DIAGRAM):   end;
685098    +
685099    +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
685100    +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
685101    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685102    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685103    +end;
MPRINT(EM_DIAGRAM):   end;
685104    +
685105    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
685106    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
685107    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685108    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685109    +end;
MPRINT(EM_DIAGRAM):   end;
685110    +
685111    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
685112    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
685113    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685114    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685115    +end;
MPRINT(EM_DIAGRAM):   end;
685116    +
685117    +*** Check MntSweetProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntSweetProducts for missing values ;
685118    +if missing( MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntSweetProducts ) then do;
685119    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685120    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685121    +end;
MPRINT(EM_DIAGRAM):   end;
685122    +
685123    +*** Check MonthsAsCustomer for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MonthsAsCustomer for missing values ;
685124    +if missing( MonthsAsCustomer ) then do;
MPRINT(EM_DIAGRAM):   if missing( MonthsAsCustomer ) then do;
685125    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685126    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685127    +end;
MPRINT(EM_DIAGRAM):   end;
685128    +
685129    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
685130    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
685131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685133    +end;
MPRINT(EM_DIAGRAM):   end;
685134    +
685135    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
685136    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
685137    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685138    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685139    +end;
MPRINT(EM_DIAGRAM):   end;
685140    +
685141    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
685142    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
685143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685145    +end;
MPRINT(EM_DIAGRAM):   end;
685146    +
685147    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
685148    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
685149    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685150    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685151    +end;
MPRINT(EM_DIAGRAM):   end;
685152    +
685153    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
685154    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
685155    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685156    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685157    +end;
MPRINT(EM_DIAGRAM):   end;
685158    +
685159    +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
685160    +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
685161    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685162    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685163    +end;
MPRINT(EM_DIAGRAM):   end;
685164    +
685165    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
685166    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
685167    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685169    +end;
MPRINT(EM_DIAGRAM):   end;
685170    +
685171    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
685172    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
685173    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685174    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685175    +end;
MPRINT(EM_DIAGRAM):   end;
685176    +
685177    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
685178    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
685179    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
685180    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
685181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685183    +end;
MPRINT(EM_DIAGRAM):   end;
685184    +else do;
MPRINT(EM_DIAGRAM):   else do;
685185    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685186    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
685187    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685188    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685189    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
685190    +   end;
MPRINT(EM_DIAGRAM):   end;
685191    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685192    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
685193    +   end;
MPRINT(EM_DIAGRAM):   end;
685194    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685195    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
685196    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685197    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685198    +   end;
MPRINT(EM_DIAGRAM):   end;
685199    +end;
MPRINT(EM_DIAGRAM):   end;
685200    +
685201    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
685202    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
685203    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
685204    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
685205    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685206    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685207    +end;
MPRINT(EM_DIAGRAM):   end;
685208    +else do;
MPRINT(EM_DIAGRAM):   else do;
685209    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685210    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
685211    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685212    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685213    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
685214    +   end;
MPRINT(EM_DIAGRAM):   end;
685215    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685216    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
685217    +   end;
MPRINT(EM_DIAGRAM):   end;
685218    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685219    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
685220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685222    +   end;
MPRINT(EM_DIAGRAM):   end;
685223    +end;
MPRINT(EM_DIAGRAM):   end;
685224    +
685225    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
685226    +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
685227    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
685228    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
685229    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685230    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685231    +end;
MPRINT(EM_DIAGRAM):   end;
685232    +else do;
MPRINT(EM_DIAGRAM):   else do;
685233    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685234    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
685235    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685236    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685237    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
685238    +   end;
MPRINT(EM_DIAGRAM):   end;
685239    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685240    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
685241    +   end;
MPRINT(EM_DIAGRAM):   end;
685242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685243    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
685244    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685245    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685246    +   end;
MPRINT(EM_DIAGRAM):   end;
685247    +end;
MPRINT(EM_DIAGRAM):   end;
685248    +
685249    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
685250    +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
685251    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
685252    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
685253    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685254    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685255    +end;
MPRINT(EM_DIAGRAM):   end;
685256    +else do;
MPRINT(EM_DIAGRAM):   else do;
685257    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685258    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
685259    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685260    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685261    +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
685262    +   end;
MPRINT(EM_DIAGRAM):   end;
685263    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685264    +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
685265    +   end;
MPRINT(EM_DIAGRAM):   end;
685266    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685267    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
685268    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685269    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685270    +   end;
MPRINT(EM_DIAGRAM):   end;
685271    +end;
MPRINT(EM_DIAGRAM):   end;
685272    +
685273    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
685274    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
685275    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
685276    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
685277    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685278    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685279    +end;
MPRINT(EM_DIAGRAM):   end;
685280    +else do;
MPRINT(EM_DIAGRAM):   else do;
685281    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685282    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
685283    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685284    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685285    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
685286    +   end;
MPRINT(EM_DIAGRAM):   end;
685287    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685288    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
685289    +   end;
MPRINT(EM_DIAGRAM):   end;
685290    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685291    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
685292    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685293    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685294    +   end;
MPRINT(EM_DIAGRAM):   end;
685295    +end;
MPRINT(EM_DIAGRAM):   end;
685296    +
685297    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
685298    +drop _6_0 ;
MPRINT(EM_DIAGRAM):   drop _6_0 ;
685299    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
685300    +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
685301    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685302    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685303    +end;
MPRINT(EM_DIAGRAM):   end;
685304    +else do;
MPRINT(EM_DIAGRAM):   else do;
685305    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685306    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
685307    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685308    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685309    +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
685310    +   end;
MPRINT(EM_DIAGRAM):   end;
685311    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685312    +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
685313    +   end;
MPRINT(EM_DIAGRAM):   end;
685314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685315    +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
685316    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685317    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685318    +   end;
MPRINT(EM_DIAGRAM):   end;
685319    +end;
MPRINT(EM_DIAGRAM):   end;
685320    +
685321    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
685322    +drop _7_0 _7_1 _7_2 _7_3 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 _7_3 ;
685323    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
685324    +_7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
685325    +_7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
685326    +_7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
685327    +_7_3 = 0;
MPRINT(EM_DIAGRAM):   _7_3 = 0;
685328    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
685329    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
685330    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
685331    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
685332    +   _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
685333    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685334    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685335    +end;
MPRINT(EM_DIAGRAM):   end;
685336    +else do;
MPRINT(EM_DIAGRAM):   else do;
685337    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
685338    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
685339    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685340    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
685341    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
685342    +   end;
MPRINT(EM_DIAGRAM):   end;
685343    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
685344    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
685345    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
685346    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
685347    +      _7_3 = -1;
MPRINT(EM_DIAGRAM):   _7_3 = -1;
685348    +   end;
MPRINT(EM_DIAGRAM):   end;
685349    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
685350    +      _7_3 = 1;
MPRINT(EM_DIAGRAM):   _7_3 = 1;
685351    +   end;
MPRINT(EM_DIAGRAM):   end;
685352    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
685353    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
685354    +   end;
MPRINT(EM_DIAGRAM):   end;
685355    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
685356    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
685357    +   end;
MPRINT(EM_DIAGRAM):   end;
685358    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685359    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
685360    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
685361    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
685362    +      _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
685363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685365    +   end;
MPRINT(EM_DIAGRAM):   end;
685366    +end;
MPRINT(EM_DIAGRAM):   end;
685367    +
685368    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
685369    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
685370    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
685371    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
685372    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
685373    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
685374    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
685375    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
685376    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
685377    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
685378    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
685379    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
685380    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685381    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685382    +end;
MPRINT(EM_DIAGRAM):   end;
685383    +else do;
MPRINT(EM_DIAGRAM):   else do;
685384    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
685385    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
685386    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685387    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
685388    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
685389    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
685390    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
685391    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
685392    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
685393    +         end;
MPRINT(EM_DIAGRAM):   end;
685394    +         else do;
MPRINT(EM_DIAGRAM):   else do;
685395    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
685396    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
685397    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
685398    +            end;
MPRINT(EM_DIAGRAM):   end;
685399    +         end;
MPRINT(EM_DIAGRAM):   end;
685400    +      end;
MPRINT(EM_DIAGRAM):   end;
685401    +      else do;
MPRINT(EM_DIAGRAM):   else do;
685402    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
685403    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
685404    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
685405    +         end;
MPRINT(EM_DIAGRAM):   end;
685406    +      end;
MPRINT(EM_DIAGRAM):   end;
685407    +   end;
MPRINT(EM_DIAGRAM):   end;
685408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685409    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
685410    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
685411    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
685412    +      end;
MPRINT(EM_DIAGRAM):   end;
685413    +      else do;
MPRINT(EM_DIAGRAM):   else do;
685414    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
685415    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
685416    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
685417    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
685418    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
685419    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
685420    +         end;
MPRINT(EM_DIAGRAM):   end;
685421    +      end;
MPRINT(EM_DIAGRAM):   end;
685422    +   end;
MPRINT(EM_DIAGRAM):   end;
685423    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
685424    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
685425    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
685426    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
685427    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
685428    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685429    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685430    +   end;
MPRINT(EM_DIAGRAM):   end;
685431    +end;
MPRINT(EM_DIAGRAM):   end;
685432    +
685433    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
685434    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
685435    +   _P0 = 0.8756097561;
MPRINT(EM_DIAGRAM):   _P0 = 0.8756097561;
685436    +   _P1 = 0.1243902439;
MPRINT(EM_DIAGRAM):   _P1 = 0.1243902439;
685437    +   goto RULE_2DR1;
MPRINT(EM_DIAGRAM):   goto RULE_2DR1;
685438    +end;
MPRINT(EM_DIAGRAM):   end;
685439    +
685440    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
685441    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
685442    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
685443    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
685444    +
685445    +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
685446    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685447    +_LP0 = _LP0 + (    -0.1560157255964) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1560157255964) * _TEMP * _1_0;
685448    +
685449    +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
685450    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685451    +_LP0 = _LP0 + (   -0.45585868445985) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45585868445985) * _TEMP * _2_0;
685452    +
685453    +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
685454    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685455    +_LP0 = _LP0 + (   -0.09256541025262) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09256541025262) * _TEMP * _3_0;
685456    +
685457    +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
685458    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685459    +_LP0 = _LP0 + (   -0.02746921818988) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.02746921818988) * _TEMP * _4_0;
685460    +
685461    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
685462    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685463    +_LP0 = _LP0 + (   -0.31324699318634) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.31324699318634) * _TEMP * _5_0;
685464    +
685465    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
685466    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
685467    +_LP0 = _LP0 + (   -0.01233910301688 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01233910301688 * _TEMP);
685468    +
685469    +***  Effect: Complain ;
MPRINT(EM_DIAGRAM):   *** Effect: Complain ;
685470    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685471    +_LP0 = _LP0 + (   -4.78491003199989) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.78491003199989) * _TEMP * _6_0;
685472    +
685473    +***  Effect: Education ;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
685474    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685475    +_LP0 = _LP0 + (   -2.09470486754483) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.09470486754483) * _TEMP * _7_0;
685476    +_LP0 = _LP0 + (    8.12871813379221) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 8.12871813379221) * _TEMP * _7_1;
685477    +_LP0 = _LP0 + (   -2.30296879488845) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.30296879488845) * _TEMP * _7_2;
685478    +_LP0 = _LP0 + (   -1.63396724403952) * _TEMP * _7_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.63396724403952) * _TEMP * _7_3;
685479    +
685480    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
685481    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
685482    +_LP0 = _LP0 + (    0.06442984333557 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06442984333557 * _TEMP);
685483    +
685484    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
685485    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
685486    +_LP0 = _LP0 + (   -0.00001376677759 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001376677759 * _TEMP);
685487    +
685488    +***  Effect: Kidhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Kidhome ;
685489    +_TEMP = Kidhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Kidhome ;
685490    +_LP0 = _LP0 + (    0.08875349087295 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08875349087295 * _TEMP);
685491    +
685492    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
685493    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
685494    +_LP0 = _LP0 + (   -0.45011480517718) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45011480517718) * _TEMP * _9_0;
685495    +_LP0 = _LP0 + (    0.15483279258714) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15483279258714) * _TEMP * _9_1;
685496    +_LP0 = _LP0 + (    -0.2468727722526) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2468727722526) * _TEMP * _9_2;
685497    +_LP0 = _LP0 + (   -0.28864137282061) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.28864137282061) * _TEMP * _9_3;
685498    +
685499    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
685500    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
685501    +_LP0 = _LP0 + (    -0.0013080231894 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0013080231894 * _TEMP);
685502    +
685503    +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
685504    +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
685505    +_LP0 = _LP0 + (    0.00563408454282 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00563408454282 * _TEMP);
685506    +
685507    +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
685508    +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
685509    +_LP0 = _LP0 + (   -0.00309262350043 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00309262350043 * _TEMP);
685510    +
685511    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
685512    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
685513    +_LP0 = _LP0 + (   -0.00216177411858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00216177411858 * _TEMP);
685514    +
685515    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
685516    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
685517    +_LP0 = _LP0 + (     0.0014025197451 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0014025197451 * _TEMP);
685518    +
685519    +***  Effect: MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntSweetProducts ;
685520    +_TEMP = MntSweetProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntSweetProducts ;
685521    +_LP0 = _LP0 + (    -0.0007597608107 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0007597608107 * _TEMP);
685522    +
685523    +***  Effect: MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   *** Effect: MonthsAsCustomer ;
685524    +_TEMP = MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   _TEMP = MonthsAsCustomer ;
685525    +_LP0 = _LP0 + (    0.00377704914646 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00377704914646 * _TEMP);
685526    +
685527    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
685528    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
685529    +_LP0 = _LP0 + (    0.15620596239343 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15620596239343 * _TEMP);
685530    +
685531    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
685532    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
685533    +_LP0 = _LP0 + (   -0.00896675317907 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00896675317907 * _TEMP);
685534    +
685535    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
685536    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
685537    +_LP0 = _LP0 + (   -0.03831045196563 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03831045196563 * _TEMP);
685538    +
685539    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
685540    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
685541    +_LP0 = _LP0 + (    0.09632223979394 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09632223979394 * _TEMP);
685542    +
685543    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
685544    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
685545    +_LP0 = _LP0 + (    0.00013291850521 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00013291850521 * _TEMP);
685546    +
685547    +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
685548    +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
685549    +_LP0 = _LP0 + (    0.01868482592683 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01868482592683 * _TEMP);
685550    +
685551    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
685552    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
685553    +_LP0 = _LP0 + (   -0.01553167210852 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01553167210852 * _TEMP);
685554    +
685555    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
685556    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
685557    +_LP0 = _LP0 + (   -0.04288376179124 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04288376179124 * _TEMP);
685558    +
685559    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
685560    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
685561    +_TEMP =     9.22221204098894 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 9.22221204098894 + _LP0;
685562    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
685563    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
685564    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
685565    +end;
MPRINT(EM_DIAGRAM):   end;
685566    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
685567    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
685568    +
685569    +RULE_2DR1:
685570    +
685571    +
685572    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   RULE_2DR1: *** Posterior Probabilities and Predicted Level;
685573    +label P__bin1 = 'Predicted: _bin=1' ;
MPRINT(EM_DIAGRAM):   label P__bin1 = 'Predicted: _bin=1' ;
685574    +label P__bin0 = 'Predicted: _bin=0' ;
MPRINT(EM_DIAGRAM):   label P__bin0 = 'Predicted: _bin=0' ;
685575    +P__bin1 = _P0;
MPRINT(EM_DIAGRAM):   P__bin1 = _P0;
685576    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
685577    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
685578    +P__bin0 = _P1;
MPRINT(EM_DIAGRAM):   P__bin0 = _P1;
685579    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
685580    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
685581    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
685582    +end;
MPRINT(EM_DIAGRAM):   end;
685583    +I__bin = RULE_2DRF[_IY];
MPRINT(EM_DIAGRAM):   I__bin = RULE_2DRF[_IY];
685584    +U__bin = RULE_2DRU[_IY];
MPRINT(EM_DIAGRAM):   U__bin = RULE_2DRU[_IY];
685585    +
685586    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685587    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
685588    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685589    +*;
MPRINT(EM_DIAGRAM):   *;
685590    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
685591    +if I__bin eq '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin eq '1' then do;
685592    +I_DepVar = ("1");
MPRINT(EM_DIAGRAM):   I_DepVar = ("1");
685593    +%DMNORMCP(I_DepVar, I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(I_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
685594    +P_DepVar1=P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar1=P__bin1;
685595    +P_DepVar0 = 1-P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1-P__bin1;
685596    +end;
MPRINT(EM_DIAGRAM):   end;
685597    +*;
MPRINT(EM_DIAGRAM):   *;
685598    +*;
MPRINT(EM_DIAGRAM):   *;
685599    +end;
MPRINT(EM_DIAGRAM):   end;
685600    +*;
MPRINT(EM_DIAGRAM):   *;
685601    +DROP P__bin1 P__bin0;
MPRINT(EM_DIAGRAM):   DROP P__bin1 P__bin0;
685602    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685603    +* Cleanup Model for DepVar;
MPRINT(EM_DIAGRAM):   * Cleanup Model for DepVar;
685604    +* Null Model based on training frequencies;
MPRINT(EM_DIAGRAM):   * Null Model based on training frequencies;
685605    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685606    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
685607    +if I__bin ne '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin ne '1' then do;
685608    +I_DepVar = ("1");
MPRINT(EM_DIAGRAM):   I_DepVar = ("1");
685609    +%DMNORMCP(I_DepVar, I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(I_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
685610    +P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
685611    +P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
685612    +*;
MPRINT(EM_DIAGRAM):   *;
685613    +end;
MPRINT(EM_DIAGRAM):   end;
685614    +*;
MPRINT(EM_DIAGRAM):   *;
685615    +*;
MPRINT(EM_DIAGRAM):   *;
685616    +drop U__bin _bin;
MPRINT(EM_DIAGRAM):   drop U__bin _bin;
685617    +*;
MPRINT(EM_DIAGRAM):   *;
685618    +_FORMAT = PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT = PUT(DepVar, BEST.);
685619    +%DMNORMCP(_FORMAT, F_DepVar);
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_FORMAT,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
685620    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685621    +*Computing Residual Vars: DepVar;
MPRINT(EM_DIAGRAM):   *Computing Residual Vars: DepVar;
685622    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685623    +Label R_DepVar1='Residual: DepVar=1';
MPRINT(EM_DIAGRAM):   Label R_DepVar1= 'Residual: DepVar=1';
685624    +Label R_DepVar0='Residual: DepVar=0';
MPRINT(EM_DIAGRAM):   Label R_DepVar0= 'Residual: DepVar=0';
685625    +if
685626    + F_DepVar ne '1'
685627    +and F_DepVar ne '0'
685628    + then do;
MPRINT(EM_DIAGRAM):   if F_DepVar ne '1' and F_DepVar ne '0' then do;
685629    +R_DepVar1=.;
MPRINT(EM_DIAGRAM):   R_DepVar1=.;
685630    +R_DepVar0=.;
MPRINT(EM_DIAGRAM):   R_DepVar0=.;
685631    +end;
MPRINT(EM_DIAGRAM):   end;
685632    +else do;
MPRINT(EM_DIAGRAM):   else do;
685633    +R_DepVar1= - P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1= - P_DepVar1;
685634    +R_DepVar0= - P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0= - P_DepVar0;
685635    +select(F_DepVar);
MPRINT(EM_DIAGRAM):   select(F_DepVar);
685636    +when('1')R_DepVar1= R_DepVar1+1;
MPRINT(EM_DIAGRAM):   when('1')R_DepVar1= R_DepVar1+1;
685637    +when('0')R_DepVar0= R_DepVar0+1;
MPRINT(EM_DIAGRAM):   when('0')R_DepVar0= R_DepVar0+1;
685638    +otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
685639    +end;
MPRINT(EM_DIAGRAM):   end;
685640    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
685641     run;

NOTE: DATA STEP view saved on file EMWS8.RULE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
685642     quit;
685643     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
685644     filename emflow
685644   ! "C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rule: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685645     *------------------------------------------------------------*;
685646     * Rule: Scoring VALIDATE data;
685647     *------------------------------------------------------------*;
685648     data EMWS8.Rule_VALIDATE
685649     / view=EMWS8.Rule_VALIDATE
685650     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_VALIDATE / view=EMWS8.Rule_VALIDATE ;
685651     set EMWS8.Meta_VALIDATE
685652     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
685653     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Rule\EMFLOWSCORE.sas.
685654    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685655    +* Rule Induction Scoring Code;
MPRINT(EM_DIAGRAM):   * Rule Induction Scoring Code;
685656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685657    +length _bin $12 I__bin $12 I_DepVar $32;
MPRINT(EM_DIAGRAM):   length _bin $12 I__bin $12 I_DepVar $32;
685658    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
685659    +label F_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label F_DepVar = 'Into: DepVar';
685660    +*;
MPRINT(EM_DIAGRAM):   *;
685661    +drop I__bin;
MPRINT(EM_DIAGRAM):   drop I__bin;
685662    +*;
MPRINT(EM_DIAGRAM):   *;
685663    +F_DepVar=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   F_DepVar=putn(DepVar, 'best.');
685664    +%DMNORMIP(F_DepVar);
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
685665    +I_DepVar = '';
MPRINT(EM_DIAGRAM):   I_DepVar = '';
685666    +I__bin= '0';
MPRINT(EM_DIAGRAM):   I__bin= '0';
685667    +*;
MPRINT(EM_DIAGRAM):   *;
685668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685669    +* Null Model;
MPRINT(EM_DIAGRAM):   * Null Model;
685670    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685671    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685672    +*Binary model for DepVar = 0;
MPRINT(EM_DIAGRAM):   *Binary model for DepVar = 0;
685673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
685674    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685675    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
685676    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
685677    +
685678    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
685679    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
685680    +
685681    +length I__bin $ 12;
MPRINT(EM_DIAGRAM):   length I__bin $ 12;
685682    +label I__bin = 'Into: _bin' ;
MPRINT(EM_DIAGRAM):   label I__bin = 'Into: _bin' ;
685683    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
685684    +array RULE_1DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array RULE_1DRF [2] $12 _temporary_ ('1' '0' );
685685    +label U__bin = 'Unnormalized Into: _bin' ;
MPRINT(EM_DIAGRAM):   label U__bin = 'Unnormalized Into: _bin' ;
685686    +length U__bin $ 12;
MPRINT(EM_DIAGRAM):   length U__bin $ 12;
685687    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
685688    +array RULE_1DRU[2] $ 12 _temporary_ ('1           '  '0           ' );
MPRINT(EM_DIAGRAM):   array RULE_1DRU[2] $ 12 _temporary_ ('1           ' '0           ' );
685689    +
685690    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
685691    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
685692    +
685693    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
685694    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
685695    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685697    +end;
MPRINT(EM_DIAGRAM):   end;
685698    +
685699    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
685700    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
685701    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685702    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685703    +end;
MPRINT(EM_DIAGRAM):   end;
685704    +
685705    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
685706    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
685707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685709    +end;
MPRINT(EM_DIAGRAM):   end;
685710    +
685711    +*** Check Kidhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Kidhome for missing values ;
685712    +if missing( Kidhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Kidhome ) then do;
685713    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685714    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685715    +end;
MPRINT(EM_DIAGRAM):   end;
685716    +
685717    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
685718    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
685719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685721    +end;
MPRINT(EM_DIAGRAM):   end;
685722    +
685723    +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
685724    +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
685725    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685726    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685727    +end;
MPRINT(EM_DIAGRAM):   end;
685728    +
685729    +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
685730    +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
685731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685733    +end;
MPRINT(EM_DIAGRAM):   end;
685734    +
685735    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
685736    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
685737    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685738    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685739    +end;
MPRINT(EM_DIAGRAM):   end;
685740    +
685741    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
685742    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
685743    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685745    +end;
MPRINT(EM_DIAGRAM):   end;
685746    +
685747    +*** Check MntSweetProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntSweetProducts for missing values ;
685748    +if missing( MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntSweetProducts ) then do;
685749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685751    +end;
MPRINT(EM_DIAGRAM):   end;
685752    +
685753    +*** Check MonthsAsCustomer for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MonthsAsCustomer for missing values ;
685754    +if missing( MonthsAsCustomer ) then do;
MPRINT(EM_DIAGRAM):   if missing( MonthsAsCustomer ) then do;
685755    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685756    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685757    +end;
MPRINT(EM_DIAGRAM):   end;
685758    +
685759    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
685760    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
685761    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685762    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685763    +end;
MPRINT(EM_DIAGRAM):   end;
685764    +
685765    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
685766    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
685767    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685768    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685769    +end;
MPRINT(EM_DIAGRAM):   end;
685770    +
685771    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
685772    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
685773    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685775    +end;
MPRINT(EM_DIAGRAM):   end;
685776    +
685777    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
685778    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
685779    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685780    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685781    +end;
MPRINT(EM_DIAGRAM):   end;
685782    +
685783    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
685784    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
685785    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685786    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685787    +end;
MPRINT(EM_DIAGRAM):   end;
685788    +
685789    +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
685790    +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
685791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685793    +end;
MPRINT(EM_DIAGRAM):   end;
685794    +
685795    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
685796    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
685797    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685799    +end;
MPRINT(EM_DIAGRAM):   end;
685800    +
685801    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
685802    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
685803    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685804    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685805    +end;
MPRINT(EM_DIAGRAM):   end;
685806    +
685807    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
685808    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
685809    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
685810    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
685811    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685812    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685813    +end;
MPRINT(EM_DIAGRAM):   end;
685814    +else do;
MPRINT(EM_DIAGRAM):   else do;
685815    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685816    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
685817    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685818    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685819    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
685820    +   end;
MPRINT(EM_DIAGRAM):   end;
685821    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685822    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
685823    +   end;
MPRINT(EM_DIAGRAM):   end;
685824    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685825    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
685826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685828    +   end;
MPRINT(EM_DIAGRAM):   end;
685829    +end;
MPRINT(EM_DIAGRAM):   end;
685830    +
685831    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
685832    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
685833    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
685834    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
685835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685837    +end;
MPRINT(EM_DIAGRAM):   end;
685838    +else do;
MPRINT(EM_DIAGRAM):   else do;
685839    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685840    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
685841    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685842    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685843    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
685844    +   end;
MPRINT(EM_DIAGRAM):   end;
685845    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685846    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
685847    +   end;
MPRINT(EM_DIAGRAM):   end;
685848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685849    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
685850    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685851    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685852    +   end;
MPRINT(EM_DIAGRAM):   end;
685853    +end;
MPRINT(EM_DIAGRAM):   end;
685854    +
685855    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
685856    +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
685857    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
685858    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
685859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685861    +end;
MPRINT(EM_DIAGRAM):   end;
685862    +else do;
MPRINT(EM_DIAGRAM):   else do;
685863    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685864    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
685865    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685866    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685867    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
685868    +   end;
MPRINT(EM_DIAGRAM):   end;
685869    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685870    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
685871    +   end;
MPRINT(EM_DIAGRAM):   end;
685872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685873    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
685874    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685875    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685876    +   end;
MPRINT(EM_DIAGRAM):   end;
685877    +end;
MPRINT(EM_DIAGRAM):   end;
685878    +
685879    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
685880    +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
685881    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
685882    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
685883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685885    +end;
MPRINT(EM_DIAGRAM):   end;
685886    +else do;
MPRINT(EM_DIAGRAM):   else do;
685887    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685888    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
685889    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685890    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685891    +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
685892    +   end;
MPRINT(EM_DIAGRAM):   end;
685893    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685894    +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
685895    +   end;
MPRINT(EM_DIAGRAM):   end;
685896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685897    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
685898    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685899    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685900    +   end;
MPRINT(EM_DIAGRAM):   end;
685901    +end;
MPRINT(EM_DIAGRAM):   end;
685902    +
685903    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
685904    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
685905    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
685906    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
685907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685909    +end;
MPRINT(EM_DIAGRAM):   end;
685910    +else do;
MPRINT(EM_DIAGRAM):   else do;
685911    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685912    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
685913    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685914    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685915    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
685916    +   end;
MPRINT(EM_DIAGRAM):   end;
685917    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685918    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
685919    +   end;
MPRINT(EM_DIAGRAM):   end;
685920    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685921    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
685922    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685923    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685924    +   end;
MPRINT(EM_DIAGRAM):   end;
685925    +end;
MPRINT(EM_DIAGRAM):   end;
685926    +
685927    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
685928    +drop _6_0 ;
MPRINT(EM_DIAGRAM):   drop _6_0 ;
685929    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
685930    +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
685931    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685932    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685933    +end;
MPRINT(EM_DIAGRAM):   end;
685934    +else do;
MPRINT(EM_DIAGRAM):   else do;
685935    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
685936    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
685937    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685938    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
685939    +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
685940    +   end;
MPRINT(EM_DIAGRAM):   end;
685941    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
685942    +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
685943    +   end;
MPRINT(EM_DIAGRAM):   end;
685944    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685945    +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
685946    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685947    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685948    +   end;
MPRINT(EM_DIAGRAM):   end;
685949    +end;
MPRINT(EM_DIAGRAM):   end;
685950    +
685951    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
685952    +drop _7_0 _7_1 _7_2 _7_3 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 _7_3 ;
685953    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
685954    +_7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
685955    +_7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
685956    +_7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
685957    +_7_3 = 0;
MPRINT(EM_DIAGRAM):   _7_3 = 0;
685958    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
685959    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
685960    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
685961    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
685962    +   _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
685963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
685964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685965    +end;
MPRINT(EM_DIAGRAM):   end;
685966    +else do;
MPRINT(EM_DIAGRAM):   else do;
685967    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
685968    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
685969    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
685970    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
685971    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
685972    +   end;
MPRINT(EM_DIAGRAM):   end;
685973    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
685974    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
685975    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
685976    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
685977    +      _7_3 = -1;
MPRINT(EM_DIAGRAM):   _7_3 = -1;
685978    +   end;
MPRINT(EM_DIAGRAM):   end;
685979    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
685980    +      _7_3 = 1;
MPRINT(EM_DIAGRAM):   _7_3 = 1;
685981    +   end;
MPRINT(EM_DIAGRAM):   end;
685982    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
685983    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
685984    +   end;
MPRINT(EM_DIAGRAM):   end;
685985    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
685986    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
685987    +   end;
MPRINT(EM_DIAGRAM):   end;
685988    +   else do;
MPRINT(EM_DIAGRAM):   else do;
685989    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
685990    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
685991    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
685992    +      _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
685993    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
685994    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
685995    +   end;
MPRINT(EM_DIAGRAM):   end;
685996    +end;
MPRINT(EM_DIAGRAM):   end;
685997    +
685998    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
685999    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
686000    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
686001    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
686002    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
686003    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
686004    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
686005    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
686006    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
686007    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
686008    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
686009    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
686010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686012    +end;
MPRINT(EM_DIAGRAM):   end;
686013    +else do;
MPRINT(EM_DIAGRAM):   else do;
686014    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
686015    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
686016    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686017    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
686018    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
686019    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
686020    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
686021    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
686022    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686023    +         end;
MPRINT(EM_DIAGRAM):   end;
686024    +         else do;
MPRINT(EM_DIAGRAM):   else do;
686025    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
686026    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
686027    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686028    +            end;
MPRINT(EM_DIAGRAM):   end;
686029    +         end;
MPRINT(EM_DIAGRAM):   end;
686030    +      end;
MPRINT(EM_DIAGRAM):   end;
686031    +      else do;
MPRINT(EM_DIAGRAM):   else do;
686032    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
686033    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
686034    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686035    +         end;
MPRINT(EM_DIAGRAM):   end;
686036    +      end;
MPRINT(EM_DIAGRAM):   end;
686037    +   end;
MPRINT(EM_DIAGRAM):   end;
686038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686039    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
686040    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
686041    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686042    +      end;
MPRINT(EM_DIAGRAM):   end;
686043    +      else do;
MPRINT(EM_DIAGRAM):   else do;
686044    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
686045    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
686046    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
686047    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
686048    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
686049    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686050    +         end;
MPRINT(EM_DIAGRAM):   end;
686051    +      end;
MPRINT(EM_DIAGRAM):   end;
686052    +   end;
MPRINT(EM_DIAGRAM):   end;
686053    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
686054    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
686055    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
686056    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
686057    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
686058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686060    +   end;
MPRINT(EM_DIAGRAM):   end;
686061    +end;
MPRINT(EM_DIAGRAM):   end;
686062    +
686063    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
686064    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
686065    +   _P0 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P0 = 0.848778433;
686066    +   _P1 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P1 = 0.151221567;
686067    +   goto RULE_1DR1;
MPRINT(EM_DIAGRAM):   goto RULE_1DR1;
686068    +end;
MPRINT(EM_DIAGRAM):   end;
686069    +
686070    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
686071    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
686072    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
686073    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
686074    +
686075    +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
686076    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686077    +_LP0 = _LP0 + (    1.37959490891636) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.37959490891636) * _TEMP * _1_0;
686078    +
686079    +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
686080    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686081    +_LP0 = _LP0 + (    1.38881644367343) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.38881644367343) * _TEMP * _2_0;
686082    +
686083    +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
686084    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686085    +_LP0 = _LP0 + (    1.49836425611786) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.49836425611786) * _TEMP * _3_0;
686086    +
686087    +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
686088    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686089    +_LP0 = _LP0 + (    1.18986757703774) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.18986757703774) * _TEMP * _4_0;
686090    +
686091    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
686092    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686093    +_LP0 = _LP0 + (    1.88753592135037) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.88753592135037) * _TEMP * _5_0;
686094    +
686095    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
686096    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
686097    +_LP0 = _LP0 + (    0.02031375470687 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02031375470687 * _TEMP);
686098    +
686099    +***  Effect: Complain ;
MPRINT(EM_DIAGRAM):   *** Effect: Complain ;
686100    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686101    +_LP0 = _LP0 + (   -0.40204765702117) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40204765702117) * _TEMP * _6_0;
686102    +
686103    +***  Effect: Education ;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
686104    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686105    +_LP0 = _LP0 + (    0.02225506337329) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02225506337329) * _TEMP * _7_0;
686106    +_LP0 = _LP0 + (    0.61176531164578) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.61176531164578) * _TEMP * _7_1;
686107    +_LP0 = _LP0 + (   -0.36644839378194) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36644839378194) * _TEMP * _7_2;
686108    +_LP0 = _LP0 + (   -0.12231177702126) * _TEMP * _7_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.12231177702126) * _TEMP * _7_3;
686109    +
686110    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
686111    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
686112    +_LP0 = _LP0 + (     0.3666224217102 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3666224217102 * _TEMP);
686113    +
686114    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
686115    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
686116    +_LP0 = _LP0 + (   -0.00005713252434 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00005713252434 * _TEMP);
686117    +
686118    +***  Effect: Kidhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Kidhome ;
686119    +_TEMP = Kidhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Kidhome ;
686120    +_LP0 = _LP0 + (    0.41057471857215 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.41057471857215 * _TEMP);
686121    +
686122    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
686123    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686124    +_LP0 = _LP0 + (   -0.27437867955027) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27437867955027) * _TEMP * _9_0;
686125    +_LP0 = _LP0 + (    1.02225430661359) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.02225430661359) * _TEMP * _9_1;
686126    +_LP0 = _LP0 + (   -0.75468142744006) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.75468142744006) * _TEMP * _9_2;
686127    +_LP0 = _LP0 + (    1.04712905781542) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04712905781542) * _TEMP * _9_3;
686128    +
686129    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
686130    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
686131    +_LP0 = _LP0 + (    0.00461659402024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00461659402024 * _TEMP);
686132    +
686133    +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
686134    +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
686135    +_LP0 = _LP0 + (    0.00251764049354 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00251764049354 * _TEMP);
686136    +
686137    +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
686138    +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
686139    +_LP0 = _LP0 + (    0.00413411554031 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00413411554031 * _TEMP);
686140    +
686141    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
686142    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
686143    +_LP0 = _LP0 + (   -0.00602352418747 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00602352418747 * _TEMP);
686144    +
686145    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
686146    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
686147    +_LP0 = _LP0 + (   -0.01296976269642 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01296976269642 * _TEMP);
686148    +
686149    +***  Effect: MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntSweetProducts ;
686150    +_TEMP = MntSweetProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntSweetProducts ;
686151    +_LP0 = _LP0 + (    0.00105376667989 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00105376667989 * _TEMP);
686152    +
686153    +***  Effect: MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   *** Effect: MonthsAsCustomer ;
686154    +_TEMP = MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   _TEMP = MonthsAsCustomer ;
686155    +_LP0 = _LP0 + (    0.00973147761427 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00973147761427 * _TEMP);
686156    +
686157    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
686158    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
686159    +_LP0 = _LP0 + (   -1.19498863276998 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.19498863276998 * _TEMP);
686160    +
686161    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
686162    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
686163    +_LP0 = _LP0 + (   -0.75556665247436 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.75556665247436 * _TEMP);
686164    +
686165    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
686166    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
686167    +_LP0 = _LP0 + (    0.04468116637826 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04468116637826 * _TEMP);
686168    +
686169    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
686170    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
686171    +_LP0 = _LP0 + (   -1.08435727343224 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.08435727343224 * _TEMP);
686172    +
686173    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
686174    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
686175    +_LP0 = _LP0 + (   -0.00028375117498 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00028375117498 * _TEMP);
686176    +
686177    +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
686178    +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
686179    +_LP0 = _LP0 + (   -0.01569409100668 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01569409100668 * _TEMP);
686180    +
686181    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
686182    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
686183    +_LP0 = _LP0 + (    0.09810556470719 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09810556470719 * _TEMP);
686184    +
686185    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
686186    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
686187    +_LP0 = _LP0 + (    1.19606402340833 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19606402340833 * _TEMP);
686188    +
686189    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
686190    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
686191    +_TEMP =      0.3380565978551 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.3380565978551 + _LP0;
686192    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
686193    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
686194    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
686195    +end;
MPRINT(EM_DIAGRAM):   end;
686196    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
686197    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
686198    +
686199    +RULE_1DR1:
686200    +
686201    +
686202    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   RULE_1DR1: *** Posterior Probabilities and Predicted Level;
686203    +label P__bin1 = 'Predicted: _bin=1' ;
MPRINT(EM_DIAGRAM):   label P__bin1 = 'Predicted: _bin=1' ;
686204    +label P__bin0 = 'Predicted: _bin=0' ;
MPRINT(EM_DIAGRAM):   label P__bin0 = 'Predicted: _bin=0' ;
686205    +P__bin1 = _P0;
MPRINT(EM_DIAGRAM):   P__bin1 = _P0;
686206    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
686207    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
686208    +P__bin0 = _P1;
MPRINT(EM_DIAGRAM):   P__bin0 = _P1;
686209    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
686210    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
686211    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
686212    +end;
MPRINT(EM_DIAGRAM):   end;
686213    +I__bin = RULE_1DRF[_IY];
MPRINT(EM_DIAGRAM):   I__bin = RULE_1DRF[_IY];
686214    +U__bin = RULE_1DRU[_IY];
MPRINT(EM_DIAGRAM):   U__bin = RULE_1DRU[_IY];
686215    +
686216    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
686217    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
686218    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
686219    +*;
MPRINT(EM_DIAGRAM):   *;
686220    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
686221    +if I__bin eq '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin eq '1' then do;
686222    +I_DepVar = ("0");
MPRINT(EM_DIAGRAM):   I_DepVar = ("0");
686223    +%DMNORMCP(I_DepVar, I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(I_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
686224    +P_DepVar0=P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar0=P__bin1;
686225    +P_DepVar1 = 1-P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1-P__bin1;
686226    +end;
MPRINT(EM_DIAGRAM):   end;
686227    +*;
MPRINT(EM_DIAGRAM):   *;
686228    +*;
MPRINT(EM_DIAGRAM):   *;
686229    +* END Binary Model for DepVar = 0;
MPRINT(EM_DIAGRAM):   * END Binary Model for DepVar = 0;
686230    +;
MPRINT(EM_DIAGRAM):   ;
686231    +*;
MPRINT(EM_DIAGRAM):   *;
686232    +DROP P__bin1 P__bin0;
MPRINT(EM_DIAGRAM):   DROP P__bin1 P__bin0;
686233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
686234    +*Binary model for DepVar = 1;
MPRINT(EM_DIAGRAM):   *Binary model for DepVar = 1;
686235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
686236    +*;
MPRINT(EM_DIAGRAM):   *;
686237    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
686238    +if I__bin ne '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin ne '1' then do;
686239    +*;
MPRINT(EM_DIAGRAM):   *;
686240    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
686241    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
686242    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
686243    +
686244    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
686245    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
686246    +
686247    +length I__bin $ 12;
MPRINT(EM_DIAGRAM):   length I__bin $ 12;
686248    +label I__bin = 'Into: _bin' ;
MPRINT(EM_DIAGRAM):   label I__bin = 'Into: _bin' ;
686249    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
686250    +array RULE_2DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array RULE_2DRF [2] $12 _temporary_ ('1' '0' );
686251    +label U__bin = 'Unnormalized Into: _bin' ;
MPRINT(EM_DIAGRAM):   label U__bin = 'Unnormalized Into: _bin' ;
686252    +length U__bin $ 12;
MPRINT(EM_DIAGRAM):   length U__bin $ 12;
686253    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
686254    +array RULE_2DRU[2] $ 12 _temporary_ ('1           '  '0           ' );
MPRINT(EM_DIAGRAM):   array RULE_2DRU[2] $ 12 _temporary_ ('1           ' '0           ' );
686255    +
686256    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
686257    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
686258    +
686259    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
686260    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
686261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686263    +end;
MPRINT(EM_DIAGRAM):   end;
686264    +
686265    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
686266    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
686267    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686268    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686269    +end;
MPRINT(EM_DIAGRAM):   end;
686270    +
686271    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
686272    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
686273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686275    +end;
MPRINT(EM_DIAGRAM):   end;
686276    +
686277    +*** Check Kidhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Kidhome for missing values ;
686278    +if missing( Kidhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Kidhome ) then do;
686279    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686280    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686281    +end;
MPRINT(EM_DIAGRAM):   end;
686282    +
686283    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
686284    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
686285    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686286    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686287    +end;
MPRINT(EM_DIAGRAM):   end;
686288    +
686289    +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
686290    +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
686291    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686292    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686293    +end;
MPRINT(EM_DIAGRAM):   end;
686294    +
686295    +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
686296    +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
686297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686299    +end;
MPRINT(EM_DIAGRAM):   end;
686300    +
686301    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
686302    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
686303    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686304    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686305    +end;
MPRINT(EM_DIAGRAM):   end;
686306    +
686307    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
686308    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
686309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686311    +end;
MPRINT(EM_DIAGRAM):   end;
686312    +
686313    +*** Check MntSweetProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntSweetProducts for missing values ;
686314    +if missing( MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntSweetProducts ) then do;
686315    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686316    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686317    +end;
MPRINT(EM_DIAGRAM):   end;
686318    +
686319    +*** Check MonthsAsCustomer for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MonthsAsCustomer for missing values ;
686320    +if missing( MonthsAsCustomer ) then do;
MPRINT(EM_DIAGRAM):   if missing( MonthsAsCustomer ) then do;
686321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686323    +end;
MPRINT(EM_DIAGRAM):   end;
686324    +
686325    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
686326    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
686327    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686328    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686329    +end;
MPRINT(EM_DIAGRAM):   end;
686330    +
686331    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
686332    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
686333    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686334    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686335    +end;
MPRINT(EM_DIAGRAM):   end;
686336    +
686337    +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
686338    +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
686339    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686341    +end;
MPRINT(EM_DIAGRAM):   end;
686342    +
686343    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
686344    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
686345    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686347    +end;
MPRINT(EM_DIAGRAM):   end;
686348    +
686349    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
686350    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
686351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686353    +end;
MPRINT(EM_DIAGRAM):   end;
686354    +
686355    +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
686356    +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
686357    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686358    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686359    +end;
MPRINT(EM_DIAGRAM):   end;
686360    +
686361    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
686362    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
686363    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686364    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686365    +end;
MPRINT(EM_DIAGRAM):   end;
686366    +
686367    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
686368    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
686369    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686370    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686371    +end;
MPRINT(EM_DIAGRAM):   end;
686372    +
686373    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
686374    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
686375    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
686376    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
686377    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686378    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686379    +end;
MPRINT(EM_DIAGRAM):   end;
686380    +else do;
MPRINT(EM_DIAGRAM):   else do;
686381    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
686382    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
686383    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686384    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
686385    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
686386    +   end;
MPRINT(EM_DIAGRAM):   end;
686387    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
686388    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
686389    +   end;
MPRINT(EM_DIAGRAM):   end;
686390    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686391    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
686392    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686393    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686394    +   end;
MPRINT(EM_DIAGRAM):   end;
686395    +end;
MPRINT(EM_DIAGRAM):   end;
686396    +
686397    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
686398    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
686399    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
686400    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
686401    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686402    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686403    +end;
MPRINT(EM_DIAGRAM):   end;
686404    +else do;
MPRINT(EM_DIAGRAM):   else do;
686405    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
686406    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
686407    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686408    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
686409    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
686410    +   end;
MPRINT(EM_DIAGRAM):   end;
686411    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
686412    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
686413    +   end;
MPRINT(EM_DIAGRAM):   end;
686414    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686415    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
686416    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686417    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686418    +   end;
MPRINT(EM_DIAGRAM):   end;
686419    +end;
MPRINT(EM_DIAGRAM):   end;
686420    +
686421    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
686422    +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
686423    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
686424    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
686425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686427    +end;
MPRINT(EM_DIAGRAM):   end;
686428    +else do;
MPRINT(EM_DIAGRAM):   else do;
686429    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
686430    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
686431    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686432    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
686433    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
686434    +   end;
MPRINT(EM_DIAGRAM):   end;
686435    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
686436    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
686437    +   end;
MPRINT(EM_DIAGRAM):   end;
686438    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686439    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
686440    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686441    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686442    +   end;
MPRINT(EM_DIAGRAM):   end;
686443    +end;
MPRINT(EM_DIAGRAM):   end;
686444    +
686445    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
686446    +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
686447    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
686448    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
686449    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686450    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686451    +end;
MPRINT(EM_DIAGRAM):   end;
686452    +else do;
MPRINT(EM_DIAGRAM):   else do;
686453    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
686454    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
686455    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686456    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
686457    +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
686458    +   end;
MPRINT(EM_DIAGRAM):   end;
686459    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
686460    +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
686461    +   end;
MPRINT(EM_DIAGRAM):   end;
686462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686463    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
686464    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686465    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686466    +   end;
MPRINT(EM_DIAGRAM):   end;
686467    +end;
MPRINT(EM_DIAGRAM):   end;
686468    +
686469    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
686470    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
686471    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
686472    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
686473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686475    +end;
MPRINT(EM_DIAGRAM):   end;
686476    +else do;
MPRINT(EM_DIAGRAM):   else do;
686477    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
686478    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
686479    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686480    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
686481    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
686482    +   end;
MPRINT(EM_DIAGRAM):   end;
686483    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
686484    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
686485    +   end;
MPRINT(EM_DIAGRAM):   end;
686486    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686487    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
686488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686490    +   end;
MPRINT(EM_DIAGRAM):   end;
686491    +end;
MPRINT(EM_DIAGRAM):   end;
686492    +
686493    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
686494    +drop _6_0 ;
MPRINT(EM_DIAGRAM):   drop _6_0 ;
686495    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
686496    +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
686497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686499    +end;
MPRINT(EM_DIAGRAM):   end;
686500    +else do;
MPRINT(EM_DIAGRAM):   else do;
686501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
686502    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
686503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686504    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
686505    +      _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
686506    +   end;
MPRINT(EM_DIAGRAM):   end;
686507    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
686508    +      _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
686509    +   end;
MPRINT(EM_DIAGRAM):   end;
686510    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686511    +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
686512    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686513    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686514    +   end;
MPRINT(EM_DIAGRAM):   end;
686515    +end;
MPRINT(EM_DIAGRAM):   end;
686516    +
686517    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
686518    +drop _7_0 _7_1 _7_2 _7_3 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 _7_3 ;
686519    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
686520    +_7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
686521    +_7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
686522    +_7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
686523    +_7_3 = 0;
MPRINT(EM_DIAGRAM):   _7_3 = 0;
686524    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
686525    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
686526    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
686527    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
686528    +   _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
686529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686531    +end;
MPRINT(EM_DIAGRAM):   end;
686532    +else do;
MPRINT(EM_DIAGRAM):   else do;
686533    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
686534    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
686535    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686536    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
686537    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
686538    +   end;
MPRINT(EM_DIAGRAM):   end;
686539    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
686540    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
686541    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
686542    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
686543    +      _7_3 = -1;
MPRINT(EM_DIAGRAM):   _7_3 = -1;
686544    +   end;
MPRINT(EM_DIAGRAM):   end;
686545    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
686546    +      _7_3 = 1;
MPRINT(EM_DIAGRAM):   _7_3 = 1;
686547    +   end;
MPRINT(EM_DIAGRAM):   end;
686548    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
686549    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
686550    +   end;
MPRINT(EM_DIAGRAM):   end;
686551    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
686552    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
686553    +   end;
MPRINT(EM_DIAGRAM):   end;
686554    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686555    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
686556    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
686557    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
686558    +      _7_3 = .;
MPRINT(EM_DIAGRAM):   _7_3 = .;
686559    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686560    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686561    +   end;
MPRINT(EM_DIAGRAM):   end;
686562    +end;
MPRINT(EM_DIAGRAM):   end;
686563    +
686564    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
686565    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
686566    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
686567    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
686568    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
686569    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
686570    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
686571    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
686572    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
686573    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
686574    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
686575    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
686576    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
686577    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686578    +end;
MPRINT(EM_DIAGRAM):   end;
686579    +else do;
MPRINT(EM_DIAGRAM):   else do;
686580    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
686581    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
686582    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
686583    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
686584    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
686585    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
686586    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
686587    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
686588    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686589    +         end;
MPRINT(EM_DIAGRAM):   end;
686590    +         else do;
MPRINT(EM_DIAGRAM):   else do;
686591    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
686592    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
686593    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686594    +            end;
MPRINT(EM_DIAGRAM):   end;
686595    +         end;
MPRINT(EM_DIAGRAM):   end;
686596    +      end;
MPRINT(EM_DIAGRAM):   end;
686597    +      else do;
MPRINT(EM_DIAGRAM):   else do;
686598    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
686599    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
686600    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686601    +         end;
MPRINT(EM_DIAGRAM):   end;
686602    +      end;
MPRINT(EM_DIAGRAM):   end;
686603    +   end;
MPRINT(EM_DIAGRAM):   end;
686604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
686605    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
686606    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
686607    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686608    +      end;
MPRINT(EM_DIAGRAM):   end;
686609    +      else do;
MPRINT(EM_DIAGRAM):   else do;
686610    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
686611    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
686612    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
686613    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
686614    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
686615    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
686616    +         end;
MPRINT(EM_DIAGRAM):   end;
686617    +      end;
MPRINT(EM_DIAGRAM):   end;
686618    +   end;
MPRINT(EM_DIAGRAM):   end;
686619    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
686620    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
686621    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
686622    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
686623    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
686624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
686625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
686626    +   end;
MPRINT(EM_DIAGRAM):   end;
686627    +end;
MPRINT(EM_DIAGRAM):   end;
686628    +
686629    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
686630    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
686631    +   _P0 = 0.8756097561;
MPRINT(EM_DIAGRAM):   _P0 = 0.8756097561;
686632    +   _P1 = 0.1243902439;
MPRINT(EM_DIAGRAM):   _P1 = 0.1243902439;
686633    +   goto RULE_2DR1;
MPRINT(EM_DIAGRAM):   goto RULE_2DR1;
686634    +end;
MPRINT(EM_DIAGRAM):   end;
686635    +
686636    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
686637    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
686638    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
686639    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
686640    +
686641    +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
686642    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686643    +_LP0 = _LP0 + (    -0.1560157255964) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1560157255964) * _TEMP * _1_0;
686644    +
686645    +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
686646    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686647    +_LP0 = _LP0 + (   -0.45585868445985) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45585868445985) * _TEMP * _2_0;
686648    +
686649    +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
686650    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686651    +_LP0 = _LP0 + (   -0.09256541025262) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09256541025262) * _TEMP * _3_0;
686652    +
686653    +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
686654    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686655    +_LP0 = _LP0 + (   -0.02746921818988) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.02746921818988) * _TEMP * _4_0;
686656    +
686657    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
686658    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686659    +_LP0 = _LP0 + (   -0.31324699318634) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.31324699318634) * _TEMP * _5_0;
686660    +
686661    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
686662    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
686663    +_LP0 = _LP0 + (   -0.01233910301688 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01233910301688 * _TEMP);
686664    +
686665    +***  Effect: Complain ;
MPRINT(EM_DIAGRAM):   *** Effect: Complain ;
686666    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686667    +_LP0 = _LP0 + (   -4.78491003199989) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.78491003199989) * _TEMP * _6_0;
686668    +
686669    +***  Effect: Education ;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
686670    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686671    +_LP0 = _LP0 + (   -2.09470486754483) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.09470486754483) * _TEMP * _7_0;
686672    +_LP0 = _LP0 + (    8.12871813379221) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 8.12871813379221) * _TEMP * _7_1;
686673    +_LP0 = _LP0 + (   -2.30296879488845) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.30296879488845) * _TEMP * _7_2;
686674    +_LP0 = _LP0 + (   -1.63396724403952) * _TEMP * _7_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.63396724403952) * _TEMP * _7_3;
686675    +
686676    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
686677    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
686678    +_LP0 = _LP0 + (    0.06442984333557 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06442984333557 * _TEMP);
686679    +
686680    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
686681    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
686682    +_LP0 = _LP0 + (   -0.00001376677759 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001376677759 * _TEMP);
686683    +
686684    +***  Effect: Kidhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Kidhome ;
686685    +_TEMP = Kidhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Kidhome ;
686686    +_LP0 = _LP0 + (    0.08875349087295 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08875349087295 * _TEMP);
686687    +
686688    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
686689    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
686690    +_LP0 = _LP0 + (   -0.45011480517718) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45011480517718) * _TEMP * _9_0;
686691    +_LP0 = _LP0 + (    0.15483279258714) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15483279258714) * _TEMP * _9_1;
686692    +_LP0 = _LP0 + (    -0.2468727722526) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2468727722526) * _TEMP * _9_2;
686693    +_LP0 = _LP0 + (   -0.28864137282061) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.28864137282061) * _TEMP * _9_3;
686694    +
686695    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
686696    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
686697    +_LP0 = _LP0 + (    -0.0013080231894 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0013080231894 * _TEMP);
686698    +
686699    +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
686700    +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
686701    +_LP0 = _LP0 + (    0.00563408454282 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00563408454282 * _TEMP);
686702    +
686703    +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
686704    +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
686705    +_LP0 = _LP0 + (   -0.00309262350043 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00309262350043 * _TEMP);
686706    +
686707    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
686708    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
686709    +_LP0 = _LP0 + (   -0.00216177411858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00216177411858 * _TEMP);
686710    +
686711    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
686712    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
686713    +_LP0 = _LP0 + (     0.0014025197451 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0014025197451 * _TEMP);
686714    +
686715    +***  Effect: MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntSweetProducts ;
686716    +_TEMP = MntSweetProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntSweetProducts ;
686717    +_LP0 = _LP0 + (    -0.0007597608107 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0007597608107 * _TEMP);
686718    +
686719    +***  Effect: MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   *** Effect: MonthsAsCustomer ;
686720    +_TEMP = MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   _TEMP = MonthsAsCustomer ;
686721    +_LP0 = _LP0 + (    0.00377704914646 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00377704914646 * _TEMP);
686722    +
686723    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
686724    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
686725    +_LP0 = _LP0 + (    0.15620596239343 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15620596239343 * _TEMP);
686726    +
686727    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
686728    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
686729    +_LP0 = _LP0 + (   -0.00896675317907 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00896675317907 * _TEMP);
686730    +
686731    +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
686732    +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
686733    +_LP0 = _LP0 + (   -0.03831045196563 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03831045196563 * _TEMP);
686734    +
686735    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
686736    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
686737    +_LP0 = _LP0 + (    0.09632223979394 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09632223979394 * _TEMP);
686738    +
686739    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
686740    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
686741    +_LP0 = _LP0 + (    0.00013291850521 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00013291850521 * _TEMP);
686742    +
686743    +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
686744    +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
686745    +_LP0 = _LP0 + (    0.01868482592683 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01868482592683 * _TEMP);
686746    +
686747    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
686748    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
686749    +_LP0 = _LP0 + (   -0.01553167210852 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01553167210852 * _TEMP);
686750    +
686751    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
686752    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
686753    +_LP0 = _LP0 + (   -0.04288376179124 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04288376179124 * _TEMP);
686754    +
686755    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
686756    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
686757    +_TEMP =     9.22221204098894 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 9.22221204098894 + _LP0;
686758    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
686759    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
686760    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
686761    +end;
MPRINT(EM_DIAGRAM):   end;
686762    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
686763    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
686764    +
686765    +RULE_2DR1:
686766    +
686767    +
686768    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   RULE_2DR1: *** Posterior Probabilities and Predicted Level;
686769    +label P__bin1 = 'Predicted: _bin=1' ;
MPRINT(EM_DIAGRAM):   label P__bin1 = 'Predicted: _bin=1' ;
686770    +label P__bin0 = 'Predicted: _bin=0' ;
MPRINT(EM_DIAGRAM):   label P__bin0 = 'Predicted: _bin=0' ;
686771    +P__bin1 = _P0;
MPRINT(EM_DIAGRAM):   P__bin1 = _P0;
686772    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
686773    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
686774    +P__bin0 = _P1;
MPRINT(EM_DIAGRAM):   P__bin0 = _P1;
686775    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
686776    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
686777    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
686778    +end;
MPRINT(EM_DIAGRAM):   end;
686779    +I__bin = RULE_2DRF[_IY];
MPRINT(EM_DIAGRAM):   I__bin = RULE_2DRF[_IY];
686780    +U__bin = RULE_2DRU[_IY];
MPRINT(EM_DIAGRAM):   U__bin = RULE_2DRU[_IY];
686781    +
686782    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
686783    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
686784    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
686785    +*;
MPRINT(EM_DIAGRAM):   *;
686786    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
686787    +if I__bin eq '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin eq '1' then do;
686788    +I_DepVar = ("1");
MPRINT(EM_DIAGRAM):   I_DepVar = ("1");
686789    +%DMNORMCP(I_DepVar, I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(I_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
686790    +P_DepVar1=P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar1=P__bin1;
686791    +P_DepVar0 = 1-P__bin1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1-P__bin1;
686792    +end;
MPRINT(EM_DIAGRAM):   end;
686793    +*;
MPRINT(EM_DIAGRAM):   *;
686794    +*;
MPRINT(EM_DIAGRAM):   *;
686795    +end;
MPRINT(EM_DIAGRAM):   end;
686796    +*;
MPRINT(EM_DIAGRAM):   *;
686797    +DROP P__bin1 P__bin0;
MPRINT(EM_DIAGRAM):   DROP P__bin1 P__bin0;
686798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
686799    +* Cleanup Model for DepVar;
MPRINT(EM_DIAGRAM):   * Cleanup Model for DepVar;
686800    +* Null Model based on training frequencies;
MPRINT(EM_DIAGRAM):   * Null Model based on training frequencies;
686801    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
686802    +%DMNORMIP(I__bin);
MPRINT(DMNORMIP):   call dmnorm(I__bin,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
686803    +if I__bin ne '1' then do;
MPRINT(EM_DIAGRAM):   if I__bin ne '1' then do;
686804    +I_DepVar = ("1");
MPRINT(EM_DIAGRAM):   I_DepVar = ("1");
686805    +%DMNORMCP(I_DepVar, I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(I_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
686806    +P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
686807    +P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
686808    +*;
MPRINT(EM_DIAGRAM):   *;
686809    +end;
MPRINT(EM_DIAGRAM):   end;
686810    +*;
MPRINT(EM_DIAGRAM):   *;
686811    +*;
MPRINT(EM_DIAGRAM):   *;
686812    +drop U__bin _bin;
MPRINT(EM_DIAGRAM):   drop U__bin _bin;
686813    +*;
MPRINT(EM_DIAGRAM):   *;
686814    +_FORMAT = PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT = PUT(DepVar, BEST.);
686815    +%DMNORMCP(_FORMAT, F_DepVar);
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_FORMAT,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
686816    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
686817    +*Computing Residual Vars: DepVar;
MPRINT(EM_DIAGRAM):   *Computing Residual Vars: DepVar;
686818    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
686819    +Label R_DepVar1='Residual: DepVar=1';
MPRINT(EM_DIAGRAM):   Label R_DepVar1= 'Residual: DepVar=1';
686820    +Label R_DepVar0='Residual: DepVar=0';
MPRINT(EM_DIAGRAM):   Label R_DepVar0= 'Residual: DepVar=0';
686821    +if
686822    + F_DepVar ne '1'
686823    +and F_DepVar ne '0'
686824    + then do;
MPRINT(EM_DIAGRAM):   if F_DepVar ne '1' and F_DepVar ne '0' then do;
686825    +R_DepVar1=.;
MPRINT(EM_DIAGRAM):   R_DepVar1=.;
686826    +R_DepVar0=.;
MPRINT(EM_DIAGRAM):   R_DepVar0=.;
686827    +end;
MPRINT(EM_DIAGRAM):   end;
686828    +else do;
MPRINT(EM_DIAGRAM):   else do;
686829    +R_DepVar1= - P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1= - P_DepVar1;
686830    +R_DepVar0= - P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0= - P_DepVar0;
686831    +select(F_DepVar);
MPRINT(EM_DIAGRAM):   select(F_DepVar);
686832    +when('1')R_DepVar1= R_DepVar1+1;
MPRINT(EM_DIAGRAM):   when('1')R_DepVar1= R_DepVar1+1;
686833    +when('0')R_DepVar0= R_DepVar0+1;
MPRINT(EM_DIAGRAM):   when('0')R_DepVar0= R_DepVar0+1;
686834    +otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
686835    +end;
MPRINT(EM_DIAGRAM):   end;
686836    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
686837     run;

NOTE: DATA STEP view saved on file EMWS8.RULE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
686838     quit;
686839     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Rule_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Rule_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Rule_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
686899     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
686900     * Rule: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Rule: Computing metadata for TRAIN data;
686901     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.RULE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Rule_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Rule_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Rule_TRAIN out=WORK.M0TSB135 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TSB135;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TSB135(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TSB135;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TSB135;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1VLLX9D NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1J7KD0B(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VLLX9D;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Rule";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Rule";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Rule";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rule: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if name = '_NODE_' then role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   if name = '_LEAF_' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
687215     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
687216     set EMWS8.Rule_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule_EMINFO;
687217     where DATA='Rule' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Rule' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
687218     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.RULE_EMINFO.
      WHERE (DATA='Rule') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

687219     data EMWS8.Rule_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Rule_EMINFO;
687220     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
687221     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
687222     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.RULE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
687226     run;
687227     data EMWS8.Rule_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_EMINFO;
687228     set EMWS8.Rule_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule_EMINFO WORK.MODELTEMP_INFO;
687229     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.RULE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.RULE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

687230     proc sort data = EMWS8.Rule_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Rule_EMINFO NOTHREADS;
687231     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
687232     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.RULE_EMINFO.
NOTE: The data set EMWS8.RULE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

687233     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
687234     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
687235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

687236     proc sort data = EMWS8.Rule_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Rule_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
687237     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
687238     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.RULE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

687239     data EMWS8.Rule_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule_EMINFO;
687240     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
687241     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
687242     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.RULE_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

687243     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
687244     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
687245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
687246     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.RULE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.RULE_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
